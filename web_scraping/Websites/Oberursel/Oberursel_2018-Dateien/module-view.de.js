
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/js/getComputedStyle.js";
(function(){
var getComputedStyle=window.getComputedStyle;
window.getComputedStyle=function(element){
return getComputedStyle(element)||(element&&element.style)||{};
}
}());
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/js/getSelection.js";
(function(){
var getSelection=window.getSelection;
window.getSelection=function(element){
return getSelection(element)||{
rangeCount:0
};
}
}());
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/js/classList.js";
if("document"in self){
if(!("classList"in document.createElement("_"))
||document.createElementNS&&!("classList"in document.createElementNS("http://www.w3.org/2000/svg","g"))){
(function(view){
"use strict";
if(!('Element'in view))return;
var
classListProp="classList"
,protoProp="prototype"
,elemCtrProto=view.Element[protoProp]
,objCtr=Object
,strTrim=String[protoProp].trim||function(){
return this.replace(/^\s+|\s+$/g,"");
}
,arrIndexOf=Array[protoProp].indexOf||function(item){
var
i=0
,len=this.length
;
for(;i<len;i++){
if(i in this&&this[i]===item){
return i;
}
}
return-1;
}
,DOMEx=function(type,message){
this.name=type;
this.code=DOMException[type];
this.message=message;
}
,checkTokenAndGetIndex=function(classList,token){
if(token===""){
throw new DOMEx(
"SYNTAX_ERR"
,"An invalid or illegal string was specified"
);
}
if(/\s/.test(token)){
throw new DOMEx(
"INVALID_CHARACTER_ERR"
,"String contains an invalid character"
);
}
return arrIndexOf.call(classList,token);
}
,ClassList=function(elem){
var
trimmedClasses=strTrim.call(elem.getAttribute("class")||"")
,classes=trimmedClasses?trimmedClasses.split(/\s+/):[]
,i=0
,len=classes.length
;
for(;i<len;i++){
this.push(classes[i]);
}
this._updateClassName=function(){
elem.setAttribute("class",this.toString());
};
}
,classListProto=ClassList[protoProp]=[]
,classListGetter=function(){
return new ClassList(this);
}
;
DOMEx[protoProp]=Error[protoProp];
classListProto.item=function(i){
return this[i]||null;
};
classListProto.contains=function(token){
token+="";
return checkTokenAndGetIndex(this,token)!==-1;
};
classListProto.add=function(){
var
tokens=arguments
,i=0
,l=tokens.length
,token
,updated=false
;
do{
token=tokens[i]+"";
if(checkTokenAndGetIndex(this,token)===-1){
this.push(token);
updated=true;
}
}
while(++i<l);
if(updated){
this._updateClassName();
}
};
classListProto.remove=function(){
var
tokens=arguments
,i=0
,l=tokens.length
,token
,updated=false
,index
;
do{
token=tokens[i]+"";
index=checkTokenAndGetIndex(this,token);
while(index!==-1){
this.splice(index,1);
updated=true;
index=checkTokenAndGetIndex(this,token);
}
}
while(++i<l);
if(updated){
this._updateClassName();
}
};
classListProto.toggle=function(token,force){
token+="";
var
result=this.contains(token)
,method=result?
force!==true&&"remove"
:
force!==false&&"add"
;
if(method){
this[method](token);
}
if(force===true||force===false){
return force;
}else{
return!result;
}
};
classListProto.toString=function(){
return this.join(" ");
};
if(objCtr.defineProperty){
var classListPropDesc={
get:classListGetter
,enumerable:true
,configurable:true
};
try{
objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc);
}catch(ex){
if(ex.number===-0x7FF5EC54){
classListPropDesc.enumerable=false;
objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc);
}
}
}else if(objCtr[protoProp].__defineGetter__){
elemCtrProto.__defineGetter__(classListProp,classListGetter);
}
}(self));
}else{
(function(){
"use strict";
var testElement=document.createElement("_");
testElement.classList.add("c1","c2");
if(!testElement.classList.contains("c2")){
var createMethod=function(method){
var original=DOMTokenList.prototype[method];
DOMTokenList.prototype[method]=function(token){
var i,len=arguments.length;
for(i=0;i<len;i++){
token=arguments[i];
original.call(this,token);
}
};
};
createMethod('add');
createMethod('remove');
}
testElement.classList.toggle("c3",false);
if(testElement.classList.contains("c3")){
var _toggle=DOMTokenList.prototype.toggle;
DOMTokenList.prototype.toggle=function(token,force){
if(1 in arguments&&!this.contains(token)===!force){
return force;
}else{
return _toggle.call(this,token);
}
};
}
testElement=null;
}());
}
}
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/js/intersection-observer.js";
(function(window,document){
'use strict';
if('IntersectionObserver'in window&&
'IntersectionObserverEntry'in window&&
'intersectionRatio'in window.IntersectionObserverEntry.prototype){
if(!('isIntersecting'in window.IntersectionObserverEntry.prototype)){
Object.defineProperty(window.IntersectionObserverEntry.prototype,
'isIntersecting',{
get:function(){
return this.intersectionRatio>0;
}
});
}
return;
}
var registry=[];
function IntersectionObserverEntry(entry){
this.time=entry.time;
this.target=entry.target;
this.rootBounds=entry.rootBounds;
this.boundingClientRect=entry.boundingClientRect;
this.intersectionRect=entry.intersectionRect||getEmptyRect();
this.isIntersecting=!!entry.intersectionRect;
var targetRect=this.boundingClientRect;
var targetArea=targetRect.width*targetRect.height;
var intersectionRect=this.intersectionRect;
var intersectionArea=intersectionRect.width*intersectionRect.height;
if(targetArea){
this.intersectionRatio=intersectionArea/targetArea;
}else{
this.intersectionRatio=this.isIntersecting?1:0;
}
}
function IntersectionObserver(callback,opt_options){
var options=opt_options||{};
if(typeof callback!='function'){
throw new Error('callback must be a function');
}
if(options.root&&options.root.nodeType!=1){
throw new Error('root must be an Element');
}
this._checkForIntersections=throttle(
this._checkForIntersections.bind(this),this.THROTTLE_TIMEOUT);
this._callback=callback;
this._observationTargets=[];
this._queuedEntries=[];
this._rootMarginValues=this._parseRootMargin(options.rootMargin);
this.thresholds=this._initThresholds(options.threshold);
this.root=options.root||null;
this.rootMargin=this._rootMarginValues.map(function(margin){
return margin.value+margin.unit;
}).join(' ');
}
IntersectionObserver.prototype.THROTTLE_TIMEOUT=100;
IntersectionObserver.prototype.POLL_INTERVAL=null;
IntersectionObserver.prototype.observe=function(target){
if(this._observationTargets.some(function(item){
return item.element==target;
})){
return;
}
if(!(target&&target.nodeType==1)){
throw new Error('target must be an Element');
}
this._registerInstance();
this._observationTargets.push({element:target,entry:null});
this._monitorIntersections();
this._checkForIntersections();
};
IntersectionObserver.prototype.unobserve=function(target){
this._observationTargets=
this._observationTargets.filter(function(item){
return item.element!=target;
});
if(!this._observationTargets.length){
this._unmonitorIntersections();
this._unregisterInstance();
}
};
IntersectionObserver.prototype.disconnect=function(){
this._observationTargets=[];
this._unmonitorIntersections();
this._unregisterInstance();
};
IntersectionObserver.prototype.takeRecords=function(){
var records=this._queuedEntries.slice();
this._queuedEntries=[];
return records;
};
IntersectionObserver.prototype._initThresholds=function(opt_threshold){
var threshold=opt_threshold||[0];
if(!Array.isArray(threshold))threshold=[threshold];
return threshold.sort().filter(function(t,i,a){
if(typeof t!='number'||isNaN(t)||t<0||t>1){
throw new Error('threshold must be a number between 0 and 1 inclusively');
}
return t!==a[i-1];
});
};
IntersectionObserver.prototype._parseRootMargin=function(opt_rootMargin){
var marginString=opt_rootMargin||'0px';
var margins=marginString.split(/\s+/).map(function(margin){
var parts=/^(-?\d*\.?\d+)(px|%)$/.exec(margin);
if(!parts){
throw new Error('rootMargin must be specified in pixels or percent');
}
return{value:parseFloat(parts[1]),unit:parts[2]};
});
margins[1]=margins[1]||margins[0];
margins[2]=margins[2]||margins[0];
margins[3]=margins[3]||margins[1];
return margins;
};
IntersectionObserver.prototype._monitorIntersections=function(){
if(!this._monitoringIntersections){
this._monitoringIntersections=true;
if(this.POLL_INTERVAL){
this._monitoringInterval=setInterval(
this._checkForIntersections,this.POLL_INTERVAL);
}
else{
addEvent(window,'resize',this._checkForIntersections,true);
addEvent(document,'scroll',this._checkForIntersections,true);
if('MutationObserver'in window){
this._domObserver=new MutationObserver(this._checkForIntersections);
this._domObserver.observe(document,{
attributes:true,
childList:true,
characterData:true,
subtree:true
});
}
}
}
};
IntersectionObserver.prototype._unmonitorIntersections=function(){
if(this._monitoringIntersections){
this._monitoringIntersections=false;
clearInterval(this._monitoringInterval);
this._monitoringInterval=null;
removeEvent(window,'resize',this._checkForIntersections,true);
removeEvent(document,'scroll',this._checkForIntersections,true);
if(this._domObserver){
this._domObserver.disconnect();
this._domObserver=null;
}
}
};
IntersectionObserver.prototype._checkForIntersections=function(){
var rootIsInDom=this._rootIsInDom();
var rootRect=rootIsInDom?this._getRootRect():getEmptyRect();
this._observationTargets.forEach(function(item){
var target=item.element;
var targetRect=getBoundingClientRect(target);
var rootContainsTarget=this._rootContainsTarget(target);
var oldEntry=item.entry;
var intersectionRect=rootIsInDom&&rootContainsTarget&&
this._computeTargetAndRootIntersection(target,rootRect);
var newEntry=item.entry=new IntersectionObserverEntry({
time:now(),
target:target,
boundingClientRect:targetRect,
rootBounds:rootRect,
intersectionRect:intersectionRect
});
if(!oldEntry){
this._queuedEntries.push(newEntry);
}else if(rootIsInDom&&rootContainsTarget){
if(this._hasCrossedThreshold(oldEntry,newEntry)){
this._queuedEntries.push(newEntry);
}
}else{
if(oldEntry&&oldEntry.isIntersecting){
this._queuedEntries.push(newEntry);
}
}
},this);
if(this._queuedEntries.length){
this._callback(this.takeRecords(),this);
}
};
IntersectionObserver.prototype._computeTargetAndRootIntersection=
function(target,rootRect){
if(window.getComputedStyle(target).display=='none')return;
var targetRect=getBoundingClientRect(target);
var intersectionRect=targetRect;
var parent=getParentNode(target);
var atRoot=false;
while(!atRoot){
var parentRect=null;
var parentComputedStyle=parent.nodeType==1?
window.getComputedStyle(parent):{};
if(parentComputedStyle.display=='none')return;
if(parent==this.root||parent==document){
atRoot=true;
parentRect=rootRect;
}else{
if(parent!=document.body&&
parent!=document.documentElement&&
parentComputedStyle.overflow!='visible'){
parentRect=getBoundingClientRect(parent);
}
}
if(parentRect){
intersectionRect=computeRectIntersection(parentRect,intersectionRect);
if(!intersectionRect)break;
}
parent=getParentNode(parent);
}
return intersectionRect;
};
IntersectionObserver.prototype._getRootRect=function(){
var rootRect;
if(this.root){
rootRect=getBoundingClientRect(this.root);
}else{
var html=document.documentElement;
var body=document.body;
rootRect={
top:0,
left:0,
right:html.clientWidth||body.clientWidth,
width:html.clientWidth||body.clientWidth,
bottom:html.clientHeight||body.clientHeight,
height:html.clientHeight||body.clientHeight
};
}
return this._expandRectByRootMargin(rootRect);
};
IntersectionObserver.prototype._expandRectByRootMargin=function(rect){
var margins=this._rootMarginValues.map(function(margin,i){
return margin.unit=='px'?margin.value:
margin.value*(i%2?rect.width:rect.height)/100;
});
var newRect={
top:rect.top-margins[0],
right:rect.right+margins[1],
bottom:rect.bottom+margins[2],
left:rect.left-margins[3]
};
newRect.width=newRect.right-newRect.left;
newRect.height=newRect.bottom-newRect.top;
return newRect;
};
IntersectionObserver.prototype._hasCrossedThreshold=
function(oldEntry,newEntry){
var oldRatio=oldEntry&&oldEntry.isIntersecting?
oldEntry.intersectionRatio||0:-1;
var newRatio=newEntry.isIntersecting?
newEntry.intersectionRatio||0:-1;
if(oldRatio===newRatio)return;
for(var i=0;i<this.thresholds.length;i++){
var threshold=this.thresholds[i];
if(threshold==oldRatio||threshold==newRatio||
threshold<oldRatio!==threshold<newRatio){
return true;
}
}
};
IntersectionObserver.prototype._rootIsInDom=function(){
return!this.root||containsDeep(document,this.root);
};
IntersectionObserver.prototype._rootContainsTarget=function(target){
return containsDeep(this.root||document,target);
};
IntersectionObserver.prototype._registerInstance=function(){
if(registry.indexOf(this)<0){
registry.push(this);
}
};
IntersectionObserver.prototype._unregisterInstance=function(){
var index=registry.indexOf(this);
if(index!=-1)registry.splice(index,1);
};
function now(){
return window.performance&&performance.now&&performance.now();
}
function throttle(fn,timeout){
var timer=null;
return function(){
if(!timer){
timer=setTimeout(function(){
fn();
timer=null;
},timeout);
}
};
}
function addEvent(node,event,fn,opt_useCapture){
if(typeof node.addEventListener=='function'){
node.addEventListener(event,fn,opt_useCapture||false);
}
else if(typeof node.attachEvent=='function'){
node.attachEvent('on'+event,fn);
}
}
function removeEvent(node,event,fn,opt_useCapture){
if(typeof node.removeEventListener=='function'){
node.removeEventListener(event,fn,opt_useCapture||false);
}
else if(typeof node.detatchEvent=='function'){
node.detatchEvent('on'+event,fn);
}
}
function computeRectIntersection(rect1,rect2){
var top=Math.max(rect1.top,rect2.top);
var bottom=Math.min(rect1.bottom,rect2.bottom);
var left=Math.max(rect1.left,rect2.left);
var right=Math.min(rect1.right,rect2.right);
var width=right-left;
var height=bottom-top;
return(width>=0&&height>=0)&&{
top:top,
bottom:bottom,
left:left,
right:right,
width:width,
height:height
};
}
function getBoundingClientRect(el){
var rect;
try{
rect=el.getBoundingClientRect();
}catch(err){
}
if(!rect)return getEmptyRect();
if(!(rect.width&&rect.height)){
rect={
top:rect.top,
right:rect.right,
bottom:rect.bottom,
left:rect.left,
width:rect.right-rect.left,
height:rect.bottom-rect.top
};
}
return rect;
}
function getEmptyRect(){
return{
top:0,
bottom:0,
left:0,
right:0,
width:0,
height:0
};
}
function containsDeep(parent,child){
var node=child;
while(node){
if(node==parent)return true;
node=getParentNode(node);
}
return false;
}
function getParentNode(node){
var parent=node.parentNode;
if(parent&&parent.nodeType==11&&parent.host){
return parent.host;
}
return parent;
}
window.IntersectionObserver=IntersectionObserver;
window.IntersectionObserverEntry=IntersectionObserverEntry;
}(window,document));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/js/es6-promise.min.js";
(function(){"use strict";function t(t){return"function"==typeof t||"object"==typeof t&&null!==t}function e(t){return"function"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode("");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t("vertx");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&"object"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError("You cannot resolve a promise with itself")}function d(){return new TypeError("A promises callback cannot return that same promise.")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},"Settle: "+(t._label||" unknown promise"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError("You must pass an array to race."))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}function K(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&("function"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),Array.isArray(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error("Array Methods must be provided an Array")}function W(){var t;if("undefined"!=typeof global)t=global;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var n=t.Promise;(!n||"[object Promise]"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R="undefined"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),$="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&"function"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,"catch":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if("function"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};"function"==typeof define&&define.amd?define(function(){return vt}):"undefined"!=typeof module&&module.exports?module.exports=vt:"undefined"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);
var ionas;
(function(ionas){
ionas.UMLAUT_MAPPING={
"ä":"ae",
"ö":"oe",
"ü":"ue",
"Ä":"Ae",
"Ö":"Oe",
"Ü":"Ue",
"ß":"ss"
};
function normalizeName(name,forFile){
var normalizedName="";
var previousIsNonWordCharacter=false;
for(var index=0;index<name.length;index++){
var character=name[index];
if(character.match(/^[a-zA-Z0-9äöüÄÖÜß]$/)){
if(previousIsNonWordCharacter&&normalizedName.length>0){
normalizedName+="-";
}
if(ionas.UMLAUT_MAPPING[character]){
normalizedName+=ionas.UMLAUT_MAPPING[character];
}
else{
normalizedName+=character;
}
previousIsNonWordCharacter=false;
}
else if(forFile&&"."==character){
normalizedName+=".";
previousIsNonWordCharacter=false;
}
else{
previousIsNonWordCharacter=true;
}
}
return normalizedName;
}
ionas.normalizeName=normalizeName;
})(ionas||(ionas={}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/ionas/core/js/srcset.js";
(function(){
var isSrcsetSupported=(function(){
var img=new Image();
return('srcset'in img);
}());
var windowLoaded=new Promise(function(resolve){
window.addEventListener("load",resolve);
});
function registerImage(image){
var lazyMode=image.getAttribute('data-lazy-mode');
image.removeAttribute('data-lazy-mode');
if(lazyMode==='after-load')windowLoaded.then(loadImage.bind(this,image));
if(lazyMode==='on-visible')intersectionObserver.observe(image);
image.addEventListener('load',function(){
image.classList.add("complete");
});
}
function loadImage(image){
function switchAttribute(attributeName){
var dataAttributeName='data-'+attributeName;
var value=image.getAttribute(dataAttributeName);
if(value){
image.setAttribute(attributeName,value);
image.removeAttribute(dataAttributeName);
}
}
switchAttribute('sizes');
switchAttribute('srcset');
if(!isSrcsetSupported||!image.getAttribute('srcset')){
switchAttribute('src');
}
}
var intersectionOptions={root:null,rootMargin:"0px",threshold:0};
var intersectionObserver=new IntersectionObserver(function(intersections,observer){
intersections.forEach(function(intersection){
if(intersection.isIntersecting){
observer.unobserve(intersection.target);
loadImage(intersection.target);
}
});
},intersectionOptions);
var mutationObserver=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
var nodeList=mutation.target.querySelectorAll("img");
for(var i=0;i<nodeList.length;i++){
registerImage(nodeList.item(i));
}
});
});
var mutationOptions={attributes:false,childList:true,characterData:false,subtree:true};
mutationObserver.observe(document.body,mutationOptions);
var nodeList=document.querySelectorAll("img");
for(var i=0;i<nodeList.length;i++){
registerImage(nodeList.item(i));
}
}());
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/js/es6-compat/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/js/es6-compat/vendor/classList.js";
if("document"in self){
if(!("classList"in document.createElement("_"))
||document.createElementNS&&!("classList"in document.createElementNS("http://www.w3.org/2000/svg","g"))){
(function(view){
"use strict";
if(!('Element'in view))return;
var
classListProp="classList"
,protoProp="prototype"
,elemCtrProto=view.Element[protoProp]
,objCtr=Object
,strTrim=String[protoProp].trim||function(){
return this.replace(/^\s+|\s+$/g,"");
}
,arrIndexOf=Array[protoProp].indexOf||function(item){
var
i=0
,len=this.length
;
for(;i<len;i++){
if(i in this&&this[i]===item){
return i;
}
}
return-1;
}
,DOMEx=function(type,message){
this.name=type;
this.code=DOMException[type];
this.message=message;
}
,checkTokenAndGetIndex=function(classList,token){
if(token===""){
throw new DOMEx(
"SYNTAX_ERR"
,"An invalid or illegal string was specified"
);
}
if(/\s/.test(token)){
throw new DOMEx(
"INVALID_CHARACTER_ERR"
,"String contains an invalid character"
);
}
return arrIndexOf.call(classList,token);
}
,ClassList=function(elem){
var
trimmedClasses=strTrim.call(elem.getAttribute("class")||"")
,classes=trimmedClasses?trimmedClasses.split(/\s+/):[]
,i=0
,len=classes.length
;
for(;i<len;i++){
this.push(classes[i]);
}
this._updateClassName=function(){
elem.setAttribute("class",this.toString());
};
}
,classListProto=ClassList[protoProp]=[]
,classListGetter=function(){
return new ClassList(this);
}
;
DOMEx[protoProp]=Error[protoProp];
classListProto.item=function(i){
return this[i]||null;
};
classListProto.contains=function(token){
token+="";
return checkTokenAndGetIndex(this,token)!==-1;
};
classListProto.add=function(){
var
tokens=arguments
,i=0
,l=tokens.length
,token
,updated=false
;
do{
token=tokens[i]+"";
if(checkTokenAndGetIndex(this,token)===-1){
this.push(token);
updated=true;
}
}
while(++i<l);
if(updated){
this._updateClassName();
}
};
classListProto.remove=function(){
var
tokens=arguments
,i=0
,l=tokens.length
,token
,updated=false
,index
;
do{
token=tokens[i]+"";
index=checkTokenAndGetIndex(this,token);
while(index!==-1){
this.splice(index,1);
updated=true;
index=checkTokenAndGetIndex(this,token);
}
}
while(++i<l);
if(updated){
this._updateClassName();
}
};
classListProto.toggle=function(token,force){
token+="";
var
result=this.contains(token)
,method=result?
force!==true&&"remove"
:
force!==false&&"add"
;
if(method){
this[method](token);
}
if(force===true||force===false){
return force;
}else{
return!result;
}
};
classListProto.toString=function(){
return this.join(" ");
};
if(objCtr.defineProperty){
var classListPropDesc={
get:classListGetter
,enumerable:true
,configurable:true
};
try{
objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc);
}catch(ex){
if(ex.number===-0x7FF5EC54){
classListPropDesc.enumerable=false;
objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc);
}
}
}else if(objCtr[protoProp].__defineGetter__){
elemCtrProto.__defineGetter__(classListProp,classListGetter);
}
}(self));
}else{
(function(){
"use strict";
var testElement=document.createElement("_");
testElement.classList.add("c1","c2");
if(!testElement.classList.contains("c2")){
var createMethod=function(method){
var original=DOMTokenList.prototype[method];
DOMTokenList.prototype[method]=function(token){
var i,len=arguments.length;
for(i=0;i<len;i++){
token=arguments[i];
original.call(this,token);
}
};
};
createMethod('add');
createMethod('remove');
}
testElement.classList.toggle("c3",false);
if(testElement.classList.contains("c3")){
var _toggle=DOMTokenList.prototype.toggle;
DOMTokenList.prototype.toggle=function(token,force){
if(1 in arguments&&!this.contains(token)===!force){
return force;
}else{
return _toggle.call(this,token);
}
};
}
testElement=null;
}());
}
}
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/js/es6-compat/vendor/es6-promise.js";
(function(global,factory){
typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():
typeof define==='function'&&define.amd?define(factory):
(global.ES6Promise=factory());
}(this,(function(){'use strict';
function objectOrFunction(x){
return typeof x==='function'||typeof x==='object'&&x!==null;
}
function isFunction(x){
return typeof x==='function';
}
var _isArray=undefined;
if(!Array.isArray){
_isArray=function(x){
return Object.prototype.toString.call(x)==='[object Array]';
};
}else{
_isArray=Array.isArray;
}
var isArray=_isArray;
var len=0;
var vertxNext=undefined;
var customSchedulerFn=undefined;
var asap=function asap(callback,arg){
queue[len]=callback;
queue[len+1]=arg;
len+=2;
if(len===2){
if(customSchedulerFn){
customSchedulerFn(flush);
}else{
scheduleFlush();
}
}
};
function setScheduler(scheduleFn){
customSchedulerFn=scheduleFn;
}
function setAsap(asapFn){
asap=asapFn;
}
var browserWindow=typeof window!=='undefined'?window:undefined;
var browserGlobal=browserWindow||{};
var BrowserMutationObserver=browserGlobal.MutationObserver||browserGlobal.WebKitMutationObserver;
var isNode=typeof self==='undefined'&&typeof process!=='undefined'&&({}).toString.call(process)==='[object process]';
var isWorker=typeof Uint8ClampedArray!=='undefined'&&typeof importScripts!=='undefined'&&typeof MessageChannel!=='undefined';
function useNextTick(){
return function(){
return process.nextTick(flush);
};
}
function useVertxTimer(){
if(typeof vertxNext!=='undefined'){
return function(){
vertxNext(flush);
};
}
return useSetTimeout();
}
function useMutationObserver(){
var iterations=0;
var observer=new BrowserMutationObserver(flush);
var node=document.createTextNode('');
observer.observe(node,{characterData:true});
return function(){
node.data=iterations=++iterations%2;
};
}
function useMessageChannel(){
var channel=new MessageChannel();
channel.port1.onmessage=flush;
return function(){
return channel.port2.postMessage(0);
};
}
function useSetTimeout(){
var globalSetTimeout=setTimeout;
return function(){
return globalSetTimeout(flush,1);
};
}
var queue=new Array(1000);
function flush(){
for(var i=0;i<len;i+=2){
var callback=queue[i];
var arg=queue[i+1];
callback(arg);
queue[i]=undefined;
queue[i+1]=undefined;
}
len=0;
}
function attemptVertx(){
try{
var r=require;
var vertx=r('vertx');
vertxNext=vertx.runOnLoop||vertx.runOnContext;
return useVertxTimer();
}catch(e){
return useSetTimeout();
}
}
var scheduleFlush=undefined;
if(isNode){
scheduleFlush=useNextTick();
}else if(BrowserMutationObserver){
scheduleFlush=useMutationObserver();
}else if(isWorker){
scheduleFlush=useMessageChannel();
}else if(browserWindow===undefined&&typeof require==='function'){
scheduleFlush=attemptVertx();
}else{
scheduleFlush=useSetTimeout();
}
function then(onFulfillment,onRejection){
var _arguments=arguments;
var parent=this;
var child=new this.constructor(noop);
if(child[PROMISE_ID]===undefined){
makePromise(child);
}
var _state=parent._state;
if(_state){
(function(){
var callback=_arguments[_state-1];
asap(function(){
return invokeCallback(_state,child,callback,parent._result);
});
})();
}else{
subscribe(parent,child,onFulfillment,onRejection);
}
return child;
}
function resolve(object){
var Constructor=this;
if(object&&typeof object==='object'&&object.constructor===Constructor){
return object;
}
var promise=new Constructor(noop);
_resolve(promise,object);
return promise;
}
var PROMISE_ID=Math.random().toString(36).substring(16);
function noop(){}
var PENDING=void 0;
var FULFILLED=1;
var REJECTED=2;
var GET_THEN_ERROR=new ErrorObject();
function selfFulfillment(){
return new TypeError("You cannot resolve a promise with itself");
}
function cannotReturnOwn(){
return new TypeError('A promises callback cannot return that same promise.');
}
function getThen(promise){
try{
return promise.then;
}catch(error){
GET_THEN_ERROR.error=error;
return GET_THEN_ERROR;
}
}
function tryThen(then,value,fulfillmentHandler,rejectionHandler){
try{
then.call(value,fulfillmentHandler,rejectionHandler);
}catch(e){
return e;
}
}
function handleForeignThenable(promise,thenable,then){
asap(function(promise){
var sealed=false;
var error=tryThen(then,thenable,function(value){
if(sealed){
return;
}
sealed=true;
if(thenable!==value){
_resolve(promise,value);
}else{
fulfill(promise,value);
}
},function(reason){
if(sealed){
return;
}
sealed=true;
_reject(promise,reason);
},'Settle: '+(promise._label||' unknown promise'));
if(!sealed&&error){
sealed=true;
_reject(promise,error);
}
},promise);
}
function handleOwnThenable(promise,thenable){
if(thenable._state===FULFILLED){
fulfill(promise,thenable._result);
}else if(thenable._state===REJECTED){
_reject(promise,thenable._result);
}else{
subscribe(thenable,undefined,function(value){
return _resolve(promise,value);
},function(reason){
return _reject(promise,reason);
});
}
}
function handleMaybeThenable(promise,maybeThenable,then$$){
if(maybeThenable.constructor===promise.constructor&&then$$===then&&maybeThenable.constructor.resolve===resolve){
handleOwnThenable(promise,maybeThenable);
}else{
if(then$$===GET_THEN_ERROR){
_reject(promise,GET_THEN_ERROR.error);
}else if(then$$===undefined){
fulfill(promise,maybeThenable);
}else if(isFunction(then$$)){
handleForeignThenable(promise,maybeThenable,then$$);
}else{
fulfill(promise,maybeThenable);
}
}
}
function _resolve(promise,value){
if(promise===value){
_reject(promise,selfFulfillment());
}else if(objectOrFunction(value)){
handleMaybeThenable(promise,value,getThen(value));
}else{
fulfill(promise,value);
}
}
function publishRejection(promise){
if(promise._onerror){
promise._onerror(promise._result);
}
publish(promise);
}
function fulfill(promise,value){
if(promise._state!==PENDING){
return;
}
promise._result=value;
promise._state=FULFILLED;
if(promise._subscribers.length!==0){
asap(publish,promise);
}
}
function _reject(promise,reason){
if(promise._state!==PENDING){
return;
}
promise._state=REJECTED;
promise._result=reason;
asap(publishRejection,promise);
}
function subscribe(parent,child,onFulfillment,onRejection){
var _subscribers=parent._subscribers;
var length=_subscribers.length;
parent._onerror=null;
_subscribers[length]=child;
_subscribers[length+FULFILLED]=onFulfillment;
_subscribers[length+REJECTED]=onRejection;
if(length===0&&parent._state){
asap(publish,parent);
}
}
function publish(promise){
var subscribers=promise._subscribers;
var settled=promise._state;
if(subscribers.length===0){
return;
}
var child=undefined,
callback=undefined,
detail=promise._result;
for(var i=0;i<subscribers.length;i+=3){
child=subscribers[i];
callback=subscribers[i+settled];
if(child){
invokeCallback(settled,child,callback,detail);
}else{
callback(detail);
}
}
promise._subscribers.length=0;
}
function ErrorObject(){
this.error=null;
}
var TRY_CATCH_ERROR=new ErrorObject();
function tryCatch(callback,detail){
try{
return callback(detail);
}catch(e){
TRY_CATCH_ERROR.error=e;
return TRY_CATCH_ERROR;
}
}
function invokeCallback(settled,promise,callback,detail){
var hasCallback=isFunction(callback),
value=undefined,
error=undefined,
succeeded=undefined,
failed=undefined;
if(hasCallback){
value=tryCatch(callback,detail);
if(value===TRY_CATCH_ERROR){
failed=true;
error=value.error;
value=null;
}else{
succeeded=true;
}
if(promise===value){
_reject(promise,cannotReturnOwn());
return;
}
}else{
value=detail;
succeeded=true;
}
if(promise._state!==PENDING){
}else if(hasCallback&&succeeded){
_resolve(promise,value);
}else if(failed){
_reject(promise,error);
}else if(settled===FULFILLED){
fulfill(promise,value);
}else if(settled===REJECTED){
_reject(promise,value);
}
}
function initializePromise(promise,resolver){
try{
resolver(function resolvePromise(value){
_resolve(promise,value);
},function rejectPromise(reason){
_reject(promise,reason);
});
}catch(e){
_reject(promise,e);
}
}
var id=0;
function nextId(){
return id++;
}
function makePromise(promise){
promise[PROMISE_ID]=id++;
promise._state=undefined;
promise._result=undefined;
promise._subscribers=[];
}
function Enumerator(Constructor,input){
this._instanceConstructor=Constructor;
this.promise=new Constructor(noop);
if(!this.promise[PROMISE_ID]){
makePromise(this.promise);
}
if(isArray(input)){
this._input=input;
this.length=input.length;
this._remaining=input.length;
this._result=new Array(this.length);
if(this.length===0){
fulfill(this.promise,this._result);
}else{
this.length=this.length||0;
this._enumerate();
if(this._remaining===0){
fulfill(this.promise,this._result);
}
}
}else{
_reject(this.promise,validationError());
}
}
function validationError(){
return new Error('Array Methods must be provided an Array');
};
Enumerator.prototype._enumerate=function(){
var length=this.length;
var _input=this._input;
for(var i=0;this._state===PENDING&&i<length;i++){
this._eachEntry(_input[i],i);
}
};
Enumerator.prototype._eachEntry=function(entry,i){
var c=this._instanceConstructor;
var resolve$$=c.resolve;
if(resolve$$===resolve){
var _then=getThen(entry);
if(_then===then&&entry._state!==PENDING){
this._settledAt(entry._state,i,entry._result);
}else if(typeof _then!=='function'){
this._remaining--;
this._result[i]=entry;
}else if(c===Promise){
var promise=new c(noop);
handleMaybeThenable(promise,entry,_then);
this._willSettleAt(promise,i);
}else{
this._willSettleAt(new c(function(resolve$$){
return resolve$$(entry);
}),i);
}
}else{
this._willSettleAt(resolve$$(entry),i);
}
};
Enumerator.prototype._settledAt=function(state,i,value){
var promise=this.promise;
if(promise._state===PENDING){
this._remaining--;
if(state===REJECTED){
_reject(promise,value);
}else{
this._result[i]=value;
}
}
if(this._remaining===0){
fulfill(promise,this._result);
}
};
Enumerator.prototype._willSettleAt=function(promise,i){
var enumerator=this;
subscribe(promise,undefined,function(value){
return enumerator._settledAt(FULFILLED,i,value);
},function(reason){
return enumerator._settledAt(REJECTED,i,reason);
});
};
function all(entries){
return new Enumerator(this,entries).promise;
}
function race(entries){
var Constructor=this;
if(!isArray(entries)){
return new Constructor(function(_,reject){
return reject(new TypeError('You must pass an array to race.'));
});
}else{
return new Constructor(function(resolve,reject){
var length=entries.length;
for(var i=0;i<length;i++){
Constructor.resolve(entries[i]).then(resolve,reject);
}
});
}
}
function reject(reason){
var Constructor=this;
var promise=new Constructor(noop);
_reject(promise,reason);
return promise;
}
function needsResolver(){
throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
}
function needsNew(){
throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
}
function Promise(resolver){
this[PROMISE_ID]=nextId();
this._result=this._state=undefined;
this._subscribers=[];
if(noop!==resolver){
typeof resolver!=='function'&&needsResolver();
this instanceof Promise?initializePromise(this,resolver):needsNew();
}
}
Promise.all=all;
Promise.race=race;
Promise.resolve=resolve;
Promise.reject=reject;
Promise._setScheduler=setScheduler;
Promise._setAsap=setAsap;
Promise._asap=asap;
Promise.prototype={
constructor:Promise,
then:then,
'catch':function _catch(onRejection){
return this.then(null,onRejection);
}
};
function polyfill(){
var local=undefined;
if(typeof global!=='undefined'){
local=global;
}else if(typeof self!=='undefined'){
local=self;
}else{
try{
local=Function('return this')();
}catch(e){
throw new Error('polyfill failed because global object is unavailable in this environment');
}
}
var P=local.Promise;
if(P){
var promiseToString=null;
try{
promiseToString=Object.prototype.toString.call(P.resolve());
}catch(e){
}
if(promiseToString==='[object Promise]'&&!P.cast){
return;
}
}
local.Promise=Promise;
}
Promise.polyfill=polyfill;
Promise.Promise=Promise;
return Promise;
})));
(function(undefined){
if(window.Promise===undefined){
window.Promise=window.ES6Promise;
}
}());
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/jquery/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/jquery/vendor/jquery/dist/jquery.js";
(function(global,factory){
if(typeof module==="object"&&typeof module.exports==="object"){
module.exports=global.document?
factory(global,true):
function(w){
if(!w.document){
throw new Error("jQuery requires a window with a document");
}
return factory(w);
};
}else{
factory(global);
}
}(typeof window!=="undefined"?window:this,function(window,noGlobal){
var arr=[];
var document=window.document;
var slice=arr.slice;
var concat=arr.concat;
var push=arr.push;
var indexOf=arr.indexOf;
var class2type={};
var toString=class2type.toString;
var hasOwn=class2type.hasOwnProperty;
var support={};
var
version="2.2.4",
jQuery=function(selector,context){
return new jQuery.fn.init(selector,context);
},
rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
rmsPrefix=/^-ms-/,
rdashAlpha=/-([\da-z])/gi,
fcamelCase=function(all,letter){
return letter.toUpperCase();
};
jQuery.fn=jQuery.prototype={
jquery:version,
constructor:jQuery,
selector:"",
length:0,
toArray:function(){
return slice.call(this);
},
get:function(num){
return num!=null?
(num<0?this[num+this.length]:this[num]):
slice.call(this);
},
pushStack:function(elems){
var ret=jQuery.merge(this.constructor(),elems);
ret.prevObject=this;
ret.context=this.context;
return ret;
},
each:function(callback){
return jQuery.each(this,callback);
},
map:function(callback){
return this.pushStack(jQuery.map(this,function(elem,i){
return callback.call(elem,i,elem);
}));
},
slice:function(){
return this.pushStack(slice.apply(this,arguments));
},
first:function(){
return this.eq(0);
},
last:function(){
return this.eq(-1);
},
eq:function(i){
var len=this.length,
j=+i+(i<0?len:0);
return this.pushStack(j>=0&&j<len?[this[j]]:[]);
},
end:function(){
return this.prevObject||this.constructor();
},
push:push,
sort:arr.sort,
splice:arr.splice
};
jQuery.extend=jQuery.fn.extend=function(){
var options,name,src,copy,copyIsArray,clone,
target=arguments[0]||{},
i=1,
length=arguments.length,
deep=false;
if(typeof target==="boolean"){
deep=target;
target=arguments[i]||{};
i++;
}
if(typeof target!=="object"&&!jQuery.isFunction(target)){
target={};
}
if(i===length){
target=this;
i--;
}
for(;i<length;i++){
if((options=arguments[i])!=null){
for(name in options){
src=target[name];
copy=options[name];
if(target===copy){
continue;
}
if(deep&&copy&&(jQuery.isPlainObject(copy)||
(copyIsArray=jQuery.isArray(copy)))){
if(copyIsArray){
copyIsArray=false;
clone=src&&jQuery.isArray(src)?src:[];
}else{
clone=src&&jQuery.isPlainObject(src)?src:{};
}
target[name]=jQuery.extend(deep,clone,copy);
}else if(copy!==undefined){
target[name]=copy;
}
}
}
}
return target;
};
jQuery.extend({
expando:"jQuery"+(version+Math.random()).replace(/\D/g,""),
isReady:true,
error:function(msg){
throw new Error(msg);
},
noop:function(){},
isFunction:function(obj){
return jQuery.type(obj)==="function";
},
isArray:Array.isArray,
isWindow:function(obj){
return obj!=null&&obj===obj.window;
},
isNumeric:function(obj){
var realStringObj=obj&&obj.toString();
return!jQuery.isArray(obj)&&(realStringObj-parseFloat(realStringObj)+1)>=0;
},
isPlainObject:function(obj){
var key;
if(jQuery.type(obj)!=="object"||obj.nodeType||jQuery.isWindow(obj)){
return false;
}
if(obj.constructor&&
!hasOwn.call(obj,"constructor")&&
!hasOwn.call(obj.constructor.prototype||{},"isPrototypeOf")){
return false;
}
for(key in obj){}
return key===undefined||hasOwn.call(obj,key);
},
isEmptyObject:function(obj){
var name;
for(name in obj){
return false;
}
return true;
},
type:function(obj){
if(obj==null){
return obj+"";
}
return typeof obj==="object"||typeof obj==="function"?
class2type[toString.call(obj)]||"object":
typeof obj;
},
globalEval:function(code){
var script,
indirect=eval;
code=jQuery.trim(code);
if(code){
if(code.indexOf("use strict")===1){
script=document.createElement("script");
script.text=code;
document.head.appendChild(script).parentNode.removeChild(script);
}else{
indirect(code);
}
}
},
camelCase:function(string){
return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase);
},
nodeName:function(elem,name){
return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();
},
each:function(obj,callback){
var length,i=0;
if(isArrayLike(obj)){
length=obj.length;
for(;i<length;i++){
if(callback.call(obj[i],i,obj[i])===false){
break;
}
}
}else{
for(i in obj){
if(callback.call(obj[i],i,obj[i])===false){
break;
}
}
}
return obj;
},
trim:function(text){
return text==null?
"":
(text+"").replace(rtrim,"");
},
makeArray:function(arr,results){
var ret=results||[];
if(arr!=null){
if(isArrayLike(Object(arr))){
jQuery.merge(ret,
typeof arr==="string"?
[arr]:arr
);
}else{
push.call(ret,arr);
}
}
return ret;
},
inArray:function(elem,arr,i){
return arr==null?-1:indexOf.call(arr,elem,i);
},
merge:function(first,second){
var len=+second.length,
j=0,
i=first.length;
for(;j<len;j++){
first[i++]=second[j];
}
first.length=i;
return first;
},
grep:function(elems,callback,invert){
var callbackInverse,
matches=[],
i=0,
length=elems.length,
callbackExpect=!invert;
for(;i<length;i++){
callbackInverse=!callback(elems[i],i);
if(callbackInverse!==callbackExpect){
matches.push(elems[i]);
}
}
return matches;
},
map:function(elems,callback,arg){
var length,value,
i=0,
ret=[];
if(isArrayLike(elems)){
length=elems.length;
for(;i<length;i++){
value=callback(elems[i],i,arg);
if(value!=null){
ret.push(value);
}
}
}else{
for(i in elems){
value=callback(elems[i],i,arg);
if(value!=null){
ret.push(value);
}
}
}
return concat.apply([],ret);
},
guid:1,
proxy:function(fn,context){
var tmp,args,proxy;
if(typeof context==="string"){
tmp=fn[context];
context=fn;
fn=tmp;
}
if(!jQuery.isFunction(fn)){
return undefined;
}
args=slice.call(arguments,2);
proxy=function(){
return fn.apply(context||this,args.concat(slice.call(arguments)));
};
proxy.guid=fn.guid=fn.guid||jQuery.guid++;
return proxy;
},
now:Date.now,
support:support
});
if(typeof Symbol==="function"){
jQuery.fn[Symbol.iterator]=arr[Symbol.iterator];
}
jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
function(i,name){
class2type["[object "+name+"]"]=name.toLowerCase();
});
function isArrayLike(obj){
var length=!!obj&&"length"in obj&&obj.length,
type=jQuery.type(obj);
if(type==="function"||jQuery.isWindow(obj)){
return false;
}
return type==="array"||length===0||
typeof length==="number"&&length>0&&(length-1)in obj;
}
var Sizzle=
(function(window){
var i,
support,
Expr,
getText,
isXML,
tokenize,
compile,
select,
outermostContext,
sortInput,
hasDuplicate,
setDocument,
document,
docElem,
documentIsHTML,
rbuggyQSA,
rbuggyMatches,
matches,
contains,
expando="sizzle"+1*new Date(),
preferredDoc=window.document,
dirruns=0,
done=0,
classCache=createCache(),
tokenCache=createCache(),
compilerCache=createCache(),
sortOrder=function(a,b){
if(a===b){
hasDuplicate=true;
}
return 0;
},
MAX_NEGATIVE=1<<31,
hasOwn=({}).hasOwnProperty,
arr=[],
pop=arr.pop,
push_native=arr.push,
push=arr.push,
slice=arr.slice,
indexOf=function(list,elem){
var i=0,
len=list.length;
for(;i<len;i++){
if(list[i]===elem){
return i;
}
}
return-1;
},
booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
whitespace="[\\x20\\t\\r\\n\\f]",
identifier="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
attributes="\\["+whitespace+"*("+identifier+")(?:"+whitespace+
"*([*^$|!~]?=)"+whitespace+
"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+identifier+"))|)"+whitespace+
"*\\]",
pseudos=":("+identifier+")(?:\\(("+
"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+
"((?:\\\\.|[^\\\\()[\\]]|"+attributes+")*)|"+
".*"+
")\\)|)",
rwhitespace=new RegExp(whitespace+"+","g"),
rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),
rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),
rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),
rattributeQuotes=new RegExp("="+whitespace+"*([^\\]'\"]*?)"+whitespace+"*\\]","g"),
rpseudo=new RegExp(pseudos),
ridentifier=new RegExp("^"+identifier+"$"),
matchExpr={
"ID":new RegExp("^#("+identifier+")"),
"CLASS":new RegExp("^\\.("+identifier+")"),
"TAG":new RegExp("^("+identifier+"|[*])"),
"ATTR":new RegExp("^"+attributes),
"PSEUDO":new RegExp("^"+pseudos),
"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+
"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+
"*(\\d+)|))"+whitespace+"*\\)|)","i"),
"bool":new RegExp("^(?:"+booleans+")$","i"),
"needsContext":new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+
whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")
},
rinputs=/^(?:input|select|textarea|button)$/i,
rheader=/^h\d$/i,
rnative=/^[^{]+\{\s*\[native \w/,
rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
rsibling=/[+~]/,
rescape=/'|\\/g,
runescape=new RegExp("\\\\([\\da-f]{1,6}"+whitespace+"?|("+whitespace+")|.)","ig"),
funescape=function(_,escaped,escapedWhitespace){
var high="0x"+escaped-0x10000;
return high!==high||escapedWhitespace?
escaped:
high<0?
String.fromCharCode(high+0x10000):
String.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);
},
unloadHandler=function(){
setDocument();
};
try{
push.apply(
(arr=slice.call(preferredDoc.childNodes)),
preferredDoc.childNodes
);
arr[preferredDoc.childNodes.length].nodeType;
}catch(e){
push={apply:arr.length?
function(target,els){
push_native.apply(target,slice.call(els));
}:
function(target,els){
var j=target.length,
i=0;
while((target[j++]=els[i++])){}
target.length=j-1;
}
};
}
function Sizzle(selector,context,results,seed){
var m,i,elem,nid,nidselect,match,groups,newSelector,
newContext=context&&context.ownerDocument,
nodeType=context?context.nodeType:9;
results=results||[];
if(typeof selector!=="string"||!selector||
nodeType!==1&&nodeType!==9&&nodeType!==11){
return results;
}
if(!seed){
if((context?context.ownerDocument||context:preferredDoc)!==document){
setDocument(context);
}
context=context||document;
if(documentIsHTML){
if(nodeType!==11&&(match=rquickExpr.exec(selector))){
if((m=match[1])){
if(nodeType===9){
if((elem=context.getElementById(m))){
if(elem.id===m){
results.push(elem);
return results;
}
}else{
return results;
}
}else{
if(newContext&&(elem=newContext.getElementById(m))&&
contains(context,elem)&&
elem.id===m){
results.push(elem);
return results;
}
}
}else if(match[2]){
push.apply(results,context.getElementsByTagName(selector));
return results;
}else if((m=match[3])&&support.getElementsByClassName&&
context.getElementsByClassName){
push.apply(results,context.getElementsByClassName(m));
return results;
}
}
if(support.qsa&&
!compilerCache[selector+" "]&&
(!rbuggyQSA||!rbuggyQSA.test(selector))){
if(nodeType!==1){
newContext=context;
newSelector=selector;
}else if(context.nodeName.toLowerCase()!=="object"){
if((nid=context.getAttribute("id"))){
nid=nid.replace(rescape,"\\$&");
}else{
context.setAttribute("id",(nid=expando));
}
groups=tokenize(selector);
i=groups.length;
nidselect=ridentifier.test(nid)?"#"+nid:"[id='"+nid+"']";
while(i--){
groups[i]=nidselect+" "+toSelector(groups[i]);
}
newSelector=groups.join(",");
newContext=rsibling.test(selector)&&testContext(context.parentNode)||
context;
}
if(newSelector){
try{
push.apply(results,
newContext.querySelectorAll(newSelector)
);
return results;
}catch(qsaError){
}finally{
if(nid===expando){
context.removeAttribute("id");
}
}
}
}
}
}
return select(selector.replace(rtrim,"$1"),context,results,seed);
}
function createCache(){
var keys=[];
function cache(key,value){
if(keys.push(key+" ")>Expr.cacheLength){
delete cache[keys.shift()];
}
return(cache[key+" "]=value);
}
return cache;
}
function markFunction(fn){
fn[expando]=true;
return fn;
}
function assert(fn){
var div=document.createElement("div");
try{
return!!fn(div);
}catch(e){
return false;
}finally{
if(div.parentNode){
div.parentNode.removeChild(div);
}
div=null;
}
}
function addHandle(attrs,handler){
var arr=attrs.split("|"),
i=arr.length;
while(i--){
Expr.attrHandle[arr[i]]=handler;
}
}
function siblingCheck(a,b){
var cur=b&&a,
diff=cur&&a.nodeType===1&&b.nodeType===1&&
(~b.sourceIndex||MAX_NEGATIVE)-
(~a.sourceIndex||MAX_NEGATIVE);
if(diff){
return diff;
}
if(cur){
while((cur=cur.nextSibling)){
if(cur===b){
return-1;
}
}
}
return a?1:-1;
}
function createInputPseudo(type){
return function(elem){
var name=elem.nodeName.toLowerCase();
return name==="input"&&elem.type===type;
};
}
function createButtonPseudo(type){
return function(elem){
var name=elem.nodeName.toLowerCase();
return(name==="input"||name==="button")&&elem.type===type;
};
}
function createPositionalPseudo(fn){
return markFunction(function(argument){
argument=+argument;
return markFunction(function(seed,matches){
var j,
matchIndexes=fn([],seed.length,argument),
i=matchIndexes.length;
while(i--){
if(seed[(j=matchIndexes[i])]){
seed[j]=!(matches[j]=seed[j]);
}
}
});
});
}
function testContext(context){
return context&&typeof context.getElementsByTagName!=="undefined"&&context;
}
support=Sizzle.support={};
isXML=Sizzle.isXML=function(elem){
var documentElement=elem&&(elem.ownerDocument||elem).documentElement;
return documentElement?documentElement.nodeName!=="HTML":false;
};
setDocument=Sizzle.setDocument=function(node){
var hasCompare,parent,
doc=node?node.ownerDocument||node:preferredDoc;
if(doc===document||doc.nodeType!==9||!doc.documentElement){
return document;
}
document=doc;
docElem=document.documentElement;
documentIsHTML=!isXML(document);
if((parent=document.defaultView)&&parent.top!==parent){
if(parent.addEventListener){
parent.addEventListener("unload",unloadHandler,false);
}else if(parent.attachEvent){
parent.attachEvent("onunload",unloadHandler);
}
}
support.attributes=assert(function(div){
div.className="i";
return!div.getAttribute("className");
});
support.getElementsByTagName=assert(function(div){
div.appendChild(document.createComment(""));
return!div.getElementsByTagName("*").length;
});
support.getElementsByClassName=rnative.test(document.getElementsByClassName);
support.getById=assert(function(div){
docElem.appendChild(div).id=expando;
return!document.getElementsByName||!document.getElementsByName(expando).length;
});
if(support.getById){
Expr.find["ID"]=function(id,context){
if(typeof context.getElementById!=="undefined"&&documentIsHTML){
var m=context.getElementById(id);
return m?[m]:[];
}
};
Expr.filter["ID"]=function(id){
var attrId=id.replace(runescape,funescape);
return function(elem){
return elem.getAttribute("id")===attrId;
};
};
}else{
delete Expr.find["ID"];
Expr.filter["ID"]=function(id){
var attrId=id.replace(runescape,funescape);
return function(elem){
var node=typeof elem.getAttributeNode!=="undefined"&&
elem.getAttributeNode("id");
return node&&node.value===attrId;
};
};
}
Expr.find["TAG"]=support.getElementsByTagName?
function(tag,context){
if(typeof context.getElementsByTagName!=="undefined"){
return context.getElementsByTagName(tag);
}else if(support.qsa){
return context.querySelectorAll(tag);
}
}:
function(tag,context){
var elem,
tmp=[],
i=0,
results=context.getElementsByTagName(tag);
if(tag==="*"){
while((elem=results[i++])){
if(elem.nodeType===1){
tmp.push(elem);
}
}
return tmp;
}
return results;
};
Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){
if(typeof context.getElementsByClassName!=="undefined"&&documentIsHTML){
return context.getElementsByClassName(className);
}
};
rbuggyMatches=[];
rbuggyQSA=[];
if((support.qsa=rnative.test(document.querySelectorAll))){
assert(function(div){
docElem.appendChild(div).innerHTML="<a id='"+expando+"'></a>"+
"<select id='"+expando+"-\r\\' msallowcapture=''>"+
"<option selected=''></option></select>";
if(div.querySelectorAll("[msallowcapture^='']").length){
rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")");
}
if(!div.querySelectorAll("[selected]").length){
rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")");
}
if(!div.querySelectorAll("[id~="+expando+"-]").length){
rbuggyQSA.push("~=");
}
if(!div.querySelectorAll(":checked").length){
rbuggyQSA.push(":checked");
}
if(!div.querySelectorAll("a#"+expando+"+*").length){
rbuggyQSA.push(".#.+[+~]");
}
});
assert(function(div){
var input=document.createElement("input");
input.setAttribute("type","hidden");
div.appendChild(input).setAttribute("name","D");
if(div.querySelectorAll("[name=d]").length){
rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?=");
}
if(!div.querySelectorAll(":enabled").length){
rbuggyQSA.push(":enabled",":disabled");
}
div.querySelectorAll("*,:x");
rbuggyQSA.push(",.*:");
});
}
if((support.matchesSelector=rnative.test((matches=docElem.matches||
docElem.webkitMatchesSelector||
docElem.mozMatchesSelector||
docElem.oMatchesSelector||
docElem.msMatchesSelector)))){
assert(function(div){
support.disconnectedMatch=matches.call(div,"div");
matches.call(div,"[s!='']:x");
rbuggyMatches.push("!=",pseudos);
});
}
rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));
rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));
hasCompare=rnative.test(docElem.compareDocumentPosition);
contains=hasCompare||rnative.test(docElem.contains)?
function(a,b){
var adown=a.nodeType===9?a.documentElement:a,
bup=b&&b.parentNode;
return a===bup||!!(bup&&bup.nodeType===1&&(
adown.contains?
adown.contains(bup):
a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16
));
}:
function(a,b){
if(b){
while((b=b.parentNode)){
if(b===a){
return true;
}
}
}
return false;
};
sortOrder=hasCompare?
function(a,b){
if(a===b){
hasDuplicate=true;
return 0;
}
var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;
if(compare){
return compare;
}
compare=(a.ownerDocument||a)===(b.ownerDocument||b)?
a.compareDocumentPosition(b):
1;
if(compare&1||
(!support.sortDetached&&b.compareDocumentPosition(a)===compare)){
if(a===document||a.ownerDocument===preferredDoc&&contains(preferredDoc,a)){
return-1;
}
if(b===document||b.ownerDocument===preferredDoc&&contains(preferredDoc,b)){
return 1;
}
return sortInput?
(indexOf(sortInput,a)-indexOf(sortInput,b)):
0;
}
return compare&4?-1:1;
}:
function(a,b){
if(a===b){
hasDuplicate=true;
return 0;
}
var cur,
i=0,
aup=a.parentNode,
bup=b.parentNode,
ap=[a],
bp=[b];
if(!aup||!bup){
return a===document?-1:
b===document?1:
aup?-1:
bup?1:
sortInput?
(indexOf(sortInput,a)-indexOf(sortInput,b)):
0;
}else if(aup===bup){
return siblingCheck(a,b);
}
cur=a;
while((cur=cur.parentNode)){
ap.unshift(cur);
}
cur=b;
while((cur=cur.parentNode)){
bp.unshift(cur);
}
while(ap[i]===bp[i]){
i++;
}
return i?
siblingCheck(ap[i],bp[i]):
ap[i]===preferredDoc?-1:
bp[i]===preferredDoc?1:
0;
};
return document;
};
Sizzle.matches=function(expr,elements){
return Sizzle(expr,null,null,elements);
};
Sizzle.matchesSelector=function(elem,expr){
if((elem.ownerDocument||elem)!==document){
setDocument(elem);
}
expr=expr.replace(rattributeQuotes,"='$1']");
if(support.matchesSelector&&documentIsHTML&&
!compilerCache[expr+" "]&&
(!rbuggyMatches||!rbuggyMatches.test(expr))&&
(!rbuggyQSA||!rbuggyQSA.test(expr))){
try{
var ret=matches.call(elem,expr);
if(ret||support.disconnectedMatch||
elem.document&&elem.document.nodeType!==11){
return ret;
}
}catch(e){}
}
return Sizzle(expr,document,null,[elem]).length>0;
};
Sizzle.contains=function(context,elem){
if((context.ownerDocument||context)!==document){
setDocument(context);
}
return contains(context,elem);
};
Sizzle.attr=function(elem,name){
if((elem.ownerDocument||elem)!==document){
setDocument(elem);
}
var fn=Expr.attrHandle[name.toLowerCase()],
val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?
fn(elem,name,!documentIsHTML):
undefined;
return val!==undefined?
val:
support.attributes||!documentIsHTML?
elem.getAttribute(name):
(val=elem.getAttributeNode(name))&&val.specified?
val.value:
null;
};
Sizzle.error=function(msg){
throw new Error("Syntax error, unrecognized expression: "+msg);
};
Sizzle.uniqueSort=function(results){
var elem,
duplicates=[],
j=0,
i=0;
hasDuplicate=!support.detectDuplicates;
sortInput=!support.sortStable&&results.slice(0);
results.sort(sortOrder);
if(hasDuplicate){
while((elem=results[i++])){
if(elem===results[i]){
j=duplicates.push(i);
}
}
while(j--){
results.splice(duplicates[j],1);
}
}
sortInput=null;
return results;
};
getText=Sizzle.getText=function(elem){
var node,
ret="",
i=0,
nodeType=elem.nodeType;
if(!nodeType){
while((node=elem[i++])){
ret+=getText(node);
}
}else if(nodeType===1||nodeType===9||nodeType===11){
if(typeof elem.textContent==="string"){
return elem.textContent;
}else{
for(elem=elem.firstChild;elem;elem=elem.nextSibling){
ret+=getText(elem);
}
}
}else if(nodeType===3||nodeType===4){
return elem.nodeValue;
}
return ret;
};
Expr=Sizzle.selectors={
cacheLength:50,
createPseudo:markFunction,
match:matchExpr,
attrHandle:{},
find:{},
relative:{
">":{dir:"parentNode",first:true},
" ":{dir:"parentNode"},
"+":{dir:"previousSibling",first:true},
"~":{dir:"previousSibling"}
},
preFilter:{
"ATTR":function(match){
match[1]=match[1].replace(runescape,funescape);
match[3]=(match[3]||match[4]||match[5]||"").replace(runescape,funescape);
if(match[2]==="~="){
match[3]=" "+match[3]+" ";
}
return match.slice(0,4);
},
"CHILD":function(match){
match[1]=match[1].toLowerCase();
if(match[1].slice(0,3)==="nth"){
if(!match[3]){
Sizzle.error(match[0]);
}
match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));
match[5]=+((match[7]+match[8])||match[3]==="odd");
}else if(match[3]){
Sizzle.error(match[0]);
}
return match;
},
"PSEUDO":function(match){
var excess,
unquoted=!match[6]&&match[2];
if(matchExpr["CHILD"].test(match[0])){
return null;
}
if(match[3]){
match[2]=match[4]||match[5]||"";
}else if(unquoted&&rpseudo.test(unquoted)&&
(excess=tokenize(unquoted,true))&&
(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){
match[0]=match[0].slice(0,excess);
match[2]=unquoted.slice(0,excess);
}
return match.slice(0,3);
}
},
filter:{
"TAG":function(nodeNameSelector){
var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();
return nodeNameSelector==="*"?
function(){return true;}:
function(elem){
return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;
};
},
"CLASS":function(className){
var pattern=classCache[className+" "];
return pattern||
(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&
classCache(className,function(elem){
return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!=="undefined"&&elem.getAttribute("class")||"");
});
},
"ATTR":function(name,operator,check){
return function(elem){
var result=Sizzle.attr(elem,name);
if(result==null){
return operator==="!=";
}
if(!operator){
return true;
}
result+="";
return operator==="="?result===check:
operator==="!="?result!==check:
operator==="^="?check&&result.indexOf(check)===0:
operator==="*="?check&&result.indexOf(check)>-1:
operator==="$="?check&&result.slice(-check.length)===check:
operator==="~="?(" "+result.replace(rwhitespace," ")+" ").indexOf(check)>-1:
operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":
false;
};
},
"CHILD":function(type,what,argument,first,last){
var simple=type.slice(0,3)!=="nth",
forward=type.slice(-4)!=="last",
ofType=what==="of-type";
return first===1&&last===0?
function(elem){
return!!elem.parentNode;
}:
function(elem,context,xml){
var cache,uniqueCache,outerCache,node,nodeIndex,start,
dir=simple!==forward?"nextSibling":"previousSibling",
parent=elem.parentNode,
name=ofType&&elem.nodeName.toLowerCase(),
useCache=!xml&&!ofType,
diff=false;
if(parent){
if(simple){
while(dir){
node=elem;
while((node=node[dir])){
if(ofType?
node.nodeName.toLowerCase()===name:
node.nodeType===1){
return false;
}
}
start=dir=type==="only"&&!start&&"nextSibling";
}
return true;
}
start=[forward?parent.firstChild:parent.lastChild];
if(forward&&useCache){
node=parent;
outerCache=node[expando]||(node[expando]={});
uniqueCache=outerCache[node.uniqueID]||
(outerCache[node.uniqueID]={});
cache=uniqueCache[type]||[];
nodeIndex=cache[0]===dirruns&&cache[1];
diff=nodeIndex&&cache[2];
node=nodeIndex&&parent.childNodes[nodeIndex];
while((node=++nodeIndex&&node&&node[dir]||
(diff=nodeIndex=0)||start.pop())){
if(node.nodeType===1&&++diff&&node===elem){
uniqueCache[type]=[dirruns,nodeIndex,diff];
break;
}
}
}else{
if(useCache){
node=elem;
outerCache=node[expando]||(node[expando]={});
uniqueCache=outerCache[node.uniqueID]||
(outerCache[node.uniqueID]={});
cache=uniqueCache[type]||[];
nodeIndex=cache[0]===dirruns&&cache[1];
diff=nodeIndex;
}
if(diff===false){
while((node=++nodeIndex&&node&&node[dir]||
(diff=nodeIndex=0)||start.pop())){
if((ofType?
node.nodeName.toLowerCase()===name:
node.nodeType===1)&&
++diff){
if(useCache){
outerCache=node[expando]||(node[expando]={});
uniqueCache=outerCache[node.uniqueID]||
(outerCache[node.uniqueID]={});
uniqueCache[type]=[dirruns,diff];
}
if(node===elem){
break;
}
}
}
}
}
diff-=last;
return diff===first||(diff%first===0&&diff/first>=0);
}
};
},
"PSEUDO":function(pseudo,argument){
var args,
fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||
Sizzle.error("unsupported pseudo: "+pseudo);
if(fn[expando]){
return fn(argument);
}
if(fn.length>1){
args=[pseudo,pseudo,"",argument];
return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?
markFunction(function(seed,matches){
var idx,
matched=fn(seed,argument),
i=matched.length;
while(i--){
idx=indexOf(seed,matched[i]);
seed[idx]=!(matches[idx]=matched[i]);
}
}):
function(elem){
return fn(elem,0,args);
};
}
return fn;
}
},
pseudos:{
"not":markFunction(function(selector){
var input=[],
results=[],
matcher=compile(selector.replace(rtrim,"$1"));
return matcher[expando]?
markFunction(function(seed,matches,context,xml){
var elem,
unmatched=matcher(seed,null,xml,[]),
i=seed.length;
while(i--){
if((elem=unmatched[i])){
seed[i]=!(matches[i]=elem);
}
}
}):
function(elem,context,xml){
input[0]=elem;
matcher(input,null,xml,results);
input[0]=null;
return!results.pop();
};
}),
"has":markFunction(function(selector){
return function(elem){
return Sizzle(selector,elem).length>0;
};
}),
"contains":markFunction(function(text){
text=text.replace(runescape,funescape);
return function(elem){
return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)>-1;
};
}),
"lang":markFunction(function(lang){
if(!ridentifier.test(lang||"")){
Sizzle.error("unsupported lang: "+lang);
}
lang=lang.replace(runescape,funescape).toLowerCase();
return function(elem){
var elemLang;
do{
if((elemLang=documentIsHTML?
elem.lang:
elem.getAttribute("xml:lang")||elem.getAttribute("lang"))){
elemLang=elemLang.toLowerCase();
return elemLang===lang||elemLang.indexOf(lang+"-")===0;
}
}while((elem=elem.parentNode)&&elem.nodeType===1);
return false;
};
}),
"target":function(elem){
var hash=window.location&&window.location.hash;
return hash&&hash.slice(1)===elem.id;
},
"root":function(elem){
return elem===docElem;
},
"focus":function(elem){
return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);
},
"enabled":function(elem){
return elem.disabled===false;
},
"disabled":function(elem){
return elem.disabled===true;
},
"checked":function(elem){
var nodeName=elem.nodeName.toLowerCase();
return(nodeName==="input"&&!!elem.checked)||(nodeName==="option"&&!!elem.selected);
},
"selected":function(elem){
if(elem.parentNode){
elem.parentNode.selectedIndex;
}
return elem.selected===true;
},
"empty":function(elem){
for(elem=elem.firstChild;elem;elem=elem.nextSibling){
if(elem.nodeType<6){
return false;
}
}
return true;
},
"parent":function(elem){
return!Expr.pseudos["empty"](elem);
},
"header":function(elem){
return rheader.test(elem.nodeName);
},
"input":function(elem){
return rinputs.test(elem.nodeName);
},
"button":function(elem){
var name=elem.nodeName.toLowerCase();
return name==="input"&&elem.type==="button"||name==="button";
},
"text":function(elem){
var attr;
return elem.nodeName.toLowerCase()==="input"&&
elem.type==="text"&&
((attr=elem.getAttribute("type"))==null||attr.toLowerCase()==="text");
},
"first":createPositionalPseudo(function(){
return[0];
}),
"last":createPositionalPseudo(function(matchIndexes,length){
return[length-1];
}),
"eq":createPositionalPseudo(function(matchIndexes,length,argument){
return[argument<0?argument+length:argument];
}),
"even":createPositionalPseudo(function(matchIndexes,length){
var i=0;
for(;i<length;i+=2){
matchIndexes.push(i);
}
return matchIndexes;
}),
"odd":createPositionalPseudo(function(matchIndexes,length){
var i=1;
for(;i<length;i+=2){
matchIndexes.push(i);
}
return matchIndexes;
}),
"lt":createPositionalPseudo(function(matchIndexes,length,argument){
var i=argument<0?argument+length:argument;
for(;--i>=0;){
matchIndexes.push(i);
}
return matchIndexes;
}),
"gt":createPositionalPseudo(function(matchIndexes,length,argument){
var i=argument<0?argument+length:argument;
for(;++i<length;){
matchIndexes.push(i);
}
return matchIndexes;
})
}
};
Expr.pseudos["nth"]=Expr.pseudos["eq"];
for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){
Expr.pseudos[i]=createInputPseudo(i);
}
for(i in{submit:true,reset:true}){
Expr.pseudos[i]=createButtonPseudo(i);
}
function setFilters(){}
setFilters.prototype=Expr.filters=Expr.pseudos;
Expr.setFilters=new setFilters();
tokenize=Sizzle.tokenize=function(selector,parseOnly){
var matched,match,tokens,type,
soFar,groups,preFilters,
cached=tokenCache[selector+" "];
if(cached){
return parseOnly?0:cached.slice(0);
}
soFar=selector;
groups=[];
preFilters=Expr.preFilter;
while(soFar){
if(!matched||(match=rcomma.exec(soFar))){
if(match){
soFar=soFar.slice(match[0].length)||soFar;
}
groups.push((tokens=[]));
}
matched=false;
if((match=rcombinators.exec(soFar))){
matched=match.shift();
tokens.push({
value:matched,
type:match[0].replace(rtrim," ")
});
soFar=soFar.slice(matched.length);
}
for(type in Expr.filter){
if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||
(match=preFilters[type](match)))){
matched=match.shift();
tokens.push({
value:matched,
type:type,
matches:match
});
soFar=soFar.slice(matched.length);
}
}
if(!matched){
break;
}
}
return parseOnly?
soFar.length:
soFar?
Sizzle.error(selector):
tokenCache(selector,groups).slice(0);
};
function toSelector(tokens){
var i=0,
len=tokens.length,
selector="";
for(;i<len;i++){
selector+=tokens[i].value;
}
return selector;
}
function addCombinator(matcher,combinator,base){
var dir=combinator.dir,
checkNonElements=base&&dir==="parentNode",
doneName=done++;
return combinator.first?
function(elem,context,xml){
while((elem=elem[dir])){
if(elem.nodeType===1||checkNonElements){
return matcher(elem,context,xml);
}
}
}:
function(elem,context,xml){
var oldCache,uniqueCache,outerCache,
newCache=[dirruns,doneName];
if(xml){
while((elem=elem[dir])){
if(elem.nodeType===1||checkNonElements){
if(matcher(elem,context,xml)){
return true;
}
}
}
}else{
while((elem=elem[dir])){
if(elem.nodeType===1||checkNonElements){
outerCache=elem[expando]||(elem[expando]={});
uniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});
if((oldCache=uniqueCache[dir])&&
oldCache[0]===dirruns&&oldCache[1]===doneName){
return(newCache[2]=oldCache[2]);
}else{
uniqueCache[dir]=newCache;
if((newCache[2]=matcher(elem,context,xml))){
return true;
}
}
}
}
}
};
}
function elementMatcher(matchers){
return matchers.length>1?
function(elem,context,xml){
var i=matchers.length;
while(i--){
if(!matchers[i](elem,context,xml)){
return false;
}
}
return true;
}:
matchers[0];
}
function multipleContexts(selector,contexts,results){
var i=0,
len=contexts.length;
for(;i<len;i++){
Sizzle(selector,contexts[i],results);
}
return results;
}
function condense(unmatched,map,filter,context,xml){
var elem,
newUnmatched=[],
i=0,
len=unmatched.length,
mapped=map!=null;
for(;i<len;i++){
if((elem=unmatched[i])){
if(!filter||filter(elem,context,xml)){
newUnmatched.push(elem);
if(mapped){
map.push(i);
}
}
}
}
return newUnmatched;
}
function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){
if(postFilter&&!postFilter[expando]){
postFilter=setMatcher(postFilter);
}
if(postFinder&&!postFinder[expando]){
postFinder=setMatcher(postFinder,postSelector);
}
return markFunction(function(seed,results,context,xml){
var temp,i,elem,
preMap=[],
postMap=[],
preexisting=results.length,
elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),
matcherIn=preFilter&&(seed||!selector)?
condense(elems,preMap,preFilter,context,xml):
elems,
matcherOut=matcher?
postFinder||(seed?preFilter:preexisting||postFilter)?
[]:
results:
matcherIn;
if(matcher){
matcher(matcherIn,matcherOut,context,xml);
}
if(postFilter){
temp=condense(matcherOut,postMap);
postFilter(temp,[],context,xml);
i=temp.length;
while(i--){
if((elem=temp[i])){
matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);
}
}
}
if(seed){
if(postFinder||preFilter){
if(postFinder){
temp=[];
i=matcherOut.length;
while(i--){
if((elem=matcherOut[i])){
temp.push((matcherIn[i]=elem));
}
}
postFinder(null,(matcherOut=[]),temp,xml);
}
i=matcherOut.length;
while(i--){
if((elem=matcherOut[i])&&
(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){
seed[temp]=!(results[temp]=elem);
}
}
}
}else{
matcherOut=condense(
matcherOut===results?
matcherOut.splice(preexisting,matcherOut.length):
matcherOut
);
if(postFinder){
postFinder(null,results,matcherOut,xml);
}else{
push.apply(results,matcherOut);
}
}
});
}
function matcherFromTokens(tokens){
var checkContext,matcher,j,
len=tokens.length,
leadingRelative=Expr.relative[tokens[0].type],
implicitRelative=leadingRelative||Expr.relative[" "],
i=leadingRelative?1:0,
matchContext=addCombinator(function(elem){
return elem===checkContext;
},implicitRelative,true),
matchAnyContext=addCombinator(function(elem){
return indexOf(checkContext,elem)>-1;
},implicitRelative,true),
matchers=[function(elem,context,xml){
var ret=(!leadingRelative&&(xml||context!==outermostContext))||(
(checkContext=context).nodeType?
matchContext(elem,context,xml):
matchAnyContext(elem,context,xml));
checkContext=null;
return ret;
}];
for(;i<len;i++){
if((matcher=Expr.relative[tokens[i].type])){
matchers=[addCombinator(elementMatcher(matchers),matcher)];
}else{
matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);
if(matcher[expando]){
j=++i;
for(;j<len;j++){
if(Expr.relative[tokens[j].type]){
break;
}
}
return setMatcher(
i>1&&elementMatcher(matchers),
i>1&&toSelector(
tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})
).replace(rtrim,"$1"),
matcher,
i<j&&matcherFromTokens(tokens.slice(i,j)),
j<len&&matcherFromTokens((tokens=tokens.slice(j))),
j<len&&toSelector(tokens)
);
}
matchers.push(matcher);
}
}
return elementMatcher(matchers);
}
function matcherFromGroupMatchers(elementMatchers,setMatchers){
var bySet=setMatchers.length>0,
byElement=elementMatchers.length>0,
superMatcher=function(seed,context,xml,results,outermost){
var elem,j,matcher,
matchedCount=0,
i="0",
unmatched=seed&&[],
setMatched=[],
contextBackup=outermostContext,
elems=seed||byElement&&Expr.find["TAG"]("*",outermost),
dirrunsUnique=(dirruns+=contextBackup==null?1:Math.random()||0.1),
len=elems.length;
if(outermost){
outermostContext=context===document||context||outermost;
}
for(;i!==len&&(elem=elems[i])!=null;i++){
if(byElement&&elem){
j=0;
if(!context&&elem.ownerDocument!==document){
setDocument(elem);
xml=!documentIsHTML;
}
while((matcher=elementMatchers[j++])){
if(matcher(elem,context||document,xml)){
results.push(elem);
break;
}
}
if(outermost){
dirruns=dirrunsUnique;
}
}
if(bySet){
if((elem=!matcher&&elem)){
matchedCount--;
}
if(seed){
unmatched.push(elem);
}
}
}
matchedCount+=i;
if(bySet&&i!==matchedCount){
j=0;
while((matcher=setMatchers[j++])){
matcher(unmatched,setMatched,context,xml);
}
if(seed){
if(matchedCount>0){
while(i--){
if(!(unmatched[i]||setMatched[i])){
setMatched[i]=pop.call(results);
}
}
}
setMatched=condense(setMatched);
}
push.apply(results,setMatched);
if(outermost&&!seed&&setMatched.length>0&&
(matchedCount+setMatchers.length)>1){
Sizzle.uniqueSort(results);
}
}
if(outermost){
dirruns=dirrunsUnique;
outermostContext=contextBackup;
}
return unmatched;
};
return bySet?
markFunction(superMatcher):
superMatcher;
}
compile=Sizzle.compile=function(selector,match){
var i,
setMatchers=[],
elementMatchers=[],
cached=compilerCache[selector+" "];
if(!cached){
if(!match){
match=tokenize(selector);
}
i=match.length;
while(i--){
cached=matcherFromTokens(match[i]);
if(cached[expando]){
setMatchers.push(cached);
}else{
elementMatchers.push(cached);
}
}
cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));
cached.selector=selector;
}
return cached;
};
select=Sizzle.select=function(selector,context,results,seed){
var i,tokens,token,type,find,
compiled=typeof selector==="function"&&selector,
match=!seed&&tokenize((selector=compiled.selector||selector));
results=results||[];
if(match.length===1){
tokens=match[0]=match[0].slice(0);
if(tokens.length>2&&(token=tokens[0]).type==="ID"&&
support.getById&&context.nodeType===9&&documentIsHTML&&
Expr.relative[tokens[1].type]){
context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];
if(!context){
return results;
}else if(compiled){
context=context.parentNode;
}
selector=selector.slice(tokens.shift().value.length);
}
i=matchExpr["needsContext"].test(selector)?0:tokens.length;
while(i--){
token=tokens[i];
if(Expr.relative[(type=token.type)]){
break;
}
if((find=Expr.find[type])){
if((seed=find(
token.matches[0].replace(runescape,funescape),
rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context
))){
tokens.splice(i,1);
selector=seed.length&&toSelector(tokens);
if(!selector){
push.apply(results,seed);
return results;
}
break;
}
}
}
}
(compiled||compile(selector,match))(
seed,
context,
!documentIsHTML,
results,
!context||rsibling.test(selector)&&testContext(context.parentNode)||context
);
return results;
};
support.sortStable=expando.split("").sort(sortOrder).join("")===expando;
support.detectDuplicates=!!hasDuplicate;
setDocument();
support.sortDetached=assert(function(div1){
return div1.compareDocumentPosition(document.createElement("div"))&1;
});
if(!assert(function(div){
div.innerHTML="<a href='#'></a>";
return div.firstChild.getAttribute("href")==="#";
})){
addHandle("type|href|height|width",function(elem,name,isXML){
if(!isXML){
return elem.getAttribute(name,name.toLowerCase()==="type"?1:2);
}
});
}
if(!support.attributes||!assert(function(div){
div.innerHTML="<input/>";
div.firstChild.setAttribute("value","");
return div.firstChild.getAttribute("value")==="";
})){
addHandle("value",function(elem,name,isXML){
if(!isXML&&elem.nodeName.toLowerCase()==="input"){
return elem.defaultValue;
}
});
}
if(!assert(function(div){
return div.getAttribute("disabled")==null;
})){
addHandle(booleans,function(elem,name,isXML){
var val;
if(!isXML){
return elem[name]===true?name.toLowerCase():
(val=elem.getAttributeNode(name))&&val.specified?
val.value:
null;
}
});
}
return Sizzle;
})(window);
jQuery.find=Sizzle;
jQuery.expr=Sizzle.selectors;
jQuery.expr[":"]=jQuery.expr.pseudos;
jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;
jQuery.text=Sizzle.getText;
jQuery.isXMLDoc=Sizzle.isXML;
jQuery.contains=Sizzle.contains;
var dir=function(elem,dir,until){
var matched=[],
truncate=until!==undefined;
while((elem=elem[dir])&&elem.nodeType!==9){
if(elem.nodeType===1){
if(truncate&&jQuery(elem).is(until)){
break;
}
matched.push(elem);
}
}
return matched;
};
var siblings=function(n,elem){
var matched=[];
for(;n;n=n.nextSibling){
if(n.nodeType===1&&n!==elem){
matched.push(n);
}
}
return matched;
};
var rneedsContext=jQuery.expr.match.needsContext;
var rsingleTag=(/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/);
var risSimple=/^.[^:#\[\.,]*$/;
function winnow(elements,qualifier,not){
if(jQuery.isFunction(qualifier)){
return jQuery.grep(elements,function(elem,i){
return!!qualifier.call(elem,i,elem)!==not;
});
}
if(qualifier.nodeType){
return jQuery.grep(elements,function(elem){
return(elem===qualifier)!==not;
});
}
if(typeof qualifier==="string"){
if(risSimple.test(qualifier)){
return jQuery.filter(qualifier,elements,not);
}
qualifier=jQuery.filter(qualifier,elements);
}
return jQuery.grep(elements,function(elem){
return(indexOf.call(qualifier,elem)>-1)!==not;
});
}
jQuery.filter=function(expr,elems,not){
var elem=elems[0];
if(not){
expr=":not("+expr+")";
}
return elems.length===1&&elem.nodeType===1?
jQuery.find.matchesSelector(elem,expr)?[elem]:[]:
jQuery.find.matches(expr,jQuery.grep(elems,function(elem){
return elem.nodeType===1;
}));
};
jQuery.fn.extend({
find:function(selector){
var i,
len=this.length,
ret=[],
self=this;
if(typeof selector!=="string"){
return this.pushStack(jQuery(selector).filter(function(){
for(i=0;i<len;i++){
if(jQuery.contains(self[i],this)){
return true;
}
}
}));
}
for(i=0;i<len;i++){
jQuery.find(selector,self[i],ret);
}
ret=this.pushStack(len>1?jQuery.unique(ret):ret);
ret.selector=this.selector?this.selector+" "+selector:selector;
return ret;
},
filter:function(selector){
return this.pushStack(winnow(this,selector||[],false));
},
not:function(selector){
return this.pushStack(winnow(this,selector||[],true));
},
is:function(selector){
return!!winnow(
this,
typeof selector==="string"&&rneedsContext.test(selector)?
jQuery(selector):
selector||[],
false
).length;
}
});
var rootjQuery,
rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
init=jQuery.fn.init=function(selector,context,root){
var match,elem;
if(!selector){
return this;
}
root=root||rootjQuery;
if(typeof selector==="string"){
if(selector[0]==="<"&&
selector[selector.length-1]===">"&&
selector.length>=3){
match=[null,selector,null];
}else{
match=rquickExpr.exec(selector);
}
if(match&&(match[1]||!context)){
if(match[1]){
context=context instanceof jQuery?context[0]:context;
jQuery.merge(this,jQuery.parseHTML(
match[1],
context&&context.nodeType?context.ownerDocument||context:document,
true
));
if(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){
for(match in context){
if(jQuery.isFunction(this[match])){
this[match](context[match]);
}else{
this.attr(match,context[match]);
}
}
}
return this;
}else{
elem=document.getElementById(match[2]);
if(elem&&elem.parentNode){
this.length=1;
this[0]=elem;
}
this.context=document;
this.selector=selector;
return this;
}
}else if(!context||context.jquery){
return(context||root).find(selector);
}else{
return this.constructor(context).find(selector);
}
}else if(selector.nodeType){
this.context=this[0]=selector;
this.length=1;
return this;
}else if(jQuery.isFunction(selector)){
return root.ready!==undefined?
root.ready(selector):
selector(jQuery);
}
if(selector.selector!==undefined){
this.selector=selector.selector;
this.context=selector.context;
}
return jQuery.makeArray(selector,this);
};
init.prototype=jQuery.fn;
rootjQuery=jQuery(document);
var rparentsprev=/^(?:parents|prev(?:Until|All))/,
guaranteedUnique={
children:true,
contents:true,
next:true,
prev:true
};
jQuery.fn.extend({
has:function(target){
var targets=jQuery(target,this),
l=targets.length;
return this.filter(function(){
var i=0;
for(;i<l;i++){
if(jQuery.contains(this,targets[i])){
return true;
}
}
});
},
closest:function(selectors,context){
var cur,
i=0,
l=this.length,
matched=[],
pos=rneedsContext.test(selectors)||typeof selectors!=="string"?
jQuery(selectors,context||this.context):
0;
for(;i<l;i++){
for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){
if(cur.nodeType<11&&(pos?
pos.index(cur)>-1:
cur.nodeType===1&&
jQuery.find.matchesSelector(cur,selectors))){
matched.push(cur);
break;
}
}
}
return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched);
},
index:function(elem){
if(!elem){
return(this[0]&&this[0].parentNode)?this.first().prevAll().length:-1;
}
if(typeof elem==="string"){
return indexOf.call(jQuery(elem),this[0]);
}
return indexOf.call(this,
elem.jquery?elem[0]:elem
);
},
add:function(selector,context){
return this.pushStack(
jQuery.uniqueSort(
jQuery.merge(this.get(),jQuery(selector,context))
)
);
},
addBack:function(selector){
return this.add(selector==null?
this.prevObject:this.prevObject.filter(selector)
);
}
});
function sibling(cur,dir){
while((cur=cur[dir])&&cur.nodeType!==1){}
return cur;
}
jQuery.each({
parent:function(elem){
var parent=elem.parentNode;
return parent&&parent.nodeType!==11?parent:null;
},
parents:function(elem){
return dir(elem,"parentNode");
},
parentsUntil:function(elem,i,until){
return dir(elem,"parentNode",until);
},
next:function(elem){
return sibling(elem,"nextSibling");
},
prev:function(elem){
return sibling(elem,"previousSibling");
},
nextAll:function(elem){
return dir(elem,"nextSibling");
},
prevAll:function(elem){
return dir(elem,"previousSibling");
},
nextUntil:function(elem,i,until){
return dir(elem,"nextSibling",until);
},
prevUntil:function(elem,i,until){
return dir(elem,"previousSibling",until);
},
siblings:function(elem){
return siblings((elem.parentNode||{}).firstChild,elem);
},
children:function(elem){
return siblings(elem.firstChild);
},
contents:function(elem){
return elem.contentDocument||jQuery.merge([],elem.childNodes);
}
},function(name,fn){
jQuery.fn[name]=function(until,selector){
var matched=jQuery.map(this,fn,until);
if(name.slice(-5)!=="Until"){
selector=until;
}
if(selector&&typeof selector==="string"){
matched=jQuery.filter(selector,matched);
}
if(this.length>1){
if(!guaranteedUnique[name]){
jQuery.uniqueSort(matched);
}
if(rparentsprev.test(name)){
matched.reverse();
}
}
return this.pushStack(matched);
};
});
var rnotwhite=(/\S+/g);
function createOptions(options){
var object={};
jQuery.each(options.match(rnotwhite)||[],function(_,flag){
object[flag]=true;
});
return object;
}
jQuery.Callbacks=function(options){
options=typeof options==="string"?
createOptions(options):
jQuery.extend({},options);
var
firing,
memory,
fired,
locked,
list=[],
queue=[],
firingIndex=-1,
fire=function(){
locked=options.once;
fired=firing=true;
for(;queue.length;firingIndex=-1){
memory=queue.shift();
while(++firingIndex<list.length){
if(list[firingIndex].apply(memory[0],memory[1])===false&&
options.stopOnFalse){
firingIndex=list.length;
memory=false;
}
}
}
if(!options.memory){
memory=false;
}
firing=false;
if(locked){
if(memory){
list=[];
}else{
list="";
}
}
},
self={
add:function(){
if(list){
if(memory&&!firing){
firingIndex=list.length-1;
queue.push(memory);
}
(function add(args){
jQuery.each(args,function(_,arg){
if(jQuery.isFunction(arg)){
if(!options.unique||!self.has(arg)){
list.push(arg);
}
}else if(arg&&arg.length&&jQuery.type(arg)!=="string"){
add(arg);
}
});
})(arguments);
if(memory&&!firing){
fire();
}
}
return this;
},
remove:function(){
jQuery.each(arguments,function(_,arg){
var index;
while((index=jQuery.inArray(arg,list,index))>-1){
list.splice(index,1);
if(index<=firingIndex){
firingIndex--;
}
}
});
return this;
},
has:function(fn){
return fn?
jQuery.inArray(fn,list)>-1:
list.length>0;
},
empty:function(){
if(list){
list=[];
}
return this;
},
disable:function(){
locked=queue=[];
list=memory="";
return this;
},
disabled:function(){
return!list;
},
lock:function(){
locked=queue=[];
if(!memory){
list=memory="";
}
return this;
},
locked:function(){
return!!locked;
},
fireWith:function(context,args){
if(!locked){
args=args||[];
args=[context,args.slice?args.slice():args];
queue.push(args);
if(!firing){
fire();
}
}
return this;
},
fire:function(){
self.fireWith(this,arguments);
return this;
},
fired:function(){
return!!fired;
}
};
return self;
};
jQuery.extend({
Deferred:function(func){
var tuples=[
["resolve","done",jQuery.Callbacks("once memory"),"resolved"],
["reject","fail",jQuery.Callbacks("once memory"),"rejected"],
["notify","progress",jQuery.Callbacks("memory")]
],
state="pending",
promise={
state:function(){
return state;
},
always:function(){
deferred.done(arguments).fail(arguments);
return this;
},
then:function(){
var fns=arguments;
return jQuery.Deferred(function(newDefer){
jQuery.each(tuples,function(i,tuple){
var fn=jQuery.isFunction(fns[i])&&fns[i];
deferred[tuple[1]](function(){
var returned=fn&&fn.apply(this,arguments);
if(returned&&jQuery.isFunction(returned.promise)){
returned.promise()
.progress(newDefer.notify)
.done(newDefer.resolve)
.fail(newDefer.reject);
}else{
newDefer[tuple[0]+"With"](
this===promise?newDefer.promise():this,
fn?[returned]:arguments
);
}
});
});
fns=null;
}).promise();
},
promise:function(obj){
return obj!=null?jQuery.extend(obj,promise):promise;
}
},
deferred={};
promise.pipe=promise.then;
jQuery.each(tuples,function(i,tuple){
var list=tuple[2],
stateString=tuple[3];
promise[tuple[1]]=list.add;
if(stateString){
list.add(function(){
state=stateString;
},tuples[i^1][2].disable,tuples[2][2].lock);
}
deferred[tuple[0]]=function(){
deferred[tuple[0]+"With"](this===deferred?promise:this,arguments);
return this;
};
deferred[tuple[0]+"With"]=list.fireWith;
});
promise.promise(deferred);
if(func){
func.call(deferred,deferred);
}
return deferred;
},
when:function(subordinate){
var i=0,
resolveValues=slice.call(arguments),
length=resolveValues.length,
remaining=length!==1||
(subordinate&&jQuery.isFunction(subordinate.promise))?length:0,
deferred=remaining===1?subordinate:jQuery.Deferred(),
updateFunc=function(i,contexts,values){
return function(value){
contexts[i]=this;
values[i]=arguments.length>1?slice.call(arguments):value;
if(values===progressValues){
deferred.notifyWith(contexts,values);
}else if(!(--remaining)){
deferred.resolveWith(contexts,values);
}
};
},
progressValues,progressContexts,resolveContexts;
if(length>1){
progressValues=new Array(length);
progressContexts=new Array(length);
resolveContexts=new Array(length);
for(;i<length;i++){
if(resolveValues[i]&&jQuery.isFunction(resolveValues[i].promise)){
resolveValues[i].promise()
.progress(updateFunc(i,progressContexts,progressValues))
.done(updateFunc(i,resolveContexts,resolveValues))
.fail(deferred.reject);
}else{
--remaining;
}
}
}
if(!remaining){
deferred.resolveWith(resolveContexts,resolveValues);
}
return deferred.promise();
}
});
var readyList;
jQuery.fn.ready=function(fn){
jQuery.ready.promise().done(fn);
return this;
};
jQuery.extend({
isReady:false,
readyWait:1,
holdReady:function(hold){
if(hold){
jQuery.readyWait++;
}else{
jQuery.ready(true);
}
},
ready:function(wait){
if(wait===true?--jQuery.readyWait:jQuery.isReady){
return;
}
jQuery.isReady=true;
if(wait!==true&&--jQuery.readyWait>0){
return;
}
readyList.resolveWith(document,[jQuery]);
if(jQuery.fn.triggerHandler){
jQuery(document).triggerHandler("ready");
jQuery(document).off("ready");
}
}
});
function completed(){
document.removeEventListener("DOMContentLoaded",completed);
window.removeEventListener("load",completed);
jQuery.ready();
}
jQuery.ready.promise=function(obj){
if(!readyList){
readyList=jQuery.Deferred();
if(document.readyState==="complete"||
(document.readyState!=="loading"&&!document.documentElement.doScroll)){
window.setTimeout(jQuery.ready);
}else{
document.addEventListener("DOMContentLoaded",completed);
window.addEventListener("load",completed);
}
}
return readyList.promise(obj);
};
jQuery.ready.promise();
var access=function(elems,fn,key,value,chainable,emptyGet,raw){
var i=0,
len=elems.length,
bulk=key==null;
if(jQuery.type(key)==="object"){
chainable=true;
for(i in key){
access(elems,fn,i,key[i],true,emptyGet,raw);
}
}else if(value!==undefined){
chainable=true;
if(!jQuery.isFunction(value)){
raw=true;
}
if(bulk){
if(raw){
fn.call(elems,value);
fn=null;
}else{
bulk=fn;
fn=function(elem,key,value){
return bulk.call(jQuery(elem),value);
};
}
}
if(fn){
for(;i<len;i++){
fn(
elems[i],key,raw?
value:
value.call(elems[i],i,fn(elems[i],key))
);
}
}
}
return chainable?
elems:
bulk?
fn.call(elems):
len?fn(elems[0],key):emptyGet;
};
var acceptData=function(owner){
return owner.nodeType===1||owner.nodeType===9||!(+owner.nodeType);
};
function Data(){
this.expando=jQuery.expando+Data.uid++;
}
Data.uid=1;
Data.prototype={
register:function(owner,initial){
var value=initial||{};
if(owner.nodeType){
owner[this.expando]=value;
}else{
Object.defineProperty(owner,this.expando,{
value:value,
writable:true,
configurable:true
});
}
return owner[this.expando];
},
cache:function(owner){
if(!acceptData(owner)){
return{};
}
var value=owner[this.expando];
if(!value){
value={};
if(acceptData(owner)){
if(owner.nodeType){
owner[this.expando]=value;
}else{
Object.defineProperty(owner,this.expando,{
value:value,
configurable:true
});
}
}
}
return value;
},
set:function(owner,data,value){
var prop,
cache=this.cache(owner);
if(typeof data==="string"){
cache[data]=value;
}else{
for(prop in data){
cache[prop]=data[prop];
}
}
return cache;
},
get:function(owner,key){
return key===undefined?
this.cache(owner):
owner[this.expando]&&owner[this.expando][key];
},
access:function(owner,key,value){
var stored;
if(key===undefined||
((key&&typeof key==="string")&&value===undefined)){
stored=this.get(owner,key);
return stored!==undefined?
stored:this.get(owner,jQuery.camelCase(key));
}
this.set(owner,key,value);
return value!==undefined?value:key;
},
remove:function(owner,key){
var i,name,camel,
cache=owner[this.expando];
if(cache===undefined){
return;
}
if(key===undefined){
this.register(owner);
}else{
if(jQuery.isArray(key)){
name=key.concat(key.map(jQuery.camelCase));
}else{
camel=jQuery.camelCase(key);
if(key in cache){
name=[key,camel];
}else{
name=camel;
name=name in cache?
[name]:(name.match(rnotwhite)||[]);
}
}
i=name.length;
while(i--){
delete cache[name[i]];
}
}
if(key===undefined||jQuery.isEmptyObject(cache)){
if(owner.nodeType){
owner[this.expando]=undefined;
}else{
delete owner[this.expando];
}
}
},
hasData:function(owner){
var cache=owner[this.expando];
return cache!==undefined&&!jQuery.isEmptyObject(cache);
}
};
var dataPriv=new Data();
var dataUser=new Data();
var rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
rmultiDash=/[A-Z]/g;
function dataAttr(elem,key,data){
var name;
if(data===undefined&&elem.nodeType===1){
name="data-"+key.replace(rmultiDash,"-$&").toLowerCase();
data=elem.getAttribute(name);
if(typeof data==="string"){
try{
data=data==="true"?true:
data==="false"?false:
data==="null"?null:
+data+""===data?+data:
rbrace.test(data)?jQuery.parseJSON(data):
data;
}catch(e){}
dataUser.set(elem,key,data);
}else{
data=undefined;
}
}
return data;
}
jQuery.extend({
hasData:function(elem){
return dataUser.hasData(elem)||dataPriv.hasData(elem);
},
data:function(elem,name,data){
return dataUser.access(elem,name,data);
},
removeData:function(elem,name){
dataUser.remove(elem,name);
},
_data:function(elem,name,data){
return dataPriv.access(elem,name,data);
},
_removeData:function(elem,name){
dataPriv.remove(elem,name);
}
});
jQuery.fn.extend({
data:function(key,value){
var i,name,data,
elem=this[0],
attrs=elem&&elem.attributes;
if(key===undefined){
if(this.length){
data=dataUser.get(elem);
if(elem.nodeType===1&&!dataPriv.get(elem,"hasDataAttrs")){
i=attrs.length;
while(i--){
if(attrs[i]){
name=attrs[i].name;
if(name.indexOf("data-")===0){
name=jQuery.camelCase(name.slice(5));
dataAttr(elem,name,data[name]);
}
}
}
dataPriv.set(elem,"hasDataAttrs",true);
}
}
return data;
}
if(typeof key==="object"){
return this.each(function(){
dataUser.set(this,key);
});
}
return access(this,function(value){
var data,camelKey;
if(elem&&value===undefined){
data=dataUser.get(elem,key)||
dataUser.get(elem,key.replace(rmultiDash,"-$&").toLowerCase());
if(data!==undefined){
return data;
}
camelKey=jQuery.camelCase(key);
data=dataUser.get(elem,camelKey);
if(data!==undefined){
return data;
}
data=dataAttr(elem,camelKey,undefined);
if(data!==undefined){
return data;
}
return;
}
camelKey=jQuery.camelCase(key);
this.each(function(){
var data=dataUser.get(this,camelKey);
dataUser.set(this,camelKey,value);
if(key.indexOf("-")>-1&&data!==undefined){
dataUser.set(this,key,value);
}
});
},null,value,arguments.length>1,null,true);
},
removeData:function(key){
return this.each(function(){
dataUser.remove(this,key);
});
}
});
jQuery.extend({
queue:function(elem,type,data){
var queue;
if(elem){
type=(type||"fx")+"queue";
queue=dataPriv.get(elem,type);
if(data){
if(!queue||jQuery.isArray(data)){
queue=dataPriv.access(elem,type,jQuery.makeArray(data));
}else{
queue.push(data);
}
}
return queue||[];
}
},
dequeue:function(elem,type){
type=type||"fx";
var queue=jQuery.queue(elem,type),
startLength=queue.length,
fn=queue.shift(),
hooks=jQuery._queueHooks(elem,type),
next=function(){
jQuery.dequeue(elem,type);
};
if(fn==="inprogress"){
fn=queue.shift();
startLength--;
}
if(fn){
if(type==="fx"){
queue.unshift("inprogress");
}
delete hooks.stop;
fn.call(elem,next,hooks);
}
if(!startLength&&hooks){
hooks.empty.fire();
}
},
_queueHooks:function(elem,type){
var key=type+"queueHooks";
return dataPriv.get(elem,key)||dataPriv.access(elem,key,{
empty:jQuery.Callbacks("once memory").add(function(){
dataPriv.remove(elem,[type+"queue",key]);
})
});
}
});
jQuery.fn.extend({
queue:function(type,data){
var setter=2;
if(typeof type!=="string"){
data=type;
type="fx";
setter--;
}
if(arguments.length<setter){
return jQuery.queue(this[0],type);
}
return data===undefined?
this:
this.each(function(){
var queue=jQuery.queue(this,type,data);
jQuery._queueHooks(this,type);
if(type==="fx"&&queue[0]!=="inprogress"){
jQuery.dequeue(this,type);
}
});
},
dequeue:function(type){
return this.each(function(){
jQuery.dequeue(this,type);
});
},
clearQueue:function(type){
return this.queue(type||"fx",[]);
},
promise:function(type,obj){
var tmp,
count=1,
defer=jQuery.Deferred(),
elements=this,
i=this.length,
resolve=function(){
if(!(--count)){
defer.resolveWith(elements,[elements]);
}
};
if(typeof type!=="string"){
obj=type;
type=undefined;
}
type=type||"fx";
while(i--){
tmp=dataPriv.get(elements[i],type+"queueHooks");
if(tmp&&tmp.empty){
count++;
tmp.empty.add(resolve);
}
}
resolve();
return defer.promise(obj);
}
});
var pnum=(/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
var rcssNum=new RegExp("^(?:([+-])=|)("+pnum+")([a-z%]*)$","i");
var cssExpand=["Top","Right","Bottom","Left"];
var isHidden=function(elem,el){
elem=el||elem;
return jQuery.css(elem,"display")==="none"||
!jQuery.contains(elem.ownerDocument,elem);
};
function adjustCSS(elem,prop,valueParts,tween){
var adjusted,
scale=1,
maxIterations=20,
currentValue=tween?
function(){return tween.cur();}:
function(){return jQuery.css(elem,prop,"");},
initial=currentValue(),
unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?"":"px"),
initialInUnit=(jQuery.cssNumber[prop]||unit!=="px"&&+initial)&&
rcssNum.exec(jQuery.css(elem,prop));
if(initialInUnit&&initialInUnit[3]!==unit){
unit=unit||initialInUnit[3];
valueParts=valueParts||[];
initialInUnit=+initial||1;
do{
scale=scale||".5";
initialInUnit=initialInUnit/scale;
jQuery.style(elem,prop,initialInUnit+unit);
}while(
scale!==(scale=currentValue()/initial)&&scale!==1&&--maxIterations
);
}
if(valueParts){
initialInUnit=+initialInUnit||+initial||0;
adjusted=valueParts[1]?
initialInUnit+(valueParts[1]+1)*valueParts[2]:
+valueParts[2];
if(tween){
tween.unit=unit;
tween.start=initialInUnit;
tween.end=adjusted;
}
}
return adjusted;
}
var rcheckableType=(/^(?:checkbox|radio)$/i);
var rtagName=(/<([\w:-]+)/);
var rscriptType=(/^$|\/(?:java|ecma)script/i);
var wrapMap={
option:[1,"<select multiple='multiple'>","</select>"],
thead:[1,"<table>","</table>"],
col:[2,"<table><colgroup>","</colgroup></table>"],
tr:[2,"<table><tbody>","</tbody></table>"],
td:[3,"<table><tbody><tr>","</tr></tbody></table>"],
_default:[0,"",""]
};
wrapMap.optgroup=wrapMap.option;
wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;
wrapMap.th=wrapMap.td;
function getAll(context,tag){
var ret=typeof context.getElementsByTagName!=="undefined"?
context.getElementsByTagName(tag||"*"):
typeof context.querySelectorAll!=="undefined"?
context.querySelectorAll(tag||"*"):
[];
return tag===undefined||tag&&jQuery.nodeName(context,tag)?
jQuery.merge([context],ret):
ret;
}
function setGlobalEval(elems,refElements){
var i=0,
l=elems.length;
for(;i<l;i++){
dataPriv.set(
elems[i],
"globalEval",
!refElements||dataPriv.get(refElements[i],"globalEval")
);
}
}
var rhtml=/<|&#?\w+;/;
function buildFragment(elems,context,scripts,selection,ignored){
var elem,tmp,tag,wrap,contains,j,
fragment=context.createDocumentFragment(),
nodes=[],
i=0,
l=elems.length;
for(;i<l;i++){
elem=elems[i];
if(elem||elem===0){
if(jQuery.type(elem)==="object"){
jQuery.merge(nodes,elem.nodeType?[elem]:elem);
}else if(!rhtml.test(elem)){
nodes.push(context.createTextNode(elem));
}else{
tmp=tmp||fragment.appendChild(context.createElement("div"));
tag=(rtagName.exec(elem)||["",""])[1].toLowerCase();
wrap=wrapMap[tag]||wrapMap._default;
tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];
j=wrap[0];
while(j--){
tmp=tmp.lastChild;
}
jQuery.merge(nodes,tmp.childNodes);
tmp=fragment.firstChild;
tmp.textContent="";
}
}
}
fragment.textContent="";
i=0;
while((elem=nodes[i++])){
if(selection&&jQuery.inArray(elem,selection)>-1){
if(ignored){
ignored.push(elem);
}
continue;
}
contains=jQuery.contains(elem.ownerDocument,elem);
tmp=getAll(fragment.appendChild(elem),"script");
if(contains){
setGlobalEval(tmp);
}
if(scripts){
j=0;
while((elem=tmp[j++])){
if(rscriptType.test(elem.type||"")){
scripts.push(elem);
}
}
}
}
return fragment;
}
(function(){
var fragment=document.createDocumentFragment(),
div=fragment.appendChild(document.createElement("div")),
input=document.createElement("input");
input.setAttribute("type","radio");
input.setAttribute("checked","checked");
input.setAttribute("name","t");
div.appendChild(input);
support.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;
div.innerHTML="<textarea>x</textarea>";
support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;
})();
var
rkeyEvent=/^key/,
rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,
rtypenamespace=/^([^.]*)(?:\.(.+)|)/;
function returnTrue(){
return true;
}
function returnFalse(){
return false;
}
function safeActiveElement(){
try{
return document.activeElement;
}catch(err){}
}
function on(elem,types,selector,data,fn,one){
var origFn,type;
if(typeof types==="object"){
if(typeof selector!=="string"){
data=data||selector;
selector=undefined;
}
for(type in types){
on(elem,type,selector,data,types[type],one);
}
return elem;
}
if(data==null&&fn==null){
fn=selector;
data=selector=undefined;
}else if(fn==null){
if(typeof selector==="string"){
fn=data;
data=undefined;
}else{
fn=data;
data=selector;
selector=undefined;
}
}
if(fn===false){
fn=returnFalse;
}else if(!fn){
return elem;
}
if(one===1){
origFn=fn;
fn=function(event){
jQuery().off(event);
return origFn.apply(this,arguments);
};
fn.guid=origFn.guid||(origFn.guid=jQuery.guid++);
}
return elem.each(function(){
jQuery.event.add(this,types,fn,data,selector);
});
}
jQuery.event={
global:{},
add:function(elem,types,handler,data,selector){
var handleObjIn,eventHandle,tmp,
events,t,handleObj,
special,handlers,type,namespaces,origType,
elemData=dataPriv.get(elem);
if(!elemData){
return;
}
if(handler.handler){
handleObjIn=handler;
handler=handleObjIn.handler;
selector=handleObjIn.selector;
}
if(!handler.guid){
handler.guid=jQuery.guid++;
}
if(!(events=elemData.events)){
events=elemData.events={};
}
if(!(eventHandle=elemData.handle)){
eventHandle=elemData.handle=function(e){
return typeof jQuery!=="undefined"&&jQuery.event.triggered!==e.type?
jQuery.event.dispatch.apply(elem,arguments):undefined;
};
}
types=(types||"").match(rnotwhite)||[""];
t=types.length;
while(t--){
tmp=rtypenamespace.exec(types[t])||[];
type=origType=tmp[1];
namespaces=(tmp[2]||"").split(".").sort();
if(!type){
continue;
}
special=jQuery.event.special[type]||{};
type=(selector?special.delegateType:special.bindType)||type;
special=jQuery.event.special[type]||{};
handleObj=jQuery.extend({
type:type,
origType:origType,
data:data,
handler:handler,
guid:handler.guid,
selector:selector,
needsContext:selector&&jQuery.expr.match.needsContext.test(selector),
namespace:namespaces.join(".")
},handleObjIn);
if(!(handlers=events[type])){
handlers=events[type]=[];
handlers.delegateCount=0;
if(!special.setup||
special.setup.call(elem,data,namespaces,eventHandle)===false){
if(elem.addEventListener){
elem.addEventListener(type,eventHandle);
}
}
}
if(special.add){
special.add.call(elem,handleObj);
if(!handleObj.handler.guid){
handleObj.handler.guid=handler.guid;
}
}
if(selector){
handlers.splice(handlers.delegateCount++,0,handleObj);
}else{
handlers.push(handleObj);
}
jQuery.event.global[type]=true;
}
},
remove:function(elem,types,handler,selector,mappedTypes){
var j,origCount,tmp,
events,t,handleObj,
special,handlers,type,namespaces,origType,
elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);
if(!elemData||!(events=elemData.events)){
return;
}
types=(types||"").match(rnotwhite)||[""];
t=types.length;
while(t--){
tmp=rtypenamespace.exec(types[t])||[];
type=origType=tmp[1];
namespaces=(tmp[2]||"").split(".").sort();
if(!type){
for(type in events){
jQuery.event.remove(elem,type+types[t],handler,selector,true);
}
continue;
}
special=jQuery.event.special[type]||{};
type=(selector?special.delegateType:special.bindType)||type;
handlers=events[type]||[];
tmp=tmp[2]&&
new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)");
origCount=j=handlers.length;
while(j--){
handleObj=handlers[j];
if((mappedTypes||origType===handleObj.origType)&&
(!handler||handler.guid===handleObj.guid)&&
(!tmp||tmp.test(handleObj.namespace))&&
(!selector||selector===handleObj.selector||
selector==="**"&&handleObj.selector)){
handlers.splice(j,1);
if(handleObj.selector){
handlers.delegateCount--;
}
if(special.remove){
special.remove.call(elem,handleObj);
}
}
}
if(origCount&&!handlers.length){
if(!special.teardown||
special.teardown.call(elem,namespaces,elemData.handle)===false){
jQuery.removeEvent(elem,type,elemData.handle);
}
delete events[type];
}
}
if(jQuery.isEmptyObject(events)){
dataPriv.remove(elem,"handle events");
}
},
dispatch:function(event){
event=jQuery.event.fix(event);
var i,j,ret,matched,handleObj,
handlerQueue=[],
args=slice.call(arguments),
handlers=(dataPriv.get(this,"events")||{})[event.type]||[],
special=jQuery.event.special[event.type]||{};
args[0]=event;
event.delegateTarget=this;
if(special.preDispatch&&special.preDispatch.call(this,event)===false){
return;
}
handlerQueue=jQuery.event.handlers.call(this,event,handlers);
i=0;
while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){
event.currentTarget=matched.elem;
j=0;
while((handleObj=matched.handlers[j++])&&
!event.isImmediatePropagationStopped()){
if(!event.rnamespace||event.rnamespace.test(handleObj.namespace)){
event.handleObj=handleObj;
event.data=handleObj.data;
ret=((jQuery.event.special[handleObj.origType]||{}).handle||
handleObj.handler).apply(matched.elem,args);
if(ret!==undefined){
if((event.result=ret)===false){
event.preventDefault();
event.stopPropagation();
}
}
}
}
}
if(special.postDispatch){
special.postDispatch.call(this,event);
}
return event.result;
},
handlers:function(event,handlers){
var i,matches,sel,handleObj,
handlerQueue=[],
delegateCount=handlers.delegateCount,
cur=event.target;
if(delegateCount&&cur.nodeType&&
(event.type!=="click"||isNaN(event.button)||event.button<1)){
for(;cur!==this;cur=cur.parentNode||this){
if(cur.nodeType===1&&(cur.disabled!==true||event.type!=="click")){
matches=[];
for(i=0;i<delegateCount;i++){
handleObj=handlers[i];
sel=handleObj.selector+" ";
if(matches[sel]===undefined){
matches[sel]=handleObj.needsContext?
jQuery(sel,this).index(cur)>-1:
jQuery.find(sel,this,null,[cur]).length;
}
if(matches[sel]){
matches.push(handleObj);
}
}
if(matches.length){
handlerQueue.push({elem:cur,handlers:matches});
}
}
}
}
if(delegateCount<handlers.length){
handlerQueue.push({elem:this,handlers:handlers.slice(delegateCount)});
}
return handlerQueue;
},
props:("altKey bubbles cancelable ctrlKey currentTarget detail eventPhase "+
"metaKey relatedTarget shiftKey target timeStamp view which").split(" "),
fixHooks:{},
keyHooks:{
props:"char charCode key keyCode".split(" "),
filter:function(event,original){
if(event.which==null){
event.which=original.charCode!=null?original.charCode:original.keyCode;
}
return event;
}
},
mouseHooks:{
props:("button buttons clientX clientY offsetX offsetY pageX pageY "+
"screenX screenY toElement").split(" "),
filter:function(event,original){
var eventDoc,doc,body,
button=original.button;
if(event.pageX==null&&original.clientX!=null){
eventDoc=event.target.ownerDocument||document;
doc=eventDoc.documentElement;
body=eventDoc.body;
event.pageX=original.clientX+
(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-
(doc&&doc.clientLeft||body&&body.clientLeft||0);
event.pageY=original.clientY+
(doc&&doc.scrollTop||body&&body.scrollTop||0)-
(doc&&doc.clientTop||body&&body.clientTop||0);
}
if(!event.which&&button!==undefined){
event.which=(button&1?1:(button&2?3:(button&4?2:0)));
}
return event;
}
},
fix:function(event){
if(event[jQuery.expando]){
return event;
}
var i,prop,copy,
type=event.type,
originalEvent=event,
fixHook=this.fixHooks[type];
if(!fixHook){
this.fixHooks[type]=fixHook=
rmouseEvent.test(type)?this.mouseHooks:
rkeyEvent.test(type)?this.keyHooks:
{};
}
copy=fixHook.props?this.props.concat(fixHook.props):this.props;
event=new jQuery.Event(originalEvent);
i=copy.length;
while(i--){
prop=copy[i];
event[prop]=originalEvent[prop];
}
if(!event.target){
event.target=document;
}
if(event.target.nodeType===3){
event.target=event.target.parentNode;
}
return fixHook.filter?fixHook.filter(event,originalEvent):event;
},
special:{
load:{
noBubble:true
},
focus:{
trigger:function(){
if(this!==safeActiveElement()&&this.focus){
this.focus();
return false;
}
},
delegateType:"focusin"
},
blur:{
trigger:function(){
if(this===safeActiveElement()&&this.blur){
this.blur();
return false;
}
},
delegateType:"focusout"
},
click:{
trigger:function(){
if(this.type==="checkbox"&&this.click&&jQuery.nodeName(this,"input")){
this.click();
return false;
}
},
_default:function(event){
return jQuery.nodeName(event.target,"a");
}
},
beforeunload:{
postDispatch:function(event){
if(event.result!==undefined&&event.originalEvent){
event.originalEvent.returnValue=event.result;
}
}
}
}
};
jQuery.removeEvent=function(elem,type,handle){
if(elem.removeEventListener){
elem.removeEventListener(type,handle);
}
};
jQuery.Event=function(src,props){
if(!(this instanceof jQuery.Event)){
return new jQuery.Event(src,props);
}
if(src&&src.type){
this.originalEvent=src;
this.type=src.type;
this.isDefaultPrevented=src.defaultPrevented||
src.defaultPrevented===undefined&&
src.returnValue===false?
returnTrue:
returnFalse;
}else{
this.type=src;
}
if(props){
jQuery.extend(this,props);
}
this.timeStamp=src&&src.timeStamp||jQuery.now();
this[jQuery.expando]=true;
};
jQuery.Event.prototype={
constructor:jQuery.Event,
isDefaultPrevented:returnFalse,
isPropagationStopped:returnFalse,
isImmediatePropagationStopped:returnFalse,
isSimulated:false,
preventDefault:function(){
var e=this.originalEvent;
this.isDefaultPrevented=returnTrue;
if(e&&!this.isSimulated){
e.preventDefault();
}
},
stopPropagation:function(){
var e=this.originalEvent;
this.isPropagationStopped=returnTrue;
if(e&&!this.isSimulated){
e.stopPropagation();
}
},
stopImmediatePropagation:function(){
var e=this.originalEvent;
this.isImmediatePropagationStopped=returnTrue;
if(e&&!this.isSimulated){
e.stopImmediatePropagation();
}
this.stopPropagation();
}
};
jQuery.each({
mouseenter:"mouseover",
mouseleave:"mouseout",
pointerenter:"pointerover",
pointerleave:"pointerout"
},function(orig,fix){
jQuery.event.special[orig]={
delegateType:fix,
bindType:fix,
handle:function(event){
var ret,
target=this,
related=event.relatedTarget,
handleObj=event.handleObj;
if(!related||(related!==target&&!jQuery.contains(target,related))){
event.type=handleObj.origType;
ret=handleObj.handler.apply(this,arguments);
event.type=fix;
}
return ret;
}
};
});
jQuery.fn.extend({
on:function(types,selector,data,fn){
return on(this,types,selector,data,fn);
},
one:function(types,selector,data,fn){
return on(this,types,selector,data,fn,1);
},
off:function(types,selector,fn){
var handleObj,type;
if(types&&types.preventDefault&&types.handleObj){
handleObj=types.handleObj;
jQuery(types.delegateTarget).off(
handleObj.namespace?
handleObj.origType+"."+handleObj.namespace:
handleObj.origType,
handleObj.selector,
handleObj.handler
);
return this;
}
if(typeof types==="object"){
for(type in types){
this.off(type,selector,types[type]);
}
return this;
}
if(selector===false||typeof selector==="function"){
fn=selector;
selector=undefined;
}
if(fn===false){
fn=returnFalse;
}
return this.each(function(){
jQuery.event.remove(this,types,fn,selector);
});
}
});
var
rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
rnoInnerhtml=/<script|<style|<link/i,
rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,
rscriptTypeMasked=/^true\/(.*)/,
rcleanScript=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
function manipulationTarget(elem,content){
return jQuery.nodeName(elem,"table")&&
jQuery.nodeName(content.nodeType!==11?content:content.firstChild,"tr")?
elem.getElementsByTagName("tbody")[0]||
elem.appendChild(elem.ownerDocument.createElement("tbody")):
elem;
}
function disableScript(elem){
elem.type=(elem.getAttribute("type")!==null)+"/"+elem.type;
return elem;
}
function restoreScript(elem){
var match=rscriptTypeMasked.exec(elem.type);
if(match){
elem.type=match[1];
}else{
elem.removeAttribute("type");
}
return elem;
}
function cloneCopyEvent(src,dest){
var i,l,type,pdataOld,pdataCur,udataOld,udataCur,events;
if(dest.nodeType!==1){
return;
}
if(dataPriv.hasData(src)){
pdataOld=dataPriv.access(src);
pdataCur=dataPriv.set(dest,pdataOld);
events=pdataOld.events;
if(events){
delete pdataCur.handle;
pdataCur.events={};
for(type in events){
for(i=0,l=events[type].length;i<l;i++){
jQuery.event.add(dest,type,events[type][i]);
}
}
}
}
if(dataUser.hasData(src)){
udataOld=dataUser.access(src);
udataCur=jQuery.extend({},udataOld);
dataUser.set(dest,udataCur);
}
}
function fixInput(src,dest){
var nodeName=dest.nodeName.toLowerCase();
if(nodeName==="input"&&rcheckableType.test(src.type)){
dest.checked=src.checked;
}else if(nodeName==="input"||nodeName==="textarea"){
dest.defaultValue=src.defaultValue;
}
}
function domManip(collection,args,callback,ignored){
args=concat.apply([],args);
var fragment,first,scripts,hasScripts,node,doc,
i=0,
l=collection.length,
iNoClone=l-1,
value=args[0],
isFunction=jQuery.isFunction(value);
if(isFunction||
(l>1&&typeof value==="string"&&
!support.checkClone&&rchecked.test(value))){
return collection.each(function(index){
var self=collection.eq(index);
if(isFunction){
args[0]=value.call(this,index,self.html());
}
domManip(self,args,callback,ignored);
});
}
if(l){
fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);
first=fragment.firstChild;
if(fragment.childNodes.length===1){
fragment=first;
}
if(first||ignored){
scripts=jQuery.map(getAll(fragment,"script"),disableScript);
hasScripts=scripts.length;
for(;i<l;i++){
node=fragment;
if(i!==iNoClone){
node=jQuery.clone(node,true,true);
if(hasScripts){
jQuery.merge(scripts,getAll(node,"script"));
}
}
callback.call(collection[i],node,i);
}
if(hasScripts){
doc=scripts[scripts.length-1].ownerDocument;
jQuery.map(scripts,restoreScript);
for(i=0;i<hasScripts;i++){
node=scripts[i];
if(rscriptType.test(node.type||"")&&
!dataPriv.access(node,"globalEval")&&
jQuery.contains(doc,node)){
if(node.src){
if(jQuery._evalUrl){
jQuery._evalUrl(node.src);
}
}else{
jQuery.globalEval(node.textContent.replace(rcleanScript,""));
}
}
}
}
}
}
return collection;
}
function remove(elem,selector,keepData){
var node,
nodes=selector?jQuery.filter(selector,elem):elem,
i=0;
for(;(node=nodes[i])!=null;i++){
if(!keepData&&node.nodeType===1){
jQuery.cleanData(getAll(node));
}
if(node.parentNode){
if(keepData&&jQuery.contains(node.ownerDocument,node)){
setGlobalEval(getAll(node,"script"));
}
node.parentNode.removeChild(node);
}
}
return elem;
}
jQuery.extend({
htmlPrefilter:function(html){
return html.replace(rxhtmlTag,"<$1></$2>");
},
clone:function(elem,dataAndEvents,deepDataAndEvents){
var i,l,srcElements,destElements,
clone=elem.cloneNode(true),
inPage=jQuery.contains(elem.ownerDocument,elem);
if(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&
!jQuery.isXMLDoc(elem)){
destElements=getAll(clone);
srcElements=getAll(elem);
for(i=0,l=srcElements.length;i<l;i++){
fixInput(srcElements[i],destElements[i]);
}
}
if(dataAndEvents){
if(deepDataAndEvents){
srcElements=srcElements||getAll(elem);
destElements=destElements||getAll(clone);
for(i=0,l=srcElements.length;i<l;i++){
cloneCopyEvent(srcElements[i],destElements[i]);
}
}else{
cloneCopyEvent(elem,clone);
}
}
destElements=getAll(clone,"script");
if(destElements.length>0){
setGlobalEval(destElements,!inPage&&getAll(elem,"script"));
}
return clone;
},
cleanData:function(elems){
var data,elem,type,
special=jQuery.event.special,
i=0;
for(;(elem=elems[i])!==undefined;i++){
if(acceptData(elem)){
if((data=elem[dataPriv.expando])){
if(data.events){
for(type in data.events){
if(special[type]){
jQuery.event.remove(elem,type);
}else{
jQuery.removeEvent(elem,type,data.handle);
}
}
}
elem[dataPriv.expando]=undefined;
}
if(elem[dataUser.expando]){
elem[dataUser.expando]=undefined;
}
}
}
}
});
jQuery.fn.extend({
domManip:domManip,
detach:function(selector){
return remove(this,selector,true);
},
remove:function(selector){
return remove(this,selector);
},
text:function(value){
return access(this,function(value){
return value===undefined?
jQuery.text(this):
this.empty().each(function(){
if(this.nodeType===1||this.nodeType===11||this.nodeType===9){
this.textContent=value;
}
});
},null,value,arguments.length);
},
append:function(){
return domManip(this,arguments,function(elem){
if(this.nodeType===1||this.nodeType===11||this.nodeType===9){
var target=manipulationTarget(this,elem);
target.appendChild(elem);
}
});
},
prepend:function(){
return domManip(this,arguments,function(elem){
if(this.nodeType===1||this.nodeType===11||this.nodeType===9){
var target=manipulationTarget(this,elem);
target.insertBefore(elem,target.firstChild);
}
});
},
before:function(){
return domManip(this,arguments,function(elem){
if(this.parentNode){
this.parentNode.insertBefore(elem,this);
}
});
},
after:function(){
return domManip(this,arguments,function(elem){
if(this.parentNode){
this.parentNode.insertBefore(elem,this.nextSibling);
}
});
},
empty:function(){
var elem,
i=0;
for(;(elem=this[i])!=null;i++){
if(elem.nodeType===1){
jQuery.cleanData(getAll(elem,false));
elem.textContent="";
}
}
return this;
},
clone:function(dataAndEvents,deepDataAndEvents){
dataAndEvents=dataAndEvents==null?false:dataAndEvents;
deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;
return this.map(function(){
return jQuery.clone(this,dataAndEvents,deepDataAndEvents);
});
},
html:function(value){
return access(this,function(value){
var elem=this[0]||{},
i=0,
l=this.length;
if(value===undefined&&elem.nodeType===1){
return elem.innerHTML;
}
if(typeof value==="string"&&!rnoInnerhtml.test(value)&&
!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){
value=jQuery.htmlPrefilter(value);
try{
for(;i<l;i++){
elem=this[i]||{};
if(elem.nodeType===1){
jQuery.cleanData(getAll(elem,false));
elem.innerHTML=value;
}
}
elem=0;
}catch(e){}
}
if(elem){
this.empty().append(value);
}
},null,value,arguments.length);
},
replaceWith:function(){
var ignored=[];
return domManip(this,arguments,function(elem){
var parent=this.parentNode;
if(jQuery.inArray(this,ignored)<0){
jQuery.cleanData(getAll(this));
if(parent){
parent.replaceChild(elem,this);
}
}
},ignored);
}
});
jQuery.each({
appendTo:"append",
prependTo:"prepend",
insertBefore:"before",
insertAfter:"after",
replaceAll:"replaceWith"
},function(name,original){
jQuery.fn[name]=function(selector){
var elems,
ret=[],
insert=jQuery(selector),
last=insert.length-1,
i=0;
for(;i<=last;i++){
elems=i===last?this:this.clone(true);
jQuery(insert[i])[original](elems);
push.apply(ret,elems.get());
}
return this.pushStack(ret);
};
});
var iframe,
elemdisplay={
HTML:"block",
BODY:"block"
};
function actualDisplay(name,doc){
var elem=jQuery(doc.createElement(name)).appendTo(doc.body),
display=jQuery.css(elem[0],"display");
elem.detach();
return display;
}
function defaultDisplay(nodeName){
var doc=document,
display=elemdisplay[nodeName];
if(!display){
display=actualDisplay(nodeName,doc);
if(display==="none"||!display){
iframe=(iframe||jQuery("<iframe frameborder='0' width='0' height='0'/>"))
.appendTo(doc.documentElement);
doc=iframe[0].contentDocument;
doc.write();
doc.close();
display=actualDisplay(nodeName,doc);
iframe.detach();
}
elemdisplay[nodeName]=display;
}
return display;
}
var rmargin=(/^margin/);
var rnumnonpx=new RegExp("^("+pnum+")(?!px)[a-z%]+$","i");
var getStyles=function(elem){
var view=elem.ownerDocument.defaultView;
if(!view||!view.opener){
view=window;
}
return view.getComputedStyle(elem);
};
var swap=function(elem,options,callback,args){
var ret,name,
old={};
for(name in options){
old[name]=elem.style[name];
elem.style[name]=options[name];
}
ret=callback.apply(elem,args||[]);
for(name in options){
elem.style[name]=old[name];
}
return ret;
};
var documentElement=document.documentElement;
(function(){
var pixelPositionVal,boxSizingReliableVal,pixelMarginRightVal,reliableMarginLeftVal,
container=document.createElement("div"),
div=document.createElement("div");
if(!div.style){
return;
}
div.style.backgroundClip="content-box";
div.cloneNode(true).style.backgroundClip="";
support.clearCloneStyle=div.style.backgroundClip==="content-box";
container.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;"+
"padding:0;margin-top:1px;position:absolute";
container.appendChild(div);
function computeStyleTests(){
div.style.cssText=
"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;"+
"position:relative;display:block;"+
"margin:auto;border:1px;padding:1px;"+
"top:1%;width:50%";
div.innerHTML="";
documentElement.appendChild(container);
var divStyle=window.getComputedStyle(div);
pixelPositionVal=divStyle.top!=="1%";
reliableMarginLeftVal=divStyle.marginLeft==="2px";
boxSizingReliableVal=divStyle.width==="4px";
div.style.marginRight="50%";
pixelMarginRightVal=divStyle.marginRight==="4px";
documentElement.removeChild(container);
}
jQuery.extend(support,{
pixelPosition:function(){
computeStyleTests();
return pixelPositionVal;
},
boxSizingReliable:function(){
if(boxSizingReliableVal==null){
computeStyleTests();
}
return boxSizingReliableVal;
},
pixelMarginRight:function(){
if(boxSizingReliableVal==null){
computeStyleTests();
}
return pixelMarginRightVal;
},
reliableMarginLeft:function(){
if(boxSizingReliableVal==null){
computeStyleTests();
}
return reliableMarginLeftVal;
},
reliableMarginRight:function(){
var ret,
marginDiv=div.appendChild(document.createElement("div"));
marginDiv.style.cssText=div.style.cssText=
"-webkit-box-sizing:content-box;box-sizing:content-box;"+
"display:block;margin:0;border:0;padding:0";
marginDiv.style.marginRight=marginDiv.style.width="0";
div.style.width="1px";
documentElement.appendChild(container);
ret=!parseFloat(window.getComputedStyle(marginDiv).marginRight);
documentElement.removeChild(container);
div.removeChild(marginDiv);
return ret;
}
});
})();
function curCSS(elem,name,computed){
var width,minWidth,maxWidth,ret,
style=elem.style;
computed=computed||getStyles(elem);
ret=computed?computed.getPropertyValue(name)||computed[name]:undefined;
if((ret===""||ret===undefined)&&!jQuery.contains(elem.ownerDocument,elem)){
ret=jQuery.style(elem,name);
}
if(computed){
if(!support.pixelMarginRight()&&rnumnonpx.test(ret)&&rmargin.test(name)){
width=style.width;
minWidth=style.minWidth;
maxWidth=style.maxWidth;
style.minWidth=style.maxWidth=style.width=ret;
ret=computed.width;
style.width=width;
style.minWidth=minWidth;
style.maxWidth=maxWidth;
}
}
return ret!==undefined?
ret+"":
ret;
}
function addGetHookIf(conditionFn,hookFn){
return{
get:function(){
if(conditionFn()){
delete this.get;
return;
}
return(this.get=hookFn).apply(this,arguments);
}
};
}
var
rdisplayswap=/^(none|table(?!-c[ea]).+)/,
cssShow={position:"absolute",visibility:"hidden",display:"block"},
cssNormalTransform={
letterSpacing:"0",
fontWeight:"400"
},
cssPrefixes=["Webkit","O","Moz","ms"],
emptyStyle=document.createElement("div").style;
function vendorPropName(name){
if(name in emptyStyle){
return name;
}
var capName=name[0].toUpperCase()+name.slice(1),
i=cssPrefixes.length;
while(i--){
name=cssPrefixes[i]+capName;
if(name in emptyStyle){
return name;
}
}
}
function setPositiveNumber(elem,value,subtract){
var matches=rcssNum.exec(value);
return matches?
Math.max(0,matches[2]-(subtract||0))+(matches[3]||"px"):
value;
}
function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){
var i=extra===(isBorderBox?"border":"content")?
4:
name==="width"?1:0,
val=0;
for(;i<4;i+=2){
if(extra==="margin"){
val+=jQuery.css(elem,extra+cssExpand[i],true,styles);
}
if(isBorderBox){
if(extra==="content"){
val-=jQuery.css(elem,"padding"+cssExpand[i],true,styles);
}
if(extra!=="margin"){
val-=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);
}
}else{
val+=jQuery.css(elem,"padding"+cssExpand[i],true,styles);
if(extra!=="padding"){
val+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);
}
}
}
return val;
}
function getWidthOrHeight(elem,name,extra){
var valueIsBorderBox=true,
val=name==="width"?elem.offsetWidth:elem.offsetHeight,
styles=getStyles(elem),
isBorderBox=jQuery.css(elem,"boxSizing",false,styles)==="border-box";
if(val<=0||val==null){
val=curCSS(elem,name,styles);
if(val<0||val==null){
val=elem.style[name];
}
if(rnumnonpx.test(val)){
return val;
}
valueIsBorderBox=isBorderBox&&
(support.boxSizingReliable()||val===elem.style[name]);
val=parseFloat(val)||0;
}
return(val+
augmentWidthOrHeight(
elem,
name,
extra||(isBorderBox?"border":"content"),
valueIsBorderBox,
styles
)
)+"px";
}
function showHide(elements,show){
var display,elem,hidden,
values=[],
index=0,
length=elements.length;
for(;index<length;index++){
elem=elements[index];
if(!elem.style){
continue;
}
values[index]=dataPriv.get(elem,"olddisplay");
display=elem.style.display;
if(show){
if(!values[index]&&display==="none"){
elem.style.display="";
}
if(elem.style.display===""&&isHidden(elem)){
values[index]=dataPriv.access(
elem,
"olddisplay",
defaultDisplay(elem.nodeName)
);
}
}else{
hidden=isHidden(elem);
if(display!=="none"||!hidden){
dataPriv.set(
elem,
"olddisplay",
hidden?display:jQuery.css(elem,"display")
);
}
}
}
for(index=0;index<length;index++){
elem=elements[index];
if(!elem.style){
continue;
}
if(!show||elem.style.display==="none"||elem.style.display===""){
elem.style.display=show?values[index]||"":"none";
}
}
return elements;
}
jQuery.extend({
cssHooks:{
opacity:{
get:function(elem,computed){
if(computed){
var ret=curCSS(elem,"opacity");
return ret===""?"1":ret;
}
}
}
},
cssNumber:{
"animationIterationCount":true,
"columnCount":true,
"fillOpacity":true,
"flexGrow":true,
"flexShrink":true,
"fontWeight":true,
"lineHeight":true,
"opacity":true,
"order":true,
"orphans":true,
"widows":true,
"zIndex":true,
"zoom":true
},
cssProps:{
"float":"cssFloat"
},
style:function(elem,name,value,extra){
if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){
return;
}
var ret,type,hooks,
origName=jQuery.camelCase(name),
style=elem.style;
name=jQuery.cssProps[origName]||
(jQuery.cssProps[origName]=vendorPropName(origName)||origName);
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];
if(value!==undefined){
type=typeof value;
if(type==="string"&&(ret=rcssNum.exec(value))&&ret[1]){
value=adjustCSS(elem,name,ret);
type="number";
}
if(value==null||value!==value){
return;
}
if(type==="number"){
value+=ret&&ret[3]||(jQuery.cssNumber[origName]?"":"px");
}
if(!support.clearCloneStyle&&value===""&&name.indexOf("background")===0){
style[name]="inherit";
}
if(!hooks||!("set"in hooks)||
(value=hooks.set(elem,value,extra))!==undefined){
style[name]=value;
}
}else{
if(hooks&&"get"in hooks&&
(ret=hooks.get(elem,false,extra))!==undefined){
return ret;
}
return style[name];
}
},
css:function(elem,name,extra,styles){
var val,num,hooks,
origName=jQuery.camelCase(name);
name=jQuery.cssProps[origName]||
(jQuery.cssProps[origName]=vendorPropName(origName)||origName);
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];
if(hooks&&"get"in hooks){
val=hooks.get(elem,true,extra);
}
if(val===undefined){
val=curCSS(elem,name,styles);
}
if(val==="normal"&&name in cssNormalTransform){
val=cssNormalTransform[name];
}
if(extra===""||extra){
num=parseFloat(val);
return extra===true||isFinite(num)?num||0:val;
}
return val;
}
});
jQuery.each(["height","width"],function(i,name){
jQuery.cssHooks[name]={
get:function(elem,computed,extra){
if(computed){
return rdisplayswap.test(jQuery.css(elem,"display"))&&
elem.offsetWidth===0?
swap(elem,cssShow,function(){
return getWidthOrHeight(elem,name,extra);
}):
getWidthOrHeight(elem,name,extra);
}
},
set:function(elem,value,extra){
var matches,
styles=extra&&getStyles(elem),
subtract=extra&&augmentWidthOrHeight(
elem,
name,
extra,
jQuery.css(elem,"boxSizing",false,styles)==="border-box",
styles
);
if(subtract&&(matches=rcssNum.exec(value))&&
(matches[3]||"px")!=="px"){
elem.style[name]=value;
value=jQuery.css(elem,name);
}
return setPositiveNumber(elem,value,subtract);
}
};
});
jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,
function(elem,computed){
if(computed){
return(parseFloat(curCSS(elem,"marginLeft"))||
elem.getBoundingClientRect().left-
swap(elem,{marginLeft:0},function(){
return elem.getBoundingClientRect().left;
})
)+"px";
}
}
);
jQuery.cssHooks.marginRight=addGetHookIf(support.reliableMarginRight,
function(elem,computed){
if(computed){
return swap(elem,{"display":"inline-block"},
curCSS,[elem,"marginRight"]);
}
}
);
jQuery.each({
margin:"",
padding:"",
border:"Width"
},function(prefix,suffix){
jQuery.cssHooks[prefix+suffix]={
expand:function(value){
var i=0,
expanded={},
parts=typeof value==="string"?value.split(" "):[value];
for(;i<4;i++){
expanded[prefix+cssExpand[i]+suffix]=
parts[i]||parts[i-2]||parts[0];
}
return expanded;
}
};
if(!rmargin.test(prefix)){
jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;
}
});
jQuery.fn.extend({
css:function(name,value){
return access(this,function(elem,name,value){
var styles,len,
map={},
i=0;
if(jQuery.isArray(name)){
styles=getStyles(elem);
len=name.length;
for(;i<len;i++){
map[name[i]]=jQuery.css(elem,name[i],false,styles);
}
return map;
}
return value!==undefined?
jQuery.style(elem,name,value):
jQuery.css(elem,name);
},name,value,arguments.length>1);
},
show:function(){
return showHide(this,true);
},
hide:function(){
return showHide(this);
},
toggle:function(state){
if(typeof state==="boolean"){
return state?this.show():this.hide();
}
return this.each(function(){
if(isHidden(this)){
jQuery(this).show();
}else{
jQuery(this).hide();
}
});
}
});
function Tween(elem,options,prop,end,easing){
return new Tween.prototype.init(elem,options,prop,end,easing);
}
jQuery.Tween=Tween;
Tween.prototype={
constructor:Tween,
init:function(elem,options,prop,end,easing,unit){
this.elem=elem;
this.prop=prop;
this.easing=easing||jQuery.easing._default;
this.options=options;
this.start=this.now=this.cur();
this.end=end;
this.unit=unit||(jQuery.cssNumber[prop]?"":"px");
},
cur:function(){
var hooks=Tween.propHooks[this.prop];
return hooks&&hooks.get?
hooks.get(this):
Tween.propHooks._default.get(this);
},
run:function(percent){
var eased,
hooks=Tween.propHooks[this.prop];
if(this.options.duration){
this.pos=eased=jQuery.easing[this.easing](
percent,this.options.duration*percent,0,1,this.options.duration
);
}else{
this.pos=eased=percent;
}
this.now=(this.end-this.start)*eased+this.start;
if(this.options.step){
this.options.step.call(this.elem,this.now,this);
}
if(hooks&&hooks.set){
hooks.set(this);
}else{
Tween.propHooks._default.set(this);
}
return this;
}
};
Tween.prototype.init.prototype=Tween.prototype;
Tween.propHooks={
_default:{
get:function(tween){
var result;
if(tween.elem.nodeType!==1||
tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){
return tween.elem[tween.prop];
}
result=jQuery.css(tween.elem,tween.prop,"");
return!result||result==="auto"?0:result;
},
set:function(tween){
if(jQuery.fx.step[tween.prop]){
jQuery.fx.step[tween.prop](tween);
}else if(tween.elem.nodeType===1&&
(tween.elem.style[jQuery.cssProps[tween.prop]]!=null||
jQuery.cssHooks[tween.prop])){
jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);
}else{
tween.elem[tween.prop]=tween.now;
}
}
}
};
Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={
set:function(tween){
if(tween.elem.nodeType&&tween.elem.parentNode){
tween.elem[tween.prop]=tween.now;
}
}
};
jQuery.easing={
linear:function(p){
return p;
},
swing:function(p){
return 0.5-Math.cos(p*Math.PI)/2;
},
_default:"swing"
};
jQuery.fx=Tween.prototype.init;
jQuery.fx.step={};
var
fxNow,timerId,
rfxtypes=/^(?:toggle|show|hide)$/,
rrun=/queueHooks$/;
function createFxNow(){
window.setTimeout(function(){
fxNow=undefined;
});
return(fxNow=jQuery.now());
}
function genFx(type,includeWidth){
var which,
i=0,
attrs={height:type};
includeWidth=includeWidth?1:0;
for(;i<4;i+=2-includeWidth){
which=cssExpand[i];
attrs["margin"+which]=attrs["padding"+which]=type;
}
if(includeWidth){
attrs.opacity=attrs.width=type;
}
return attrs;
}
function createTween(value,prop,animation){
var tween,
collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners["*"]),
index=0,
length=collection.length;
for(;index<length;index++){
if((tween=collection[index].call(animation,prop,value))){
return tween;
}
}
}
function defaultPrefilter(elem,props,opts){
var prop,value,toggle,tween,hooks,oldfire,display,checkDisplay,
anim=this,
orig={},
style=elem.style,
hidden=elem.nodeType&&isHidden(elem),
dataShow=dataPriv.get(elem,"fxshow");
if(!opts.queue){
hooks=jQuery._queueHooks(elem,"fx");
if(hooks.unqueued==null){
hooks.unqueued=0;
oldfire=hooks.empty.fire;
hooks.empty.fire=function(){
if(!hooks.unqueued){
oldfire();
}
};
}
hooks.unqueued++;
anim.always(function(){
anim.always(function(){
hooks.unqueued--;
if(!jQuery.queue(elem,"fx").length){
hooks.empty.fire();
}
});
});
}
if(elem.nodeType===1&&("height"in props||"width"in props)){
opts.overflow=[style.overflow,style.overflowX,style.overflowY];
display=jQuery.css(elem,"display");
checkDisplay=display==="none"?
dataPriv.get(elem,"olddisplay")||defaultDisplay(elem.nodeName):display;
if(checkDisplay==="inline"&&jQuery.css(elem,"float")==="none"){
style.display="inline-block";
}
}
if(opts.overflow){
style.overflow="hidden";
anim.always(function(){
style.overflow=opts.overflow[0];
style.overflowX=opts.overflow[1];
style.overflowY=opts.overflow[2];
});
}
for(prop in props){
value=props[prop];
if(rfxtypes.exec(value)){
delete props[prop];
toggle=toggle||value==="toggle";
if(value===(hidden?"hide":"show")){
if(value==="show"&&dataShow&&dataShow[prop]!==undefined){
hidden=true;
}else{
continue;
}
}
orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);
}else{
display=undefined;
}
}
if(!jQuery.isEmptyObject(orig)){
if(dataShow){
if("hidden"in dataShow){
hidden=dataShow.hidden;
}
}else{
dataShow=dataPriv.access(elem,"fxshow",{});
}
if(toggle){
dataShow.hidden=!hidden;
}
if(hidden){
jQuery(elem).show();
}else{
anim.done(function(){
jQuery(elem).hide();
});
}
anim.done(function(){
var prop;
dataPriv.remove(elem,"fxshow");
for(prop in orig){
jQuery.style(elem,prop,orig[prop]);
}
});
for(prop in orig){
tween=createTween(hidden?dataShow[prop]:0,prop,anim);
if(!(prop in dataShow)){
dataShow[prop]=tween.start;
if(hidden){
tween.end=tween.start;
tween.start=prop==="width"||prop==="height"?1:0;
}
}
}
}else if((display==="none"?defaultDisplay(elem.nodeName):display)==="inline"){
style.display=display;
}
}
function propFilter(props,specialEasing){
var index,name,easing,value,hooks;
for(index in props){
name=jQuery.camelCase(index);
easing=specialEasing[name];
value=props[index];
if(jQuery.isArray(value)){
easing=value[1];
value=props[index]=value[0];
}
if(index!==name){
props[name]=value;
delete props[index];
}
hooks=jQuery.cssHooks[name];
if(hooks&&"expand"in hooks){
value=hooks.expand(value);
delete props[name];
for(index in value){
if(!(index in props)){
props[index]=value[index];
specialEasing[index]=easing;
}
}
}else{
specialEasing[name]=easing;
}
}
}
function Animation(elem,properties,options){
var result,
stopped,
index=0,
length=Animation.prefilters.length,
deferred=jQuery.Deferred().always(function(){
delete tick.elem;
}),
tick=function(){
if(stopped){
return false;
}
var currentTime=fxNow||createFxNow(),
remaining=Math.max(0,animation.startTime+animation.duration-currentTime),
temp=remaining/animation.duration||0,
percent=1-temp,
index=0,
length=animation.tweens.length;
for(;index<length;index++){
animation.tweens[index].run(percent);
}
deferred.notifyWith(elem,[animation,percent,remaining]);
if(percent<1&&length){
return remaining;
}else{
deferred.resolveWith(elem,[animation]);
return false;
}
},
animation=deferred.promise({
elem:elem,
props:jQuery.extend({},properties),
opts:jQuery.extend(true,{
specialEasing:{},
easing:jQuery.easing._default
},options),
originalProperties:properties,
originalOptions:options,
startTime:fxNow||createFxNow(),
duration:options.duration,
tweens:[],
createTween:function(prop,end){
var tween=jQuery.Tween(elem,animation.opts,prop,end,
animation.opts.specialEasing[prop]||animation.opts.easing);
animation.tweens.push(tween);
return tween;
},
stop:function(gotoEnd){
var index=0,
length=gotoEnd?animation.tweens.length:0;
if(stopped){
return this;
}
stopped=true;
for(;index<length;index++){
animation.tweens[index].run(1);
}
if(gotoEnd){
deferred.notifyWith(elem,[animation,1,0]);
deferred.resolveWith(elem,[animation,gotoEnd]);
}else{
deferred.rejectWith(elem,[animation,gotoEnd]);
}
return this;
}
}),
props=animation.props;
propFilter(props,animation.opts.specialEasing);
for(;index<length;index++){
result=Animation.prefilters[index].call(animation,elem,props,animation.opts);
if(result){
if(jQuery.isFunction(result.stop)){
jQuery._queueHooks(animation.elem,animation.opts.queue).stop=
jQuery.proxy(result.stop,result);
}
return result;
}
}
jQuery.map(props,createTween,animation);
if(jQuery.isFunction(animation.opts.start)){
animation.opts.start.call(elem,animation);
}
jQuery.fx.timer(
jQuery.extend(tick,{
elem:elem,
anim:animation,
queue:animation.opts.queue
})
);
return animation.progress(animation.opts.progress)
.done(animation.opts.done,animation.opts.complete)
.fail(animation.opts.fail)
.always(animation.opts.always);
}
jQuery.Animation=jQuery.extend(Animation,{
tweeners:{
"*":[function(prop,value){
var tween=this.createTween(prop,value);
adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);
return tween;
}]
},
tweener:function(props,callback){
if(jQuery.isFunction(props)){
callback=props;
props=["*"];
}else{
props=props.match(rnotwhite);
}
var prop,
index=0,
length=props.length;
for(;index<length;index++){
prop=props[index];
Animation.tweeners[prop]=Animation.tweeners[prop]||[];
Animation.tweeners[prop].unshift(callback);
}
},
prefilters:[defaultPrefilter],
prefilter:function(callback,prepend){
if(prepend){
Animation.prefilters.unshift(callback);
}else{
Animation.prefilters.push(callback);
}
}
});
jQuery.speed=function(speed,easing,fn){
var opt=speed&&typeof speed==="object"?jQuery.extend({},speed):{
complete:fn||!fn&&easing||
jQuery.isFunction(speed)&&speed,
duration:speed,
easing:fn&&easing||easing&&!jQuery.isFunction(easing)&&easing
};
opt.duration=jQuery.fx.off?0:typeof opt.duration==="number"?
opt.duration:opt.duration in jQuery.fx.speeds?
jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default;
if(opt.queue==null||opt.queue===true){
opt.queue="fx";
}
opt.old=opt.complete;
opt.complete=function(){
if(jQuery.isFunction(opt.old)){
opt.old.call(this);
}
if(opt.queue){
jQuery.dequeue(this,opt.queue);
}
};
return opt;
};
jQuery.fn.extend({
fadeTo:function(speed,to,easing,callback){
return this.filter(isHidden).css("opacity",0).show()
.end().animate({opacity:to},speed,easing,callback);
},
animate:function(prop,speed,easing,callback){
var empty=jQuery.isEmptyObject(prop),
optall=jQuery.speed(speed,easing,callback),
doAnimation=function(){
var anim=Animation(this,jQuery.extend({},prop),optall);
if(empty||dataPriv.get(this,"finish")){
anim.stop(true);
}
};
doAnimation.finish=doAnimation;
return empty||optall.queue===false?
this.each(doAnimation):
this.queue(optall.queue,doAnimation);
},
stop:function(type,clearQueue,gotoEnd){
var stopQueue=function(hooks){
var stop=hooks.stop;
delete hooks.stop;
stop(gotoEnd);
};
if(typeof type!=="string"){
gotoEnd=clearQueue;
clearQueue=type;
type=undefined;
}
if(clearQueue&&type!==false){
this.queue(type||"fx",[]);
}
return this.each(function(){
var dequeue=true,
index=type!=null&&type+"queueHooks",
timers=jQuery.timers,
data=dataPriv.get(this);
if(index){
if(data[index]&&data[index].stop){
stopQueue(data[index]);
}
}else{
for(index in data){
if(data[index]&&data[index].stop&&rrun.test(index)){
stopQueue(data[index]);
}
}
}
for(index=timers.length;index--;){
if(timers[index].elem===this&&
(type==null||timers[index].queue===type)){
timers[index].anim.stop(gotoEnd);
dequeue=false;
timers.splice(index,1);
}
}
if(dequeue||!gotoEnd){
jQuery.dequeue(this,type);
}
});
},
finish:function(type){
if(type!==false){
type=type||"fx";
}
return this.each(function(){
var index,
data=dataPriv.get(this),
queue=data[type+"queue"],
hooks=data[type+"queueHooks"],
timers=jQuery.timers,
length=queue?queue.length:0;
data.finish=true;
jQuery.queue(this,type,[]);
if(hooks&&hooks.stop){
hooks.stop.call(this,true);
}
for(index=timers.length;index--;){
if(timers[index].elem===this&&timers[index].queue===type){
timers[index].anim.stop(true);
timers.splice(index,1);
}
}
for(index=0;index<length;index++){
if(queue[index]&&queue[index].finish){
queue[index].finish.call(this);
}
}
delete data.finish;
});
}
});
jQuery.each(["toggle","show","hide"],function(i,name){
var cssFn=jQuery.fn[name];
jQuery.fn[name]=function(speed,easing,callback){
return speed==null||typeof speed==="boolean"?
cssFn.apply(this,arguments):
this.animate(genFx(name,true),speed,easing,callback);
};
});
jQuery.each({
slideDown:genFx("show"),
slideUp:genFx("hide"),
slideToggle:genFx("toggle"),
fadeIn:{opacity:"show"},
fadeOut:{opacity:"hide"},
fadeToggle:{opacity:"toggle"}
},function(name,props){
jQuery.fn[name]=function(speed,easing,callback){
return this.animate(props,speed,easing,callback);
};
});
jQuery.timers=[];
jQuery.fx.tick=function(){
var timer,
i=0,
timers=jQuery.timers;
fxNow=jQuery.now();
for(;i<timers.length;i++){
timer=timers[i];
if(!timer()&&timers[i]===timer){
timers.splice(i--,1);
}
}
if(!timers.length){
jQuery.fx.stop();
}
fxNow=undefined;
};
jQuery.fx.timer=function(timer){
jQuery.timers.push(timer);
if(timer()){
jQuery.fx.start();
}else{
jQuery.timers.pop();
}
};
jQuery.fx.interval=13;
jQuery.fx.start=function(){
if(!timerId){
timerId=window.setInterval(jQuery.fx.tick,jQuery.fx.interval);
}
};
jQuery.fx.stop=function(){
window.clearInterval(timerId);
timerId=null;
};
jQuery.fx.speeds={
slow:600,
fast:200,
_default:400
};
jQuery.fn.delay=function(time,type){
time=jQuery.fx?jQuery.fx.speeds[time]||time:time;
type=type||"fx";
return this.queue(type,function(next,hooks){
var timeout=window.setTimeout(next,time);
hooks.stop=function(){
window.clearTimeout(timeout);
};
});
};
(function(){
var input=document.createElement("input"),
select=document.createElement("select"),
opt=select.appendChild(document.createElement("option"));
input.type="checkbox";
support.checkOn=input.value!=="";
support.optSelected=opt.selected;
select.disabled=true;
support.optDisabled=!opt.disabled;
input=document.createElement("input");
input.value="t";
input.type="radio";
support.radioValue=input.value==="t";
})();
var boolHook,
attrHandle=jQuery.expr.attrHandle;
jQuery.fn.extend({
attr:function(name,value){
return access(this,jQuery.attr,name,value,arguments.length>1);
},
removeAttr:function(name){
return this.each(function(){
jQuery.removeAttr(this,name);
});
}
});
jQuery.extend({
attr:function(elem,name,value){
var ret,hooks,
nType=elem.nodeType;
if(nType===3||nType===8||nType===2){
return;
}
if(typeof elem.getAttribute==="undefined"){
return jQuery.prop(elem,name,value);
}
if(nType!==1||!jQuery.isXMLDoc(elem)){
name=name.toLowerCase();
hooks=jQuery.attrHooks[name]||
(jQuery.expr.match.bool.test(name)?boolHook:undefined);
}
if(value!==undefined){
if(value===null){
jQuery.removeAttr(elem,name);
return;
}
if(hooks&&"set"in hooks&&
(ret=hooks.set(elem,value,name))!==undefined){
return ret;
}
elem.setAttribute(name,value+"");
return value;
}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){
return ret;
}
ret=jQuery.find.attr(elem,name);
return ret==null?undefined:ret;
},
attrHooks:{
type:{
set:function(elem,value){
if(!support.radioValue&&value==="radio"&&
jQuery.nodeName(elem,"input")){
var val=elem.value;
elem.setAttribute("type",value);
if(val){
elem.value=val;
}
return value;
}
}
}
},
removeAttr:function(elem,value){
var name,propName,
i=0,
attrNames=value&&value.match(rnotwhite);
if(attrNames&&elem.nodeType===1){
while((name=attrNames[i++])){
propName=jQuery.propFix[name]||name;
if(jQuery.expr.match.bool.test(name)){
elem[propName]=false;
}
elem.removeAttribute(name);
}
}
}
});
boolHook={
set:function(elem,value,name){
if(value===false){
jQuery.removeAttr(elem,name);
}else{
elem.setAttribute(name,name);
}
return name;
}
};
jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(i,name){
var getter=attrHandle[name]||jQuery.find.attr;
attrHandle[name]=function(elem,name,isXML){
var ret,handle;
if(!isXML){
handle=attrHandle[name];
attrHandle[name]=ret;
ret=getter(elem,name,isXML)!=null?
name.toLowerCase():
null;
attrHandle[name]=handle;
}
return ret;
};
});
var rfocusable=/^(?:input|select|textarea|button)$/i,
rclickable=/^(?:a|area)$/i;
jQuery.fn.extend({
prop:function(name,value){
return access(this,jQuery.prop,name,value,arguments.length>1);
},
removeProp:function(name){
return this.each(function(){
delete this[jQuery.propFix[name]||name];
});
}
});
jQuery.extend({
prop:function(elem,name,value){
var ret,hooks,
nType=elem.nodeType;
if(nType===3||nType===8||nType===2){
return;
}
if(nType!==1||!jQuery.isXMLDoc(elem)){
name=jQuery.propFix[name]||name;
hooks=jQuery.propHooks[name];
}
if(value!==undefined){
if(hooks&&"set"in hooks&&
(ret=hooks.set(elem,value,name))!==undefined){
return ret;
}
return(elem[name]=value);
}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){
return ret;
}
return elem[name];
},
propHooks:{
tabIndex:{
get:function(elem){
var tabindex=jQuery.find.attr(elem,"tabindex");
return tabindex?
parseInt(tabindex,10):
rfocusable.test(elem.nodeName)||
rclickable.test(elem.nodeName)&&elem.href?
0:
-1;
}
}
},
propFix:{
"for":"htmlFor",
"class":"className"
}
});
if(!support.optSelected){
jQuery.propHooks.selected={
get:function(elem){
var parent=elem.parentNode;
if(parent&&parent.parentNode){
parent.parentNode.selectedIndex;
}
return null;
},
set:function(elem){
var parent=elem.parentNode;
if(parent){
parent.selectedIndex;
if(parent.parentNode){
parent.parentNode.selectedIndex;
}
}
}
};
}
jQuery.each([
"tabIndex",
"readOnly",
"maxLength",
"cellSpacing",
"cellPadding",
"rowSpan",
"colSpan",
"useMap",
"frameBorder",
"contentEditable"
],function(){
jQuery.propFix[this.toLowerCase()]=this;
});
var rclass=/[\t\r\n\f]/g;
function getClass(elem){
return elem.getAttribute&&elem.getAttribute("class")||"";
}
jQuery.fn.extend({
addClass:function(value){
var classes,elem,cur,curValue,clazz,j,finalValue,
i=0;
if(jQuery.isFunction(value)){
return this.each(function(j){
jQuery(this).addClass(value.call(this,j,getClass(this)));
});
}
if(typeof value==="string"&&value){
classes=value.match(rnotwhite)||[];
while((elem=this[i++])){
curValue=getClass(elem);
cur=elem.nodeType===1&&
(" "+curValue+" ").replace(rclass," ");
if(cur){
j=0;
while((clazz=classes[j++])){
if(cur.indexOf(" "+clazz+" ")<0){
cur+=clazz+" ";
}
}
finalValue=jQuery.trim(cur);
if(curValue!==finalValue){
elem.setAttribute("class",finalValue);
}
}
}
}
return this;
},
removeClass:function(value){
var classes,elem,cur,curValue,clazz,j,finalValue,
i=0;
if(jQuery.isFunction(value)){
return this.each(function(j){
jQuery(this).removeClass(value.call(this,j,getClass(this)));
});
}
if(!arguments.length){
return this.attr("class","");
}
if(typeof value==="string"&&value){
classes=value.match(rnotwhite)||[];
while((elem=this[i++])){
curValue=getClass(elem);
cur=elem.nodeType===1&&
(" "+curValue+" ").replace(rclass," ");
if(cur){
j=0;
while((clazz=classes[j++])){
while(cur.indexOf(" "+clazz+" ")>-1){
cur=cur.replace(" "+clazz+" "," ");
}
}
finalValue=jQuery.trim(cur);
if(curValue!==finalValue){
elem.setAttribute("class",finalValue);
}
}
}
}
return this;
},
toggleClass:function(value,stateVal){
var type=typeof value;
if(typeof stateVal==="boolean"&&type==="string"){
return stateVal?this.addClass(value):this.removeClass(value);
}
if(jQuery.isFunction(value)){
return this.each(function(i){
jQuery(this).toggleClass(
value.call(this,i,getClass(this),stateVal),
stateVal
);
});
}
return this.each(function(){
var className,i,self,classNames;
if(type==="string"){
i=0;
self=jQuery(this);
classNames=value.match(rnotwhite)||[];
while((className=classNames[i++])){
if(self.hasClass(className)){
self.removeClass(className);
}else{
self.addClass(className);
}
}
}else if(value===undefined||type==="boolean"){
className=getClass(this);
if(className){
dataPriv.set(this,"__className__",className);
}
if(this.setAttribute){
this.setAttribute("class",
className||value===false?
"":
dataPriv.get(this,"__className__")||""
);
}
}
});
},
hasClass:function(selector){
var className,elem,
i=0;
className=" "+selector+" ";
while((elem=this[i++])){
if(elem.nodeType===1&&
(" "+getClass(elem)+" ").replace(rclass," ")
.indexOf(className)>-1
){
return true;
}
}
return false;
}
});
var rreturn=/\r/g,
rspaces=/[\x20\t\r\n\f]+/g;
jQuery.fn.extend({
val:function(value){
var hooks,ret,isFunction,
elem=this[0];
if(!arguments.length){
if(elem){
hooks=jQuery.valHooks[elem.type]||
jQuery.valHooks[elem.nodeName.toLowerCase()];
if(hooks&&
"get"in hooks&&
(ret=hooks.get(elem,"value"))!==undefined
){
return ret;
}
ret=elem.value;
return typeof ret==="string"?
ret.replace(rreturn,""):
ret==null?"":ret;
}
return;
}
isFunction=jQuery.isFunction(value);
return this.each(function(i){
var val;
if(this.nodeType!==1){
return;
}
if(isFunction){
val=value.call(this,i,jQuery(this).val());
}else{
val=value;
}
if(val==null){
val="";
}else if(typeof val==="number"){
val+="";
}else if(jQuery.isArray(val)){
val=jQuery.map(val,function(value){
return value==null?"":value+"";
});
}
hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];
if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){
this.value=val;
}
});
}
});
jQuery.extend({
valHooks:{
option:{
get:function(elem){
var val=jQuery.find.attr(elem,"value");
return val!=null?
val:
jQuery.trim(jQuery.text(elem)).replace(rspaces," ");
}
},
select:{
get:function(elem){
var value,option,
options=elem.options,
index=elem.selectedIndex,
one=elem.type==="select-one"||index<0,
values=one?null:[],
max=one?index+1:options.length,
i=index<0?
max:
one?index:0;
for(;i<max;i++){
option=options[i];
if((option.selected||i===index)&&
(support.optDisabled?
!option.disabled:option.getAttribute("disabled")===null)&&
(!option.parentNode.disabled||
!jQuery.nodeName(option.parentNode,"optgroup"))){
value=jQuery(option).val();
if(one){
return value;
}
values.push(value);
}
}
return values;
},
set:function(elem,value){
var optionSet,option,
options=elem.options,
values=jQuery.makeArray(value),
i=options.length;
while(i--){
option=options[i];
if(option.selected=
jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1
){
optionSet=true;
}
}
if(!optionSet){
elem.selectedIndex=-1;
}
return values;
}
}
}
});
jQuery.each(["radio","checkbox"],function(){
jQuery.valHooks[this]={
set:function(elem,value){
if(jQuery.isArray(value)){
return(elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1);
}
}
};
if(!support.checkOn){
jQuery.valHooks[this].get=function(elem){
return elem.getAttribute("value")===null?"on":elem.value;
};
}
});
var rfocusMorph=/^(?:focusinfocus|focusoutblur)$/;
jQuery.extend(jQuery.event,{
trigger:function(event,data,elem,onlyHandlers){
var i,cur,tmp,bubbleType,ontype,handle,special,
eventPath=[elem||document],
type=hasOwn.call(event,"type")?event.type:event,
namespaces=hasOwn.call(event,"namespace")?event.namespace.split("."):[];
cur=tmp=elem=elem||document;
if(elem.nodeType===3||elem.nodeType===8){
return;
}
if(rfocusMorph.test(type+jQuery.event.triggered)){
return;
}
if(type.indexOf(".")>-1){
namespaces=type.split(".");
type=namespaces.shift();
namespaces.sort();
}
ontype=type.indexOf(":")<0&&"on"+type;
event=event[jQuery.expando]?
event:
new jQuery.Event(type,typeof event==="object"&&event);
event.isTrigger=onlyHandlers?2:3;
event.namespace=namespaces.join(".");
event.rnamespace=event.namespace?
new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):
null;
event.result=undefined;
if(!event.target){
event.target=elem;
}
data=data==null?
[event]:
jQuery.makeArray(data,[event]);
special=jQuery.event.special[type]||{};
if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){
return;
}
if(!onlyHandlers&&!special.noBubble&&!jQuery.isWindow(elem)){
bubbleType=special.delegateType||type;
if(!rfocusMorph.test(bubbleType+type)){
cur=cur.parentNode;
}
for(;cur;cur=cur.parentNode){
eventPath.push(cur);
tmp=cur;
}
if(tmp===(elem.ownerDocument||document)){
eventPath.push(tmp.defaultView||tmp.parentWindow||window);
}
}
i=0;
while((cur=eventPath[i++])&&!event.isPropagationStopped()){
event.type=i>1?
bubbleType:
special.bindType||type;
handle=(dataPriv.get(cur,"events")||{})[event.type]&&
dataPriv.get(cur,"handle");
if(handle){
handle.apply(cur,data);
}
handle=ontype&&cur[ontype];
if(handle&&handle.apply&&acceptData(cur)){
event.result=handle.apply(cur,data);
if(event.result===false){
event.preventDefault();
}
}
}
event.type=type;
if(!onlyHandlers&&!event.isDefaultPrevented()){
if((!special._default||
special._default.apply(eventPath.pop(),data)===false)&&
acceptData(elem)){
if(ontype&&jQuery.isFunction(elem[type])&&!jQuery.isWindow(elem)){
tmp=elem[ontype];
if(tmp){
elem[ontype]=null;
}
jQuery.event.triggered=type;
elem[type]();
jQuery.event.triggered=undefined;
if(tmp){
elem[ontype]=tmp;
}
}
}
}
return event.result;
},
simulate:function(type,elem,event){
var e=jQuery.extend(
new jQuery.Event(),
event,
{
type:type,
isSimulated:true
}
);
jQuery.event.trigger(e,null,elem);
}
});
jQuery.fn.extend({
trigger:function(type,data){
return this.each(function(){
jQuery.event.trigger(type,data,this);
});
},
triggerHandler:function(type,data){
var elem=this[0];
if(elem){
return jQuery.event.trigger(type,data,elem,true);
}
}
});
jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick "+
"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+
"change select submit keydown keypress keyup error contextmenu").split(" "),
function(i,name){
jQuery.fn[name]=function(data,fn){
return arguments.length>0?
this.on(name,null,data,fn):
this.trigger(name);
};
});
jQuery.fn.extend({
hover:function(fnOver,fnOut){
return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);
}
});
support.focusin="onfocusin"in window;
if(!support.focusin){
jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){
var handler=function(event){
jQuery.event.simulate(fix,event.target,jQuery.event.fix(event));
};
jQuery.event.special[fix]={
setup:function(){
var doc=this.ownerDocument||this,
attaches=dataPriv.access(doc,fix);
if(!attaches){
doc.addEventListener(orig,handler,true);
}
dataPriv.access(doc,fix,(attaches||0)+1);
},
teardown:function(){
var doc=this.ownerDocument||this,
attaches=dataPriv.access(doc,fix)-1;
if(!attaches){
doc.removeEventListener(orig,handler,true);
dataPriv.remove(doc,fix);
}else{
dataPriv.access(doc,fix,attaches);
}
}
};
});
}
var location=window.location;
var nonce=jQuery.now();
var rquery=(/\?/);
jQuery.parseJSON=function(data){
return JSON.parse(data+"");
};
jQuery.parseXML=function(data){
var xml;
if(!data||typeof data!=="string"){
return null;
}
try{
xml=(new window.DOMParser()).parseFromString(data,"text/xml");
}catch(e){
xml=undefined;
}
if(!xml||xml.getElementsByTagName("parsererror").length){
jQuery.error("Invalid XML: "+data);
}
return xml;
};
var
rhash=/#.*$/,
rts=/([?&])_=[^&]*/,
rheaders=/^(.*?):[ \t]*([^\r\n]*)$/mg,
rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
rnoContent=/^(?:GET|HEAD)$/,
rprotocol=/^\/\//,
prefilters={},
transports={},
allTypes="*/".concat("*"),
originAnchor=document.createElement("a");
originAnchor.href=location.href;
function addToPrefiltersOrTransports(structure){
return function(dataTypeExpression,func){
if(typeof dataTypeExpression!=="string"){
func=dataTypeExpression;
dataTypeExpression="*";
}
var dataType,
i=0,
dataTypes=dataTypeExpression.toLowerCase().match(rnotwhite)||[];
if(jQuery.isFunction(func)){
while((dataType=dataTypes[i++])){
if(dataType[0]==="+"){
dataType=dataType.slice(1)||"*";
(structure[dataType]=structure[dataType]||[]).unshift(func);
}else{
(structure[dataType]=structure[dataType]||[]).push(func);
}
}
}
};
}
function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){
var inspected={},
seekingTransport=(structure===transports);
function inspect(dataType){
var selected;
inspected[dataType]=true;
jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){
var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);
if(typeof dataTypeOrTransport==="string"&&
!seekingTransport&&!inspected[dataTypeOrTransport]){
options.dataTypes.unshift(dataTypeOrTransport);
inspect(dataTypeOrTransport);
return false;
}else if(seekingTransport){
return!(selected=dataTypeOrTransport);
}
});
return selected;
}
return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*");
}
function ajaxExtend(target,src){
var key,deep,
flatOptions=jQuery.ajaxSettings.flatOptions||{};
for(key in src){
if(src[key]!==undefined){
(flatOptions[key]?target:(deep||(deep={})))[key]=src[key];
}
}
if(deep){
jQuery.extend(true,target,deep);
}
return target;
}
function ajaxHandleResponses(s,jqXHR,responses){
var ct,type,finalDataType,firstDataType,
contents=s.contents,
dataTypes=s.dataTypes;
while(dataTypes[0]==="*"){
dataTypes.shift();
if(ct===undefined){
ct=s.mimeType||jqXHR.getResponseHeader("Content-Type");
}
}
if(ct){
for(type in contents){
if(contents[type]&&contents[type].test(ct)){
dataTypes.unshift(type);
break;
}
}
}
if(dataTypes[0]in responses){
finalDataType=dataTypes[0];
}else{
for(type in responses){
if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){
finalDataType=type;
break;
}
if(!firstDataType){
firstDataType=type;
}
}
finalDataType=finalDataType||firstDataType;
}
if(finalDataType){
if(finalDataType!==dataTypes[0]){
dataTypes.unshift(finalDataType);
}
return responses[finalDataType];
}
}
function ajaxConvert(s,response,jqXHR,isSuccess){
var conv2,current,conv,tmp,prev,
converters={},
dataTypes=s.dataTypes.slice();
if(dataTypes[1]){
for(conv in s.converters){
converters[conv.toLowerCase()]=s.converters[conv];
}
}
current=dataTypes.shift();
while(current){
if(s.responseFields[current]){
jqXHR[s.responseFields[current]]=response;
}
if(!prev&&isSuccess&&s.dataFilter){
response=s.dataFilter(response,s.dataType);
}
prev=current;
current=dataTypes.shift();
if(current){
if(current==="*"){
current=prev;
}else if(prev!=="*"&&prev!==current){
conv=converters[prev+" "+current]||converters["* "+current];
if(!conv){
for(conv2 in converters){
tmp=conv2.split(" ");
if(tmp[1]===current){
conv=converters[prev+" "+tmp[0]]||
converters["* "+tmp[0]];
if(conv){
if(conv===true){
conv=converters[conv2];
}else if(converters[conv2]!==true){
current=tmp[0];
dataTypes.unshift(tmp[1]);
}
break;
}
}
}
}
if(conv!==true){
if(conv&&s.throws){
response=conv(response);
}else{
try{
response=conv(response);
}catch(e){
return{
state:"parsererror",
error:conv?e:"No conversion from "+prev+" to "+current
};
}
}
}
}
}
}
return{state:"success",data:response};
}
jQuery.extend({
active:0,
lastModified:{},
etag:{},
ajaxSettings:{
url:location.href,
type:"GET",
isLocal:rlocalProtocol.test(location.protocol),
global:true,
processData:true,
async:true,
contentType:"application/x-www-form-urlencoded; charset=UTF-8",
accepts:{
"*":allTypes,
text:"text/plain",
html:"text/html",
xml:"application/xml, text/xml",
json:"application/json, text/javascript"
},
contents:{
xml:/\bxml\b/,
html:/\bhtml/,
json:/\bjson\b/
},
responseFields:{
xml:"responseXML",
text:"responseText",
json:"responseJSON"
},
converters:{
"* text":String,
"text html":true,
"text json":jQuery.parseJSON,
"text xml":jQuery.parseXML
},
flatOptions:{
url:true,
context:true
}
},
ajaxSetup:function(target,settings){
return settings?
ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):
ajaxExtend(jQuery.ajaxSettings,target);
},
ajaxPrefilter:addToPrefiltersOrTransports(prefilters),
ajaxTransport:addToPrefiltersOrTransports(transports),
ajax:function(url,options){
if(typeof url==="object"){
options=url;
url=undefined;
}
options=options||{};
var transport,
cacheURL,
responseHeadersString,
responseHeaders,
timeoutTimer,
urlAnchor,
fireGlobals,
i,
s=jQuery.ajaxSetup({},options),
callbackContext=s.context||s,
globalEventContext=s.context&&
(callbackContext.nodeType||callbackContext.jquery)?
jQuery(callbackContext):
jQuery.event,
deferred=jQuery.Deferred(),
completeDeferred=jQuery.Callbacks("once memory"),
statusCode=s.statusCode||{},
requestHeaders={},
requestHeadersNames={},
state=0,
strAbort="canceled",
jqXHR={
readyState:0,
getResponseHeader:function(key){
var match;
if(state===2){
if(!responseHeaders){
responseHeaders={};
while((match=rheaders.exec(responseHeadersString))){
responseHeaders[match[1].toLowerCase()]=match[2];
}
}
match=responseHeaders[key.toLowerCase()];
}
return match==null?null:match;
},
getAllResponseHeaders:function(){
return state===2?responseHeadersString:null;
},
setRequestHeader:function(name,value){
var lname=name.toLowerCase();
if(!state){
name=requestHeadersNames[lname]=requestHeadersNames[lname]||name;
requestHeaders[name]=value;
}
return this;
},
overrideMimeType:function(type){
if(!state){
s.mimeType=type;
}
return this;
},
statusCode:function(map){
var code;
if(map){
if(state<2){
for(code in map){
statusCode[code]=[statusCode[code],map[code]];
}
}else{
jqXHR.always(map[jqXHR.status]);
}
}
return this;
},
abort:function(statusText){
var finalText=statusText||strAbort;
if(transport){
transport.abort(finalText);
}
done(0,finalText);
return this;
}
};
deferred.promise(jqXHR).complete=completeDeferred.add;
jqXHR.success=jqXHR.done;
jqXHR.error=jqXHR.fail;
s.url=((url||s.url||location.href)+"").replace(rhash,"")
.replace(rprotocol,location.protocol+"//");
s.type=options.method||options.type||s.method||s.type;
s.dataTypes=jQuery.trim(s.dataType||"*").toLowerCase().match(rnotwhite)||[""];
if(s.crossDomain==null){
urlAnchor=document.createElement("a");
try{
urlAnchor.href=s.url;
urlAnchor.href=urlAnchor.href;
s.crossDomain=originAnchor.protocol+"//"+originAnchor.host!==
urlAnchor.protocol+"//"+urlAnchor.host;
}catch(e){
s.crossDomain=true;
}
}
if(s.data&&s.processData&&typeof s.data!=="string"){
s.data=jQuery.param(s.data,s.traditional);
}
inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);
if(state===2){
return jqXHR;
}
fireGlobals=jQuery.event&&s.global;
if(fireGlobals&&jQuery.active++===0){
jQuery.event.trigger("ajaxStart");
}
s.type=s.type.toUpperCase();
s.hasContent=!rnoContent.test(s.type);
cacheURL=s.url;
if(!s.hasContent){
if(s.data){
cacheURL=(s.url+=(rquery.test(cacheURL)?"&":"?")+s.data);
delete s.data;
}
if(s.cache===false){
s.url=rts.test(cacheURL)?
cacheURL.replace(rts,"$1_="+nonce++):
cacheURL+(rquery.test(cacheURL)?"&":"?")+"_="+nonce++;
}
}
if(s.ifModified){
if(jQuery.lastModified[cacheURL]){
jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL]);
}
if(jQuery.etag[cacheURL]){
jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL]);
}
}
if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){
jqXHR.setRequestHeader("Content-Type",s.contentType);
}
jqXHR.setRequestHeader(
"Accept",
s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?
s.accepts[s.dataTypes[0]]+
(s.dataTypes[0]!=="*"?", "+allTypes+"; q=0.01":""):
s.accepts["*"]
);
for(i in s.headers){
jqXHR.setRequestHeader(i,s.headers[i]);
}
if(s.beforeSend&&
(s.beforeSend.call(callbackContext,jqXHR,s)===false||state===2)){
return jqXHR.abort();
}
strAbort="abort";
for(i in{success:1,error:1,complete:1}){
jqXHR[i](s[i]);
}
transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);
if(!transport){
done(-1,"No Transport");
}else{
jqXHR.readyState=1;
if(fireGlobals){
globalEventContext.trigger("ajaxSend",[jqXHR,s]);
}
if(state===2){
return jqXHR;
}
if(s.async&&s.timeout>0){
timeoutTimer=window.setTimeout(function(){
jqXHR.abort("timeout");
},s.timeout);
}
try{
state=1;
transport.send(requestHeaders,done);
}catch(e){
if(state<2){
done(-1,e);
}else{
throw e;
}
}
}
function done(status,nativeStatusText,responses,headers){
var isSuccess,success,error,response,modified,
statusText=nativeStatusText;
if(state===2){
return;
}
state=2;
if(timeoutTimer){
window.clearTimeout(timeoutTimer);
}
transport=undefined;
responseHeadersString=headers||"";
jqXHR.readyState=status>0?4:0;
isSuccess=status>=200&&status<300||status===304;
if(responses){
response=ajaxHandleResponses(s,jqXHR,responses);
}
response=ajaxConvert(s,response,jqXHR,isSuccess);
if(isSuccess){
if(s.ifModified){
modified=jqXHR.getResponseHeader("Last-Modified");
if(modified){
jQuery.lastModified[cacheURL]=modified;
}
modified=jqXHR.getResponseHeader("etag");
if(modified){
jQuery.etag[cacheURL]=modified;
}
}
if(status===204||s.type==="HEAD"){
statusText="nocontent";
}else if(status===304){
statusText="notmodified";
}else{
statusText=response.state;
success=response.data;
error=response.error;
isSuccess=!error;
}
}else{
error=statusText;
if(status||!statusText){
statusText="error";
if(status<0){
status=0;
}
}
}
jqXHR.status=status;
jqXHR.statusText=(nativeStatusText||statusText)+"";
if(isSuccess){
deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);
}else{
deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);
}
jqXHR.statusCode(statusCode);
statusCode=undefined;
if(fireGlobals){
globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",
[jqXHR,s,isSuccess?success:error]);
}
completeDeferred.fireWith(callbackContext,[jqXHR,statusText]);
if(fireGlobals){
globalEventContext.trigger("ajaxComplete",[jqXHR,s]);
if(!(--jQuery.active)){
jQuery.event.trigger("ajaxStop");
}
}
}
return jqXHR;
},
getJSON:function(url,data,callback){
return jQuery.get(url,data,callback,"json");
},
getScript:function(url,callback){
return jQuery.get(url,undefined,callback,"script");
}
});
jQuery.each(["get","post"],function(i,method){
jQuery[method]=function(url,data,callback,type){
if(jQuery.isFunction(data)){
type=type||callback;
callback=data;
data=undefined;
}
return jQuery.ajax(jQuery.extend({
url:url,
type:method,
dataType:type,
data:data,
success:callback
},jQuery.isPlainObject(url)&&url));
};
});
jQuery._evalUrl=function(url){
return jQuery.ajax({
url:url,
type:"GET",
dataType:"script",
async:false,
global:false,
"throws":true
});
};
jQuery.fn.extend({
wrapAll:function(html){
var wrap;
if(jQuery.isFunction(html)){
return this.each(function(i){
jQuery(this).wrapAll(html.call(this,i));
});
}
if(this[0]){
wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);
if(this[0].parentNode){
wrap.insertBefore(this[0]);
}
wrap.map(function(){
var elem=this;
while(elem.firstElementChild){
elem=elem.firstElementChild;
}
return elem;
}).append(this);
}
return this;
},
wrapInner:function(html){
if(jQuery.isFunction(html)){
return this.each(function(i){
jQuery(this).wrapInner(html.call(this,i));
});
}
return this.each(function(){
var self=jQuery(this),
contents=self.contents();
if(contents.length){
contents.wrapAll(html);
}else{
self.append(html);
}
});
},
wrap:function(html){
var isFunction=jQuery.isFunction(html);
return this.each(function(i){
jQuery(this).wrapAll(isFunction?html.call(this,i):html);
});
},
unwrap:function(){
return this.parent().each(function(){
if(!jQuery.nodeName(this,"body")){
jQuery(this).replaceWith(this.childNodes);
}
}).end();
}
});
jQuery.expr.filters.hidden=function(elem){
return!jQuery.expr.filters.visible(elem);
};
jQuery.expr.filters.visible=function(elem){
return elem.offsetWidth>0||elem.offsetHeight>0||elem.getClientRects().length>0;
};
var r20=/%20/g,
rbracket=/\[\]$/,
rCRLF=/\r?\n/g,
rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,
rsubmittable=/^(?:input|select|textarea|keygen)/i;
function buildParams(prefix,obj,traditional,add){
var name;
if(jQuery.isArray(obj)){
jQuery.each(obj,function(i,v){
if(traditional||rbracket.test(prefix)){
add(prefix,v);
}else{
buildParams(
prefix+"["+(typeof v==="object"&&v!=null?i:"")+"]",
v,
traditional,
add
);
}
});
}else if(!traditional&&jQuery.type(obj)==="object"){
for(name in obj){
buildParams(prefix+"["+name+"]",obj[name],traditional,add);
}
}else{
add(prefix,obj);
}
}
jQuery.param=function(a,traditional){
var prefix,
s=[],
add=function(key,value){
value=jQuery.isFunction(value)?value():(value==null?"":value);
s[s.length]=encodeURIComponent(key)+"="+encodeURIComponent(value);
};
if(traditional===undefined){
traditional=jQuery.ajaxSettings&&jQuery.ajaxSettings.traditional;
}
if(jQuery.isArray(a)||(a.jquery&&!jQuery.isPlainObject(a))){
jQuery.each(a,function(){
add(this.name,this.value);
});
}else{
for(prefix in a){
buildParams(prefix,a[prefix],traditional,add);
}
}
return s.join("&").replace(r20,"+");
};
jQuery.fn.extend({
serialize:function(){
return jQuery.param(this.serializeArray());
},
serializeArray:function(){
return this.map(function(){
var elements=jQuery.prop(this,"elements");
return elements?jQuery.makeArray(elements):this;
})
.filter(function(){
var type=this.type;
return this.name&&!jQuery(this).is(":disabled")&&
rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&
(this.checked||!rcheckableType.test(type));
})
.map(function(i,elem){
var val=jQuery(this).val();
return val==null?
null:
jQuery.isArray(val)?
jQuery.map(val,function(val){
return{name:elem.name,value:val.replace(rCRLF,"\r\n")};
}):
{name:elem.name,value:val.replace(rCRLF,"\r\n")};
}).get();
}
});
jQuery.ajaxSettings.xhr=function(){
try{
return new window.XMLHttpRequest();
}catch(e){}
};
var xhrSuccessStatus={
0:200,
1223:204
},
xhrSupported=jQuery.ajaxSettings.xhr();
support.cors=!!xhrSupported&&("withCredentials"in xhrSupported);
support.ajax=xhrSupported=!!xhrSupported;
jQuery.ajaxTransport(function(options){
var callback,errorCallback;
if(support.cors||xhrSupported&&!options.crossDomain){
return{
send:function(headers,complete){
var i,
xhr=options.xhr();
xhr.open(
options.type,
options.url,
options.async,
options.username,
options.password
);
if(options.xhrFields){
for(i in options.xhrFields){
xhr[i]=options.xhrFields[i];
}
}
if(options.mimeType&&xhr.overrideMimeType){
xhr.overrideMimeType(options.mimeType);
}
if(!options.crossDomain&&!headers["X-Requested-With"]){
headers["X-Requested-With"]="XMLHttpRequest";
}
for(i in headers){
xhr.setRequestHeader(i,headers[i]);
}
callback=function(type){
return function(){
if(callback){
callback=errorCallback=xhr.onload=
xhr.onerror=xhr.onabort=xhr.onreadystatechange=null;
if(type==="abort"){
xhr.abort();
}else if(type==="error"){
if(typeof xhr.status!=="number"){
complete(0,"error");
}else{
complete(
xhr.status,
xhr.statusText
);
}
}else{
complete(
xhrSuccessStatus[xhr.status]||xhr.status,
xhr.statusText,
(xhr.responseType||"text")!=="text"||
typeof xhr.responseText!=="string"?
{binary:xhr.response}:
{text:xhr.responseText},
xhr.getAllResponseHeaders()
);
}
}
};
};
xhr.onload=callback();
errorCallback=xhr.onerror=callback("error");
if(xhr.onabort!==undefined){
xhr.onabort=errorCallback;
}else{
xhr.onreadystatechange=function(){
if(xhr.readyState===4){
window.setTimeout(function(){
if(callback){
errorCallback();
}
});
}
};
}
callback=callback("abort");
try{
//xhr.send(options.hasContent&&options.data||null);
}catch(e){
if(callback){
throw e;
}
}
},
abort:function(){
if(callback){
callback();
}
}
};
}
});
jQuery.ajaxSetup({
accepts:{
script:"text/javascript, application/javascript, "+
"application/ecmascript, application/x-ecmascript"
},
contents:{
script:/\b(?:java|ecma)script\b/
},
converters:{
"text script":function(text){
jQuery.globalEval(text);
return text;
}
}
});
jQuery.ajaxPrefilter("script",function(s){
if(s.cache===undefined){
s.cache=false;
}
if(s.crossDomain){
s.type="GET";
}
});
jQuery.ajaxTransport("script",function(s){
if(s.crossDomain){
var script,callback;
return{
send:function(_,complete){
script=jQuery("<script>").prop({
charset:s.scriptCharset,
src:s.url
}).on(
"load error",
callback=function(evt){
script.remove();
callback=null;
if(evt){
complete(evt.type==="error"?404:200,evt.type);
}
}
);
document.head.appendChild(script[0]);
},
abort:function(){
if(callback){
callback();
}
}
};
}
});
var oldCallbacks=[],
rjsonp=/(=)\?(?=&|$)|\?\?/;
jQuery.ajaxSetup({
jsonp:"callback",
jsonpCallback:function(){
var callback=oldCallbacks.pop()||(jQuery.expando+"_"+(nonce++));
this[callback]=true;
return callback;
}
});
jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){
var callbackName,overwritten,responseContainer,
jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?
"url":
typeof s.data==="string"&&
(s.contentType||"")
.indexOf("application/x-www-form-urlencoded")===0&&
rjsonp.test(s.data)&&"data"
);
if(jsonProp||s.dataTypes[0]==="jsonp"){
callbackName=s.jsonpCallback=jQuery.isFunction(s.jsonpCallback)?
s.jsonpCallback():
s.jsonpCallback;
if(jsonProp){
s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName);
}else if(s.jsonp!==false){
s.url+=(rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName;
}
s.converters["script json"]=function(){
if(!responseContainer){
jQuery.error(callbackName+" was not called");
}
return responseContainer[0];
};
s.dataTypes[0]="json";
overwritten=window[callbackName];
window[callbackName]=function(){
responseContainer=arguments;
};
jqXHR.always(function(){
if(overwritten===undefined){
jQuery(window).removeProp(callbackName);
}else{
window[callbackName]=overwritten;
}
if(s[callbackName]){
s.jsonpCallback=originalSettings.jsonpCallback;
oldCallbacks.push(callbackName);
}
if(responseContainer&&jQuery.isFunction(overwritten)){
overwritten(responseContainer[0]);
}
responseContainer=overwritten=undefined;
});
return"script";
}
});
jQuery.parseHTML=function(data,context,keepScripts){
if(!data||typeof data!=="string"){
return null;
}
if(typeof context==="boolean"){
keepScripts=context;
context=false;
}
context=context||document;
var parsed=rsingleTag.exec(data),
scripts=!keepScripts&&[];
if(parsed){
return[context.createElement(parsed[1])];
}
parsed=buildFragment([data],context,scripts);
if(scripts&&scripts.length){
jQuery(scripts).remove();
}
return jQuery.merge([],parsed.childNodes);
};
var _load=jQuery.fn.load;
jQuery.fn.load=function(url,params,callback){
if(typeof url!=="string"&&_load){
return _load.apply(this,arguments);
}
var selector,type,response,
self=this,
off=url.indexOf(" ");
if(off>-1){
selector=jQuery.trim(url.slice(off));
url=url.slice(0,off);
}
if(jQuery.isFunction(params)){
callback=params;
params=undefined;
}else if(params&&typeof params==="object"){
type="POST";
}
if(self.length>0){
jQuery.ajax({
url:url,
type:type||"GET",
dataType:"html",
data:params
}).done(function(responseText){
response=arguments;
self.html(selector?
jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):
responseText);
}).always(callback&&function(jqXHR,status){
self.each(function(){
callback.apply(this,response||[jqXHR.responseText,status,jqXHR]);
});
});
}
return this;
};
jQuery.each([
"ajaxStart",
"ajaxStop",
"ajaxComplete",
"ajaxError",
"ajaxSuccess",
"ajaxSend"
],function(i,type){
jQuery.fn[type]=function(fn){
return this.on(type,fn);
};
});
jQuery.expr.filters.animated=function(elem){
return jQuery.grep(jQuery.timers,function(fn){
return elem===fn.elem;
}).length;
};
function getWindow(elem){
return jQuery.isWindow(elem)?elem:elem.nodeType===9&&elem.defaultView;
}
jQuery.offset={
setOffset:function(elem,options,i){
var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,
position=jQuery.css(elem,"position"),
curElem=jQuery(elem),
props={};
if(position==="static"){
elem.style.position="relative";
}
curOffset=curElem.offset();
curCSSTop=jQuery.css(elem,"top");
curCSSLeft=jQuery.css(elem,"left");
calculatePosition=(position==="absolute"||position==="fixed")&&
(curCSSTop+curCSSLeft).indexOf("auto")>-1;
if(calculatePosition){
curPosition=curElem.position();
curTop=curPosition.top;
curLeft=curPosition.left;
}else{
curTop=parseFloat(curCSSTop)||0;
curLeft=parseFloat(curCSSLeft)||0;
}
if(jQuery.isFunction(options)){
options=options.call(elem,i,jQuery.extend({},curOffset));
}
if(options.top!=null){
props.top=(options.top-curOffset.top)+curTop;
}
if(options.left!=null){
props.left=(options.left-curOffset.left)+curLeft;
}
if("using"in options){
options.using.call(elem,props);
}else{
curElem.css(props);
}
}
};
jQuery.fn.extend({
offset:function(options){
if(arguments.length){
return options===undefined?
this:
this.each(function(i){
jQuery.offset.setOffset(this,options,i);
});
}
var docElem,win,
elem=this[0],
box={top:0,left:0},
doc=elem&&elem.ownerDocument;
if(!doc){
return;
}
docElem=doc.documentElement;
if(!jQuery.contains(docElem,elem)){
return box;
}
box=elem.getBoundingClientRect();
win=getWindow(doc);
return{
top:box.top+win.pageYOffset-docElem.clientTop,
left:box.left+win.pageXOffset-docElem.clientLeft
};
},
position:function(){
if(!this[0]){
return;
}
var offsetParent,offset,
elem=this[0],
parentOffset={top:0,left:0};
if(jQuery.css(elem,"position")==="fixed"){
offset=elem.getBoundingClientRect();
}else{
offsetParent=this.offsetParent();
offset=this.offset();
if(!jQuery.nodeName(offsetParent[0],"html")){
parentOffset=offsetParent.offset();
}
parentOffset.top+=jQuery.css(offsetParent[0],"borderTopWidth",true);
parentOffset.left+=jQuery.css(offsetParent[0],"borderLeftWidth",true);
}
return{
top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",true),
left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",true)
};
},
offsetParent:function(){
return this.map(function(){
var offsetParent=this.offsetParent;
while(offsetParent&&jQuery.css(offsetParent,"position")==="static"){
offsetParent=offsetParent.offsetParent;
}
return offsetParent||documentElement;
});
}
});
jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(method,prop){
var top="pageYOffset"===prop;
jQuery.fn[method]=function(val){
return access(this,function(elem,method,val){
var win=getWindow(elem);
if(val===undefined){
return win?win[prop]:elem[method];
}
if(win){
win.scrollTo(
!top?val:win.pageXOffset,
top?val:win.pageYOffset
);
}else{
elem[method]=val;
}
},method,val,arguments.length);
};
});
jQuery.each(["top","left"],function(i,prop){
jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,
function(elem,computed){
if(computed){
computed=curCSS(elem,prop);
return rnumnonpx.test(computed)?
jQuery(elem).position()[prop]+"px":
computed;
}
}
);
});
jQuery.each({Height:"height",Width:"width"},function(name,type){
jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},
function(defaultExtra,funcName){
jQuery.fn[funcName]=function(margin,value){
var chainable=arguments.length&&(defaultExtra||typeof margin!=="boolean"),
extra=defaultExtra||(margin===true||value===true?"margin":"border");
return access(this,function(elem,type,value){
var doc;
if(jQuery.isWindow(elem)){
return elem.document.documentElement["client"+name];
}
if(elem.nodeType===9){
doc=elem.documentElement;
return Math.max(
elem.body["scroll"+name],doc["scroll"+name],
elem.body["offset"+name],doc["offset"+name],
doc["client"+name]
);
}
return value===undefined?
jQuery.css(elem,type,extra):
jQuery.style(elem,type,value,extra);
},type,chainable?margin:undefined,chainable,null);
};
});
});
jQuery.fn.extend({
bind:function(types,data,fn){
return this.on(types,null,data,fn);
},
unbind:function(types,fn){
return this.off(types,null,fn);
},
delegate:function(selector,types,data,fn){
return this.on(types,selector,data,fn);
},
undelegate:function(selector,types,fn){
return arguments.length===1?
this.off(selector,"**"):
this.off(types,selector||"**",fn);
},
size:function(){
return this.length;
}
});
jQuery.fn.andSelf=jQuery.fn.addBack;
if(typeof define==="function"&&define.amd){
define("jquery",[],function(){
return jQuery;
});
}
var
_jQuery=window.jQuery,
_$=window.$;
jQuery.noConflict=function(deep){
if(window.$===jQuery){
window.$=_$;
}
if(deep&&window.jQuery===jQuery){
window.jQuery=_jQuery;
}
return jQuery;
};
if(!noGlobal){
window.jQuery=window.$=jQuery;
}
return jQuery;
}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/angular1/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/angular1/vendor/angular/angular.js";
(function(window){'use strict';
function minErr(module,ErrorConstructor){
ErrorConstructor=ErrorConstructor||Error;
return function(){
var SKIP_INDEXES=2;
var templateArgs=arguments,
code=templateArgs[0],
message='['+(module?module+':':'')+code+'] ',
template=templateArgs[1],
paramPrefix,i;
message+=template.replace(/\{\d+\}/g,function(match){
var index=+match.slice(1,-1),
shiftedIndex=index+SKIP_INDEXES;
if(shiftedIndex<templateArgs.length){
return toDebugString(templateArgs[shiftedIndex]);
}
return match;
});
message+='\nhttp://errors.angularjs.org/1.5.5/'+
(module?module+'/':'')+code;
for(i=SKIP_INDEXES,paramPrefix='?';i<templateArgs.length;i++,paramPrefix='&'){
message+=paramPrefix+'p'+(i-SKIP_INDEXES)+'='+
encodeURIComponent(toDebugString(templateArgs[i]));
}
return new ErrorConstructor(message);
};
}
var REGEX_STRING_REGEXP=/^\/(.+)\/([a-z]*)$/;
var VALIDITY_STATE_PROPERTY='validity';
var hasOwnProperty=Object.prototype.hasOwnProperty;
var lowercase=function(string){return isString(string)?string.toLowerCase():string;};
var uppercase=function(string){return isString(string)?string.toUpperCase():string;};
var manualLowercase=function(s){
return isString(s)
?s.replace(/[A-Z]/g,function(ch){return String.fromCharCode(ch.charCodeAt(0)|32);})
:s;
};
var manualUppercase=function(s){
return isString(s)
?s.replace(/[a-z]/g,function(ch){return String.fromCharCode(ch.charCodeAt(0)&~32);})
:s;
};
if('i'!=='I'.toLowerCase()){
lowercase=manualLowercase;
uppercase=manualUppercase;
}
var
msie,
jqLite,
jQuery,
slice=[].slice,
splice=[].splice,
push=[].push,
toString=Object.prototype.toString,
getPrototypeOf=Object.getPrototypeOf,
ngMinErr=minErr('ng'),
angular=window.angular||(window.angular={}),
angularModule,
uid=0;
msie=window.document.documentMode;
function isArrayLike(obj){
if(obj==null||isWindow(obj))return false;
if(isArray(obj)||isString(obj)||(jqLite&&obj instanceof jqLite))return true;
var length="length"in Object(obj)&&obj.length;
return isNumber(length)&&
(length>=0&&((length-1)in obj||obj instanceof Array)||typeof obj.item=='function');
}
function forEach(obj,iterator,context){
var key,length;
if(obj){
if(isFunction(obj)){
for(key in obj){
if(key!='prototype'&&key!='length'&&key!='name'&&(!obj.hasOwnProperty||obj.hasOwnProperty(key))){
iterator.call(context,obj[key],key,obj);
}
}
}else if(isArray(obj)||isArrayLike(obj)){
var isPrimitive=typeof obj!=='object';
for(key=0,length=obj.length;key<length;key++){
if(isPrimitive||key in obj){
iterator.call(context,obj[key],key,obj);
}
}
}else if(obj.forEach&&obj.forEach!==forEach){
obj.forEach(iterator,context,obj);
}else if(isBlankObject(obj)){
for(key in obj){
iterator.call(context,obj[key],key,obj);
}
}else if(typeof obj.hasOwnProperty==='function'){
for(key in obj){
if(obj.hasOwnProperty(key)){
iterator.call(context,obj[key],key,obj);
}
}
}else{
for(key in obj){
if(hasOwnProperty.call(obj,key)){
iterator.call(context,obj[key],key,obj);
}
}
}
}
return obj;
}
function forEachSorted(obj,iterator,context){
var keys=Object.keys(obj).sort();
for(var i=0;i<keys.length;i++){
iterator.call(context,obj[keys[i]],keys[i]);
}
return keys;
}
function reverseParams(iteratorFn){
return function(value,key){iteratorFn(key,value);};
}
function nextUid(){
return++uid;
}
function setHashKey(obj,h){
if(h){
obj.$$hashKey=h;
}else{
delete obj.$$hashKey;
}
}
function baseExtend(dst,objs,deep){
var h=dst.$$hashKey;
for(var i=0,ii=objs.length;i<ii;++i){
var obj=objs[i];
if(!isObject(obj)&&!isFunction(obj))continue;
var keys=Object.keys(obj);
for(var j=0,jj=keys.length;j<jj;j++){
var key=keys[j];
var src=obj[key];
if(deep&&isObject(src)){
if(isDate(src)){
dst[key]=new Date(src.valueOf());
}else if(isRegExp(src)){
dst[key]=new RegExp(src);
}else if(src.nodeName){
dst[key]=src.cloneNode(true);
}else if(isElement(src)){
dst[key]=src.clone();
}else{
if(!isObject(dst[key]))dst[key]=isArray(src)?[]:{};
baseExtend(dst[key],[src],true);
}
}else{
dst[key]=src;
}
}
}
setHashKey(dst,h);
return dst;
}
function extend(dst){
return baseExtend(dst,slice.call(arguments,1),false);
}
function merge(dst){
return baseExtend(dst,slice.call(arguments,1),true);
}
function toInt(str){
return parseInt(str,10);
}
function inherit(parent,extra){
return extend(Object.create(parent),extra);
}
function noop(){}
noop.$inject=[];
function identity($){return $;}
identity.$inject=[];
function valueFn(value){return function valueRef(){return value;};}
function hasCustomToString(obj){
return isFunction(obj.toString)&&obj.toString!==toString;
}
function isUndefined(value){return typeof value==='undefined';}
function isDefined(value){return typeof value!=='undefined';}
function isObject(value){
return value!==null&&typeof value==='object';
}
function isBlankObject(value){
return value!==null&&typeof value==='object'&&!getPrototypeOf(value);
}
function isString(value){return typeof value==='string';}
function isNumber(value){return typeof value==='number';}
function isDate(value){
return toString.call(value)==='[object Date]';
}
var isArray=Array.isArray;
function isFunction(value){return typeof value==='function';}
function isRegExp(value){
return toString.call(value)==='[object RegExp]';
}
function isWindow(obj){
return obj&&obj.window===obj;
}
function isScope(obj){
return obj&&obj.$evalAsync&&obj.$watch;
}
function isFile(obj){
return toString.call(obj)==='[object File]';
}
function isFormData(obj){
return toString.call(obj)==='[object FormData]';
}
function isBlob(obj){
return toString.call(obj)==='[object Blob]';
}
function isBoolean(value){
return typeof value==='boolean';
}
function isPromiseLike(obj){
return obj&&isFunction(obj.then);
}
var TYPED_ARRAY_REGEXP=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/;
function isTypedArray(value){
return value&&isNumber(value.length)&&TYPED_ARRAY_REGEXP.test(toString.call(value));
}
function isArrayBuffer(obj){
return toString.call(obj)==='[object ArrayBuffer]';
}
var trim=function(value){
return isString(value)?value.trim():value;
};
var escapeForRegexp=function(s){
return s.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,'\\$1').
replace(/\x08/g,'\\x08');
};
function isElement(node){
return!!(node&&
(node.nodeName
||(node.prop&&node.attr&&node.find)));
}
function makeMap(str){
var obj={},items=str.split(','),i;
for(i=0;i<items.length;i++){
obj[items[i]]=true;
}
return obj;
}
function nodeName_(element){
return lowercase(element.nodeName||(element[0]&&element[0].nodeName));
}
function includes(array,obj){
return Array.prototype.indexOf.call(array,obj)!=-1;
}
function arrayRemove(array,value){
var index=array.indexOf(value);
if(index>=0){
array.splice(index,1);
}
return index;
}
function copy(source,destination){
var stackSource=[];
var stackDest=[];
if(destination){
if(isTypedArray(destination)||isArrayBuffer(destination)){
throw ngMinErr('cpta',"Can't copy! TypedArray destination cannot be mutated.");
}
if(source===destination){
throw ngMinErr('cpi',"Can't copy! Source and destination are identical.");
}
if(isArray(destination)){
destination.length=0;
}else{
forEach(destination,function(value,key){
if(key!=='$$hashKey'){
delete destination[key];
}
});
}
stackSource.push(source);
stackDest.push(destination);
return copyRecurse(source,destination);
}
return copyElement(source);
function copyRecurse(source,destination){
var h=destination.$$hashKey;
var key;
if(isArray(source)){
for(var i=0,ii=source.length;i<ii;i++){
destination.push(copyElement(source[i]));
}
}else if(isBlankObject(source)){
for(key in source){
destination[key]=copyElement(source[key]);
}
}else if(source&&typeof source.hasOwnProperty==='function'){
for(key in source){
if(source.hasOwnProperty(key)){
destination[key]=copyElement(source[key]);
}
}
}else{
for(key in source){
if(hasOwnProperty.call(source,key)){
destination[key]=copyElement(source[key]);
}
}
}
setHashKey(destination,h);
return destination;
}
function copyElement(source){
if(!isObject(source)){
return source;
}
var index=stackSource.indexOf(source);
if(index!==-1){
return stackDest[index];
}
if(isWindow(source)||isScope(source)){
throw ngMinErr('cpws',
"Can't copy! Making copies of Window or Scope instances is not supported.");
}
var needsRecurse=false;
var destination=copyType(source);
if(destination===undefined){
destination=isArray(source)?[]:Object.create(getPrototypeOf(source));
needsRecurse=true;
}
stackSource.push(source);
stackDest.push(destination);
return needsRecurse
?copyRecurse(source,destination)
:destination;
}
function copyType(source){
switch(toString.call(source)){
case'[object Int8Array]':
case'[object Int16Array]':
case'[object Int32Array]':
case'[object Float32Array]':
case'[object Float64Array]':
case'[object Uint8Array]':
case'[object Uint8ClampedArray]':
case'[object Uint16Array]':
case'[object Uint32Array]':
return new source.constructor(copyElement(source.buffer));
case'[object ArrayBuffer]':
if(!source.slice){
var copied=new ArrayBuffer(source.byteLength);
new Uint8Array(copied).set(new Uint8Array(source));
return copied;
}
return source.slice(0);
case'[object Boolean]':
case'[object Number]':
case'[object String]':
case'[object Date]':
return new source.constructor(source.valueOf());
case'[object RegExp]':
var re=new RegExp(source.source,source.toString().match(/[^\/]*$/)[0]);
re.lastIndex=source.lastIndex;
return re;
case'[object Blob]':
return new source.constructor([source],{type:source.type});
}
if(isFunction(source.cloneNode)){
return source.cloneNode(true);
}
}
}
function shallowCopy(src,dst){
if(isArray(src)){
dst=dst||[];
for(var i=0,ii=src.length;i<ii;i++){
dst[i]=src[i];
}
}else if(isObject(src)){
dst=dst||{};
for(var key in src){
if(!(key.charAt(0)==='$'&&key.charAt(1)==='$')){
dst[key]=src[key];
}
}
}
return dst||src;
}
function equals(o1,o2){
if(o1===o2)return true;
if(o1===null||o2===null)return false;
if(o1!==o1&&o2!==o2)return true;
var t1=typeof o1,t2=typeof o2,length,key,keySet;
if(t1==t2&&t1=='object'){
if(isArray(o1)){
if(!isArray(o2))return false;
if((length=o1.length)==o2.length){
for(key=0;key<length;key++){
if(!equals(o1[key],o2[key]))return false;
}
return true;
}
}else if(isDate(o1)){
if(!isDate(o2))return false;
return equals(o1.getTime(),o2.getTime());
}else if(isRegExp(o1)){
if(!isRegExp(o2))return false;
return o1.toString()==o2.toString();
}else{
if(isScope(o1)||isScope(o2)||isWindow(o1)||isWindow(o2)||
isArray(o2)||isDate(o2)||isRegExp(o2))return false;
keySet=createMap();
for(key in o1){
if(key.charAt(0)==='$'||isFunction(o1[key]))continue;
if(!equals(o1[key],o2[key]))return false;
keySet[key]=true;
}
for(key in o2){
if(!(key in keySet)&&
key.charAt(0)!=='$'&&
isDefined(o2[key])&&
!isFunction(o2[key]))return false;
}
return true;
}
}
return false;
}
var csp=function(){
if(!isDefined(csp.rules)){
var ngCspElement=(window.document.querySelector('[ng-csp]')||
window.document.querySelector('[data-ng-csp]'));
if(ngCspElement){
var ngCspAttribute=ngCspElement.getAttribute('ng-csp')||
ngCspElement.getAttribute('data-ng-csp');
csp.rules={
noUnsafeEval:!ngCspAttribute||(ngCspAttribute.indexOf('no-unsafe-eval')!==-1),
noInlineStyle:!ngCspAttribute||(ngCspAttribute.indexOf('no-inline-style')!==-1)
};
}else{
csp.rules={
noUnsafeEval:noUnsafeEval(),
noInlineStyle:false
};
}
}
return csp.rules;
function noUnsafeEval(){
try{
new Function('');
return false;
}catch(e){
return true;
}
}
};
var jq=function(){
if(isDefined(jq.name_))return jq.name_;
var el;
var i,ii=ngAttrPrefixes.length,prefix,name;
for(i=0;i<ii;++i){
prefix=ngAttrPrefixes[i];
if(el=window.document.querySelector('['+prefix.replace(':','\\:')+'jq]')){
name=el.getAttribute(prefix+'jq');
break;
}
}
return(jq.name_=name);
};
function concat(array1,array2,index){
return array1.concat(slice.call(array2,index));
}
function sliceArgs(args,startIndex){
return slice.call(args,startIndex||0);
}
function bind(self,fn){
var curryArgs=arguments.length>2?sliceArgs(arguments,2):[];
if(isFunction(fn)&&!(fn instanceof RegExp)){
return curryArgs.length
?function(){
return arguments.length
?fn.apply(self,concat(curryArgs,arguments,0))
:fn.apply(self,curryArgs);
}
:function(){
return arguments.length
?fn.apply(self,arguments)
:fn.call(self);
};
}else{
return fn;
}
}
function toJsonReplacer(key,value){
var val=value;
if(typeof key==='string'&&key.charAt(0)==='$'&&key.charAt(1)==='$'){
val=undefined;
}else if(isWindow(value)){
val='$WINDOW';
}else if(value&&window.document===value){
val='$DOCUMENT';
}else if(isScope(value)){
val='$SCOPE';
}
return val;
}
function toJson(obj,pretty){
if(isUndefined(obj))return undefined;
if(!isNumber(pretty)){
pretty=pretty?2:null;
}
return JSON.stringify(obj,toJsonReplacer,pretty);
}
function fromJson(json){
return isString(json)
?JSON.parse(json)
:json;
}
var ALL_COLONS=/:/g;
function timezoneToOffset(timezone,fallback){
timezone=timezone.replace(ALL_COLONS,'');
var requestedTimezoneOffset=Date.parse('Jan 01, 1970 00:00:00 '+timezone)/60000;
return isNaN(requestedTimezoneOffset)?fallback:requestedTimezoneOffset;
}
function addDateMinutes(date,minutes){
date=new Date(date.getTime());
date.setMinutes(date.getMinutes()+minutes);
return date;
}
function convertTimezoneToLocal(date,timezone,reverse){
reverse=reverse?-1:1;
var dateTimezoneOffset=date.getTimezoneOffset();
var timezoneOffset=timezoneToOffset(timezone,dateTimezoneOffset);
return addDateMinutes(date,reverse*(timezoneOffset-dateTimezoneOffset));
}
function startingTag(element){
element=jqLite(element).clone();
try{
element.empty();
}catch(e){}
var elemHtml=jqLite('<div>').append(element).html();
try{
return element[0].nodeType===NODE_TYPE_TEXT?lowercase(elemHtml):
elemHtml.
match(/^(<[^>]+>)/)[1].
replace(/^<([\w\-]+)/,function(match,nodeName){return'<'+lowercase(nodeName);});
}catch(e){
return lowercase(elemHtml);
}
}
function tryDecodeURIComponent(value){
try{
return decodeURIComponent(value);
}catch(e){
}
}
function parseKeyValue(keyValue){
var obj={};
forEach((keyValue||"").split('&'),function(keyValue){
var splitPoint,key,val;
if(keyValue){
key=keyValue=keyValue.replace(/\+/g,'%20');
splitPoint=keyValue.indexOf('=');
if(splitPoint!==-1){
key=keyValue.substring(0,splitPoint);
val=keyValue.substring(splitPoint+1);
}
key=tryDecodeURIComponent(key);
if(isDefined(key)){
val=isDefined(val)?tryDecodeURIComponent(val):true;
if(!hasOwnProperty.call(obj,key)){
obj[key]=val;
}else if(isArray(obj[key])){
obj[key].push(val);
}else{
obj[key]=[obj[key],val];
}
}
}
});
return obj;
}
function toKeyValue(obj){
var parts=[];
forEach(obj,function(value,key){
if(isArray(value)){
forEach(value,function(arrayValue){
parts.push(encodeUriQuery(key,true)+
(arrayValue===true?'':'='+encodeUriQuery(arrayValue,true)));
});
}else{
parts.push(encodeUriQuery(key,true)+
(value===true?'':'='+encodeUriQuery(value,true)));
}
});
return parts.length?parts.join('&'):'';
}
function encodeUriSegment(val){
return encodeUriQuery(val,true).
replace(/%26/gi,'&').
replace(/%3D/gi,'=').
replace(/%2B/gi,'+');
}
function encodeUriQuery(val,pctEncodeSpaces){
return encodeURIComponent(val).
replace(/%40/gi,'@').
replace(/%3A/gi,':').
replace(/%24/g,'$').
replace(/%2C/gi,',').
replace(/%3B/gi,';').
replace(/%20/g,(pctEncodeSpaces?'%20':'+'));
}
var ngAttrPrefixes=['ng-','data-ng-','ng:','x-ng-'];
function getNgAttribute(element,ngAttr){
var attr,i,ii=ngAttrPrefixes.length;
for(i=0;i<ii;++i){
attr=ngAttrPrefixes[i]+ngAttr;
if(isString(attr=element.getAttribute(attr))){
return attr;
}
}
return null;
}
function angularInit(element,bootstrap){
var appElement,
module,
config={};
forEach(ngAttrPrefixes,function(prefix){
var name=prefix+'app';
if(!appElement&&element.hasAttribute&&element.hasAttribute(name)){
appElement=element;
module=element.getAttribute(name);
}
});
forEach(ngAttrPrefixes,function(prefix){
var name=prefix+'app';
var candidate;
if(!appElement&&(candidate=element.querySelector('['+name.replace(':','\\:')+']'))){
appElement=candidate;
module=candidate.getAttribute(name);
}
});
if(appElement){
config.strictDi=getNgAttribute(appElement,"strict-di")!==null;
bootstrap(appElement,module?[module]:[],config);
}
}
function bootstrap(element,modules,config){
if(!isObject(config))config={};
var defaultConfig={
strictDi:false
};
config=extend(defaultConfig,config);
var doBootstrap=function(){
element=jqLite(element);
if(element.injector()){
var tag=(element[0]===window.document)?'document':startingTag(element);
throw ngMinErr(
'btstrpd',
"App already bootstrapped with this element '{0}'",
tag.replace(/</,'&lt;').replace(/>/,'&gt;'));
}
modules=modules||[];
modules.unshift(['$provide',function($provide){
$provide.value('$rootElement',element);
}]);
if(config.debugInfoEnabled){
modules.push(['$compileProvider',function($compileProvider){
$compileProvider.debugInfoEnabled(true);
}]);
}
modules.unshift('ng');
var injector=createInjector(modules,config.strictDi);
injector.invoke(['$rootScope','$rootElement','$compile','$injector',
function bootstrapApply(scope,element,compile,injector){
scope.$apply(function(){
element.data('$injector',injector);
compile(element)(scope);
});
}]
);
return injector;
};
var NG_ENABLE_DEBUG_INFO=/^NG_ENABLE_DEBUG_INFO!/;
var NG_DEFER_BOOTSTRAP=/^NG_DEFER_BOOTSTRAP!/;
if(window&&NG_ENABLE_DEBUG_INFO.test(window.name)){
config.debugInfoEnabled=true;
window.name=window.name.replace(NG_ENABLE_DEBUG_INFO,'');
}
if(window&&!NG_DEFER_BOOTSTRAP.test(window.name)){
return doBootstrap();
}
window.name=window.name.replace(NG_DEFER_BOOTSTRAP,'');
angular.resumeBootstrap=function(extraModules){
forEach(extraModules,function(module){
modules.push(module);
});
return doBootstrap();
};
if(isFunction(angular.resumeDeferredBootstrap)){
angular.resumeDeferredBootstrap();
}
}
function reloadWithDebugInfo(){
window.name='NG_ENABLE_DEBUG_INFO!'+window.name;
window.location.reload();
}
function getTestability(rootElement){
var injector=angular.element(rootElement).injector();
if(!injector){
throw ngMinErr('test',
'no injector found for element argument to getTestability');
}
return injector.get('$$testability');
}
var SNAKE_CASE_REGEXP=/[A-Z]/g;
function snake_case(name,separator){
separator=separator||'_';
return name.replace(SNAKE_CASE_REGEXP,function(letter,pos){
return(pos?separator:'')+letter.toLowerCase();
});
}
var bindJQueryFired=false;
function bindJQuery(){
var originalCleanData;
if(bindJQueryFired){
return;
}
var jqName=jq();
jQuery=isUndefined(jqName)?window.jQuery:
!jqName?undefined:
window[jqName];
if(jQuery&&jQuery.fn.on){
jqLite=jQuery;
extend(jQuery.fn,{
scope:JQLitePrototype.scope,
isolateScope:JQLitePrototype.isolateScope,
controller:JQLitePrototype.controller,
injector:JQLitePrototype.injector,
inheritedData:JQLitePrototype.inheritedData
});
originalCleanData=jQuery.cleanData;
jQuery.cleanData=function(elems){
var events;
for(var i=0,elem;(elem=elems[i])!=null;i++){
events=jQuery._data(elem,"events");
if(events&&events.$destroy){
jQuery(elem).triggerHandler('$destroy');
}
}
originalCleanData(elems);
};
}else{
jqLite=JQLite;
}
angular.element=jqLite;
bindJQueryFired=true;
}
function assertArg(arg,name,reason){
if(!arg){
throw ngMinErr('areq',"Argument '{0}' is {1}",(name||'?'),(reason||"required"));
}
return arg;
}
function assertArgFn(arg,name,acceptArrayAnnotation){
if(acceptArrayAnnotation&&isArray(arg)){
arg=arg[arg.length-1];
}
assertArg(isFunction(arg),name,'not a function, got '+
(arg&&typeof arg==='object'?arg.constructor.name||'Object':typeof arg));
return arg;
}
function assertNotHasOwnProperty(name,context){
if(name==='hasOwnProperty'){
throw ngMinErr('badname',"hasOwnProperty is not a valid {0} name",context);
}
}
function getter(obj,path,bindFnToScope){
if(!path)return obj;
var keys=path.split('.');
var key;
var lastInstance=obj;
var len=keys.length;
for(var i=0;i<len;i++){
key=keys[i];
if(obj){
obj=(lastInstance=obj)[key];
}
}
if(!bindFnToScope&&isFunction(obj)){
return bind(lastInstance,obj);
}
return obj;
}
function getBlockNodes(nodes){
var node=nodes[0];
var endNode=nodes[nodes.length-1];
var blockNodes;
for(var i=1;node!==endNode&&(node=node.nextSibling);i++){
if(blockNodes||nodes[i]!==node){
if(!blockNodes){
blockNodes=jqLite(slice.call(nodes,0,i));
}
blockNodes.push(node);
}
}
return blockNodes||nodes;
}
function createMap(){
return Object.create(null);
}
var NODE_TYPE_ELEMENT=1;
var NODE_TYPE_ATTRIBUTE=2;
var NODE_TYPE_TEXT=3;
var NODE_TYPE_COMMENT=8;
var NODE_TYPE_DOCUMENT=9;
var NODE_TYPE_DOCUMENT_FRAGMENT=11;
function setupModuleLoader(window){
var $injectorMinErr=minErr('$injector');
var ngMinErr=minErr('ng');
function ensure(obj,name,factory){
return obj[name]||(obj[name]=factory());
}
var angular=ensure(window,'angular',Object);
angular.$$minErr=angular.$$minErr||minErr;
return ensure(angular,'module',function(){
var modules={};
return function module(name,requires,configFn){
var assertNotHasOwnProperty=function(name,context){
if(name==='hasOwnProperty'){
throw ngMinErr('badname','hasOwnProperty is not a valid {0} name',context);
}
};
assertNotHasOwnProperty(name,'module');
if(requires&&modules.hasOwnProperty(name)){
modules[name]=null;
}
return ensure(modules,name,function(){
if(!requires){
throw $injectorMinErr('nomod',"Module '{0}' is not available! You either misspelled "+
"the module name or forgot to load it. If registering a module ensure that you "+
"specify the dependencies as the second argument.",name);
}
var invokeQueue=[];
var configBlocks=[];
var runBlocks=[];
var config=invokeLater('$injector','invoke','push',configBlocks);
var moduleInstance={
_invokeQueue:invokeQueue,
_configBlocks:configBlocks,
_runBlocks:runBlocks,
requires:requires,
name:name,
provider:invokeLaterAndSetModuleName('$provide','provider'),
factory:invokeLaterAndSetModuleName('$provide','factory'),
service:invokeLaterAndSetModuleName('$provide','service'),
value:invokeLater('$provide','value'),
constant:invokeLater('$provide','constant','unshift'),
decorator:invokeLaterAndSetModuleName('$provide','decorator'),
animation:invokeLaterAndSetModuleName('$animateProvider','register'),
filter:invokeLaterAndSetModuleName('$filterProvider','register'),
controller:invokeLaterAndSetModuleName('$controllerProvider','register'),
directive:invokeLaterAndSetModuleName('$compileProvider','directive'),
component:invokeLaterAndSetModuleName('$compileProvider','component'),
config:config,
run:function(block){
runBlocks.push(block);
return this;
}
};
if(configFn){
config(configFn);
}
return moduleInstance;
function invokeLater(provider,method,insertMethod,queue){
if(!queue)queue=invokeQueue;
return function(){
queue[insertMethod||'push']([provider,method,arguments]);
return moduleInstance;
};
}
function invokeLaterAndSetModuleName(provider,method){
return function(recipeName,factoryFunction){
if(factoryFunction&&isFunction(factoryFunction))factoryFunction.$$moduleName=name;
invokeQueue.push([provider,method,arguments]);
return moduleInstance;
};
}
});
};
});
}
function serializeObject(obj){
var seen=[];
return JSON.stringify(obj,function(key,val){
val=toJsonReplacer(key,val);
if(isObject(val)){
if(seen.indexOf(val)>=0)return'...';
seen.push(val);
}
return val;
});
}
function toDebugString(obj){
if(typeof obj==='function'){
return obj.toString().replace(/ \{[\s\S]*$/,'');
}else if(isUndefined(obj)){
return'undefined';
}else if(typeof obj!=='string'){
return serializeObject(obj);
}
return obj;
}
var version={
full:'1.5.5',
major:1,
minor:5,
dot:5,
codeName:'material-conspiration'
};
function publishExternalAPI(angular){
extend(angular,{
'bootstrap':bootstrap,
'copy':copy,
'extend':extend,
'merge':merge,
'equals':equals,
'element':jqLite,
'forEach':forEach,
'injector':createInjector,
'noop':noop,
'bind':bind,
'toJson':toJson,
'fromJson':fromJson,
'identity':identity,
'isUndefined':isUndefined,
'isDefined':isDefined,
'isString':isString,
'isFunction':isFunction,
'isObject':isObject,
'isNumber':isNumber,
'isElement':isElement,
'isArray':isArray,
'version':version,
'isDate':isDate,
'lowercase':lowercase,
'uppercase':uppercase,
'callbacks':{counter:0},
'getTestability':getTestability,
'$$minErr':minErr,
'$$csp':csp,
'reloadWithDebugInfo':reloadWithDebugInfo
});
angularModule=setupModuleLoader(window);
angularModule('ng',['ngLocale'],['$provide',
function ngModule($provide){
$provide.provider({
$$sanitizeUri:$$SanitizeUriProvider
});
$provide.provider('$compile',$CompileProvider).
directive({
a:htmlAnchorDirective,
input:inputDirective,
textarea:inputDirective,
form:formDirective,
script:scriptDirective,
select:selectDirective,
style:styleDirective,
option:optionDirective,
ngBind:ngBindDirective,
ngBindHtml:ngBindHtmlDirective,
ngBindTemplate:ngBindTemplateDirective,
ngClass:ngClassDirective,
ngClassEven:ngClassEvenDirective,
ngClassOdd:ngClassOddDirective,
ngCloak:ngCloakDirective,
ngController:ngControllerDirective,
ngForm:ngFormDirective,
ngHide:ngHideDirective,
ngIf:ngIfDirective,
ngInclude:ngIncludeDirective,
ngInit:ngInitDirective,
ngNonBindable:ngNonBindableDirective,
ngPluralize:ngPluralizeDirective,
ngRepeat:ngRepeatDirective,
ngShow:ngShowDirective,
ngStyle:ngStyleDirective,
ngSwitch:ngSwitchDirective,
ngSwitchWhen:ngSwitchWhenDirective,
ngSwitchDefault:ngSwitchDefaultDirective,
ngOptions:ngOptionsDirective,
ngTransclude:ngTranscludeDirective,
ngModel:ngModelDirective,
ngList:ngListDirective,
ngChange:ngChangeDirective,
pattern:patternDirective,
ngPattern:patternDirective,
required:requiredDirective,
ngRequired:requiredDirective,
minlength:minlengthDirective,
ngMinlength:minlengthDirective,
maxlength:maxlengthDirective,
ngMaxlength:maxlengthDirective,
ngValue:ngValueDirective,
ngModelOptions:ngModelOptionsDirective
}).
directive({
ngInclude:ngIncludeFillContentDirective
}).
directive(ngAttributeAliasDirectives).
directive(ngEventDirectives);
$provide.provider({
$anchorScroll:$AnchorScrollProvider,
$animate:$AnimateProvider,
$animateCss:$CoreAnimateCssProvider,
$$animateJs:$$CoreAnimateJsProvider,
$$animateQueue:$$CoreAnimateQueueProvider,
$$AnimateRunner:$$AnimateRunnerFactoryProvider,
$$animateAsyncRun:$$AnimateAsyncRunFactoryProvider,
$browser:$BrowserProvider,
$cacheFactory:$CacheFactoryProvider,
$controller:$ControllerProvider,
$document:$DocumentProvider,
$exceptionHandler:$ExceptionHandlerProvider,
$filter:$FilterProvider,
$$forceReflow:$$ForceReflowProvider,
$interpolate:$InterpolateProvider,
$interval:$IntervalProvider,
$http:$HttpProvider,
$httpParamSerializer:$HttpParamSerializerProvider,
$httpParamSerializerJQLike:$HttpParamSerializerJQLikeProvider,
$httpBackend:$HttpBackendProvider,
$xhrFactory:$xhrFactoryProvider,
$location:$LocationProvider,
$log:$LogProvider,
$parse:$ParseProvider,
$rootScope:$RootScopeProvider,
$q:$QProvider,
$$q:$$QProvider,
$sce:$SceProvider,
$sceDelegate:$SceDelegateProvider,
$sniffer:$SnifferProvider,
$templateCache:$TemplateCacheProvider,
$templateRequest:$TemplateRequestProvider,
$$testability:$$TestabilityProvider,
$timeout:$TimeoutProvider,
$window:$WindowProvider,
$$rAF:$$RAFProvider,
$$jqLite:$$jqLiteProvider,
$$HashMap:$$HashMapProvider,
$$cookieReader:$$CookieReaderProvider
});
}
]);
}
JQLite.expando='ng339';
var jqCache=JQLite.cache={},
jqId=1,
addEventListenerFn=function(element,type,fn){
element.addEventListener(type,fn,false);
},
removeEventListenerFn=function(element,type,fn){
element.removeEventListener(type,fn,false);
};
JQLite._data=function(node){
return this.cache[node[this.expando]]||{};
};
function jqNextId(){return++jqId;}
var SPECIAL_CHARS_REGEXP=/([\:\-\_]+(.))/g;
var MOZ_HACK_REGEXP=/^moz([A-Z])/;
var MOUSE_EVENT_MAP={mouseleave:"mouseout",mouseenter:"mouseover"};
var jqLiteMinErr=minErr('jqLite');
function camelCase(name){
return name.
replace(SPECIAL_CHARS_REGEXP,function(_,separator,letter,offset){
return offset?letter.toUpperCase():letter;
}).
replace(MOZ_HACK_REGEXP,'Moz$1');
}
var SINGLE_TAG_REGEXP=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
var HTML_REGEXP=/<|&#?\w+;/;
var TAG_NAME_REGEXP=/<([\w:-]+)/;
var XHTML_TAG_REGEXP=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi;
var wrapMap={
'option':[1,'<select multiple="multiple">','</select>'],
'thead':[1,'<table>','</table>'],
'col':[2,'<table><colgroup>','</colgroup></table>'],
'tr':[2,'<table><tbody>','</tbody></table>'],
'td':[3,'<table><tbody><tr>','</tr></tbody></table>'],
'_default':[0,"",""]
};
wrapMap.optgroup=wrapMap.option;
wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;
wrapMap.th=wrapMap.td;
function jqLiteIsTextNode(html){
return!HTML_REGEXP.test(html);
}
function jqLiteAcceptsData(node){
var nodeType=node.nodeType;
return nodeType===NODE_TYPE_ELEMENT||!nodeType||nodeType===NODE_TYPE_DOCUMENT;
}
function jqLiteHasData(node){
for(var key in jqCache[node.ng339]){
return true;
}
return false;
}
function jqLiteCleanData(nodes){
for(var i=0,ii=nodes.length;i<ii;i++){
jqLiteRemoveData(nodes[i]);
}
}
function jqLiteBuildFragment(html,context){
var tmp,tag,wrap,
fragment=context.createDocumentFragment(),
nodes=[],i;
if(jqLiteIsTextNode(html)){
nodes.push(context.createTextNode(html));
}else{
tmp=tmp||fragment.appendChild(context.createElement("div"));
tag=(TAG_NAME_REGEXP.exec(html)||["",""])[1].toLowerCase();
wrap=wrapMap[tag]||wrapMap._default;
tmp.innerHTML=wrap[1]+html.replace(XHTML_TAG_REGEXP,"<$1></$2>")+wrap[2];
i=wrap[0];
while(i--){
tmp=tmp.lastChild;
}
nodes=concat(nodes,tmp.childNodes);
tmp=fragment.firstChild;
tmp.textContent="";
}
fragment.textContent="";
fragment.innerHTML="";
forEach(nodes,function(node){
fragment.appendChild(node);
});
return fragment;
}
function jqLiteParseHTML(html,context){
context=context||window.document;
var parsed;
if((parsed=SINGLE_TAG_REGEXP.exec(html))){
return[context.createElement(parsed[1])];
}
if((parsed=jqLiteBuildFragment(html,context))){
return parsed.childNodes;
}
return[];
}
function jqLiteWrapNode(node,wrapper){
var parent=node.parentNode;
if(parent){
parent.replaceChild(wrapper,node);
}
wrapper.appendChild(node);
}
var jqLiteContains=window.Node.prototype.contains||function(arg){
return!!(this.compareDocumentPosition(arg)&16);
};
function JQLite(element){
if(element instanceof JQLite){
return element;
}
var argIsString;
if(isString(element)){
element=trim(element);
argIsString=true;
}
if(!(this instanceof JQLite)){
if(argIsString&&element.charAt(0)!='<'){
throw jqLiteMinErr('nosel','Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');
}
return new JQLite(element);
}
if(argIsString){
jqLiteAddNodes(this,jqLiteParseHTML(element));
}else{
jqLiteAddNodes(this,element);
}
}
function jqLiteClone(element){
return element.cloneNode(true);
}
function jqLiteDealoc(element,onlyDescendants){
if(!onlyDescendants)jqLiteRemoveData(element);
if(element.querySelectorAll){
var descendants=element.querySelectorAll('*');
for(var i=0,l=descendants.length;i<l;i++){
jqLiteRemoveData(descendants[i]);
}
}
}
function jqLiteOff(element,type,fn,unsupported){
if(isDefined(unsupported))throw jqLiteMinErr('offargs','jqLite#off() does not support the `selector` argument');
var expandoStore=jqLiteExpandoStore(element);
var events=expandoStore&&expandoStore.events;
var handle=expandoStore&&expandoStore.handle;
if(!handle)return;
if(!type){
for(type in events){
if(type!=='$destroy'){
removeEventListenerFn(element,type,handle);
}
delete events[type];
}
}else{
var removeHandler=function(type){
var listenerFns=events[type];
if(isDefined(fn)){
arrayRemove(listenerFns||[],fn);
}
if(!(isDefined(fn)&&listenerFns&&listenerFns.length>0)){
removeEventListenerFn(element,type,handle);
delete events[type];
}
};
forEach(type.split(' '),function(type){
removeHandler(type);
if(MOUSE_EVENT_MAP[type]){
removeHandler(MOUSE_EVENT_MAP[type]);
}
});
}
}
function jqLiteRemoveData(element,name){
var expandoId=element.ng339;
var expandoStore=expandoId&&jqCache[expandoId];
if(expandoStore){
if(name){
delete expandoStore.data[name];
return;
}
if(expandoStore.handle){
if(expandoStore.events.$destroy){
expandoStore.handle({},'$destroy');
}
jqLiteOff(element);
}
delete jqCache[expandoId];
element.ng339=undefined;
}
}
function jqLiteExpandoStore(element,createIfNecessary){
var expandoId=element.ng339,
expandoStore=expandoId&&jqCache[expandoId];
if(createIfNecessary&&!expandoStore){
element.ng339=expandoId=jqNextId();
expandoStore=jqCache[expandoId]={events:{},data:{},handle:undefined};
}
return expandoStore;
}
function jqLiteData(element,key,value){
if(jqLiteAcceptsData(element)){
var isSimpleSetter=isDefined(value);
var isSimpleGetter=!isSimpleSetter&&key&&!isObject(key);
var massGetter=!key;
var expandoStore=jqLiteExpandoStore(element,!isSimpleGetter);
var data=expandoStore&&expandoStore.data;
if(isSimpleSetter){
data[key]=value;
}else{
if(massGetter){
return data;
}else{
if(isSimpleGetter){
return data&&data[key];
}else{
extend(data,key);
}
}
}
}
}
function jqLiteHasClass(element,selector){
if(!element.getAttribute)return false;
return((" "+(element.getAttribute('class')||'')+" ").replace(/[\n\t]/g," ").
indexOf(" "+selector+" ")>-1);
}
function jqLiteRemoveClass(element,cssClasses){
if(cssClasses&&element.setAttribute){
forEach(cssClasses.split(' '),function(cssClass){
element.setAttribute('class',trim(
(" "+(element.getAttribute('class')||'')+" ")
.replace(/[\n\t]/g," ")
.replace(" "+trim(cssClass)+" "," "))
);
});
}
}
function jqLiteAddClass(element,cssClasses){
if(cssClasses&&element.setAttribute){
var existingClasses=(' '+(element.getAttribute('class')||'')+' ')
.replace(/[\n\t]/g," ");
forEach(cssClasses.split(' '),function(cssClass){
cssClass=trim(cssClass);
if(existingClasses.indexOf(' '+cssClass+' ')===-1){
existingClasses+=cssClass+' ';
}
});
element.setAttribute('class',trim(existingClasses));
}
}
function jqLiteAddNodes(root,elements){
if(elements){
if(elements.nodeType){
root[root.length++]=elements;
}else{
var length=elements.length;
if(typeof length==='number'&&elements.window!==elements){
if(length){
for(var i=0;i<length;i++){
root[root.length++]=elements[i];
}
}
}else{
root[root.length++]=elements;
}
}
}
}
function jqLiteController(element,name){
return jqLiteInheritedData(element,'$'+(name||'ngController')+'Controller');
}
function jqLiteInheritedData(element,name,value){
if(element.nodeType==NODE_TYPE_DOCUMENT){
element=element.documentElement;
}
var names=isArray(name)?name:[name];
while(element){
for(var i=0,ii=names.length;i<ii;i++){
if(isDefined(value=jqLite.data(element,names[i])))return value;
}
element=element.parentNode||(element.nodeType===NODE_TYPE_DOCUMENT_FRAGMENT&&element.host);
}
}
function jqLiteEmpty(element){
jqLiteDealoc(element,true);
while(element.firstChild){
element.removeChild(element.firstChild);
}
}
function jqLiteRemove(element,keepData){
if(!keepData)jqLiteDealoc(element);
var parent=element.parentNode;
if(parent)parent.removeChild(element);
}
function jqLiteDocumentLoaded(action,win){
win=win||window;
if(win.document.readyState==='complete'){
win.setTimeout(action);
}else{
jqLite(win).on('load',action);
}
}
var JQLitePrototype=JQLite.prototype={
ready:function(fn){
var fired=false;
function trigger(){
if(fired)return;
fired=true;
fn();
}
if(window.document.readyState==='complete'){
window.setTimeout(trigger);
}else{
this.on('DOMContentLoaded',trigger);
JQLite(window).on('load',trigger);
}
},
toString:function(){
var value=[];
forEach(this,function(e){value.push(''+e);});
return'['+value.join(', ')+']';
},
eq:function(index){
return(index>=0)?jqLite(this[index]):jqLite(this[this.length+index]);
},
length:0,
push:push,
sort:[].sort,
splice:[].splice
};
var BOOLEAN_ATTR={};
forEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','),function(value){
BOOLEAN_ATTR[lowercase(value)]=value;
});
var BOOLEAN_ELEMENTS={};
forEach('input,select,option,textarea,button,form,details'.split(','),function(value){
BOOLEAN_ELEMENTS[value]=true;
});
var ALIASED_ATTR={
'ngMinlength':'minlength',
'ngMaxlength':'maxlength',
'ngMin':'min',
'ngMax':'max',
'ngPattern':'pattern'
};
function getBooleanAttrName(element,name){
var booleanAttr=BOOLEAN_ATTR[name.toLowerCase()];
return booleanAttr&&BOOLEAN_ELEMENTS[nodeName_(element)]&&booleanAttr;
}
function getAliasedAttrName(name){
return ALIASED_ATTR[name];
}
forEach({
data:jqLiteData,
removeData:jqLiteRemoveData,
hasData:jqLiteHasData,
cleanData:jqLiteCleanData
},function(fn,name){
JQLite[name]=fn;
});
forEach({
data:jqLiteData,
inheritedData:jqLiteInheritedData,
scope:function(element){
return jqLite.data(element,'$scope')||jqLiteInheritedData(element.parentNode||element,['$isolateScope','$scope']);
},
isolateScope:function(element){
return jqLite.data(element,'$isolateScope')||jqLite.data(element,'$isolateScopeNoTemplate');
},
controller:jqLiteController,
injector:function(element){
return jqLiteInheritedData(element,'$injector');
},
removeAttr:function(element,name){
element.removeAttribute(name);
},
hasClass:jqLiteHasClass,
css:function(element,name,value){
name=camelCase(name);
if(isDefined(value)){
element.style[name]=value;
}else{
return element.style[name];
}
},
attr:function(element,name,value){
var nodeType=element.nodeType;
if(nodeType===NODE_TYPE_TEXT||nodeType===NODE_TYPE_ATTRIBUTE||nodeType===NODE_TYPE_COMMENT){
return;
}
var lowercasedName=lowercase(name);
if(BOOLEAN_ATTR[lowercasedName]){
if(isDefined(value)){
if(!!value){
element[name]=true;
element.setAttribute(name,lowercasedName);
}else{
element[name]=false;
element.removeAttribute(lowercasedName);
}
}else{
return(element[name]||
(element.attributes.getNamedItem(name)||noop).specified)
?lowercasedName
:undefined;
}
}else if(isDefined(value)){
element.setAttribute(name,value);
}else if(element.getAttribute){
var ret=element.getAttribute(name,2);
return ret===null?undefined:ret;
}
},
prop:function(element,name,value){
if(isDefined(value)){
element[name]=value;
}else{
return element[name];
}
},
text:(function(){
getText.$dv='';
return getText;
function getText(element,value){
if(isUndefined(value)){
var nodeType=element.nodeType;
return(nodeType===NODE_TYPE_ELEMENT||nodeType===NODE_TYPE_TEXT)?element.textContent:'';
}
element.textContent=value;
}
})(),
val:function(element,value){
if(isUndefined(value)){
if(element.multiple&&nodeName_(element)==='select'){
var result=[];
forEach(element.options,function(option){
if(option.selected){
result.push(option.value||option.text);
}
});
return result.length===0?null:result;
}
return element.value;
}
element.value=value;
},
html:function(element,value){
if(isUndefined(value)){
return element.innerHTML;
}
jqLiteDealoc(element,true);
element.innerHTML=value;
},
empty:jqLiteEmpty
},function(fn,name){
JQLite.prototype[name]=function(arg1,arg2){
var i,key;
var nodeCount=this.length;
if(fn!==jqLiteEmpty&&
(isUndefined((fn.length==2&&(fn!==jqLiteHasClass&&fn!==jqLiteController))?arg1:arg2))){
if(isObject(arg1)){
for(i=0;i<nodeCount;i++){
if(fn===jqLiteData){
fn(this[i],arg1);
}else{
for(key in arg1){
fn(this[i],key,arg1[key]);
}
}
}
return this;
}else{
var value=fn.$dv;
var jj=(isUndefined(value))?Math.min(nodeCount,1):nodeCount;
for(var j=0;j<jj;j++){
var nodeValue=fn(this[j],arg1,arg2);
value=value?value+nodeValue:nodeValue;
}
return value;
}
}else{
for(i=0;i<nodeCount;i++){
fn(this[i],arg1,arg2);
}
return this;
}
};
});
function createEventHandler(element,events){
var eventHandler=function(event,type){
event.isDefaultPrevented=function(){
return event.defaultPrevented;
};
var eventFns=events[type||event.type];
var eventFnsLength=eventFns?eventFns.length:0;
if(!eventFnsLength)return;
if(isUndefined(event.immediatePropagationStopped)){
var originalStopImmediatePropagation=event.stopImmediatePropagation;
event.stopImmediatePropagation=function(){
event.immediatePropagationStopped=true;
if(event.stopPropagation){
event.stopPropagation();
}
if(originalStopImmediatePropagation){
originalStopImmediatePropagation.call(event);
}
};
}
event.isImmediatePropagationStopped=function(){
return event.immediatePropagationStopped===true;
};
var handlerWrapper=eventFns.specialHandlerWrapper||defaultHandlerWrapper;
if((eventFnsLength>1)){
eventFns=shallowCopy(eventFns);
}
for(var i=0;i<eventFnsLength;i++){
if(!event.isImmediatePropagationStopped()){
handlerWrapper(element,event,eventFns[i]);
}
}
};
eventHandler.elem=element;
return eventHandler;
}
function defaultHandlerWrapper(element,event,handler){
handler.call(element,event);
}
function specialMouseHandlerWrapper(target,event,handler){
var related=event.relatedTarget;
if(!related||(related!==target&&!jqLiteContains.call(target,related))){
handler.call(target,event);
}
}
forEach({
removeData:jqLiteRemoveData,
on:function jqLiteOn(element,type,fn,unsupported){
if(isDefined(unsupported))throw jqLiteMinErr('onargs','jqLite#on() does not support the `selector` or `eventData` parameters');
if(!jqLiteAcceptsData(element)){
return;
}
var expandoStore=jqLiteExpandoStore(element,true);
var events=expandoStore.events;
var handle=expandoStore.handle;
if(!handle){
handle=expandoStore.handle=createEventHandler(element,events);
}
var types=type.indexOf(' ')>=0?type.split(' '):[type];
var i=types.length;
var addHandler=function(type,specialHandlerWrapper,noEventListener){
var eventFns=events[type];
if(!eventFns){
eventFns=events[type]=[];
eventFns.specialHandlerWrapper=specialHandlerWrapper;
if(type!=='$destroy'&&!noEventListener){
addEventListenerFn(element,type,handle);
}
}
eventFns.push(fn);
};
while(i--){
type=types[i];
if(MOUSE_EVENT_MAP[type]){
addHandler(MOUSE_EVENT_MAP[type],specialMouseHandlerWrapper);
addHandler(type,undefined,true);
}else{
addHandler(type);
}
}
},
off:jqLiteOff,
one:function(element,type,fn){
element=jqLite(element);
element.on(type,function onFn(){
element.off(type,fn);
element.off(type,onFn);
});
element.on(type,fn);
},
replaceWith:function(element,replaceNode){
var index,parent=element.parentNode;
jqLiteDealoc(element);
forEach(new JQLite(replaceNode),function(node){
if(index){
parent.insertBefore(node,index.nextSibling);
}else{
parent.replaceChild(node,element);
}
index=node;
});
},
children:function(element){
var children=[];
forEach(element.childNodes,function(element){
if(element.nodeType===NODE_TYPE_ELEMENT){
children.push(element);
}
});
return children;
},
contents:function(element){
return element.contentDocument||element.childNodes||[];
},
append:function(element,node){
var nodeType=element.nodeType;
if(nodeType!==NODE_TYPE_ELEMENT&&nodeType!==NODE_TYPE_DOCUMENT_FRAGMENT)return;
node=new JQLite(node);
for(var i=0,ii=node.length;i<ii;i++){
var child=node[i];
element.appendChild(child);
}
},
prepend:function(element,node){
if(element.nodeType===NODE_TYPE_ELEMENT){
var index=element.firstChild;
forEach(new JQLite(node),function(child){
element.insertBefore(child,index);
});
}
},
wrap:function(element,wrapNode){
jqLiteWrapNode(element,jqLite(wrapNode).eq(0).clone()[0]);
},
remove:jqLiteRemove,
detach:function(element){
jqLiteRemove(element,true);
},
after:function(element,newElement){
var index=element,parent=element.parentNode;
newElement=new JQLite(newElement);
for(var i=0,ii=newElement.length;i<ii;i++){
var node=newElement[i];
parent.insertBefore(node,index.nextSibling);
index=node;
}
},
addClass:jqLiteAddClass,
removeClass:jqLiteRemoveClass,
toggleClass:function(element,selector,condition){
if(selector){
forEach(selector.split(' '),function(className){
var classCondition=condition;
if(isUndefined(classCondition)){
classCondition=!jqLiteHasClass(element,className);
}
(classCondition?jqLiteAddClass:jqLiteRemoveClass)(element,className);
});
}
},
parent:function(element){
var parent=element.parentNode;
return parent&&parent.nodeType!==NODE_TYPE_DOCUMENT_FRAGMENT?parent:null;
},
next:function(element){
return element.nextElementSibling;
},
find:function(element,selector){
if(element.getElementsByTagName){
return element.getElementsByTagName(selector);
}else{
return[];
}
},
clone:jqLiteClone,
triggerHandler:function(element,event,extraParameters){
var dummyEvent,eventFnsCopy,handlerArgs;
var eventName=event.type||event;
var expandoStore=jqLiteExpandoStore(element);
var events=expandoStore&&expandoStore.events;
var eventFns=events&&events[eventName];
if(eventFns){
dummyEvent={
preventDefault:function(){this.defaultPrevented=true;},
isDefaultPrevented:function(){return this.defaultPrevented===true;},
stopImmediatePropagation:function(){this.immediatePropagationStopped=true;},
isImmediatePropagationStopped:function(){return this.immediatePropagationStopped===true;},
stopPropagation:noop,
type:eventName,
target:element
};
if(event.type){
dummyEvent=extend(dummyEvent,event);
}
eventFnsCopy=shallowCopy(eventFns);
handlerArgs=extraParameters?[dummyEvent].concat(extraParameters):[dummyEvent];
forEach(eventFnsCopy,function(fn){
if(!dummyEvent.isImmediatePropagationStopped()){
fn.apply(element,handlerArgs);
}
});
}
}
},function(fn,name){
JQLite.prototype[name]=function(arg1,arg2,arg3){
var value;
for(var i=0,ii=this.length;i<ii;i++){
if(isUndefined(value)){
value=fn(this[i],arg1,arg2,arg3);
if(isDefined(value)){
value=jqLite(value);
}
}else{
jqLiteAddNodes(value,fn(this[i],arg1,arg2,arg3));
}
}
return isDefined(value)?value:this;
};
JQLite.prototype.bind=JQLite.prototype.on;
JQLite.prototype.unbind=JQLite.prototype.off;
});
function $$jqLiteProvider(){
this.$get=function $$jqLite(){
return extend(JQLite,{
hasClass:function(node,classes){
if(node.attr)node=node[0];
return jqLiteHasClass(node,classes);
},
addClass:function(node,classes){
if(node.attr)node=node[0];
return jqLiteAddClass(node,classes);
},
removeClass:function(node,classes){
if(node.attr)node=node[0];
return jqLiteRemoveClass(node,classes);
}
});
};
}
function hashKey(obj,nextUidFn){
var key=obj&&obj.$$hashKey;
if(key){
if(typeof key==='function'){
key=obj.$$hashKey();
}
return key;
}
var objType=typeof obj;
if(objType=='function'||(objType=='object'&&obj!==null)){
key=obj.$$hashKey=objType+':'+(nextUidFn||nextUid)();
}else{
key=objType+':'+obj;
}
return key;
}
function HashMap(array,isolatedUid){
if(isolatedUid){
var uid=0;
this.nextUid=function(){
return++uid;
};
}
forEach(array,this.put,this);
}
HashMap.prototype={
put:function(key,value){
this[hashKey(key,this.nextUid)]=value;
},
get:function(key){
return this[hashKey(key,this.nextUid)];
},
remove:function(key){
var value=this[key=hashKey(key,this.nextUid)];
delete this[key];
return value;
}
};
var $$HashMapProvider=[function(){
this.$get=[function(){
return HashMap;
}];
}];
var ARROW_ARG=/^([^\(]+?)=>/;
var FN_ARGS=/^[^\(]*\(\s*([^\)]*)\)/m;
var FN_ARG_SPLIT=/,/;
var FN_ARG=/^\s*(_?)(\S+?)\1\s*$/;
var STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
var $injectorMinErr=minErr('$injector');
function extractArgs(fn){
var fnText=Function.prototype.toString.call(fn).replace(STRIP_COMMENTS,''),
args=fnText.match(ARROW_ARG)||fnText.match(FN_ARGS);
return args;
}
function anonFn(fn){
var args=extractArgs(fn);
if(args){
return'function('+(args[1]||'').replace(/[\s\r\n]+/,' ')+')';
}
return'fn';
}
function annotate(fn,strictDi,name){
var $inject,
argDecl,
last;
if(typeof fn==='function'){
if(!($inject=fn.$inject)){
$inject=[];
if(fn.length){
if(strictDi){
if(!isString(name)||!name){
name=fn.name||anonFn(fn);
}
throw $injectorMinErr('strictdi',
'{0} is not using explicit annotation and cannot be invoked in strict mode',name);
}
argDecl=extractArgs(fn);
forEach(argDecl[1].split(FN_ARG_SPLIT),function(arg){
arg.replace(FN_ARG,function(all,underscore,name){
$inject.push(name);
});
});
}
fn.$inject=$inject;
}
}else if(isArray(fn)){
last=fn.length-1;
assertArgFn(fn[last],'fn');
$inject=fn.slice(0,last);
}else{
assertArgFn(fn,'fn',true);
}
return $inject;
}
function createInjector(modulesToLoad,strictDi){
strictDi=(strictDi===true);
var INSTANTIATING={},
providerSuffix='Provider',
path=[],
loadedModules=new HashMap([],true),
providerCache={
$provide:{
provider:supportObject(provider),
factory:supportObject(factory),
service:supportObject(service),
value:supportObject(value),
constant:supportObject(constant),
decorator:decorator
}
},
providerInjector=(providerCache.$injector=
createInternalInjector(providerCache,function(serviceName,caller){
if(angular.isString(caller)){
path.push(caller);
}
throw $injectorMinErr('unpr',"Unknown provider: {0}",path.join(' <- '));
})),
instanceCache={},
protoInstanceInjector=
createInternalInjector(instanceCache,function(serviceName,caller){
var provider=providerInjector.get(serviceName+providerSuffix,caller);
return instanceInjector.invoke(
provider.$get,provider,undefined,serviceName);
}),
instanceInjector=protoInstanceInjector;
providerCache['$injector'+providerSuffix]={$get:valueFn(protoInstanceInjector)};
var runBlocks=loadModules(modulesToLoad);
instanceInjector=protoInstanceInjector.get('$injector');
instanceInjector.strictDi=strictDi;
forEach(runBlocks,function(fn){if(fn)instanceInjector.invoke(fn);});
return instanceInjector;
function supportObject(delegate){
return function(key,value){
if(isObject(key)){
forEach(key,reverseParams(delegate));
}else{
return delegate(key,value);
}
};
}
function provider(name,provider_){
assertNotHasOwnProperty(name,'service');
if(isFunction(provider_)||isArray(provider_)){
provider_=providerInjector.instantiate(provider_);
}
if(!provider_.$get){
throw $injectorMinErr('pget',"Provider '{0}' must define $get factory method.",name);
}
return providerCache[name+providerSuffix]=provider_;
}
function enforceReturnValue(name,factory){
return function enforcedReturnValue(){
var result=instanceInjector.invoke(factory,this);
if(isUndefined(result)){
throw $injectorMinErr('undef',"Provider '{0}' must return a value from $get factory method.",name);
}
return result;
};
}
function factory(name,factoryFn,enforce){
return provider(name,{
$get:enforce!==false?enforceReturnValue(name,factoryFn):factoryFn
});
}
function service(name,constructor){
return factory(name,['$injector',function($injector){
return $injector.instantiate(constructor);
}]);
}
function value(name,val){return factory(name,valueFn(val),false);}
function constant(name,value){
assertNotHasOwnProperty(name,'constant');
providerCache[name]=value;
instanceCache[name]=value;
}
function decorator(serviceName,decorFn){
var origProvider=providerInjector.get(serviceName+providerSuffix),
orig$get=origProvider.$get;
origProvider.$get=function(){
var origInstance=instanceInjector.invoke(orig$get,origProvider);
return instanceInjector.invoke(decorFn,null,{$delegate:origInstance});
};
}
function loadModules(modulesToLoad){
assertArg(isUndefined(modulesToLoad)||isArray(modulesToLoad),'modulesToLoad','not an array');
var runBlocks=[],moduleFn;
forEach(modulesToLoad,function(module){
if(loadedModules.get(module))return;
loadedModules.put(module,true);
function runInvokeQueue(queue){
var i,ii;
for(i=0,ii=queue.length;i<ii;i++){
var invokeArgs=queue[i],
provider=providerInjector.get(invokeArgs[0]);
provider[invokeArgs[1]].apply(provider,invokeArgs[2]);
}
}
try{
if(isString(module)){
moduleFn=angularModule(module);
runBlocks=runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);
runInvokeQueue(moduleFn._invokeQueue);
runInvokeQueue(moduleFn._configBlocks);
}else if(isFunction(module)){
runBlocks.push(providerInjector.invoke(module));
}else if(isArray(module)){
runBlocks.push(providerInjector.invoke(module));
}else{
assertArgFn(module,'module');
}
}catch(e){
if(isArray(module)){
module=module[module.length-1];
}
if(e.message&&e.stack&&e.stack.indexOf(e.message)==-1){
e=e.message+'\n'+e.stack;
}
throw $injectorMinErr('modulerr',"Failed to instantiate module {0} due to:\n{1}",
module,e.stack||e.message||e);
}
});
return runBlocks;
}
function createInternalInjector(cache,factory){
function getService(serviceName,caller){
if(cache.hasOwnProperty(serviceName)){
if(cache[serviceName]===INSTANTIATING){
throw $injectorMinErr('cdep','Circular dependency found: {0}',
serviceName+' <- '+path.join(' <- '));
}
return cache[serviceName];
}else{
try{
path.unshift(serviceName);
cache[serviceName]=INSTANTIATING;
return cache[serviceName]=factory(serviceName,caller);
}catch(err){
if(cache[serviceName]===INSTANTIATING){
delete cache[serviceName];
}
throw err;
}finally{
path.shift();
}
}
}
function injectionArgs(fn,locals,serviceName){
var args=[],
$inject=createInjector.$$annotate(fn,strictDi,serviceName);
for(var i=0,length=$inject.length;i<length;i++){
var key=$inject[i];
if(typeof key!=='string'){
throw $injectorMinErr('itkn',
'Incorrect injection token! Expected service name as string, got {0}',key);
}
args.push(locals&&locals.hasOwnProperty(key)?locals[key]:
getService(key,serviceName));
}
return args;
}
function isClass(func){
if(msie<=11){
return false;
}
return typeof func==='function'
&&/^(?:class\s|constructor\()/.test(Function.prototype.toString.call(func));
}
function invoke(fn,self,locals,serviceName){
if(typeof locals==='string'){
serviceName=locals;
locals=null;
}
var args=injectionArgs(fn,locals,serviceName);
if(isArray(fn)){
fn=fn[fn.length-1];
}
if(!isClass(fn)){
return fn.apply(self,args);
}else{
args.unshift(null);
return new(Function.prototype.bind.apply(fn,args))();
}
}
function instantiate(Type,locals,serviceName){
var ctor=(isArray(Type)?Type[Type.length-1]:Type);
var args=injectionArgs(Type,locals,serviceName);
args.unshift(null);
return new(Function.prototype.bind.apply(ctor,args))();
}
return{
invoke:invoke,
instantiate:instantiate,
get:getService,
annotate:createInjector.$$annotate,
has:function(name){
return providerCache.hasOwnProperty(name+providerSuffix)||cache.hasOwnProperty(name);
}
};
}
}
createInjector.$$annotate=annotate;
function $AnchorScrollProvider(){
var autoScrollingEnabled=true;
this.disableAutoScrolling=function(){
autoScrollingEnabled=false;
};
this.$get=['$window','$location','$rootScope',function($window,$location,$rootScope){
var document=$window.document;
function getFirstAnchor(list){
var result=null;
Array.prototype.some.call(list,function(element){
if(nodeName_(element)==='a'){
result=element;
return true;
}
});
return result;
}
function getYOffset(){
var offset=scroll.yOffset;
if(isFunction(offset)){
offset=offset();
}else if(isElement(offset)){
var elem=offset[0];
var style=$window.getComputedStyle(elem);
if(style.position!=='fixed'){
offset=0;
}else{
offset=elem.getBoundingClientRect().bottom;
}
}else if(!isNumber(offset)){
offset=0;
}
return offset;
}
function scrollTo(elem){
if(elem){
elem.scrollIntoView();
var offset=getYOffset();
if(offset){
var elemTop=elem.getBoundingClientRect().top;
$window.scrollBy(0,elemTop-offset);
}
}else{
$window.scrollTo(0,0);
}
}
function scroll(hash){
hash=isString(hash)?hash:$location.hash();
var elm;
if(!hash)scrollTo(null);
else if((elm=document.getElementById(hash)))scrollTo(elm);
else if((elm=getFirstAnchor(document.getElementsByName(hash))))scrollTo(elm);
else if(hash==='top')scrollTo(null);
}
if(autoScrollingEnabled){
$rootScope.$watch(function autoScrollWatch(){return $location.hash();},
function autoScrollWatchAction(newVal,oldVal){
if(newVal===oldVal&&newVal==='')return;
jqLiteDocumentLoaded(function(){
$rootScope.$evalAsync(scroll);
});
});
}
return scroll;
}];
}
var $animateMinErr=minErr('$animate');
var ELEMENT_NODE=1;
var NG_ANIMATE_CLASSNAME='ng-animate';
function mergeClasses(a,b){
if(!a&&!b)return'';
if(!a)return b;
if(!b)return a;
if(isArray(a))a=a.join(' ');
if(isArray(b))b=b.join(' ');
return a+' '+b;
}
function extractElementNode(element){
for(var i=0;i<element.length;i++){
var elm=element[i];
if(elm.nodeType===ELEMENT_NODE){
return elm;
}
}
}
function splitClasses(classes){
if(isString(classes)){
classes=classes.split(' ');
}
var obj=createMap();
forEach(classes,function(klass){
if(klass.length){
obj[klass]=true;
}
});
return obj;
}
function prepareAnimateOptions(options){
return isObject(options)
?options
:{};
}
var $$CoreAnimateJsProvider=function(){
this.$get=noop;
};
var $$CoreAnimateQueueProvider=function(){
var postDigestQueue=new HashMap();
var postDigestElements=[];
this.$get=['$$AnimateRunner','$rootScope',
function($$AnimateRunner,$rootScope){
return{
enabled:noop,
on:noop,
off:noop,
pin:noop,
push:function(element,event,options,domOperation){
domOperation&&domOperation();
options=options||{};
options.from&&element.css(options.from);
options.to&&element.css(options.to);
if(options.addClass||options.removeClass){
addRemoveClassesPostDigest(element,options.addClass,options.removeClass);
}
var runner=new $$AnimateRunner();
runner.complete();
return runner;
}
};
function updateData(data,classes,value){
var changed=false;
if(classes){
classes=isString(classes)?classes.split(' '):
isArray(classes)?classes:[];
forEach(classes,function(className){
if(className){
changed=true;
data[className]=value;
}
});
}
return changed;
}
function handleCSSClassChanges(){
forEach(postDigestElements,function(element){
var data=postDigestQueue.get(element);
if(data){
var existing=splitClasses(element.attr('class'));
var toAdd='';
var toRemove='';
forEach(data,function(status,className){
var hasClass=!!existing[className];
if(status!==hasClass){
if(status){
toAdd+=(toAdd.length?' ':'')+className;
}else{
toRemove+=(toRemove.length?' ':'')+className;
}
}
});
forEach(element,function(elm){
toAdd&&jqLiteAddClass(elm,toAdd);
toRemove&&jqLiteRemoveClass(elm,toRemove);
});
postDigestQueue.remove(element);
}
});
postDigestElements.length=0;
}
function addRemoveClassesPostDigest(element,add,remove){
var data=postDigestQueue.get(element)||{};
var classesAdded=updateData(data,add,true);
var classesRemoved=updateData(data,remove,false);
if(classesAdded||classesRemoved){
postDigestQueue.put(element,data);
postDigestElements.push(element);
if(postDigestElements.length===1){
$rootScope.$$postDigest(handleCSSClassChanges);
}
}
}
}];
};
var $AnimateProvider=['$provide',function($provide){
var provider=this;
this.$$registeredAnimations=Object.create(null);
this.register=function(name,factory){
if(name&&name.charAt(0)!=='.'){
throw $animateMinErr('notcsel',"Expecting class selector starting with '.' got '{0}'.",name);
}
var key=name+'-animation';
provider.$$registeredAnimations[name.substr(1)]=key;
$provide.factory(key,factory);
};
this.classNameFilter=function(expression){
if(arguments.length===1){
this.$$classNameFilter=(expression instanceof RegExp)?expression:null;
if(this.$$classNameFilter){
var reservedRegex=new RegExp("(\\s+|\\/)"+NG_ANIMATE_CLASSNAME+"(\\s+|\\/)");
if(reservedRegex.test(this.$$classNameFilter.toString())){
throw $animateMinErr('nongcls','$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.',NG_ANIMATE_CLASSNAME);
}
}
}
return this.$$classNameFilter;
};
this.$get=['$$animateQueue',function($$animateQueue){
function domInsert(element,parentElement,afterElement){
if(afterElement){
var afterNode=extractElementNode(afterElement);
if(afterNode&&!afterNode.parentNode&&!afterNode.previousElementSibling){
afterElement=null;
}
}
afterElement?afterElement.after(element):parentElement.prepend(element);
}
return{
on:$$animateQueue.on,
off:$$animateQueue.off,
pin:$$animateQueue.pin,
enabled:$$animateQueue.enabled,
cancel:function(runner){
runner.end&&runner.end();
},
enter:function(element,parent,after,options){
parent=parent&&jqLite(parent);
after=after&&jqLite(after);
parent=parent||after.parent();
domInsert(element,parent,after);
return $$animateQueue.push(element,'enter',prepareAnimateOptions(options));
},
move:function(element,parent,after,options){
parent=parent&&jqLite(parent);
after=after&&jqLite(after);
parent=parent||after.parent();
domInsert(element,parent,after);
return $$animateQueue.push(element,'move',prepareAnimateOptions(options));
},
leave:function(element,options){
return $$animateQueue.push(element,'leave',prepareAnimateOptions(options),function(){
element.remove();
});
},
addClass:function(element,className,options){
options=prepareAnimateOptions(options);
options.addClass=mergeClasses(options.addclass,className);
return $$animateQueue.push(element,'addClass',options);
},
removeClass:function(element,className,options){
options=prepareAnimateOptions(options);
options.removeClass=mergeClasses(options.removeClass,className);
return $$animateQueue.push(element,'removeClass',options);
},
setClass:function(element,add,remove,options){
options=prepareAnimateOptions(options);
options.addClass=mergeClasses(options.addClass,add);
options.removeClass=mergeClasses(options.removeClass,remove);
return $$animateQueue.push(element,'setClass',options);
},
animate:function(element,from,to,className,options){
options=prepareAnimateOptions(options);
options.from=options.from?extend(options.from,from):from;
options.to=options.to?extend(options.to,to):to;
className=className||'ng-inline-animate';
options.tempClasses=mergeClasses(options.tempClasses,className);
return $$animateQueue.push(element,'animate',options);
}
};
}];
}];
var $$AnimateAsyncRunFactoryProvider=function(){
this.$get=['$$rAF',function($$rAF){
var waitQueue=[];
function waitForTick(fn){
waitQueue.push(fn);
if(waitQueue.length>1)return;
$$rAF(function(){
for(var i=0;i<waitQueue.length;i++){
waitQueue[i]();
}
waitQueue=[];
});
}
return function(){
var passed=false;
waitForTick(function(){
passed=true;
});
return function(callback){
passed?callback():waitForTick(callback);
};
};
}];
};
var $$AnimateRunnerFactoryProvider=function(){
this.$get=['$q','$sniffer','$$animateAsyncRun','$document','$timeout',
function($q,$sniffer,$$animateAsyncRun,$document,$timeout){
var INITIAL_STATE=0;
var DONE_PENDING_STATE=1;
var DONE_COMPLETE_STATE=2;
AnimateRunner.chain=function(chain,callback){
var index=0;
next();
function next(){
if(index===chain.length){
callback(true);
return;
}
chain[index](function(response){
if(response===false){
callback(false);
return;
}
index++;
next();
});
}
};
AnimateRunner.all=function(runners,callback){
var count=0;
var status=true;
forEach(runners,function(runner){
runner.done(onProgress);
});
function onProgress(response){
status=status&&response;
if(++count===runners.length){
callback(status);
}
}
};
function AnimateRunner(host){
this.setHost(host);
var rafTick=$$animateAsyncRun();
var timeoutTick=function(fn){
$timeout(fn,0,false);
};
this._doneCallbacks=[];
this._tick=function(fn){
var doc=$document[0];
if(doc&&doc.hidden){
timeoutTick(fn);
}else{
rafTick(fn);
}
};
this._state=0;
}
AnimateRunner.prototype={
setHost:function(host){
this.host=host||{};
},
done:function(fn){
if(this._state===DONE_COMPLETE_STATE){
fn();
}else{
this._doneCallbacks.push(fn);
}
},
progress:noop,
getPromise:function(){
if(!this.promise){
var self=this;
this.promise=$q(function(resolve,reject){
self.done(function(status){
status===false?reject():resolve();
});
});
}
return this.promise;
},
then:function(resolveHandler,rejectHandler){
return this.getPromise().then(resolveHandler,rejectHandler);
},
'catch':function(handler){
return this.getPromise()['catch'](handler);
},
'finally':function(handler){
return this.getPromise()['finally'](handler);
},
pause:function(){
if(this.host.pause){
this.host.pause();
}
},
resume:function(){
if(this.host.resume){
this.host.resume();
}
},
end:function(){
if(this.host.end){
this.host.end();
}
this._resolve(true);
},
cancel:function(){
if(this.host.cancel){
this.host.cancel();
}
this._resolve(false);
},
complete:function(response){
var self=this;
if(self._state===INITIAL_STATE){
self._state=DONE_PENDING_STATE;
self._tick(function(){
self._resolve(response);
});
}
},
_resolve:function(response){
if(this._state!==DONE_COMPLETE_STATE){
forEach(this._doneCallbacks,function(fn){
fn(response);
});
this._doneCallbacks.length=0;
this._state=DONE_COMPLETE_STATE;
}
}
};
return AnimateRunner;
}];
};
var $CoreAnimateCssProvider=function(){
this.$get=['$$rAF','$q','$$AnimateRunner',function($$rAF,$q,$$AnimateRunner){
return function(element,initialOptions){
var options=initialOptions||{};
if(!options.$$prepared){
options=copy(options);
}
if(options.cleanupStyles){
options.from=options.to=null;
}
if(options.from){
element.css(options.from);
options.from=null;
}
var closed,runner=new $$AnimateRunner();
return{
start:run,
end:run
};
function run(){
$$rAF(function(){
applyAnimationContents();
if(!closed){
runner.complete();
}
closed=true;
});
return runner;
}
function applyAnimationContents(){
if(options.addClass){
element.addClass(options.addClass);
options.addClass=null;
}
if(options.removeClass){
element.removeClass(options.removeClass);
options.removeClass=null;
}
if(options.to){
element.css(options.to);
options.to=null;
}
}
};
}];
};
function Browser(window,document,$log,$sniffer){
var self=this,
location=window.location,
history=window.history,
setTimeout=window.setTimeout,
clearTimeout=window.clearTimeout,
pendingDeferIds={};
self.isMock=false;
var outstandingRequestCount=0;
var outstandingRequestCallbacks=[];
self.$$completeOutstandingRequest=completeOutstandingRequest;
self.$$incOutstandingRequestCount=function(){outstandingRequestCount++;};
function completeOutstandingRequest(fn){
try{
fn.apply(null,sliceArgs(arguments,1));
}finally{
outstandingRequestCount--;
if(outstandingRequestCount===0){
while(outstandingRequestCallbacks.length){
try{
outstandingRequestCallbacks.pop()();
}catch(e){
$log.error(e);
}
}
}
}
}
function getHash(url){
var index=url.indexOf('#');
return index===-1?'':url.substr(index);
}
self.notifyWhenNoOutstandingRequests=function(callback){
if(outstandingRequestCount===0){
callback();
}else{
outstandingRequestCallbacks.push(callback);
}
};
var cachedState,lastHistoryState,
lastBrowserUrl=location.href,
baseElement=document.find('base'),
pendingLocation=null,
getCurrentState=!$sniffer.history?noop:function getCurrentState(){
try{
return history.state;
}catch(e){
}
};
cacheState();
lastHistoryState=cachedState;
self.url=function(url,replace,state){
if(isUndefined(state)){
state=null;
}
if(location!==window.location)location=window.location;
if(history!==window.history)history=window.history;
if(url){
var sameState=lastHistoryState===state;
if(lastBrowserUrl===url&&(!$sniffer.history||sameState)){
return self;
}
var sameBase=lastBrowserUrl&&stripHash(lastBrowserUrl)===stripHash(url);
lastBrowserUrl=url;
lastHistoryState=state;
if($sniffer.history&&(!sameBase||!sameState)){
history[replace?'replaceState':'pushState'](state,'',url);
cacheState();
lastHistoryState=cachedState;
}else{
if(!sameBase||pendingLocation){
pendingLocation=url;
}
if(replace){
location.replace(url);
}else if(!sameBase){
location.href=url;
}else{
location.hash=getHash(url);
}
if(location.href!==url){
pendingLocation=url;
}
}
return self;
}else{
return pendingLocation||location.href.replace(/%27/g,"'");
}
};
self.state=function(){
return cachedState;
};
var urlChangeListeners=[],
urlChangeInit=false;
function cacheStateAndFireUrlChange(){
pendingLocation=null;
cacheState();
fireUrlChange();
}
var lastCachedState=null;
function cacheState(){
cachedState=getCurrentState();
cachedState=isUndefined(cachedState)?null:cachedState;
if(equals(cachedState,lastCachedState)){
cachedState=lastCachedState;
}
lastCachedState=cachedState;
}
function fireUrlChange(){
if(lastBrowserUrl===self.url()&&lastHistoryState===cachedState){
return;
}
lastBrowserUrl=self.url();
lastHistoryState=cachedState;
forEach(urlChangeListeners,function(listener){
listener(self.url(),cachedState);
});
}
self.onUrlChange=function(callback){
if(!urlChangeInit){
if($sniffer.history)jqLite(window).on('popstate',cacheStateAndFireUrlChange);
jqLite(window).on('hashchange',cacheStateAndFireUrlChange);
urlChangeInit=true;
}
urlChangeListeners.push(callback);
return callback;
};
self.$$applicationDestroyed=function(){
jqLite(window).off('hashchange popstate',cacheStateAndFireUrlChange);
};
self.$$checkUrlChange=fireUrlChange;
self.baseHref=function(){
var href=baseElement.attr('href');
return href?href.replace(/^(https?\:)?\/\/[^\/]*/,''):'';
};
self.defer=function(fn,delay){
var timeoutId;
outstandingRequestCount++;
timeoutId=setTimeout(function(){
delete pendingDeferIds[timeoutId];
completeOutstandingRequest(fn);
},delay||0);
pendingDeferIds[timeoutId]=true;
return timeoutId;
};
self.defer.cancel=function(deferId){
if(pendingDeferIds[deferId]){
delete pendingDeferIds[deferId];
clearTimeout(deferId);
completeOutstandingRequest(noop);
return true;
}
return false;
};
}
function $BrowserProvider(){
this.$get=['$window','$log','$sniffer','$document',
function($window,$log,$sniffer,$document){
return new Browser($window,$document,$log,$sniffer);
}];
}
function $CacheFactoryProvider(){
this.$get=function(){
var caches={};
function cacheFactory(cacheId,options){
if(cacheId in caches){
throw minErr('$cacheFactory')('iid',"CacheId '{0}' is already taken!",cacheId);
}
var size=0,
stats=extend({},options,{id:cacheId}),
data=createMap(),
capacity=(options&&options.capacity)||Number.MAX_VALUE,
lruHash=createMap(),
freshEnd=null,
staleEnd=null;
return caches[cacheId]={
put:function(key,value){
if(isUndefined(value))return;
if(capacity<Number.MAX_VALUE){
var lruEntry=lruHash[key]||(lruHash[key]={key:key});
refresh(lruEntry);
}
if(!(key in data))size++;
data[key]=value;
if(size>capacity){
this.remove(staleEnd.key);
}
return value;
},
get:function(key){
if(capacity<Number.MAX_VALUE){
var lruEntry=lruHash[key];
if(!lruEntry)return;
refresh(lruEntry);
}
return data[key];
},
remove:function(key){
if(capacity<Number.MAX_VALUE){
var lruEntry=lruHash[key];
if(!lruEntry)return;
if(lruEntry==freshEnd)freshEnd=lruEntry.p;
if(lruEntry==staleEnd)staleEnd=lruEntry.n;
link(lruEntry.n,lruEntry.p);
delete lruHash[key];
}
if(!(key in data))return;
delete data[key];
size--;
},
removeAll:function(){
data=createMap();
size=0;
lruHash=createMap();
freshEnd=staleEnd=null;
},
destroy:function(){
data=null;
stats=null;
lruHash=null;
delete caches[cacheId];
},
info:function(){
return extend({},stats,{size:size});
}
};
function refresh(entry){
if(entry!=freshEnd){
if(!staleEnd){
staleEnd=entry;
}else if(staleEnd==entry){
staleEnd=entry.n;
}
link(entry.n,entry.p);
link(entry,freshEnd);
freshEnd=entry;
freshEnd.n=null;
}
}
function link(nextEntry,prevEntry){
if(nextEntry!=prevEntry){
if(nextEntry)nextEntry.p=prevEntry;
if(prevEntry)prevEntry.n=nextEntry;
}
}
}
cacheFactory.info=function(){
var info={};
forEach(caches,function(cache,cacheId){
info[cacheId]=cache.info();
});
return info;
};
cacheFactory.get=function(cacheId){
return caches[cacheId];
};
return cacheFactory;
};
}
function $TemplateCacheProvider(){
this.$get=['$cacheFactory',function($cacheFactory){
return $cacheFactory('templates');
}];
}
var $compileMinErr=minErr('$compile');
function UNINITIALIZED_VALUE(){}
var _UNINITIALIZED_VALUE=new UNINITIALIZED_VALUE();
$CompileProvider.$inject=['$provide','$$sanitizeUriProvider'];
function $CompileProvider($provide,$$sanitizeUriProvider){
var hasDirectives={},
Suffix='Directive',
COMMENT_DIRECTIVE_REGEXP=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,
CLASS_DIRECTIVE_REGEXP=/(([\w\-]+)(?:\:([^;]+))?;?)/,
ALL_OR_NOTHING_ATTRS=makeMap('ngSrc,ngSrcset,src,srcset'),
REQUIRE_PREFIX_REGEXP=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/;
var EVENT_HANDLER_ATTR_REGEXP=/^(on[a-z]+|formaction)$/;
var bindingCache=createMap();
function parseIsolateBindings(scope,directiveName,isController){
var LOCAL_REGEXP=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/;
var bindings=createMap();
forEach(scope,function(definition,scopeName){
if(definition in bindingCache){
bindings[scopeName]=bindingCache[definition];
return;
}
var match=definition.match(LOCAL_REGEXP);
if(!match){
throw $compileMinErr('iscp',
"Invalid {3} for directive '{0}'."+
" Definition: {... {1}: '{2}' ...}",
directiveName,scopeName,definition,
(isController?"controller bindings definition":
"isolate scope definition"));
}
bindings[scopeName]={
mode:match[1][0],
collection:match[2]==='*',
optional:match[3]==='?',
attrName:match[4]||scopeName
};
if(match[4]){
bindingCache[definition]=bindings[scopeName];
}
});
return bindings;
}
function parseDirectiveBindings(directive,directiveName){
var bindings={
isolateScope:null,
bindToController:null
};
if(isObject(directive.scope)){
if(directive.bindToController===true){
bindings.bindToController=parseIsolateBindings(directive.scope,
directiveName,true);
bindings.isolateScope={};
}else{
bindings.isolateScope=parseIsolateBindings(directive.scope,
directiveName,false);
}
}
if(isObject(directive.bindToController)){
bindings.bindToController=
parseIsolateBindings(directive.bindToController,directiveName,true);
}
if(isObject(bindings.bindToController)){
var controller=directive.controller;
var controllerAs=directive.controllerAs;
if(!controller){
throw $compileMinErr('noctrl',
"Cannot bind to controller without directive '{0}'s controller.",
directiveName);
}else if(!identifierForController(controller,controllerAs)){
throw $compileMinErr('noident',
"Cannot bind to controller without identifier for directive '{0}'.",
directiveName);
}
}
return bindings;
}
function assertValidDirectiveName(name){
var letter=name.charAt(0);
if(!letter||letter!==lowercase(letter)){
throw $compileMinErr('baddir',"Directive/Component name '{0}' is invalid. The first character must be a lowercase letter",name);
}
if(name!==name.trim()){
throw $compileMinErr('baddir',
"Directive/Component name '{0}' is invalid. The name should not contain leading or trailing whitespaces",
name);
}
}
this.directive=function registerDirective(name,directiveFactory){
assertNotHasOwnProperty(name,'directive');
if(isString(name)){
assertValidDirectiveName(name);
assertArg(directiveFactory,'directiveFactory');
if(!hasDirectives.hasOwnProperty(name)){
hasDirectives[name]=[];
$provide.factory(name+Suffix,['$injector','$exceptionHandler',
function($injector,$exceptionHandler){
var directives=[];
forEach(hasDirectives[name],function(directiveFactory,index){
try{
var directive=$injector.invoke(directiveFactory);
if(isFunction(directive)){
directive={compile:valueFn(directive)};
}else if(!directive.compile&&directive.link){
directive.compile=valueFn(directive.link);
}
directive.priority=directive.priority||0;
directive.index=index;
directive.name=directive.name||name;
directive.require=directive.require||(directive.controller&&directive.name);
directive.restrict=directive.restrict||'EA';
directive.$$moduleName=directiveFactory.$$moduleName;
directives.push(directive);
}catch(e){
$exceptionHandler(e);
}
});
return directives;
}]);
}
hasDirectives[name].push(directiveFactory);
}else{
forEach(name,reverseParams(registerDirective));
}
return this;
};
this.component=function registerComponent(name,options){
var controller=options.controller||function(){};
function factory($injector){
function makeInjectable(fn){
if(isFunction(fn)||isArray(fn)){
return function(tElement,tAttrs){
return $injector.invoke(fn,this,{$element:tElement,$attrs:tAttrs});
};
}else{
return fn;
}
}
var template=(!options.template&&!options.templateUrl?'':options.template);
var ddo={
controller:controller,
controllerAs:identifierForController(options.controller)||options.controllerAs||'$ctrl',
template:makeInjectable(template),
templateUrl:makeInjectable(options.templateUrl),
transclude:options.transclude,
scope:{},
bindToController:options.bindings||{},
restrict:'E',
require:options.require
};
forEach(options,function(val,key){
if(key.charAt(0)==='$')ddo[key]=val;
});
return ddo;
}
forEach(options,function(val,key){
if(key.charAt(0)==='$'){
factory[key]=val;
if(isFunction(controller))controller[key]=val;
}
});
factory.$inject=['$injector'];
return this.directive(name,factory);
};
this.aHrefSanitizationWhitelist=function(regexp){
if(isDefined(regexp)){
$$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);
return this;
}else{
return $$sanitizeUriProvider.aHrefSanitizationWhitelist();
}
};
this.imgSrcSanitizationWhitelist=function(regexp){
if(isDefined(regexp)){
$$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);
return this;
}else{
return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();
}
};
var debugInfoEnabled=true;
this.debugInfoEnabled=function(enabled){
if(isDefined(enabled)){
debugInfoEnabled=enabled;
return this;
}
return debugInfoEnabled;
};
var TTL=10;
this.onChangesTtl=function(value){
if(arguments.length){
TTL=value;
return this;
}
return TTL;
};
this.$get=[
'$injector','$interpolate','$exceptionHandler','$templateRequest','$parse',
'$controller','$rootScope','$sce','$animate','$$sanitizeUri',
function($injector,$interpolate,$exceptionHandler,$templateRequest,$parse,
$controller,$rootScope,$sce,$animate,$$sanitizeUri){
var SIMPLE_ATTR_NAME=/^\w/;
var specialAttrHolder=window.document.createElement('div');
var onChangesTtl=TTL;
var onChangesQueue;
function flushOnChangesQueue(){
try{
if(!(--onChangesTtl)){
onChangesQueue=undefined;
throw $compileMinErr('infchng','{0} $onChanges() iterations reached. Aborting!\n',TTL);
}
$rootScope.$apply(function(){
for(var i=0,ii=onChangesQueue.length;i<ii;++i){
onChangesQueue[i]();
}
onChangesQueue=undefined;
});
}finally{
onChangesTtl++;
}
}
function Attributes(element,attributesToCopy){
if(attributesToCopy){
var keys=Object.keys(attributesToCopy);
var i,l,key;
for(i=0,l=keys.length;i<l;i++){
key=keys[i];
this[key]=attributesToCopy[key];
}
}else{
this.$attr={};
}
this.$$element=element;
}
Attributes.prototype={
$normalize:directiveNormalize,
$addClass:function(classVal){
if(classVal&&classVal.length>0){
$animate.addClass(this.$$element,classVal);
}
},
$removeClass:function(classVal){
if(classVal&&classVal.length>0){
$animate.removeClass(this.$$element,classVal);
}
},
$updateClass:function(newClasses,oldClasses){
var toAdd=tokenDifference(newClasses,oldClasses);
if(toAdd&&toAdd.length){
$animate.addClass(this.$$element,toAdd);
}
var toRemove=tokenDifference(oldClasses,newClasses);
if(toRemove&&toRemove.length){
$animate.removeClass(this.$$element,toRemove);
}
},
$set:function(key,value,writeAttr,attrName){
var node=this.$$element[0],
booleanKey=getBooleanAttrName(node,key),
aliasedKey=getAliasedAttrName(key),
observer=key,
nodeName;
if(booleanKey){
this.$$element.prop(key,value);
attrName=booleanKey;
}else if(aliasedKey){
this[aliasedKey]=value;
observer=aliasedKey;
}
this[key]=value;
if(attrName){
this.$attr[key]=attrName;
}else{
attrName=this.$attr[key];
if(!attrName){
this.$attr[key]=attrName=snake_case(key,'-');
}
}
nodeName=nodeName_(this.$$element);
if((nodeName==='a'&&(key==='href'||key==='xlinkHref'))||
(nodeName==='img'&&key==='src')){
this[key]=value=$$sanitizeUri(value,key==='src');
}else if(nodeName==='img'&&key==='srcset'){
var result="";
var trimmedSrcset=trim(value);
var srcPattern=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;
var pattern=/\s/.test(trimmedSrcset)?srcPattern:/(,)/;
var rawUris=trimmedSrcset.split(pattern);
var nbrUrisWith2parts=Math.floor(rawUris.length/2);
for(var i=0;i<nbrUrisWith2parts;i++){
var innerIdx=i*2;
result+=$$sanitizeUri(trim(rawUris[innerIdx]),true);
result+=(" "+trim(rawUris[innerIdx+1]));
}
var lastTuple=trim(rawUris[i*2]).split(/\s/);
result+=$$sanitizeUri(trim(lastTuple[0]),true);
if(lastTuple.length===2){
result+=(" "+trim(lastTuple[1]));
}
this[key]=value=result;
}
if(writeAttr!==false){
if(value===null||isUndefined(value)){
this.$$element.removeAttr(attrName);
}else{
if(SIMPLE_ATTR_NAME.test(attrName)){
this.$$element.attr(attrName,value);
}else{
setSpecialAttr(this.$$element[0],attrName,value);
}
}
}
var $$observers=this.$$observers;
$$observers&&forEach($$observers[observer],function(fn){
try{
fn(value);
}catch(e){
$exceptionHandler(e);
}
});
},
$observe:function(key,fn){
var attrs=this,
$$observers=(attrs.$$observers||(attrs.$$observers=createMap())),
listeners=($$observers[key]||($$observers[key]=[]));
listeners.push(fn);
$rootScope.$evalAsync(function(){
if(!listeners.$$inter&&attrs.hasOwnProperty(key)&&!isUndefined(attrs[key])){
fn(attrs[key]);
}
});
return function(){
arrayRemove(listeners,fn);
};
}
};
function setSpecialAttr(element,attrName,value){
specialAttrHolder.innerHTML="<span "+attrName+">";
var attributes=specialAttrHolder.firstChild.attributes;
var attribute=attributes[0];
attributes.removeNamedItem(attribute.name);
attribute.value=value;
element.attributes.setNamedItem(attribute);
}
function safeAddClass($element,className){
try{
$element.addClass(className);
}catch(e){
}
}
var startSymbol=$interpolate.startSymbol(),
endSymbol=$interpolate.endSymbol(),
denormalizeTemplate=(startSymbol=='{{'&&endSymbol=='}}')
?identity
:function denormalizeTemplate(template){
return template.replace(/\{\{/g,startSymbol).replace(/}}/g,endSymbol);
},
NG_ATTR_BINDING=/^ngAttr[A-Z]/;
var MULTI_ELEMENT_DIR_RE=/^(.+)Start$/;
compile.$$addBindingInfo=debugInfoEnabled?function $$addBindingInfo($element,binding){
var bindings=$element.data('$binding')||[];
if(isArray(binding)){
bindings=bindings.concat(binding);
}else{
bindings.push(binding);
}
$element.data('$binding',bindings);
}:noop;
compile.$$addBindingClass=debugInfoEnabled?function $$addBindingClass($element){
safeAddClass($element,'ng-binding');
}:noop;
compile.$$addScopeInfo=debugInfoEnabled?function $$addScopeInfo($element,scope,isolated,noTemplate){
var dataName=isolated?(noTemplate?'$isolateScopeNoTemplate':'$isolateScope'):'$scope';
$element.data(dataName,scope);
}:noop;
compile.$$addScopeClass=debugInfoEnabled?function $$addScopeClass($element,isolated){
safeAddClass($element,isolated?'ng-isolate-scope':'ng-scope');
}:noop;
compile.$$createComment=function(directiveName,comment){
var content='';
if(debugInfoEnabled){
content=' '+(directiveName||'')+': '+(comment||'')+' ';
}
return window.document.createComment(content);
};
return compile;
function compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,
previousCompileContext){
if(!($compileNodes instanceof jqLite)){
$compileNodes=jqLite($compileNodes);
}
var NOT_EMPTY=/\S+/;
for(var i=0,len=$compileNodes.length;i<len;i++){
var domNode=$compileNodes[i];
if(domNode.nodeType===NODE_TYPE_TEXT&&domNode.nodeValue.match(NOT_EMPTY)){
jqLiteWrapNode(domNode,$compileNodes[i]=window.document.createElement('span'));
}
}
var compositeLinkFn=
compileNodes($compileNodes,transcludeFn,$compileNodes,
maxPriority,ignoreDirective,previousCompileContext);
compile.$$addScopeClass($compileNodes);
var namespace=null;
return function publicLinkFn(scope,cloneConnectFn,options){
assertArg(scope,'scope');
if(previousCompileContext&&previousCompileContext.needsNewScope){
scope=scope.$parent.$new();
}
options=options||{};
var parentBoundTranscludeFn=options.parentBoundTranscludeFn,
transcludeControllers=options.transcludeControllers,
futureParentElement=options.futureParentElement;
if(parentBoundTranscludeFn&&parentBoundTranscludeFn.$$boundTransclude){
parentBoundTranscludeFn=parentBoundTranscludeFn.$$boundTransclude;
}
if(!namespace){
namespace=detectNamespaceForChildElements(futureParentElement);
}
var $linkNode;
if(namespace!=='html'){
$linkNode=jqLite(
wrapTemplate(namespace,jqLite('<div>').append($compileNodes).html())
);
}else if(cloneConnectFn){
$linkNode=JQLitePrototype.clone.call($compileNodes);
}else{
$linkNode=$compileNodes;
}
if(transcludeControllers){
for(var controllerName in transcludeControllers){
$linkNode.data('$'+controllerName+'Controller',transcludeControllers[controllerName].instance);
}
}
compile.$$addScopeInfo($linkNode,scope);
if(cloneConnectFn)cloneConnectFn($linkNode,scope);
if(compositeLinkFn)compositeLinkFn(scope,$linkNode,$linkNode,parentBoundTranscludeFn);
return $linkNode;
};
}
function detectNamespaceForChildElements(parentElement){
var node=parentElement&&parentElement[0];
if(!node){
return'html';
}else{
return nodeName_(node)!=='foreignobject'&&toString.call(node).match(/SVG/)?'svg':'html';
}
}
function compileNodes(nodeList,transcludeFn,$rootElement,maxPriority,ignoreDirective,
previousCompileContext){
var linkFns=[],
attrs,directives,nodeLinkFn,childNodes,childLinkFn,linkFnFound,nodeLinkFnFound;
for(var i=0;i<nodeList.length;i++){
attrs=new Attributes();
directives=collectDirectives(nodeList[i],[],attrs,i===0?maxPriority:undefined,
ignoreDirective);
nodeLinkFn=(directives.length)
?applyDirectivesToNode(directives,nodeList[i],attrs,transcludeFn,$rootElement,
null,[],[],previousCompileContext)
:null;
if(nodeLinkFn&&nodeLinkFn.scope){
compile.$$addScopeClass(attrs.$$element);
}
childLinkFn=(nodeLinkFn&&nodeLinkFn.terminal||
!(childNodes=nodeList[i].childNodes)||
!childNodes.length)
?null
:compileNodes(childNodes,
nodeLinkFn?(
(nodeLinkFn.transcludeOnThisElement||!nodeLinkFn.templateOnThisElement)
&&nodeLinkFn.transclude):transcludeFn);
if(nodeLinkFn||childLinkFn){
linkFns.push(i,nodeLinkFn,childLinkFn);
linkFnFound=true;
nodeLinkFnFound=nodeLinkFnFound||nodeLinkFn;
}
previousCompileContext=null;
}
return linkFnFound?compositeLinkFn:null;
function compositeLinkFn(scope,nodeList,$rootElement,parentBoundTranscludeFn){
var nodeLinkFn,childLinkFn,node,childScope,i,ii,idx,childBoundTranscludeFn;
var stableNodeList;
if(nodeLinkFnFound){
var nodeListLength=nodeList.length;
stableNodeList=new Array(nodeListLength);
for(i=0;i<linkFns.length;i+=3){
idx=linkFns[i];
stableNodeList[idx]=nodeList[idx];
}
}else{
stableNodeList=nodeList;
}
for(i=0,ii=linkFns.length;i<ii;){
node=stableNodeList[linkFns[i++]];
nodeLinkFn=linkFns[i++];
childLinkFn=linkFns[i++];
if(nodeLinkFn){
if(nodeLinkFn.scope){
childScope=scope.$new();
compile.$$addScopeInfo(jqLite(node),childScope);
}else{
childScope=scope;
}
if(nodeLinkFn.transcludeOnThisElement){
childBoundTranscludeFn=createBoundTranscludeFn(
scope,nodeLinkFn.transclude,parentBoundTranscludeFn);
}else if(!nodeLinkFn.templateOnThisElement&&parentBoundTranscludeFn){
childBoundTranscludeFn=parentBoundTranscludeFn;
}else if(!parentBoundTranscludeFn&&transcludeFn){
childBoundTranscludeFn=createBoundTranscludeFn(scope,transcludeFn);
}else{
childBoundTranscludeFn=null;
}
nodeLinkFn(childLinkFn,childScope,node,$rootElement,childBoundTranscludeFn);
}else if(childLinkFn){
childLinkFn(scope,node.childNodes,undefined,parentBoundTranscludeFn);
}
}
}
}
function createBoundTranscludeFn(scope,transcludeFn,previousBoundTranscludeFn){
function boundTranscludeFn(transcludedScope,cloneFn,controllers,futureParentElement,containingScope){
if(!transcludedScope){
transcludedScope=scope.$new(false,containingScope);
transcludedScope.$$transcluded=true;
}
return transcludeFn(transcludedScope,cloneFn,{
parentBoundTranscludeFn:previousBoundTranscludeFn,
transcludeControllers:controllers,
futureParentElement:futureParentElement
});
}
var boundSlots=boundTranscludeFn.$$slots=createMap();
for(var slotName in transcludeFn.$$slots){
if(transcludeFn.$$slots[slotName]){
boundSlots[slotName]=createBoundTranscludeFn(scope,transcludeFn.$$slots[slotName],previousBoundTranscludeFn);
}else{
boundSlots[slotName]=null;
}
}
return boundTranscludeFn;
}
function collectDirectives(node,directives,attrs,maxPriority,ignoreDirective){
var nodeType=node.nodeType,
attrsMap=attrs.$attr,
match,
className;
switch(nodeType){
case NODE_TYPE_ELEMENT:
addDirective(directives,
directiveNormalize(nodeName_(node)),'E',maxPriority,ignoreDirective);
for(var attr,name,nName,ngAttrName,value,isNgAttr,nAttrs=node.attributes,
j=0,jj=nAttrs&&nAttrs.length;j<jj;j++){
var attrStartName=false;
var attrEndName=false;
attr=nAttrs[j];
name=attr.name;
value=trim(attr.value);
ngAttrName=directiveNormalize(name);
if(isNgAttr=NG_ATTR_BINDING.test(ngAttrName)){
name=name.replace(PREFIX_REGEXP,'')
.substr(8).replace(/_(.)/g,function(match,letter){
return letter.toUpperCase();
});
}
var multiElementMatch=ngAttrName.match(MULTI_ELEMENT_DIR_RE);
if(multiElementMatch&&directiveIsMultiElement(multiElementMatch[1])){
attrStartName=name;
attrEndName=name.substr(0,name.length-5)+'end';
name=name.substr(0,name.length-6);
}
nName=directiveNormalize(name.toLowerCase());
attrsMap[nName]=name;
if(isNgAttr||!attrs.hasOwnProperty(nName)){
attrs[nName]=value;
if(getBooleanAttrName(node,nName)){
attrs[nName]=true;
}
}
addAttrInterpolateDirective(node,directives,value,nName,isNgAttr);
addDirective(directives,nName,'A',maxPriority,ignoreDirective,attrStartName,
attrEndName);
}
className=node.className;
if(isObject(className)){
className=className.animVal;
}
if(isString(className)&&className!==''){
while(match=CLASS_DIRECTIVE_REGEXP.exec(className)){
nName=directiveNormalize(match[2]);
if(addDirective(directives,nName,'C',maxPriority,ignoreDirective)){
attrs[nName]=trim(match[3]);
}
className=className.substr(match.index+match[0].length);
}
}
break;
case NODE_TYPE_TEXT:
if(msie===11){
while(node.parentNode&&node.nextSibling&&node.nextSibling.nodeType===NODE_TYPE_TEXT){
node.nodeValue=node.nodeValue+node.nextSibling.nodeValue;
node.parentNode.removeChild(node.nextSibling);
}
}
addTextInterpolateDirective(directives,node.nodeValue);
break;
case NODE_TYPE_COMMENT:
try{
match=COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);
if(match){
nName=directiveNormalize(match[1]);
if(addDirective(directives,nName,'M',maxPriority,ignoreDirective)){
attrs[nName]=trim(match[2]);
}
}
}catch(e){
}
break;
}
directives.sort(byPriority);
return directives;
}
function groupScan(node,attrStart,attrEnd){
var nodes=[];
var depth=0;
if(attrStart&&node.hasAttribute&&node.hasAttribute(attrStart)){
do{
if(!node){
throw $compileMinErr('uterdir',
"Unterminated attribute, found '{0}' but no matching '{1}' found.",
attrStart,attrEnd);
}
if(node.nodeType==NODE_TYPE_ELEMENT){
if(node.hasAttribute(attrStart))depth++;
if(node.hasAttribute(attrEnd))depth--;
}
nodes.push(node);
node=node.nextSibling;
}while(depth>0);
}else{
nodes.push(node);
}
return jqLite(nodes);
}
function groupElementsLinkFnWrapper(linkFn,attrStart,attrEnd){
return function groupedElementsLink(scope,element,attrs,controllers,transcludeFn){
element=groupScan(element[0],attrStart,attrEnd);
return linkFn(scope,element,attrs,controllers,transcludeFn);
};
}
function compilationGenerator(eager,$compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext){
var compiled;
if(eager){
return compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext);
}
return function lazyCompilation(){
if(!compiled){
compiled=compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext);
$compileNodes=transcludeFn=previousCompileContext=null;
}
return compiled.apply(this,arguments);
};
}
function applyDirectivesToNode(directives,compileNode,templateAttrs,transcludeFn,
jqCollection,originalReplaceDirective,preLinkFns,postLinkFns,
previousCompileContext){
previousCompileContext=previousCompileContext||{};
var terminalPriority=-Number.MAX_VALUE,
newScopeDirective=previousCompileContext.newScopeDirective,
controllerDirectives=previousCompileContext.controllerDirectives,
newIsolateScopeDirective=previousCompileContext.newIsolateScopeDirective,
templateDirective=previousCompileContext.templateDirective,
nonTlbTranscludeDirective=previousCompileContext.nonTlbTranscludeDirective,
hasTranscludeDirective=false,
hasTemplate=false,
hasElementTranscludeDirective=previousCompileContext.hasElementTranscludeDirective,
$compileNode=templateAttrs.$$element=jqLite(compileNode),
directive,
directiveName,
$template,
replaceDirective=originalReplaceDirective,
childTranscludeFn=transcludeFn,
linkFn,
didScanForMultipleTransclusion=false,
mightHaveMultipleTransclusionError=false,
directiveValue;
for(var i=0,ii=directives.length;i<ii;i++){
directive=directives[i];
var attrStart=directive.$$start;
var attrEnd=directive.$$end;
if(attrStart){
$compileNode=groupScan(compileNode,attrStart,attrEnd);
}
$template=undefined;
if(terminalPriority>directive.priority){
break;
}
if(directiveValue=directive.scope){
if(!directive.templateUrl){
if(isObject(directiveValue)){
assertNoDuplicate('new/isolated scope',newIsolateScopeDirective||newScopeDirective,
directive,$compileNode);
newIsolateScopeDirective=directive;
}else{
assertNoDuplicate('new/isolated scope',newIsolateScopeDirective,directive,
$compileNode);
}
}
newScopeDirective=newScopeDirective||directive;
}
directiveName=directive.name;
if(!didScanForMultipleTransclusion&&((directive.replace&&(directive.templateUrl||directive.template))
||(directive.transclude&&!directive.$$tlb))){
var candidateDirective;
for(var scanningIndex=i+1;candidateDirective=directives[scanningIndex++];){
if((candidateDirective.transclude&&!candidateDirective.$$tlb)
||(candidateDirective.replace&&(candidateDirective.templateUrl||candidateDirective.template))){
mightHaveMultipleTransclusionError=true;
break;
}
}
didScanForMultipleTransclusion=true;
}
if(!directive.templateUrl&&directive.controller){
directiveValue=directive.controller;
controllerDirectives=controllerDirectives||createMap();
assertNoDuplicate("'"+directiveName+"' controller",
controllerDirectives[directiveName],directive,$compileNode);
controllerDirectives[directiveName]=directive;
}
if(directiveValue=directive.transclude){
hasTranscludeDirective=true;
if(!directive.$$tlb){
assertNoDuplicate('transclusion',nonTlbTranscludeDirective,directive,$compileNode);
nonTlbTranscludeDirective=directive;
}
if(directiveValue=='element'){
hasElementTranscludeDirective=true;
terminalPriority=directive.priority;
$template=$compileNode;
$compileNode=templateAttrs.$$element=
jqLite(compile.$$createComment(directiveName,templateAttrs[directiveName]));
compileNode=$compileNode[0];
replaceWith(jqCollection,sliceArgs($template),compileNode);
$template[0].$$parentNode=$template[0].parentNode;
childTranscludeFn=compilationGenerator(mightHaveMultipleTransclusionError,$template,transcludeFn,terminalPriority,
replaceDirective&&replaceDirective.name,{
nonTlbTranscludeDirective:nonTlbTranscludeDirective
});
}else{
var slots=createMap();
$template=jqLite(jqLiteClone(compileNode)).contents();
if(isObject(directiveValue)){
$template=[];
var slotMap=createMap();
var filledSlots=createMap();
forEach(directiveValue,function(elementSelector,slotName){
var optional=(elementSelector.charAt(0)==='?');
elementSelector=optional?elementSelector.substring(1):elementSelector;
slotMap[elementSelector]=slotName;
slots[slotName]=null;
filledSlots[slotName]=optional;
});
forEach($compileNode.contents(),function(node){
var slotName=slotMap[directiveNormalize(nodeName_(node))];
if(slotName){
filledSlots[slotName]=true;
slots[slotName]=slots[slotName]||[];
slots[slotName].push(node);
}else{
$template.push(node);
}
});
forEach(filledSlots,function(filled,slotName){
if(!filled){
throw $compileMinErr('reqslot','Required transclusion slot `{0}` was not filled.',slotName);
}
});
for(var slotName in slots){
if(slots[slotName]){
slots[slotName]=compilationGenerator(mightHaveMultipleTransclusionError,slots[slotName],transcludeFn);
}
}
}
$compileNode.empty();
childTranscludeFn=compilationGenerator(mightHaveMultipleTransclusionError,$template,transcludeFn,undefined,
undefined,{needsNewScope:directive.$$isolateScope||directive.$$newScope});
childTranscludeFn.$$slots=slots;
}
}
if(directive.template){
hasTemplate=true;
assertNoDuplicate('template',templateDirective,directive,$compileNode);
templateDirective=directive;
directiveValue=(isFunction(directive.template))
?directive.template($compileNode,templateAttrs)
:directive.template;
directiveValue=denormalizeTemplate(directiveValue);
if(directive.replace){
replaceDirective=directive;
if(jqLiteIsTextNode(directiveValue)){
$template=[];
}else{
$template=removeComments(wrapTemplate(directive.templateNamespace,trim(directiveValue)));
}
compileNode=$template[0];
if($template.length!=1||compileNode.nodeType!==NODE_TYPE_ELEMENT){
throw $compileMinErr('tplrt',
"Template for directive '{0}' must have exactly one root element. {1}",
directiveName,'');
}
replaceWith(jqCollection,$compileNode,compileNode);
var newTemplateAttrs={$attr:{}};
var templateDirectives=collectDirectives(compileNode,[],newTemplateAttrs);
var unprocessedDirectives=directives.splice(i+1,directives.length-(i+1));
if(newIsolateScopeDirective||newScopeDirective){
markDirectiveScope(templateDirectives,newIsolateScopeDirective,newScopeDirective);
}
directives=directives.concat(templateDirectives).concat(unprocessedDirectives);
mergeTemplateAttributes(templateAttrs,newTemplateAttrs);
ii=directives.length;
}else{
$compileNode.html(directiveValue);
}
}
if(directive.templateUrl){
hasTemplate=true;
assertNoDuplicate('template',templateDirective,directive,$compileNode);
templateDirective=directive;
if(directive.replace){
replaceDirective=directive;
}
nodeLinkFn=compileTemplateUrl(directives.splice(i,directives.length-i),$compileNode,
templateAttrs,jqCollection,hasTranscludeDirective&&childTranscludeFn,preLinkFns,postLinkFns,{
controllerDirectives:controllerDirectives,
newScopeDirective:(newScopeDirective!==directive)&&newScopeDirective,
newIsolateScopeDirective:newIsolateScopeDirective,
templateDirective:templateDirective,
nonTlbTranscludeDirective:nonTlbTranscludeDirective
});
ii=directives.length;
}else if(directive.compile){
try{
linkFn=directive.compile($compileNode,templateAttrs,childTranscludeFn);
if(isFunction(linkFn)){
addLinkFns(null,linkFn,attrStart,attrEnd);
}else if(linkFn){
addLinkFns(linkFn.pre,linkFn.post,attrStart,attrEnd);
}
}catch(e){
$exceptionHandler(e,startingTag($compileNode));
}
}
if(directive.terminal){
nodeLinkFn.terminal=true;
terminalPriority=Math.max(terminalPriority,directive.priority);
}
}
nodeLinkFn.scope=newScopeDirective&&newScopeDirective.scope===true;
nodeLinkFn.transcludeOnThisElement=hasTranscludeDirective;
nodeLinkFn.templateOnThisElement=hasTemplate;
nodeLinkFn.transclude=childTranscludeFn;
previousCompileContext.hasElementTranscludeDirective=hasElementTranscludeDirective;
return nodeLinkFn;
function addLinkFns(pre,post,attrStart,attrEnd){
if(pre){
if(attrStart)pre=groupElementsLinkFnWrapper(pre,attrStart,attrEnd);
pre.require=directive.require;
pre.directiveName=directiveName;
if(newIsolateScopeDirective===directive||directive.$$isolateScope){
pre=cloneAndAnnotateFn(pre,{isolateScope:true});
}
preLinkFns.push(pre);
}
if(post){
if(attrStart)post=groupElementsLinkFnWrapper(post,attrStart,attrEnd);
post.require=directive.require;
post.directiveName=directiveName;
if(newIsolateScopeDirective===directive||directive.$$isolateScope){
post=cloneAndAnnotateFn(post,{isolateScope:true});
}
postLinkFns.push(post);
}
}
function nodeLinkFn(childLinkFn,scope,linkNode,$rootElement,boundTranscludeFn){
var i,ii,linkFn,isolateScope,controllerScope,elementControllers,transcludeFn,$element,
attrs,scopeBindingInfo;
if(compileNode===linkNode){
attrs=templateAttrs;
$element=templateAttrs.$$element;
}else{
$element=jqLite(linkNode);
attrs=new Attributes($element,templateAttrs);
}
controllerScope=scope;
if(newIsolateScopeDirective){
isolateScope=scope.$new(true);
}else if(newScopeDirective){
controllerScope=scope.$parent;
}
if(boundTranscludeFn){
transcludeFn=controllersBoundTransclude;
transcludeFn.$$boundTransclude=boundTranscludeFn;
transcludeFn.isSlotFilled=function(slotName){
return!!boundTranscludeFn.$$slots[slotName];
};
}
if(controllerDirectives){
elementControllers=setupControllers($element,attrs,transcludeFn,controllerDirectives,isolateScope,scope,newIsolateScopeDirective);
}
if(newIsolateScopeDirective){
compile.$$addScopeInfo($element,isolateScope,true,!(templateDirective&&(templateDirective===newIsolateScopeDirective||
templateDirective===newIsolateScopeDirective.$$originalDirective)));
compile.$$addScopeClass($element,true);
isolateScope.$$isolateBindings=
newIsolateScopeDirective.$$isolateBindings;
scopeBindingInfo=initializeDirectiveBindings(scope,attrs,isolateScope,
isolateScope.$$isolateBindings,
newIsolateScopeDirective);
if(scopeBindingInfo.removeWatches){
isolateScope.$on('$destroy',scopeBindingInfo.removeWatches);
}
}
for(var name in elementControllers){
var controllerDirective=controllerDirectives[name];
var controller=elementControllers[name];
var bindings=controllerDirective.$$bindings.bindToController;
if(controller.identifier&&bindings){
controller.bindingInfo=
initializeDirectiveBindings(controllerScope,attrs,controller.instance,bindings,controllerDirective);
}else{
controller.bindingInfo={};
}
var controllerResult=controller();
if(controllerResult!==controller.instance){
controller.instance=controllerResult;
$element.data('$'+controllerDirective.name+'Controller',controllerResult);
controller.bindingInfo.removeWatches&&controller.bindingInfo.removeWatches();
controller.bindingInfo=
initializeDirectiveBindings(controllerScope,attrs,controller.instance,bindings,controllerDirective);
}
}
forEach(controllerDirectives,function(controllerDirective,name){
var require=controllerDirective.require;
if(controllerDirective.bindToController&&!isArray(require)&&isObject(require)){
extend(elementControllers[name].instance,getControllers(name,require,$element,elementControllers));
}
});
forEach(elementControllers,function(controller){
var controllerInstance=controller.instance;
if(isFunction(controllerInstance.$onChanges)){
controllerInstance.$onChanges(controller.bindingInfo.initialChanges);
}
if(isFunction(controllerInstance.$onInit)){
controllerInstance.$onInit();
}
if(isFunction(controllerInstance.$onDestroy)){
controllerScope.$on('$destroy',function callOnDestroyHook(){
controllerInstance.$onDestroy();
});
}
});
for(i=0,ii=preLinkFns.length;i<ii;i++){
linkFn=preLinkFns[i];
invokeLinkFn(linkFn,
linkFn.isolateScope?isolateScope:scope,
$element,
attrs,
linkFn.require&&getControllers(linkFn.directiveName,linkFn.require,$element,elementControllers),
transcludeFn
);
}
var scopeToChild=scope;
if(newIsolateScopeDirective&&(newIsolateScopeDirective.template||newIsolateScopeDirective.templateUrl===null)){
scopeToChild=isolateScope;
}
childLinkFn&&childLinkFn(scopeToChild,linkNode.childNodes,undefined,boundTranscludeFn);
for(i=postLinkFns.length-1;i>=0;i--){
linkFn=postLinkFns[i];
invokeLinkFn(linkFn,
linkFn.isolateScope?isolateScope:scope,
$element,
attrs,
linkFn.require&&getControllers(linkFn.directiveName,linkFn.require,$element,elementControllers),
transcludeFn
);
}
forEach(elementControllers,function(controller){
var controllerInstance=controller.instance;
if(isFunction(controllerInstance.$postLink)){
controllerInstance.$postLink();
}
});
function controllersBoundTransclude(scope,cloneAttachFn,futureParentElement,slotName){
var transcludeControllers;
if(!isScope(scope)){
slotName=futureParentElement;
futureParentElement=cloneAttachFn;
cloneAttachFn=scope;
scope=undefined;
}
if(hasElementTranscludeDirective){
transcludeControllers=elementControllers;
}
if(!futureParentElement){
futureParentElement=hasElementTranscludeDirective?$element.parent():$element;
}
if(slotName){
var slotTranscludeFn=boundTranscludeFn.$$slots[slotName];
if(slotTranscludeFn){
return slotTranscludeFn(scope,cloneAttachFn,transcludeControllers,futureParentElement,scopeToChild);
}else if(isUndefined(slotTranscludeFn)){
throw $compileMinErr('noslot',
'No parent directive that requires a transclusion with slot name "{0}". '+
'Element: {1}',
slotName,startingTag($element));
}
}else{
return boundTranscludeFn(scope,cloneAttachFn,transcludeControllers,futureParentElement,scopeToChild);
}
}
}
}
function getControllers(directiveName,require,$element,elementControllers){
var value;
if(isString(require)){
var match=require.match(REQUIRE_PREFIX_REGEXP);
var name=require.substring(match[0].length);
var inheritType=match[1]||match[3];
var optional=match[2]==='?';
if(inheritType==='^^'){
$element=$element.parent();
}else{
value=elementControllers&&elementControllers[name];
value=value&&value.instance;
}
if(!value){
var dataName='$'+name+'Controller';
value=inheritType?$element.inheritedData(dataName):$element.data(dataName);
}
if(!value&&!optional){
throw $compileMinErr('ctreq',
"Controller '{0}', required by directive '{1}', can't be found!",
name,directiveName);
}
}else if(isArray(require)){
value=[];
for(var i=0,ii=require.length;i<ii;i++){
value[i]=getControllers(directiveName,require[i],$element,elementControllers);
}
}else if(isObject(require)){
value={};
forEach(require,function(controller,property){
value[property]=getControllers(directiveName,controller,$element,elementControllers);
});
}
return value||null;
}
function setupControllers($element,attrs,transcludeFn,controllerDirectives,isolateScope,scope,newIsolateScopeDirective){
var elementControllers=createMap();
for(var controllerKey in controllerDirectives){
var directive=controllerDirectives[controllerKey];
var locals={
$scope:directive===newIsolateScopeDirective||directive.$$isolateScope?isolateScope:scope,
$element:$element,
$attrs:attrs,
$transclude:transcludeFn
};
var controller=directive.controller;
if(controller=='@'){
controller=attrs[directive.name];
}
var controllerInstance=$controller(controller,locals,true,directive.controllerAs);
elementControllers[directive.name]=controllerInstance;
$element.data('$'+directive.name+'Controller',controllerInstance.instance);
}
return elementControllers;
}
function markDirectiveScope(directives,isolateScope,newScope){
for(var j=0,jj=directives.length;j<jj;j++){
directives[j]=inherit(directives[j],{$$isolateScope:isolateScope,$$newScope:newScope});
}
}
function addDirective(tDirectives,name,location,maxPriority,ignoreDirective,startAttrName,
endAttrName){
if(name===ignoreDirective)return null;
var match=null;
if(hasDirectives.hasOwnProperty(name)){
for(var directive,directives=$injector.get(name+Suffix),
i=0,ii=directives.length;i<ii;i++){
try{
directive=directives[i];
if((isUndefined(maxPriority)||maxPriority>directive.priority)&&
directive.restrict.indexOf(location)!=-1){
if(startAttrName){
directive=inherit(directive,{$$start:startAttrName,$$end:endAttrName});
}
if(!directive.$$bindings){
var bindings=directive.$$bindings=
parseDirectiveBindings(directive,directive.name);
if(isObject(bindings.isolateScope)){
directive.$$isolateBindings=bindings.isolateScope;
}
}
tDirectives.push(directive);
match=directive;
}
}catch(e){$exceptionHandler(e);}
}
}
return match;
}
function directiveIsMultiElement(name){
if(hasDirectives.hasOwnProperty(name)){
for(var directive,directives=$injector.get(name+Suffix),
i=0,ii=directives.length;i<ii;i++){
directive=directives[i];
if(directive.multiElement){
return true;
}
}
}
return false;
}
function mergeTemplateAttributes(dst,src){
var srcAttr=src.$attr,
dstAttr=dst.$attr,
$element=dst.$$element;
forEach(dst,function(value,key){
if(key.charAt(0)!='$'){
if(src[key]&&src[key]!==value){
value+=(key==='style'?';':' ')+src[key];
}
dst.$set(key,value,true,srcAttr[key]);
}
});
forEach(src,function(value,key){
if(key=='class'){
safeAddClass($element,value);
dst['class']=(dst['class']?dst['class']+' ':'')+value;
}else if(key=='style'){
$element.attr('style',$element.attr('style')+';'+value);
dst['style']=(dst['style']?dst['style']+';':'')+value;
}else if(key.charAt(0)!='$'&&!dst.hasOwnProperty(key)){
dst[key]=value;
dstAttr[key]=srcAttr[key];
}
});
}
function compileTemplateUrl(directives,$compileNode,tAttrs,
$rootElement,childTranscludeFn,preLinkFns,postLinkFns,previousCompileContext){
var linkQueue=[],
afterTemplateNodeLinkFn,
afterTemplateChildLinkFn,
beforeTemplateCompileNode=$compileNode[0],
origAsyncDirective=directives.shift(),
derivedSyncDirective=inherit(origAsyncDirective,{
templateUrl:null,transclude:null,replace:null,$$originalDirective:origAsyncDirective
}),
templateUrl=(isFunction(origAsyncDirective.templateUrl))
?origAsyncDirective.templateUrl($compileNode,tAttrs)
:origAsyncDirective.templateUrl,
templateNamespace=origAsyncDirective.templateNamespace;
$compileNode.empty();
$templateRequest(templateUrl)
.then(function(content){
var compileNode,tempTemplateAttrs,$template,childBoundTranscludeFn;
content=denormalizeTemplate(content);
if(origAsyncDirective.replace){
if(jqLiteIsTextNode(content)){
$template=[];
}else{
$template=removeComments(wrapTemplate(templateNamespace,trim(content)));
}
compileNode=$template[0];
if($template.length!=1||compileNode.nodeType!==NODE_TYPE_ELEMENT){
throw $compileMinErr('tplrt',
"Template for directive '{0}' must have exactly one root element. {1}",
origAsyncDirective.name,templateUrl);
}
tempTemplateAttrs={$attr:{}};
replaceWith($rootElement,$compileNode,compileNode);
var templateDirectives=collectDirectives(compileNode,[],tempTemplateAttrs);
if(isObject(origAsyncDirective.scope)){
markDirectiveScope(templateDirectives,true);
}
directives=templateDirectives.concat(directives);
mergeTemplateAttributes(tAttrs,tempTemplateAttrs);
}else{
compileNode=beforeTemplateCompileNode;
$compileNode.html(content);
}
directives.unshift(derivedSyncDirective);
afterTemplateNodeLinkFn=applyDirectivesToNode(directives,compileNode,tAttrs,
childTranscludeFn,$compileNode,origAsyncDirective,preLinkFns,postLinkFns,
previousCompileContext);
forEach($rootElement,function(node,i){
if(node==compileNode){
$rootElement[i]=$compileNode[0];
}
});
afterTemplateChildLinkFn=compileNodes($compileNode[0].childNodes,childTranscludeFn);
while(linkQueue.length){
var scope=linkQueue.shift(),
beforeTemplateLinkNode=linkQueue.shift(),
linkRootElement=linkQueue.shift(),
boundTranscludeFn=linkQueue.shift(),
linkNode=$compileNode[0];
if(scope.$$destroyed)continue;
if(beforeTemplateLinkNode!==beforeTemplateCompileNode){
var oldClasses=beforeTemplateLinkNode.className;
if(!(previousCompileContext.hasElementTranscludeDirective&&
origAsyncDirective.replace)){
linkNode=jqLiteClone(compileNode);
}
replaceWith(linkRootElement,jqLite(beforeTemplateLinkNode),linkNode);
safeAddClass(jqLite(linkNode),oldClasses);
}
if(afterTemplateNodeLinkFn.transcludeOnThisElement){
childBoundTranscludeFn=createBoundTranscludeFn(scope,afterTemplateNodeLinkFn.transclude,boundTranscludeFn);
}else{
childBoundTranscludeFn=boundTranscludeFn;
}
afterTemplateNodeLinkFn(afterTemplateChildLinkFn,scope,linkNode,$rootElement,
childBoundTranscludeFn);
}
linkQueue=null;
});
return function delayedNodeLinkFn(ignoreChildLinkFn,scope,node,rootElement,boundTranscludeFn){
var childBoundTranscludeFn=boundTranscludeFn;
if(scope.$$destroyed)return;
if(linkQueue){
linkQueue.push(scope,
node,
rootElement,
childBoundTranscludeFn);
}else{
if(afterTemplateNodeLinkFn.transcludeOnThisElement){
childBoundTranscludeFn=createBoundTranscludeFn(scope,afterTemplateNodeLinkFn.transclude,boundTranscludeFn);
}
afterTemplateNodeLinkFn(afterTemplateChildLinkFn,scope,node,rootElement,childBoundTranscludeFn);
}
};
}
function byPriority(a,b){
var diff=b.priority-a.priority;
if(diff!==0)return diff;
if(a.name!==b.name)return(a.name<b.name)?-1:1;
return a.index-b.index;
}
function assertNoDuplicate(what,previousDirective,directive,element){
function wrapModuleNameIfDefined(moduleName){
return moduleName?
(' (module: '+moduleName+')'):
'';
}
if(previousDirective){
throw $compileMinErr('multidir','Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}',
previousDirective.name,wrapModuleNameIfDefined(previousDirective.$$moduleName),
directive.name,wrapModuleNameIfDefined(directive.$$moduleName),what,startingTag(element));
}
}
function addTextInterpolateDirective(directives,text){
var interpolateFn=$interpolate(text,true);
if(interpolateFn){
directives.push({
priority:0,
compile:function textInterpolateCompileFn(templateNode){
var templateNodeParent=templateNode.parent(),
hasCompileParent=!!templateNodeParent.length;
if(hasCompileParent)compile.$$addBindingClass(templateNodeParent);
return function textInterpolateLinkFn(scope,node){
var parent=node.parent();
if(!hasCompileParent)compile.$$addBindingClass(parent);
compile.$$addBindingInfo(parent,interpolateFn.expressions);
scope.$watch(interpolateFn,function interpolateFnWatchAction(value){
node[0].nodeValue=value;
});
};
}
});
}
}
function wrapTemplate(type,template){
type=lowercase(type||'html');
switch(type){
case'svg':
case'math':
var wrapper=window.document.createElement('div');
wrapper.innerHTML='<'+type+'>'+template+'</'+type+'>';
return wrapper.childNodes[0].childNodes;
default:
return template;
}
}
function getTrustedContext(node,attrNormalizedName){
if(attrNormalizedName=="srcdoc"){
return $sce.HTML;
}
var tag=nodeName_(node);
if(attrNormalizedName=="xlinkHref"||
(tag=="form"&&attrNormalizedName=="action")||
(tag!="img"&&(attrNormalizedName=="src"||
attrNormalizedName=="ngSrc"))){
return $sce.RESOURCE_URL;
}
}
function addAttrInterpolateDirective(node,directives,value,name,allOrNothing){
var trustedContext=getTrustedContext(node,name);
allOrNothing=ALL_OR_NOTHING_ATTRS[name]||allOrNothing;
var interpolateFn=$interpolate(value,true,trustedContext,allOrNothing);
if(!interpolateFn)return;
if(name==="multiple"&&nodeName_(node)==="select"){
throw $compileMinErr("selmulti",
"Binding to the 'multiple' attribute is not supported. Element: {0}",
startingTag(node));
}
directives.push({
priority:100,
compile:function(){
return{
pre:function attrInterpolatePreLinkFn(scope,element,attr){
var $$observers=(attr.$$observers||(attr.$$observers=createMap()));
if(EVENT_HANDLER_ATTR_REGEXP.test(name)){
throw $compileMinErr('nodomevents',
"Interpolations for HTML DOM event attributes are disallowed.  Please use the "+
"ng- versions (such as ng-click instead of onclick) instead.");
}
var newValue=attr[name];
if(newValue!==value){
interpolateFn=newValue&&$interpolate(newValue,true,trustedContext,allOrNothing);
value=newValue;
}
if(!interpolateFn)return;
attr[name]=interpolateFn(scope);
($$observers[name]||($$observers[name]=[])).$$inter=true;
(attr.$$observers&&attr.$$observers[name].$$scope||scope).
$watch(interpolateFn,function interpolateFnWatchAction(newValue,oldValue){
if(name==='class'&&newValue!=oldValue){
attr.$updateClass(newValue,oldValue);
}else{
attr.$set(name,newValue);
}
});
}
};
}
});
}
function replaceWith($rootElement,elementsToRemove,newNode){
var firstElementToRemove=elementsToRemove[0],
removeCount=elementsToRemove.length,
parent=firstElementToRemove.parentNode,
i,ii;
if($rootElement){
for(i=0,ii=$rootElement.length;i<ii;i++){
if($rootElement[i]==firstElementToRemove){
$rootElement[i++]=newNode;
for(var j=i,j2=j+removeCount-1,
jj=$rootElement.length;
j<jj;j++,j2++){
if(j2<jj){
$rootElement[j]=$rootElement[j2];
}else{
delete $rootElement[j];
}
}
$rootElement.length-=removeCount-1;
if($rootElement.context===firstElementToRemove){
$rootElement.context=newNode;
}
break;
}
}
}
if(parent){
parent.replaceChild(newNode,firstElementToRemove);
}
var fragment=window.document.createDocumentFragment();
for(i=0;i<removeCount;i++){
fragment.appendChild(elementsToRemove[i]);
}
if(jqLite.hasData(firstElementToRemove)){
jqLite.data(newNode,jqLite.data(firstElementToRemove));
jqLite(firstElementToRemove).off('$destroy');
}
jqLite.cleanData(fragment.querySelectorAll('*'));
for(i=1;i<removeCount;i++){
delete elementsToRemove[i];
}
elementsToRemove[0]=newNode;
elementsToRemove.length=1;
}
function cloneAndAnnotateFn(fn,annotation){
return extend(function(){return fn.apply(null,arguments);},fn,annotation);
}
function invokeLinkFn(linkFn,scope,$element,attrs,controllers,transcludeFn){
try{
linkFn(scope,$element,attrs,controllers,transcludeFn);
}catch(e){
$exceptionHandler(e,startingTag($element));
}
}
function initializeDirectiveBindings(scope,attrs,destination,bindings,directive){
var removeWatchCollection=[];
var initialChanges={};
var changes;
forEach(bindings,function initializeBinding(definition,scopeName){
var attrName=definition.attrName,
optional=definition.optional,
mode=definition.mode,
lastValue,
parentGet,parentSet,compare,removeWatch;
switch(mode){
case'@':
if(!optional&&!hasOwnProperty.call(attrs,attrName)){
destination[scopeName]=attrs[attrName]=void 0;
}
attrs.$observe(attrName,function(value){
if(isString(value)||isBoolean(value)){
var oldValue=destination[scopeName];
recordChanges(scopeName,value,oldValue);
destination[scopeName]=value;
}
});
attrs.$$observers[attrName].$$scope=scope;
lastValue=attrs[attrName];
if(isString(lastValue)){
destination[scopeName]=$interpolate(lastValue)(scope);
}else if(isBoolean(lastValue)){
destination[scopeName]=lastValue;
}
initialChanges[scopeName]=new SimpleChange(_UNINITIALIZED_VALUE,destination[scopeName]);
break;
case'=':
if(!hasOwnProperty.call(attrs,attrName)){
if(optional)break;
attrs[attrName]=void 0;
}
if(optional&&!attrs[attrName])break;
parentGet=$parse(attrs[attrName]);
if(parentGet.literal){
compare=equals;
}else{
compare=function simpleCompare(a,b){return a===b||(a!==a&&b!==b);};
}
parentSet=parentGet.assign||function(){
lastValue=destination[scopeName]=parentGet(scope);
throw $compileMinErr('nonassign',
"Expression '{0}' in attribute '{1}' used with directive '{2}' is non-assignable!",
attrs[attrName],attrName,directive.name);
};
lastValue=destination[scopeName]=parentGet(scope);
var parentValueWatch=function parentValueWatch(parentValue){
if(!compare(parentValue,destination[scopeName])){
if(!compare(parentValue,lastValue)){
destination[scopeName]=parentValue;
}else{
parentSet(scope,parentValue=destination[scopeName]);
}
}
return lastValue=parentValue;
};
parentValueWatch.$stateful=true;
if(definition.collection){
removeWatch=scope.$watchCollection(attrs[attrName],parentValueWatch);
}else{
removeWatch=scope.$watch($parse(attrs[attrName],parentValueWatch),null,parentGet.literal);
}
removeWatchCollection.push(removeWatch);
break;
case'<':
if(!hasOwnProperty.call(attrs,attrName)){
if(optional)break;
attrs[attrName]=void 0;
}
if(optional&&!attrs[attrName])break;
parentGet=$parse(attrs[attrName]);
destination[scopeName]=parentGet(scope);
initialChanges[scopeName]=new SimpleChange(_UNINITIALIZED_VALUE,destination[scopeName]);
removeWatch=scope.$watch(parentGet,function parentValueWatchAction(newValue,oldValue){
if(newValue===oldValue){
oldValue=destination[scopeName];
}
recordChanges(scopeName,newValue,oldValue);
destination[scopeName]=newValue;
},parentGet.literal);
removeWatchCollection.push(removeWatch);
break;
case'&':
parentGet=attrs.hasOwnProperty(attrName)?$parse(attrs[attrName]):noop;
if(parentGet===noop&&optional)break;
destination[scopeName]=function(locals){
return parentGet(scope,locals);
};
break;
}
});
function recordChanges(key,currentValue,previousValue){
if(isFunction(destination.$onChanges)&&currentValue!==previousValue){
if(!onChangesQueue){
scope.$$postDigest(flushOnChangesQueue);
onChangesQueue=[];
}
if(!changes){
changes={};
onChangesQueue.push(triggerOnChangesHook);
}
if(changes[key]){
previousValue=changes[key].previousValue;
}
changes[key]=new SimpleChange(previousValue,currentValue);
}
}
function triggerOnChangesHook(){
destination.$onChanges(changes);
changes=undefined;
}
return{
initialChanges:initialChanges,
removeWatches:removeWatchCollection.length&&function removeWatches(){
for(var i=0,ii=removeWatchCollection.length;i<ii;++i){
removeWatchCollection[i]();
}
}
};
}
}];
}
function SimpleChange(previous,current){
this.previousValue=previous;
this.currentValue=current;
}
SimpleChange.prototype.isFirstChange=function(){return this.previousValue===_UNINITIALIZED_VALUE;};
var PREFIX_REGEXP=/^((?:x|data)[\:\-_])/i;
function directiveNormalize(name){
return camelCase(name.replace(PREFIX_REGEXP,''));
}
function nodesetLinkingFn(
scope,
nodeList,
rootElement,
boundTranscludeFn
){}
function directiveLinkingFn(
nodesetLinkingFn,
scope,
node,
rootElement,
boundTranscludeFn
){}
function tokenDifference(str1,str2){
var values='',
tokens1=str1.split(/\s+/),
tokens2=str2.split(/\s+/);
outer:
for(var i=0;i<tokens1.length;i++){
var token=tokens1[i];
for(var j=0;j<tokens2.length;j++){
if(token==tokens2[j])continue outer;
}
values+=(values.length>0?' ':'')+token;
}
return values;
}
function removeComments(jqNodes){
jqNodes=jqLite(jqNodes);
var i=jqNodes.length;
if(i<=1){
return jqNodes;
}
while(i--){
var node=jqNodes[i];
if(node.nodeType===NODE_TYPE_COMMENT){
splice.call(jqNodes,i,1);
}
}
return jqNodes;
}
var $controllerMinErr=minErr('$controller');
var CNTRL_REG=/^(\S+)(\s+as\s+([\w$]+))?$/;
function identifierForController(controller,ident){
if(ident&&isString(ident))return ident;
if(isString(controller)){
var match=CNTRL_REG.exec(controller);
if(match)return match[3];
}
}
function $ControllerProvider(){
var controllers={},
globals=false;
this.has=function(name){
return controllers.hasOwnProperty(name);
};
this.register=function(name,constructor){
assertNotHasOwnProperty(name,'controller');
if(isObject(name)){
extend(controllers,name);
}else{
controllers[name]=constructor;
}
};
this.allowGlobals=function(){
globals=true;
};
this.$get=['$injector','$window',function($injector,$window){
return function $controller(expression,locals,later,ident){
var instance,match,constructor,identifier;
later=later===true;
if(ident&&isString(ident)){
identifier=ident;
}
if(isString(expression)){
match=expression.match(CNTRL_REG);
if(!match){
throw $controllerMinErr('ctrlfmt',
"Badly formed controller string '{0}'. "+
"Must match `__name__ as __id__` or `__name__`.",expression);
}
constructor=match[1],
identifier=identifier||match[3];
expression=controllers.hasOwnProperty(constructor)
?controllers[constructor]
:getter(locals.$scope,constructor,true)||
(globals?getter($window,constructor,true):undefined);
assertArgFn(expression,constructor,true);
}
if(later){
var controllerPrototype=(isArray(expression)?
expression[expression.length-1]:expression).prototype;
instance=Object.create(controllerPrototype||null);
if(identifier){
addIdentifier(locals,identifier,instance,constructor||expression.name);
}
var instantiate;
return instantiate=extend(function $controllerInit(){
var result=$injector.invoke(expression,instance,locals,constructor);
if(result!==instance&&(isObject(result)||isFunction(result))){
instance=result;
if(identifier){
addIdentifier(locals,identifier,instance,constructor||expression.name);
}
}
return instance;
},{
instance:instance,
identifier:identifier
});
}
instance=$injector.instantiate(expression,locals,constructor);
if(identifier){
addIdentifier(locals,identifier,instance,constructor||expression.name);
}
return instance;
};
function addIdentifier(locals,identifier,instance,name){
if(!(locals&&isObject(locals.$scope))){
throw minErr('$controller')('noscp',
"Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.",
name,identifier);
}
locals.$scope[identifier]=instance;
}
}];
}
function $DocumentProvider(){
this.$get=['$window',function(window){
return jqLite(window.document);
}];
}
function $ExceptionHandlerProvider(){
this.$get=['$log',function($log){
return function(exception,cause){
$log.error.apply($log,arguments);
};
}];
}
var $$ForceReflowProvider=function(){
this.$get=['$document',function($document){
return function(domNode){
if(domNode){
if(!domNode.nodeType&&domNode instanceof jqLite){
domNode=domNode[0];
}
}else{
domNode=$document[0].body;
}
return domNode.offsetWidth+1;
};
}];
};
var APPLICATION_JSON='application/json';
var CONTENT_TYPE_APPLICATION_JSON={'Content-Type':APPLICATION_JSON+';charset=utf-8'};
var JSON_START=/^\[|^\{(?!\{)/;
var JSON_ENDS={
'[':/]$/,
'{':/}$/
};
var JSON_PROTECTION_PREFIX=/^\)\]\}',?\n/;
var $httpMinErr=minErr('$http');
var $httpMinErrLegacyFn=function(method){
return function(){
throw $httpMinErr('legacy','The method `{0}` on the promise returned from `$http` has been disabled.',method);
};
};
function serializeValue(v){
if(isObject(v)){
return isDate(v)?v.toISOString():toJson(v);
}
return v;
}
function $HttpParamSerializerProvider(){
this.$get=function(){
return function ngParamSerializer(params){
if(!params)return'';
var parts=[];
forEachSorted(params,function(value,key){
if(value===null||isUndefined(value))return;
if(isArray(value)){
forEach(value,function(v){
parts.push(encodeUriQuery(key)+'='+encodeUriQuery(serializeValue(v)));
});
}else{
parts.push(encodeUriQuery(key)+'='+encodeUriQuery(serializeValue(value)));
}
});
return parts.join('&');
};
};
}
function $HttpParamSerializerJQLikeProvider(){
this.$get=function(){
return function jQueryLikeParamSerializer(params){
if(!params)return'';
var parts=[];
serialize(params,'',true);
return parts.join('&');
function serialize(toSerialize,prefix,topLevel){
if(toSerialize===null||isUndefined(toSerialize))return;
if(isArray(toSerialize)){
forEach(toSerialize,function(value,index){
serialize(value,prefix+'['+(isObject(value)?index:'')+']');
});
}else if(isObject(toSerialize)&&!isDate(toSerialize)){
forEachSorted(toSerialize,function(value,key){
serialize(value,prefix+
(topLevel?'':'[')+
key+
(topLevel?'':']'));
});
}else{
parts.push(encodeUriQuery(prefix)+'='+encodeUriQuery(serializeValue(toSerialize)));
}
}
};
};
}
function defaultHttpResponseTransform(data,headers){
if(isString(data)){
var tempData=data.replace(JSON_PROTECTION_PREFIX,'').trim();
if(tempData){
var contentType=headers('Content-Type');
if((contentType&&(contentType.indexOf(APPLICATION_JSON)===0))||isJsonLike(tempData)){
data=fromJson(tempData);
}
}
}
return data;
}
function isJsonLike(str){
var jsonStart=str.match(JSON_START);
return jsonStart&&JSON_ENDS[jsonStart[0]].test(str);
}
function parseHeaders(headers){
var parsed=createMap(),i;
function fillInParsed(key,val){
if(key){
parsed[key]=parsed[key]?parsed[key]+', '+val:val;
}
}
if(isString(headers)){
forEach(headers.split('\n'),function(line){
i=line.indexOf(':');
fillInParsed(lowercase(trim(line.substr(0,i))),trim(line.substr(i+1)));
});
}else if(isObject(headers)){
forEach(headers,function(headerVal,headerKey){
fillInParsed(lowercase(headerKey),trim(headerVal));
});
}
return parsed;
}
function headersGetter(headers){
var headersObj;
return function(name){
if(!headersObj)headersObj=parseHeaders(headers);
if(name){
var value=headersObj[lowercase(name)];
if(value===void 0){
value=null;
}
return value;
}
return headersObj;
};
}
function transformData(data,headers,status,fns){
if(isFunction(fns)){
return fns(data,headers,status);
}
forEach(fns,function(fn){
data=fn(data,headers,status);
});
return data;
}
function isSuccess(status){
return 200<=status&&status<300;
}
function $HttpProvider(){
var defaults=this.defaults={
transformResponse:[defaultHttpResponseTransform],
transformRequest:[function(d){
return isObject(d)&&!isFile(d)&&!isBlob(d)&&!isFormData(d)?toJson(d):d;
}],
headers:{
common:{
'Accept':'application/json, text/plain, */*'
},
post:shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
put:shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
patch:shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
},
xsrfCookieName:'XSRF-TOKEN',
xsrfHeaderName:'X-XSRF-TOKEN',
paramSerializer:'$httpParamSerializer'
};
var useApplyAsync=false;
this.useApplyAsync=function(value){
if(isDefined(value)){
useApplyAsync=!!value;
return this;
}
return useApplyAsync;
};
var useLegacyPromise=true;
this.useLegacyPromiseExtensions=function(value){
if(isDefined(value)){
useLegacyPromise=!!value;
return this;
}
return useLegacyPromise;
};
var interceptorFactories=this.interceptors=[];
this.$get=['$httpBackend','$$cookieReader','$cacheFactory','$rootScope','$q','$injector',
function($httpBackend,$$cookieReader,$cacheFactory,$rootScope,$q,$injector){
var defaultCache=$cacheFactory('$http');
defaults.paramSerializer=isString(defaults.paramSerializer)?
$injector.get(defaults.paramSerializer):defaults.paramSerializer;
var reversedInterceptors=[];
forEach(interceptorFactories,function(interceptorFactory){
reversedInterceptors.unshift(isString(interceptorFactory)
?$injector.get(interceptorFactory):$injector.invoke(interceptorFactory));
});
function $http(requestConfig){
if(!isObject(requestConfig)){
throw minErr('$http')('badreq','Http request configuration must be an object.  Received: {0}',requestConfig);
}
if(!isString(requestConfig.url)){
throw minErr('$http')('badreq','Http request configuration url must be a string.  Received: {0}',requestConfig.url);
}
var config=extend({
method:'get',
transformRequest:defaults.transformRequest,
transformResponse:defaults.transformResponse,
paramSerializer:defaults.paramSerializer
},requestConfig);
config.headers=mergeHeaders(requestConfig);
config.method=uppercase(config.method);
config.paramSerializer=isString(config.paramSerializer)?
$injector.get(config.paramSerializer):config.paramSerializer;
var serverRequest=function(config){
var headers=config.headers;
var reqData=transformData(config.data,headersGetter(headers),undefined,config.transformRequest);
if(isUndefined(reqData)){
forEach(headers,function(value,header){
if(lowercase(header)==='content-type'){
delete headers[header];
}
});
}
if(isUndefined(config.withCredentials)&&!isUndefined(defaults.withCredentials)){
config.withCredentials=defaults.withCredentials;
}
return sendReq(config,reqData).then(transformResponse,transformResponse);
};
var chain=[serverRequest,undefined];
var promise=$q.when(config);
forEach(reversedInterceptors,function(interceptor){
if(interceptor.request||interceptor.requestError){
chain.unshift(interceptor.request,interceptor.requestError);
}
if(interceptor.response||interceptor.responseError){
chain.push(interceptor.response,interceptor.responseError);
}
});
while(chain.length){
var thenFn=chain.shift();
var rejectFn=chain.shift();
promise=promise.then(thenFn,rejectFn);
}
if(useLegacyPromise){
promise.success=function(fn){
assertArgFn(fn,'fn');
promise.then(function(response){
fn(response.data,response.status,response.headers,config);
});
return promise;
};
promise.error=function(fn){
assertArgFn(fn,'fn');
promise.then(null,function(response){
fn(response.data,response.status,response.headers,config);
});
return promise;
};
}else{
promise.success=$httpMinErrLegacyFn('success');
promise.error=$httpMinErrLegacyFn('error');
}
return promise;
function transformResponse(response){
var resp=extend({},response);
resp.data=transformData(response.data,response.headers,response.status,
config.transformResponse);
return(isSuccess(response.status))
?resp
:$q.reject(resp);
}
function executeHeaderFns(headers,config){
var headerContent,processedHeaders={};
forEach(headers,function(headerFn,header){
if(isFunction(headerFn)){
headerContent=headerFn(config);
if(headerContent!=null){
processedHeaders[header]=headerContent;
}
}else{
processedHeaders[header]=headerFn;
}
});
return processedHeaders;
}
function mergeHeaders(config){
var defHeaders=defaults.headers,
reqHeaders=extend({},config.headers),
defHeaderName,lowercaseDefHeaderName,reqHeaderName;
defHeaders=extend({},defHeaders.common,defHeaders[lowercase(config.method)]);
defaultHeadersIteration:
for(defHeaderName in defHeaders){
lowercaseDefHeaderName=lowercase(defHeaderName);
for(reqHeaderName in reqHeaders){
if(lowercase(reqHeaderName)===lowercaseDefHeaderName){
continue defaultHeadersIteration;
}
}
reqHeaders[defHeaderName]=defHeaders[defHeaderName];
}
return executeHeaderFns(reqHeaders,shallowCopy(config));
}
}
$http.pendingRequests=[];
createShortMethods('get','delete','head','jsonp');
createShortMethodsWithData('post','put','patch');
$http.defaults=defaults;
return $http;
function createShortMethods(names){
forEach(arguments,function(name){
$http[name]=function(url,config){
return $http(extend({},config||{},{
method:name,
url:url
}));
};
});
}
function createShortMethodsWithData(name){
forEach(arguments,function(name){
$http[name]=function(url,data,config){
return $http(extend({},config||{},{
method:name,
url:url,
data:data
}));
};
});
}
function sendReq(config,reqData){
var deferred=$q.defer(),
promise=deferred.promise,
cache,
cachedResp,
reqHeaders=config.headers,
url=buildUrl(config.url,config.paramSerializer(config.params));
$http.pendingRequests.push(config);
promise.then(removePendingReq,removePendingReq);
if((config.cache||defaults.cache)&&config.cache!==false&&
(config.method==='GET'||config.method==='JSONP')){
cache=isObject(config.cache)?config.cache
:isObject(defaults.cache)?defaults.cache
:defaultCache;
}
if(cache){
cachedResp=cache.get(url);
if(isDefined(cachedResp)){
if(isPromiseLike(cachedResp)){
cachedResp.then(resolvePromiseWithResult,resolvePromiseWithResult);
}else{
if(isArray(cachedResp)){
resolvePromise(cachedResp[1],cachedResp[0],shallowCopy(cachedResp[2]),cachedResp[3]);
}else{
resolvePromise(cachedResp,200,{},'OK');
}
}
}else{
cache.put(url,promise);
}
}
if(isUndefined(cachedResp)){
var xsrfValue=urlIsSameOrigin(config.url)
?$$cookieReader()[config.xsrfCookieName||defaults.xsrfCookieName]
:undefined;
if(xsrfValue){
reqHeaders[(config.xsrfHeaderName||defaults.xsrfHeaderName)]=xsrfValue;
}
$httpBackend(config.method,url,reqData,done,reqHeaders,config.timeout,
config.withCredentials,config.responseType,
createApplyHandlers(config.eventHandlers),
createApplyHandlers(config.uploadEventHandlers));
}
return promise;
function createApplyHandlers(eventHandlers){
if(eventHandlers){
var applyHandlers={};
forEach(eventHandlers,function(eventHandler,key){
applyHandlers[key]=function(event){
if(useApplyAsync){
$rootScope.$applyAsync(callEventHandler);
}else if($rootScope.$$phase){
callEventHandler();
}else{
$rootScope.$apply(callEventHandler);
}
function callEventHandler(){
eventHandler(event);
}
};
});
return applyHandlers;
}
}
function done(status,response,headersString,statusText){
if(cache){
if(isSuccess(status)){
cache.put(url,[status,response,parseHeaders(headersString),statusText]);
}else{
cache.remove(url);
}
}
function resolveHttpPromise(){
resolvePromise(response,status,headersString,statusText);
}
if(useApplyAsync){
$rootScope.$applyAsync(resolveHttpPromise);
}else{
resolveHttpPromise();
if(!$rootScope.$$phase)$rootScope.$apply();
}
}
function resolvePromise(response,status,headers,statusText){
status=status>=-1?status:0;
(isSuccess(status)?deferred.resolve:deferred.reject)({
data:response,
status:status,
headers:headersGetter(headers),
config:config,
statusText:statusText
});
}
function resolvePromiseWithResult(result){
resolvePromise(result.data,result.status,shallowCopy(result.headers()),result.statusText);
}
function removePendingReq(){
var idx=$http.pendingRequests.indexOf(config);
if(idx!==-1)$http.pendingRequests.splice(idx,1);
}
}
function buildUrl(url,serializedParams){
if(serializedParams.length>0){
url+=((url.indexOf('?')==-1)?'?':'&')+serializedParams;
}
return url;
}
}];
}
function $xhrFactoryProvider(){
this.$get=function(){
return function createXhr(){
return new window.XMLHttpRequest();
};
};
}
function $HttpBackendProvider(){
this.$get=['$browser','$window','$document','$xhrFactory',function($browser,$window,$document,$xhrFactory){
return createHttpBackend($browser,$xhrFactory,$browser.defer,$window.angular.callbacks,$document[0]);
}];
}
function createHttpBackend($browser,createXhr,$browserDefer,callbacks,rawDocument){
return function(method,url,post,callback,headers,timeout,withCredentials,responseType,eventHandlers,uploadEventHandlers){
$browser.$$incOutstandingRequestCount();
url=url||$browser.url();
if(lowercase(method)=='jsonp'){
var callbackId='_'+(callbacks.counter++).toString(36);
callbacks[callbackId]=function(data){
callbacks[callbackId].data=data;
callbacks[callbackId].called=true;
};
var jsonpDone=jsonpReq(url.replace('JSON_CALLBACK','angular.callbacks.'+callbackId),
callbackId,function(status,text){
completeRequest(callback,status,callbacks[callbackId].data,"",text);
callbacks[callbackId]=noop;
});
}else{
var xhr=createXhr(method,url);
xhr.open(method,url,true);
forEach(headers,function(value,key){
if(isDefined(value)){
xhr.setRequestHeader(key,value);
}
});
xhr.onload=function requestLoaded(){
var statusText=xhr.statusText||'';
var response=('response'in xhr)?xhr.response:xhr.responseText;
var status=xhr.status===1223?204:xhr.status;
if(status===0){
status=response?200:urlResolve(url).protocol=='file'?404:0;
}
completeRequest(callback,
status,
response,
xhr.getAllResponseHeaders(),
statusText);
};
var requestError=function(){
completeRequest(callback,-1,null,null,'');
};
xhr.onerror=requestError;
xhr.onabort=requestError;
forEach(eventHandlers,function(value,key){
xhr.addEventListener(key,value);
});
forEach(uploadEventHandlers,function(value,key){
xhr.upload.addEventListener(key,value);
});
if(withCredentials){
xhr.withCredentials=true;
}
if(responseType){
try{
xhr.responseType=responseType;
}catch(e){
if(responseType!=='json'){
throw e;
}
}
}
xhr.send(isUndefined(post)?null:post);
}
if(timeout>0){
var timeoutId=$browserDefer(timeoutRequest,timeout);
}else if(isPromiseLike(timeout)){
timeout.then(timeoutRequest);
}
function timeoutRequest(){
jsonpDone&&jsonpDone();
xhr&&xhr.abort();
}
function completeRequest(callback,status,response,headersString,statusText){
if(isDefined(timeoutId)){
$browserDefer.cancel(timeoutId);
}
jsonpDone=xhr=null;
callback(status,response,headersString,statusText);
$browser.$$completeOutstandingRequest(noop);
}
};
function jsonpReq(url,callbackId,done){
var script=rawDocument.createElement('script'),callback=null;
script.type="text/javascript";
script.src=url;
script.async=true;
callback=function(event){
removeEventListenerFn(script,"load",callback);
removeEventListenerFn(script,"error",callback);
rawDocument.body.removeChild(script);
script=null;
var status=-1;
var text="unknown";
if(event){
if(event.type==="load"&&!callbacks[callbackId].called){
event={type:"error"};
}
text=event.type;
status=event.type==="error"?404:200;
}
if(done){
done(status,text);
}
};
addEventListenerFn(script,"load",callback);
addEventListenerFn(script,"error",callback);
rawDocument.body.appendChild(script);
return callback;
}
}
var $interpolateMinErr=angular.$interpolateMinErr=minErr('$interpolate');
$interpolateMinErr.throwNoconcat=function(text){
throw $interpolateMinErr('noconcat',
"Error while interpolating: {0}\nStrict Contextual Escaping disallows "+
"interpolations that concatenate multiple expressions when a trusted value is "+
"required.  See http://docs.angularjs.org/api/ng.$sce",text);
};
$interpolateMinErr.interr=function(text,err){
return $interpolateMinErr('interr',"Can't interpolate: {0}\n{1}",text,err.toString());
};
function $InterpolateProvider(){
var startSymbol='{{';
var endSymbol='}}';
this.startSymbol=function(value){
if(value){
startSymbol=value;
return this;
}else{
return startSymbol;
}
};
this.endSymbol=function(value){
if(value){
endSymbol=value;
return this;
}else{
return endSymbol;
}
};
this.$get=['$parse','$exceptionHandler','$sce',function($parse,$exceptionHandler,$sce){
var startSymbolLength=startSymbol.length,
endSymbolLength=endSymbol.length,
escapedStartRegexp=new RegExp(startSymbol.replace(/./g,escape),'g'),
escapedEndRegexp=new RegExp(endSymbol.replace(/./g,escape),'g');
function escape(ch){
return'\\\\\\'+ch;
}
function unescapeText(text){
return text.replace(escapedStartRegexp,startSymbol).
replace(escapedEndRegexp,endSymbol);
}
function stringify(value){
if(value==null){
return'';
}
switch(typeof value){
case'string':
break;
case'number':
value=''+value;
break;
default:
value=toJson(value);
}
return value;
}
function constantWatchDelegate(scope,listener,objectEquality,constantInterp){
var unwatch;
return unwatch=scope.$watch(function constantInterpolateWatch(scope){
unwatch();
return constantInterp(scope);
},listener,objectEquality);
}
function $interpolate(text,mustHaveExpression,trustedContext,allOrNothing){
if(!text.length||text.indexOf(startSymbol)===-1){
var constantInterp;
if(!mustHaveExpression){
var unescapedText=unescapeText(text);
constantInterp=valueFn(unescapedText);
constantInterp.exp=text;
constantInterp.expressions=[];
constantInterp.$$watchDelegate=constantWatchDelegate;
}
return constantInterp;
}
allOrNothing=!!allOrNothing;
var startIndex,
endIndex,
index=0,
expressions=[],
parseFns=[],
textLength=text.length,
exp,
concat=[],
expressionPositions=[];
while(index<textLength){
if(((startIndex=text.indexOf(startSymbol,index))!=-1)&&
((endIndex=text.indexOf(endSymbol,startIndex+startSymbolLength))!=-1)){
if(index!==startIndex){
concat.push(unescapeText(text.substring(index,startIndex)));
}
exp=text.substring(startIndex+startSymbolLength,endIndex);
expressions.push(exp);
parseFns.push($parse(exp,parseStringifyInterceptor));
index=endIndex+endSymbolLength;
expressionPositions.push(concat.length);
concat.push('');
}else{
if(index!==textLength){
concat.push(unescapeText(text.substring(index)));
}
break;
}
}
if(trustedContext&&concat.length>1){
$interpolateMinErr.throwNoconcat(text);
}
if(!mustHaveExpression||expressions.length){
var compute=function(values){
for(var i=0,ii=expressions.length;i<ii;i++){
if(allOrNothing&&isUndefined(values[i]))return;
concat[expressionPositions[i]]=values[i];
}
return concat.join('');
};
var getValue=function(value){
return trustedContext?
$sce.getTrusted(trustedContext,value):
$sce.valueOf(value);
};
return extend(function interpolationFn(context){
var i=0;
var ii=expressions.length;
var values=new Array(ii);
try{
for(;i<ii;i++){
values[i]=parseFns[i](context);
}
return compute(values);
}catch(err){
$exceptionHandler($interpolateMinErr.interr(text,err));
}
},{
exp:text,
expressions:expressions,
$$watchDelegate:function(scope,listener){
var lastValue;
return scope.$watchGroup(parseFns,function interpolateFnWatcher(values,oldValues){
var currValue=compute(values);
if(isFunction(listener)){
listener.call(this,currValue,values!==oldValues?lastValue:currValue,scope);
}
lastValue=currValue;
});
}
});
}
function parseStringifyInterceptor(value){
try{
value=getValue(value);
return allOrNothing&&!isDefined(value)?value:stringify(value);
}catch(err){
$exceptionHandler($interpolateMinErr.interr(text,err));
}
}
}
$interpolate.startSymbol=function(){
return startSymbol;
};
$interpolate.endSymbol=function(){
return endSymbol;
};
return $interpolate;
}];
}
function $IntervalProvider(){
this.$get=['$rootScope','$window','$q','$$q','$browser',
function($rootScope,$window,$q,$$q,$browser){
var intervals={};
function interval(fn,delay,count,invokeApply){
var hasParams=arguments.length>4,
args=hasParams?sliceArgs(arguments,4):[],
setInterval=$window.setInterval,
clearInterval=$window.clearInterval,
iteration=0,
skipApply=(isDefined(invokeApply)&&!invokeApply),
deferred=(skipApply?$$q:$q).defer(),
promise=deferred.promise;
count=isDefined(count)?count:0;
promise.$$intervalId=setInterval(function tick(){
if(skipApply){
$browser.defer(callback);
}else{
$rootScope.$evalAsync(callback);
}
deferred.notify(iteration++);
if(count>0&&iteration>=count){
deferred.resolve(iteration);
clearInterval(promise.$$intervalId);
delete intervals[promise.$$intervalId];
}
if(!skipApply)$rootScope.$apply();
},delay);
intervals[promise.$$intervalId]=deferred;
return promise;
function callback(){
if(!hasParams){
fn(iteration);
}else{
fn.apply(null,args);
}
}
}
interval.cancel=function(promise){
if(promise&&promise.$$intervalId in intervals){
intervals[promise.$$intervalId].reject('canceled');
$window.clearInterval(promise.$$intervalId);
delete intervals[promise.$$intervalId];
return true;
}
return false;
};
return interval;
}];
}
var PATH_MATCH=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,
DEFAULT_PORTS={'http':80,'https':443,'ftp':21};
var $locationMinErr=minErr('$location');
function encodePath(path){
var segments=path.split('/'),
i=segments.length;
while(i--){
segments[i]=encodeUriSegment(segments[i]);
}
return segments.join('/');
}
function parseAbsoluteUrl(absoluteUrl,locationObj){
var parsedUrl=urlResolve(absoluteUrl);
locationObj.$$protocol=parsedUrl.protocol;
locationObj.$$host=parsedUrl.hostname;
locationObj.$$port=toInt(parsedUrl.port)||DEFAULT_PORTS[parsedUrl.protocol]||null;
}
function parseAppUrl(relativeUrl,locationObj){
var prefixed=(relativeUrl.charAt(0)!=='/');
if(prefixed){
relativeUrl='/'+relativeUrl;
}
var match=urlResolve(relativeUrl);
locationObj.$$path=decodeURIComponent(prefixed&&match.pathname.charAt(0)==='/'?
match.pathname.substring(1):match.pathname);
locationObj.$$search=parseKeyValue(match.search);
locationObj.$$hash=decodeURIComponent(match.hash);
if(locationObj.$$path&&locationObj.$$path.charAt(0)!='/'){
locationObj.$$path='/'+locationObj.$$path;
}
}
function beginsWith(begin,whole){
if(whole.indexOf(begin)===0){
return whole.substr(begin.length);
}
}
function stripHash(url){
var index=url.indexOf('#');
return index==-1?url:url.substr(0,index);
}
function trimEmptyHash(url){
return url.replace(/(#.+)|#$/,'$1');
}
function stripFile(url){
return url.substr(0,stripHash(url).lastIndexOf('/')+1);
}
function serverBase(url){
return url.substring(0,url.indexOf('/',url.indexOf('//')+2));
}
function LocationHtml5Url(appBase,appBaseNoFile,basePrefix){
this.$$html5=true;
basePrefix=basePrefix||'';
parseAbsoluteUrl(appBase,this);
this.$$parse=function(url){
var pathUrl=beginsWith(appBaseNoFile,url);
if(!isString(pathUrl)){
throw $locationMinErr('ipthprfx','Invalid url "{0}", missing path prefix "{1}".',url,
appBaseNoFile);
}
parseAppUrl(pathUrl,this);
if(!this.$$path){
this.$$path='/';
}
this.$$compose();
};
this.$$compose=function(){
var search=toKeyValue(this.$$search),
hash=this.$$hash?'#'+encodeUriSegment(this.$$hash):'';
this.$$url=encodePath(this.$$path)+(search?'?'+search:'')+hash;
this.$$absUrl=appBaseNoFile+this.$$url.substr(1);
};
this.$$parseLinkUrl=function(url,relHref){
if(relHref&&relHref[0]==='#'){
this.hash(relHref.slice(1));
return true;
}
var appUrl,prevAppUrl;
var rewrittenUrl;
if(isDefined(appUrl=beginsWith(appBase,url))){
prevAppUrl=appUrl;
if(isDefined(appUrl=beginsWith(basePrefix,appUrl))){
rewrittenUrl=appBaseNoFile+(beginsWith('/',appUrl)||appUrl);
}else{
rewrittenUrl=appBase+prevAppUrl;
}
}else if(isDefined(appUrl=beginsWith(appBaseNoFile,url))){
rewrittenUrl=appBaseNoFile+appUrl;
}else if(appBaseNoFile==url+'/'){
rewrittenUrl=appBaseNoFile;
}
if(rewrittenUrl){
this.$$parse(rewrittenUrl);
}
return!!rewrittenUrl;
};
}
function LocationHashbangUrl(appBase,appBaseNoFile,hashPrefix){
parseAbsoluteUrl(appBase,this);
this.$$parse=function(url){
var withoutBaseUrl=beginsWith(appBase,url)||beginsWith(appBaseNoFile,url);
var withoutHashUrl;
if(!isUndefined(withoutBaseUrl)&&withoutBaseUrl.charAt(0)==='#'){
withoutHashUrl=beginsWith(hashPrefix,withoutBaseUrl);
if(isUndefined(withoutHashUrl)){
withoutHashUrl=withoutBaseUrl;
}
}else{
if(this.$$html5){
withoutHashUrl=withoutBaseUrl;
}else{
withoutHashUrl='';
if(isUndefined(withoutBaseUrl)){
appBase=url;
this.replace();
}
}
}
parseAppUrl(withoutHashUrl,this);
this.$$path=removeWindowsDriveName(this.$$path,withoutHashUrl,appBase);
this.$$compose();
function removeWindowsDriveName(path,url,base){
var windowsFilePathExp=/^\/[A-Z]:(\/.*)/;
var firstPathSegmentMatch;
if(url.indexOf(base)===0){
url=url.replace(base,'');
}
if(windowsFilePathExp.exec(url)){
return path;
}
firstPathSegmentMatch=windowsFilePathExp.exec(path);
return firstPathSegmentMatch?firstPathSegmentMatch[1]:path;
}
};
this.$$compose=function(){
var search=toKeyValue(this.$$search),
hash=this.$$hash?'#'+encodeUriSegment(this.$$hash):'';
this.$$url=encodePath(this.$$path)+(search?'?'+search:'')+hash;
this.$$absUrl=appBase+(this.$$url?hashPrefix+this.$$url:'');
};
this.$$parseLinkUrl=function(url,relHref){
if(stripHash(appBase)==stripHash(url)){
this.$$parse(url);
return true;
}
return false;
};
}
function LocationHashbangInHtml5Url(appBase,appBaseNoFile,hashPrefix){
this.$$html5=true;
LocationHashbangUrl.apply(this,arguments);
this.$$parseLinkUrl=function(url,relHref){
if(relHref&&relHref[0]==='#'){
this.hash(relHref.slice(1));
return true;
}
var rewrittenUrl;
var appUrl;
if(appBase==stripHash(url)){
rewrittenUrl=url;
}else if((appUrl=beginsWith(appBaseNoFile,url))){
rewrittenUrl=appBase+hashPrefix+appUrl;
}else if(appBaseNoFile===url+'/'){
rewrittenUrl=appBaseNoFile;
}
if(rewrittenUrl){
this.$$parse(rewrittenUrl);
}
return!!rewrittenUrl;
};
this.$$compose=function(){
var search=toKeyValue(this.$$search),
hash=this.$$hash?'#'+encodeUriSegment(this.$$hash):'';
this.$$url=encodePath(this.$$path)+(search?'?'+search:'')+hash;
this.$$absUrl=appBase+hashPrefix+this.$$url;
};
}
var locationPrototype={
$$html5:false,
$$replace:false,
absUrl:locationGetter('$$absUrl'),
url:function(url){
if(isUndefined(url)){
return this.$$url;
}
var match=PATH_MATCH.exec(url);
if(match[1]||url==='')this.path(decodeURIComponent(match[1]));
if(match[2]||match[1]||url==='')this.search(match[3]||'');
this.hash(match[5]||'');
return this;
},
protocol:locationGetter('$$protocol'),
host:locationGetter('$$host'),
port:locationGetter('$$port'),
path:locationGetterSetter('$$path',function(path){
path=path!==null?path.toString():'';
return path.charAt(0)=='/'?path:'/'+path;
}),
search:function(search,paramValue){
switch(arguments.length){
case 0:
return this.$$search;
case 1:
if(isString(search)||isNumber(search)){
search=search.toString();
this.$$search=parseKeyValue(search);
}else if(isObject(search)){
search=copy(search,{});
forEach(search,function(value,key){
if(value==null)delete search[key];
});
this.$$search=search;
}else{
throw $locationMinErr('isrcharg',
'The first argument of the `$location#search()` call must be a string or an object.');
}
break;
default:
if(isUndefined(paramValue)||paramValue===null){
delete this.$$search[search];
}else{
this.$$search[search]=paramValue;
}
}
this.$$compose();
return this;
},
hash:locationGetterSetter('$$hash',function(hash){
return hash!==null?hash.toString():'';
}),
replace:function(){
this.$$replace=true;
return this;
}
};
forEach([LocationHashbangInHtml5Url,LocationHashbangUrl,LocationHtml5Url],function(Location){
Location.prototype=Object.create(locationPrototype);
Location.prototype.state=function(state){
if(!arguments.length){
return this.$$state;
}
if(Location!==LocationHtml5Url||!this.$$html5){
throw $locationMinErr('nostate','History API state support is available only '+
'in HTML5 mode and only in browsers supporting HTML5 History API');
}
this.$$state=isUndefined(state)?null:state;
return this;
};
});
function locationGetter(property){
return function(){
return this[property];
};
}
function locationGetterSetter(property,preprocess){
return function(value){
if(isUndefined(value)){
return this[property];
}
this[property]=preprocess(value);
this.$$compose();
return this;
};
}
function $LocationProvider(){
var hashPrefix='',
html5Mode={
enabled:false,
requireBase:true,
rewriteLinks:true
};
this.hashPrefix=function(prefix){
if(isDefined(prefix)){
hashPrefix=prefix;
return this;
}else{
return hashPrefix;
}
};
this.html5Mode=function(mode){
if(isBoolean(mode)){
html5Mode.enabled=mode;
return this;
}else if(isObject(mode)){
if(isBoolean(mode.enabled)){
html5Mode.enabled=mode.enabled;
}
if(isBoolean(mode.requireBase)){
html5Mode.requireBase=mode.requireBase;
}
if(isBoolean(mode.rewriteLinks)){
html5Mode.rewriteLinks=mode.rewriteLinks;
}
return this;
}else{
return html5Mode;
}
};
this.$get=['$rootScope','$browser','$sniffer','$rootElement','$window',
function($rootScope,$browser,$sniffer,$rootElement,$window){
var $location,
LocationMode,
baseHref=$browser.baseHref(),
initialUrl=$browser.url(),
appBase;
if(html5Mode.enabled){
if(!baseHref&&html5Mode.requireBase){
throw $locationMinErr('nobase',
"$location in HTML5 mode requires a <base> tag to be present!");
}
appBase=serverBase(initialUrl)+(baseHref||'/');
LocationMode=$sniffer.history?LocationHtml5Url:LocationHashbangInHtml5Url;
}else{
appBase=stripHash(initialUrl);
LocationMode=LocationHashbangUrl;
}
var appBaseNoFile=stripFile(appBase);
$location=new LocationMode(appBase,appBaseNoFile,'#'+hashPrefix);
$location.$$parseLinkUrl(initialUrl,initialUrl);
$location.$$state=$browser.state();
var IGNORE_URI_REGEXP=/^\s*(javascript|mailto):/i;
function setBrowserUrlWithFallback(url,replace,state){
var oldUrl=$location.url();
var oldState=$location.$$state;
try{
$browser.url(url,replace,state);
$location.$$state=$browser.state();
}catch(e){
$location.url(oldUrl);
$location.$$state=oldState;
throw e;
}
}
$rootElement.on('click',function(event){
if(!html5Mode.rewriteLinks||event.ctrlKey||event.metaKey||event.shiftKey||event.which==2||event.button==2)return;
var elm=jqLite(event.target);
while(nodeName_(elm[0])!=='a'){
if(elm[0]===$rootElement[0]||!(elm=elm.parent())[0])return;
}
var absHref=elm.prop('href');
var relHref=elm.attr('href')||elm.attr('xlink:href');
if(isObject(absHref)&&absHref.toString()==='[object SVGAnimatedString]'){
absHref=urlResolve(absHref.animVal).href;
}
if(IGNORE_URI_REGEXP.test(absHref))return;
if(absHref&&!elm.attr('target')&&!event.isDefaultPrevented()){
if($location.$$parseLinkUrl(absHref,relHref)){
event.preventDefault();
if($location.absUrl()!=$browser.url()){
$rootScope.$apply();
$window.angular['ff-684208-preventDefault']=true;
}
}
}
});
if(trimEmptyHash($location.absUrl())!=trimEmptyHash(initialUrl)){
$browser.url($location.absUrl(),true);
}
var initializing=true;
$browser.onUrlChange(function(newUrl,newState){
if(isUndefined(beginsWith(appBaseNoFile,newUrl))){
$window.location.href=newUrl;
return;
}
$rootScope.$evalAsync(function(){
var oldUrl=$location.absUrl();
var oldState=$location.$$state;
var defaultPrevented;
newUrl=trimEmptyHash(newUrl);
$location.$$parse(newUrl);
$location.$$state=newState;
defaultPrevented=$rootScope.$broadcast('$locationChangeStart',newUrl,oldUrl,
newState,oldState).defaultPrevented;
if($location.absUrl()!==newUrl)return;
if(defaultPrevented){
$location.$$parse(oldUrl);
$location.$$state=oldState;
setBrowserUrlWithFallback(oldUrl,false,oldState);
}else{
initializing=false;
afterLocationChange(oldUrl,oldState);
}
});
if(!$rootScope.$$phase)$rootScope.$digest();
});
$rootScope.$watch(function $locationWatch(){
var oldUrl=trimEmptyHash($browser.url());
var newUrl=trimEmptyHash($location.absUrl());
var oldState=$browser.state();
var currentReplace=$location.$$replace;
var urlOrStateChanged=oldUrl!==newUrl||
($location.$$html5&&$sniffer.history&&oldState!==$location.$$state);
if(initializing||urlOrStateChanged){
initializing=false;
$rootScope.$evalAsync(function(){
var newUrl=$location.absUrl();
var defaultPrevented=$rootScope.$broadcast('$locationChangeStart',newUrl,oldUrl,
$location.$$state,oldState).defaultPrevented;
if($location.absUrl()!==newUrl)return;
if(defaultPrevented){
$location.$$parse(oldUrl);
$location.$$state=oldState;
}else{
if(urlOrStateChanged){
setBrowserUrlWithFallback(newUrl,currentReplace,
oldState===$location.$$state?null:$location.$$state);
}
afterLocationChange(oldUrl,oldState);
}
});
}
$location.$$replace=false;
});
return $location;
function afterLocationChange(oldUrl,oldState){
$rootScope.$broadcast('$locationChangeSuccess',$location.absUrl(),oldUrl,
$location.$$state,oldState);
}
}];
}
function $LogProvider(){
var debug=true,
self=this;
this.debugEnabled=function(flag){
if(isDefined(flag)){
debug=flag;
return this;
}else{
return debug;
}
};
this.$get=['$window',function($window){
return{
log:consoleLog('log'),
info:consoleLog('info'),
warn:consoleLog('warn'),
error:consoleLog('error'),
debug:(function(){
var fn=consoleLog('debug');
return function(){
if(debug){
fn.apply(self,arguments);
}
};
}())
};
function formatError(arg){
if(arg instanceof Error){
if(arg.stack){
arg=(arg.message&&arg.stack.indexOf(arg.message)===-1)
?'Error: '+arg.message+'\n'+arg.stack
:arg.stack;
}else if(arg.sourceURL){
arg=arg.message+'\n'+arg.sourceURL+':'+arg.line;
}
}
return arg;
}
function consoleLog(type){
var console=$window.console||{},
logFn=console[type]||console.log||noop,
hasApply=false;
try{
hasApply=!!logFn.apply;
}catch(e){}
if(hasApply){
return function(){
var args=[];
forEach(arguments,function(arg){
args.push(formatError(arg));
});
//return logFn.apply(console,args);
};
}
return function(arg1,arg2){
logFn(arg1,arg2==null?'':arg2);
};
}
}];
}
var $parseMinErr=minErr('$parse');
function ensureSafeMemberName(name,fullExpression){
if(name==="__defineGetter__"||name==="__defineSetter__"
||name==="__lookupGetter__"||name==="__lookupSetter__"
||name==="__proto__"){
throw $parseMinErr('isecfld',
'Attempting to access a disallowed field in Angular expressions! '
+'Expression: {0}',fullExpression);
}
return name;
}
function getStringValue(name){
return name+'';
}
function ensureSafeObject(obj,fullExpression){
if(obj){
if(obj.constructor===obj){
throw $parseMinErr('isecfn',
'Referencing Function in Angular expressions is disallowed! Expression: {0}',
fullExpression);
}else if(
obj.window===obj){
throw $parseMinErr('isecwindow',
'Referencing the Window in Angular expressions is disallowed! Expression: {0}',
fullExpression);
}else if(
obj.children&&(obj.nodeName||(obj.prop&&obj.attr&&obj.find))){
throw $parseMinErr('isecdom',
'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}',
fullExpression);
}else if(
obj===Object){
throw $parseMinErr('isecobj',
'Referencing Object in Angular expressions is disallowed! Expression: {0}',
fullExpression);
}
}
return obj;
}
var CALL=Function.prototype.call;
var APPLY=Function.prototype.apply;
var BIND=Function.prototype.bind;
function ensureSafeFunction(obj,fullExpression){
if(obj){
if(obj.constructor===obj){
throw $parseMinErr('isecfn',
'Referencing Function in Angular expressions is disallowed! Expression: {0}',
fullExpression);
}else if(obj===CALL||obj===APPLY||obj===BIND){
throw $parseMinErr('isecff',
'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}',
fullExpression);
}
}
}
function ensureSafeAssignContext(obj,fullExpression){
if(obj){
if(obj===(0).constructor||obj===(false).constructor||obj===''.constructor||
obj==={}.constructor||obj===[].constructor||obj===Function.constructor){
throw $parseMinErr('isecaf',
'Assigning to a constructor is disallowed! Expression: {0}',fullExpression);
}
}
}
var OPERATORS=createMap();
forEach('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '),function(operator){OPERATORS[operator]=true;});
var ESCAPE={"n":"\n","f":"\f","r":"\r","t":"\t","v":"\v","'":"'",'"':'"'};
var Lexer=function(options){
this.options=options;
};
Lexer.prototype={
constructor:Lexer,
lex:function(text){
this.text=text;
this.index=0;
this.tokens=[];
while(this.index<this.text.length){
var ch=this.text.charAt(this.index);
if(ch==='"'||ch==="'"){
this.readString(ch);
}else if(this.isNumber(ch)||ch==='.'&&this.isNumber(this.peek())){
this.readNumber();
}else if(this.isIdentifierStart(this.peekMultichar())){
this.readIdent();
}else if(this.is(ch,'(){}[].,;:?')){
this.tokens.push({index:this.index,text:ch});
this.index++;
}else if(this.isWhitespace(ch)){
this.index++;
}else{
var ch2=ch+this.peek();
var ch3=ch2+this.peek(2);
var op1=OPERATORS[ch];
var op2=OPERATORS[ch2];
var op3=OPERATORS[ch3];
if(op1||op2||op3){
var token=op3?ch3:(op2?ch2:ch);
this.tokens.push({index:this.index,text:token,operator:true});
this.index+=token.length;
}else{
this.throwError('Unexpected next character ',this.index,this.index+1);
}
}
}
return this.tokens;
},
is:function(ch,chars){
return chars.indexOf(ch)!==-1;
},
peek:function(i){
var num=i||1;
return(this.index+num<this.text.length)?this.text.charAt(this.index+num):false;
},
isNumber:function(ch){
return('0'<=ch&&ch<='9')&&typeof ch==="string";
},
isWhitespace:function(ch){
return(ch===' '||ch==='\r'||ch==='\t'||
ch==='\n'||ch==='\v'||ch==='\u00A0');
},
isIdentifierStart:function(ch){
return this.options.isIdentifierStart?
this.options.isIdentifierStart(ch,this.codePointAt(ch)):
this.isValidIdentifierStart(ch);
},
isValidIdentifierStart:function(ch){
return('a'<=ch&&ch<='z'||
'A'<=ch&&ch<='Z'||
'_'===ch||ch==='$');
},
isIdentifierContinue:function(ch){
return this.options.isIdentifierContinue?
this.options.isIdentifierContinue(ch,this.codePointAt(ch)):
this.isValidIdentifierContinue(ch);
},
isValidIdentifierContinue:function(ch,cp){
return this.isValidIdentifierStart(ch,cp)||this.isNumber(ch);
},
codePointAt:function(ch){
if(ch.length===1)return ch.charCodeAt(0);
return(ch.charCodeAt(0)<<10)+ch.charCodeAt(1)-0x35FDC00;
},
peekMultichar:function(){
var ch=this.text.charAt(this.index);
var peek=this.peek();
if(!peek){
return ch;
}
var cp1=ch.charCodeAt(0);
var cp2=peek.charCodeAt(0);
if(cp1>=0xD800&&cp1<=0xDBFF&&cp2>=0xDC00&&cp2<=0xDFFF){
return ch+peek;
}
return ch;
},
isExpOperator:function(ch){
return(ch==='-'||ch==='+'||this.isNumber(ch));
},
throwError:function(error,start,end){
end=end||this.index;
var colStr=(isDefined(start)
?'s '+start+'-'+this.index+' ['+this.text.substring(start,end)+']'
:' '+end);
throw $parseMinErr('lexerr','Lexer Error: {0} at column{1} in expression [{2}].',
error,colStr,this.text);
},
readNumber:function(){
var number='';
var start=this.index;
while(this.index<this.text.length){
var ch=lowercase(this.text.charAt(this.index));
if(ch=='.'||this.isNumber(ch)){
number+=ch;
}else{
var peekCh=this.peek();
if(ch=='e'&&this.isExpOperator(peekCh)){
number+=ch;
}else if(this.isExpOperator(ch)&&
peekCh&&this.isNumber(peekCh)&&
number.charAt(number.length-1)=='e'){
number+=ch;
}else if(this.isExpOperator(ch)&&
(!peekCh||!this.isNumber(peekCh))&&
number.charAt(number.length-1)=='e'){
this.throwError('Invalid exponent');
}else{
break;
}
}
this.index++;
}
this.tokens.push({
index:start,
text:number,
constant:true,
value:Number(number)
});
},
readIdent:function(){
var start=this.index;
this.index+=this.peekMultichar().length;
while(this.index<this.text.length){
var ch=this.peekMultichar();
if(!this.isIdentifierContinue(ch)){
break;
}
this.index+=ch.length;
}
this.tokens.push({
index:start,
text:this.text.slice(start,this.index),
identifier:true
});
},
readString:function(quote){
var start=this.index;
this.index++;
var string='';
var rawString=quote;
var escape=false;
while(this.index<this.text.length){
var ch=this.text.charAt(this.index);
rawString+=ch;
if(escape){
if(ch==='u'){
var hex=this.text.substring(this.index+1,this.index+5);
if(!hex.match(/[\da-f]{4}/i)){
this.throwError('Invalid unicode escape [\\u'+hex+']');
}
this.index+=4;
string+=String.fromCharCode(parseInt(hex,16));
}else{
var rep=ESCAPE[ch];
string=string+(rep||ch);
}
escape=false;
}else if(ch==='\\'){
escape=true;
}else if(ch===quote){
this.index++;
this.tokens.push({
index:start,
text:rawString,
constant:true,
value:string
});
return;
}else{
string+=ch;
}
this.index++;
}
this.throwError('Unterminated quote',start);
}
};
var AST=function(lexer,options){
this.lexer=lexer;
this.options=options;
};
AST.Program='Program';
AST.ExpressionStatement='ExpressionStatement';
AST.AssignmentExpression='AssignmentExpression';
AST.ConditionalExpression='ConditionalExpression';
AST.LogicalExpression='LogicalExpression';
AST.BinaryExpression='BinaryExpression';
AST.UnaryExpression='UnaryExpression';
AST.CallExpression='CallExpression';
AST.MemberExpression='MemberExpression';
AST.Identifier='Identifier';
AST.Literal='Literal';
AST.ArrayExpression='ArrayExpression';
AST.Property='Property';
AST.ObjectExpression='ObjectExpression';
AST.ThisExpression='ThisExpression';
AST.LocalsExpression='LocalsExpression';
AST.NGValueParameter='NGValueParameter';
AST.prototype={
ast:function(text){
this.text=text;
this.tokens=this.lexer.lex(text);
var value=this.program();
if(this.tokens.length!==0){
this.throwError('is an unexpected token',this.tokens[0]);
}
return value;
},
program:function(){
var body=[];
while(true){
if(this.tokens.length>0&&!this.peek('}',')',';',']'))
body.push(this.expressionStatement());
if(!this.expect(';')){
return{type:AST.Program,body:body};
}
}
},
expressionStatement:function(){
return{type:AST.ExpressionStatement,expression:this.filterChain()};
},
filterChain:function(){
var left=this.expression();
var token;
while((token=this.expect('|'))){
left=this.filter(left);
}
return left;
},
expression:function(){
return this.assignment();
},
assignment:function(){
var result=this.ternary();
if(this.expect('=')){
result={type:AST.AssignmentExpression,left:result,right:this.assignment(),operator:'='};
}
return result;
},
ternary:function(){
var test=this.logicalOR();
var alternate;
var consequent;
if(this.expect('?')){
alternate=this.expression();
if(this.consume(':')){
consequent=this.expression();
return{type:AST.ConditionalExpression,test:test,alternate:alternate,consequent:consequent};
}
}
return test;
},
logicalOR:function(){
var left=this.logicalAND();
while(this.expect('||')){
left={type:AST.LogicalExpression,operator:'||',left:left,right:this.logicalAND()};
}
return left;
},
logicalAND:function(){
var left=this.equality();
while(this.expect('&&')){
left={type:AST.LogicalExpression,operator:'&&',left:left,right:this.equality()};
}
return left;
},
equality:function(){
var left=this.relational();
var token;
while((token=this.expect('==','!=','===','!=='))){
left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.relational()};
}
return left;
},
relational:function(){
var left=this.additive();
var token;
while((token=this.expect('<','>','<=','>='))){
left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.additive()};
}
return left;
},
additive:function(){
var left=this.multiplicative();
var token;
while((token=this.expect('+','-'))){
left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.multiplicative()};
}
return left;
},
multiplicative:function(){
var left=this.unary();
var token;
while((token=this.expect('*','/','%'))){
left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.unary()};
}
return left;
},
unary:function(){
var token;
if((token=this.expect('+','-','!'))){
return{type:AST.UnaryExpression,operator:token.text,prefix:true,argument:this.unary()};
}else{
return this.primary();
}
},
primary:function(){
var primary;
if(this.expect('(')){
primary=this.filterChain();
this.consume(')');
}else if(this.expect('[')){
primary=this.arrayDeclaration();
}else if(this.expect('{')){
primary=this.object();
}else if(this.selfReferential.hasOwnProperty(this.peek().text)){
primary=copy(this.selfReferential[this.consume().text]);
}else if(this.options.literals.hasOwnProperty(this.peek().text)){
primary={type:AST.Literal,value:this.options.literals[this.consume().text]};
}else if(this.peek().identifier){
primary=this.identifier();
}else if(this.peek().constant){
primary=this.constant();
}else{
this.throwError('not a primary expression',this.peek());
}
var next;
while((next=this.expect('(','[','.'))){
if(next.text==='('){
primary={type:AST.CallExpression,callee:primary,arguments:this.parseArguments()};
this.consume(')');
}else if(next.text==='['){
primary={type:AST.MemberExpression,object:primary,property:this.expression(),computed:true};
this.consume(']');
}else if(next.text==='.'){
primary={type:AST.MemberExpression,object:primary,property:this.identifier(),computed:false};
}else{
this.throwError('IMPOSSIBLE');
}
}
return primary;
},
filter:function(baseExpression){
var args=[baseExpression];
var result={type:AST.CallExpression,callee:this.identifier(),arguments:args,filter:true};
while(this.expect(':')){
args.push(this.expression());
}
return result;
},
parseArguments:function(){
var args=[];
if(this.peekToken().text!==')'){
do{
args.push(this.expression());
}while(this.expect(','));
}
return args;
},
identifier:function(){
var token=this.consume();
if(!token.identifier){
this.throwError('is not a valid identifier',token);
}
return{type:AST.Identifier,name:token.text};
},
constant:function(){
return{type:AST.Literal,value:this.consume().value};
},
arrayDeclaration:function(){
var elements=[];
if(this.peekToken().text!==']'){
do{
if(this.peek(']')){
break;
}
elements.push(this.expression());
}while(this.expect(','));
}
this.consume(']');
return{type:AST.ArrayExpression,elements:elements};
},
object:function(){
var properties=[],property;
if(this.peekToken().text!=='}'){
do{
if(this.peek('}')){
break;
}
property={type:AST.Property,kind:'init'};
if(this.peek().constant){
property.key=this.constant();
}else if(this.peek().identifier){
property.key=this.identifier();
}else{
this.throwError("invalid key",this.peek());
}
this.consume(':');
property.value=this.expression();
properties.push(property);
}while(this.expect(','));
}
this.consume('}');
return{type:AST.ObjectExpression,properties:properties};
},
throwError:function(msg,token){
throw $parseMinErr('syntax',
'Syntax Error: Token \'{0}\' {1} at column {2} of the expression [{3}] starting at [{4}].',
token.text,msg,(token.index+1),this.text,this.text.substring(token.index));
},
consume:function(e1){
if(this.tokens.length===0){
throw $parseMinErr('ueoe','Unexpected end of expression: {0}',this.text);
}
var token=this.expect(e1);
if(!token){
this.throwError('is unexpected, expecting ['+e1+']',this.peek());
}
return token;
},
peekToken:function(){
if(this.tokens.length===0){
throw $parseMinErr('ueoe','Unexpected end of expression: {0}',this.text);
}
return this.tokens[0];
},
peek:function(e1,e2,e3,e4){
return this.peekAhead(0,e1,e2,e3,e4);
},
peekAhead:function(i,e1,e2,e3,e4){
if(this.tokens.length>i){
var token=this.tokens[i];
var t=token.text;
if(t===e1||t===e2||t===e3||t===e4||
(!e1&&!e2&&!e3&&!e4)){
return token;
}
}
return false;
},
expect:function(e1,e2,e3,e4){
var token=this.peek(e1,e2,e3,e4);
if(token){
this.tokens.shift();
return token;
}
return false;
},
selfReferential:{
'this':{type:AST.ThisExpression},
'$locals':{type:AST.LocalsExpression}
}
};
function ifDefined(v,d){
return typeof v!=='undefined'?v:d;
}
function plusFn(l,r){
if(typeof l==='undefined')return r;
if(typeof r==='undefined')return l;
return l+r;
}
function isStateless($filter,filterName){
var fn=$filter(filterName);
return!fn.$stateful;
}
function findConstantAndWatchExpressions(ast,$filter){
var allConstants;
var argsToWatch;
switch(ast.type){
case AST.Program:
allConstants=true;
forEach(ast.body,function(expr){
findConstantAndWatchExpressions(expr.expression,$filter);
allConstants=allConstants&&expr.expression.constant;
});
ast.constant=allConstants;
break;
case AST.Literal:
ast.constant=true;
ast.toWatch=[];
break;
case AST.UnaryExpression:
findConstantAndWatchExpressions(ast.argument,$filter);
ast.constant=ast.argument.constant;
ast.toWatch=ast.argument.toWatch;
break;
case AST.BinaryExpression:
findConstantAndWatchExpressions(ast.left,$filter);
findConstantAndWatchExpressions(ast.right,$filter);
ast.constant=ast.left.constant&&ast.right.constant;
ast.toWatch=ast.left.toWatch.concat(ast.right.toWatch);
break;
case AST.LogicalExpression:
findConstantAndWatchExpressions(ast.left,$filter);
findConstantAndWatchExpressions(ast.right,$filter);
ast.constant=ast.left.constant&&ast.right.constant;
ast.toWatch=ast.constant?[]:[ast];
break;
case AST.ConditionalExpression:
findConstantAndWatchExpressions(ast.test,$filter);
findConstantAndWatchExpressions(ast.alternate,$filter);
findConstantAndWatchExpressions(ast.consequent,$filter);
ast.constant=ast.test.constant&&ast.alternate.constant&&ast.consequent.constant;
ast.toWatch=ast.constant?[]:[ast];
break;
case AST.Identifier:
ast.constant=false;
ast.toWatch=[ast];
break;
case AST.MemberExpression:
findConstantAndWatchExpressions(ast.object,$filter);
if(ast.computed){
findConstantAndWatchExpressions(ast.property,$filter);
}
ast.constant=ast.object.constant&&(!ast.computed||ast.property.constant);
ast.toWatch=[ast];
break;
case AST.CallExpression:
allConstants=ast.filter?isStateless($filter,ast.callee.name):false;
argsToWatch=[];
forEach(ast.arguments,function(expr){
findConstantAndWatchExpressions(expr,$filter);
allConstants=allConstants&&expr.constant;
if(!expr.constant){
argsToWatch.push.apply(argsToWatch,expr.toWatch);
}
});
ast.constant=allConstants;
ast.toWatch=ast.filter&&isStateless($filter,ast.callee.name)?argsToWatch:[ast];
break;
case AST.AssignmentExpression:
findConstantAndWatchExpressions(ast.left,$filter);
findConstantAndWatchExpressions(ast.right,$filter);
ast.constant=ast.left.constant&&ast.right.constant;
ast.toWatch=[ast];
break;
case AST.ArrayExpression:
allConstants=true;
argsToWatch=[];
forEach(ast.elements,function(expr){
findConstantAndWatchExpressions(expr,$filter);
allConstants=allConstants&&expr.constant;
if(!expr.constant){
argsToWatch.push.apply(argsToWatch,expr.toWatch);
}
});
ast.constant=allConstants;
ast.toWatch=argsToWatch;
break;
case AST.ObjectExpression:
allConstants=true;
argsToWatch=[];
forEach(ast.properties,function(property){
findConstantAndWatchExpressions(property.value,$filter);
allConstants=allConstants&&property.value.constant;
if(!property.value.constant){
argsToWatch.push.apply(argsToWatch,property.value.toWatch);
}
});
ast.constant=allConstants;
ast.toWatch=argsToWatch;
break;
case AST.ThisExpression:
ast.constant=false;
ast.toWatch=[];
break;
case AST.LocalsExpression:
ast.constant=false;
ast.toWatch=[];
break;
}
}
function getInputs(body){
if(body.length!=1)return;
var lastExpression=body[0].expression;
var candidate=lastExpression.toWatch;
if(candidate.length!==1)return candidate;
return candidate[0]!==lastExpression?candidate:undefined;
}
function isAssignable(ast){
return ast.type===AST.Identifier||ast.type===AST.MemberExpression;
}
function assignableAST(ast){
if(ast.body.length===1&&isAssignable(ast.body[0].expression)){
return{type:AST.AssignmentExpression,left:ast.body[0].expression,right:{type:AST.NGValueParameter},operator:'='};
}
}
function isLiteral(ast){
return ast.body.length===0||
ast.body.length===1&&(
ast.body[0].expression.type===AST.Literal||
ast.body[0].expression.type===AST.ArrayExpression||
ast.body[0].expression.type===AST.ObjectExpression);
}
function isConstant(ast){
return ast.constant;
}
function ASTCompiler(astBuilder,$filter){
this.astBuilder=astBuilder;
this.$filter=$filter;
}
ASTCompiler.prototype={
compile:function(expression,expensiveChecks){
var self=this;
var ast=this.astBuilder.ast(expression);
this.state={
nextId:0,
filters:{},
expensiveChecks:expensiveChecks,
fn:{vars:[],body:[],own:{}},
assign:{vars:[],body:[],own:{}},
inputs:[]
};
findConstantAndWatchExpressions(ast,self.$filter);
var extra='';
var assignable;
this.stage='assign';
if((assignable=assignableAST(ast))){
this.state.computing='assign';
var result=this.nextId();
this.recurse(assignable,result);
this.return_(result);
extra='fn.assign='+this.generateFunction('assign','s,v,l');
}
var toWatch=getInputs(ast.body);
self.stage='inputs';
forEach(toWatch,function(watch,key){
var fnKey='fn'+key;
self.state[fnKey]={vars:[],body:[],own:{}};
self.state.computing=fnKey;
var intoId=self.nextId();
self.recurse(watch,intoId);
self.return_(intoId);
self.state.inputs.push(fnKey);
watch.watchId=key;
});
this.state.computing='fn';
this.stage='main';
this.recurse(ast);
var fnString=
'"'+this.USE+' '+this.STRICT+'";\n'+
this.filterPrefix()+
'var fn='+this.generateFunction('fn','s,l,a,i')+
extra+
this.watchFns()+
'return fn;';
var fn=(new Function('$filter',
'ensureSafeMemberName',
'ensureSafeObject',
'ensureSafeFunction',
'getStringValue',
'ensureSafeAssignContext',
'ifDefined',
'plus',
'text',
fnString))(
this.$filter,
ensureSafeMemberName,
ensureSafeObject,
ensureSafeFunction,
getStringValue,
ensureSafeAssignContext,
ifDefined,
plusFn,
expression);
this.state=this.stage=undefined;
fn.literal=isLiteral(ast);
fn.constant=isConstant(ast);
return fn;
},
USE:'use',
STRICT:'strict',
watchFns:function(){
var result=[];
var fns=this.state.inputs;
var self=this;
forEach(fns,function(name){
result.push('var '+name+'='+self.generateFunction(name,'s'));
});
if(fns.length){
result.push('fn.inputs=['+fns.join(',')+'];');
}
return result.join('');
},
generateFunction:function(name,params){
return'function('+params+'){'+
this.varsPrefix(name)+
this.body(name)+
'};';
},
filterPrefix:function(){
var parts=[];
var self=this;
forEach(this.state.filters,function(id,filter){
parts.push(id+'=$filter('+self.escape(filter)+')');
});
if(parts.length)return'var '+parts.join(',')+';';
return'';
},
varsPrefix:function(section){
return this.state[section].vars.length?'var '+this.state[section].vars.join(',')+';':'';
},
body:function(section){
return this.state[section].body.join('');
},
recurse:function(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck){
var left,right,self=this,args,expression;
recursionFn=recursionFn||noop;
if(!skipWatchIdCheck&&isDefined(ast.watchId)){
intoId=intoId||this.nextId();
this.if_('i',
this.lazyAssign(intoId,this.computedMember('i',ast.watchId)),
this.lazyRecurse(ast,intoId,nameId,recursionFn,create,true)
);
return;
}
switch(ast.type){
case AST.Program:
forEach(ast.body,function(expression,pos){
self.recurse(expression.expression,undefined,undefined,function(expr){right=expr;});
if(pos!==ast.body.length-1){
self.current().body.push(right,';');
}else{
self.return_(right);
}
});
break;
case AST.Literal:
expression=this.escape(ast.value);
this.assign(intoId,expression);
recursionFn(expression);
break;
case AST.UnaryExpression:
this.recurse(ast.argument,undefined,undefined,function(expr){right=expr;});
expression=ast.operator+'('+this.ifDefined(right,0)+')';
this.assign(intoId,expression);
recursionFn(expression);
break;
case AST.BinaryExpression:
this.recurse(ast.left,undefined,undefined,function(expr){left=expr;});
this.recurse(ast.right,undefined,undefined,function(expr){right=expr;});
if(ast.operator==='+'){
expression=this.plus(left,right);
}else if(ast.operator==='-'){
expression=this.ifDefined(left,0)+ast.operator+this.ifDefined(right,0);
}else{
expression='('+left+')'+ast.operator+'('+right+')';
}
this.assign(intoId,expression);
recursionFn(expression);
break;
case AST.LogicalExpression:
intoId=intoId||this.nextId();
self.recurse(ast.left,intoId);
self.if_(ast.operator==='&&'?intoId:self.not(intoId),self.lazyRecurse(ast.right,intoId));
recursionFn(intoId);
break;
case AST.ConditionalExpression:
intoId=intoId||this.nextId();
self.recurse(ast.test,intoId);
self.if_(intoId,self.lazyRecurse(ast.alternate,intoId),self.lazyRecurse(ast.consequent,intoId));
recursionFn(intoId);
break;
case AST.Identifier:
intoId=intoId||this.nextId();
if(nameId){
nameId.context=self.stage==='inputs'?'s':this.assign(this.nextId(),this.getHasOwnProperty('l',ast.name)+'?l:s');
nameId.computed=false;
nameId.name=ast.name;
}
ensureSafeMemberName(ast.name);
self.if_(self.stage==='inputs'||self.not(self.getHasOwnProperty('l',ast.name)),
function(){
self.if_(self.stage==='inputs'||'s',function(){
if(create&&create!==1){
self.if_(
self.not(self.nonComputedMember('s',ast.name)),
self.lazyAssign(self.nonComputedMember('s',ast.name),'{}'));
}
self.assign(intoId,self.nonComputedMember('s',ast.name));
});
},intoId&&self.lazyAssign(intoId,self.nonComputedMember('l',ast.name))
);
if(self.state.expensiveChecks||isPossiblyDangerousMemberName(ast.name)){
self.addEnsureSafeObject(intoId);
}
recursionFn(intoId);
break;
case AST.MemberExpression:
left=nameId&&(nameId.context=this.nextId())||this.nextId();
intoId=intoId||this.nextId();
self.recurse(ast.object,left,undefined,function(){
self.if_(self.notNull(left),function(){
if(create&&create!==1){
self.addEnsureSafeAssignContext(left);
}
if(ast.computed){
right=self.nextId();
self.recurse(ast.property,right);
self.getStringValue(right);
self.addEnsureSafeMemberName(right);
if(create&&create!==1){
self.if_(self.not(self.computedMember(left,right)),self.lazyAssign(self.computedMember(left,right),'{}'));
}
expression=self.ensureSafeObject(self.computedMember(left,right));
self.assign(intoId,expression);
if(nameId){
nameId.computed=true;
nameId.name=right;
}
}else{
ensureSafeMemberName(ast.property.name);
if(create&&create!==1){
self.if_(self.not(self.nonComputedMember(left,ast.property.name)),self.lazyAssign(self.nonComputedMember(left,ast.property.name),'{}'));
}
expression=self.nonComputedMember(left,ast.property.name);
if(self.state.expensiveChecks||isPossiblyDangerousMemberName(ast.property.name)){
expression=self.ensureSafeObject(expression);
}
self.assign(intoId,expression);
if(nameId){
nameId.computed=false;
nameId.name=ast.property.name;
}
}
},function(){
self.assign(intoId,'undefined');
});
recursionFn(intoId);
},!!create);
break;
case AST.CallExpression:
intoId=intoId||this.nextId();
if(ast.filter){
right=self.filter(ast.callee.name);
args=[];
forEach(ast.arguments,function(expr){
var argument=self.nextId();
self.recurse(expr,argument);
args.push(argument);
});
expression=right+'('+args.join(',')+')';
self.assign(intoId,expression);
recursionFn(intoId);
}else{
right=self.nextId();
left={};
args=[];
self.recurse(ast.callee,right,left,function(){
self.if_(self.notNull(right),function(){
self.addEnsureSafeFunction(right);
forEach(ast.arguments,function(expr){
self.recurse(expr,self.nextId(),undefined,function(argument){
args.push(self.ensureSafeObject(argument));
});
});
if(left.name){
if(!self.state.expensiveChecks){
self.addEnsureSafeObject(left.context);
}
expression=self.member(left.context,left.name,left.computed)+'('+args.join(',')+')';
}else{
expression=right+'('+args.join(',')+')';
}
expression=self.ensureSafeObject(expression);
self.assign(intoId,expression);
},function(){
self.assign(intoId,'undefined');
});
recursionFn(intoId);
});
}
break;
case AST.AssignmentExpression:
right=this.nextId();
left={};
if(!isAssignable(ast.left)){
throw $parseMinErr('lval','Trying to assign a value to a non l-value');
}
this.recurse(ast.left,undefined,left,function(){
self.if_(self.notNull(left.context),function(){
self.recurse(ast.right,right);
self.addEnsureSafeObject(self.member(left.context,left.name,left.computed));
self.addEnsureSafeAssignContext(left.context);
expression=self.member(left.context,left.name,left.computed)+ast.operator+right;
self.assign(intoId,expression);
recursionFn(intoId||expression);
});
},1);
break;
case AST.ArrayExpression:
args=[];
forEach(ast.elements,function(expr){
self.recurse(expr,self.nextId(),undefined,function(argument){
args.push(argument);
});
});
expression='['+args.join(',')+']';
this.assign(intoId,expression);
recursionFn(expression);
break;
case AST.ObjectExpression:
args=[];
forEach(ast.properties,function(property){
self.recurse(property.value,self.nextId(),undefined,function(expr){
args.push(self.escape(
property.key.type===AST.Identifier?property.key.name:
(''+property.key.value))+
':'+expr);
});
});
expression='{'+args.join(',')+'}';
this.assign(intoId,expression);
recursionFn(expression);
break;
case AST.ThisExpression:
this.assign(intoId,'s');
recursionFn('s');
break;
case AST.LocalsExpression:
this.assign(intoId,'l');
recursionFn('l');
break;
case AST.NGValueParameter:
this.assign(intoId,'v');
recursionFn('v');
break;
}
},
getHasOwnProperty:function(element,property){
var key=element+'.'+property;
var own=this.current().own;
if(!own.hasOwnProperty(key)){
own[key]=this.nextId(false,element+'&&('+this.escape(property)+' in '+element+')');
}
return own[key];
},
assign:function(id,value){
if(!id)return;
this.current().body.push(id,'=',value,';');
return id;
},
filter:function(filterName){
if(!this.state.filters.hasOwnProperty(filterName)){
this.state.filters[filterName]=this.nextId(true);
}
return this.state.filters[filterName];
},
ifDefined:function(id,defaultValue){
return'ifDefined('+id+','+this.escape(defaultValue)+')';
},
plus:function(left,right){
return'plus('+left+','+right+')';
},
return_:function(id){
this.current().body.push('return ',id,';');
},
if_:function(test,alternate,consequent){
if(test===true){
alternate();
}else{
var body=this.current().body;
body.push('if(',test,'){');
alternate();
body.push('}');
if(consequent){
body.push('else{');
consequent();
body.push('}');
}
}
},
not:function(expression){
return'!('+expression+')';
},
notNull:function(expression){
return expression+'!=null';
},
nonComputedMember:function(left,right){
var SAFE_IDENTIFIER=/[$_a-zA-Z][$_a-zA-Z0-9]*/;
var UNSAFE_CHARACTERS=/[^$_a-zA-Z0-9]/g;
if(SAFE_IDENTIFIER.test(right)){
return left+'.'+right;
}else{
return left+'["'+right.replace(UNSAFE_CHARACTERS,this.stringEscapeFn)+'"]';
}
},
computedMember:function(left,right){
return left+'['+right+']';
},
member:function(left,right,computed){
if(computed)return this.computedMember(left,right);
return this.nonComputedMember(left,right);
},
addEnsureSafeObject:function(item){
this.current().body.push(this.ensureSafeObject(item),';');
},
addEnsureSafeMemberName:function(item){
this.current().body.push(this.ensureSafeMemberName(item),';');
},
addEnsureSafeFunction:function(item){
this.current().body.push(this.ensureSafeFunction(item),';');
},
addEnsureSafeAssignContext:function(item){
this.current().body.push(this.ensureSafeAssignContext(item),';');
},
ensureSafeObject:function(item){
return'ensureSafeObject('+item+',text)';
},
ensureSafeMemberName:function(item){
return'ensureSafeMemberName('+item+',text)';
},
ensureSafeFunction:function(item){
return'ensureSafeFunction('+item+',text)';
},
getStringValue:function(item){
this.assign(item,'getStringValue('+item+')');
},
ensureSafeAssignContext:function(item){
return'ensureSafeAssignContext('+item+',text)';
},
lazyRecurse:function(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck){
var self=this;
return function(){
self.recurse(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck);
};
},
lazyAssign:function(id,value){
var self=this;
return function(){
self.assign(id,value);
};
},
stringEscapeRegex:/[^ a-zA-Z0-9]/g,
stringEscapeFn:function(c){
return'\\u'+('0000'+c.charCodeAt(0).toString(16)).slice(-4);
},
escape:function(value){
if(isString(value))return"'"+value.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";
if(isNumber(value))return value.toString();
if(value===true)return'true';
if(value===false)return'false';
if(value===null)return'null';
if(typeof value==='undefined')return'undefined';
throw $parseMinErr('esc','IMPOSSIBLE');
},
nextId:function(skip,init){
var id='v'+(this.state.nextId++);
if(!skip){
this.current().vars.push(id+(init?'='+init:''));
}
return id;
},
current:function(){
return this.state[this.state.computing];
}
};
function ASTInterpreter(astBuilder,$filter){
this.astBuilder=astBuilder;
this.$filter=$filter;
}
ASTInterpreter.prototype={
compile:function(expression,expensiveChecks){
var self=this;
var ast=this.astBuilder.ast(expression);
this.expression=expression;
this.expensiveChecks=expensiveChecks;
findConstantAndWatchExpressions(ast,self.$filter);
var assignable;
var assign;
if((assignable=assignableAST(ast))){
assign=this.recurse(assignable);
}
var toWatch=getInputs(ast.body);
var inputs;
if(toWatch){
inputs=[];
forEach(toWatch,function(watch,key){
var input=self.recurse(watch);
watch.input=input;
inputs.push(input);
watch.watchId=key;
});
}
var expressions=[];
forEach(ast.body,function(expression){
expressions.push(self.recurse(expression.expression));
});
var fn=ast.body.length===0?noop:
ast.body.length===1?expressions[0]:
function(scope,locals){
var lastValue;
forEach(expressions,function(exp){
lastValue=exp(scope,locals);
});
return lastValue;
};
if(assign){
fn.assign=function(scope,value,locals){
return assign(scope,locals,value);
};
}
if(inputs){
fn.inputs=inputs;
}
fn.literal=isLiteral(ast);
fn.constant=isConstant(ast);
return fn;
},
recurse:function(ast,context,create){
var left,right,self=this,args,expression;
if(ast.input){
return this.inputs(ast.input,ast.watchId);
}
switch(ast.type){
case AST.Literal:
return this.value(ast.value,context);
case AST.UnaryExpression:
right=this.recurse(ast.argument);
return this['unary'+ast.operator](right,context);
case AST.BinaryExpression:
left=this.recurse(ast.left);
right=this.recurse(ast.right);
return this['binary'+ast.operator](left,right,context);
case AST.LogicalExpression:
left=this.recurse(ast.left);
right=this.recurse(ast.right);
return this['binary'+ast.operator](left,right,context);
case AST.ConditionalExpression:
return this['ternary?:'](
this.recurse(ast.test),
this.recurse(ast.alternate),
this.recurse(ast.consequent),
context
);
case AST.Identifier:
ensureSafeMemberName(ast.name,self.expression);
return self.identifier(ast.name,
self.expensiveChecks||isPossiblyDangerousMemberName(ast.name),
context,create,self.expression);
case AST.MemberExpression:
left=this.recurse(ast.object,false,!!create);
if(!ast.computed){
ensureSafeMemberName(ast.property.name,self.expression);
right=ast.property.name;
}
if(ast.computed)right=this.recurse(ast.property);
return ast.computed?
this.computedMember(left,right,context,create,self.expression):
this.nonComputedMember(left,right,self.expensiveChecks,context,create,self.expression);
case AST.CallExpression:
args=[];
forEach(ast.arguments,function(expr){
args.push(self.recurse(expr));
});
if(ast.filter)right=this.$filter(ast.callee.name);
if(!ast.filter)right=this.recurse(ast.callee,true);
return ast.filter?
function(scope,locals,assign,inputs){
var values=[];
for(var i=0;i<args.length;++i){
values.push(args[i](scope,locals,assign,inputs));
}
var value=right.apply(undefined,values,inputs);
return context?{context:undefined,name:undefined,value:value}:value;
}:
function(scope,locals,assign,inputs){
var rhs=right(scope,locals,assign,inputs);
var value;
if(rhs.value!=null){
ensureSafeObject(rhs.context,self.expression);
ensureSafeFunction(rhs.value,self.expression);
var values=[];
for(var i=0;i<args.length;++i){
values.push(ensureSafeObject(args[i](scope,locals,assign,inputs),self.expression));
}
value=ensureSafeObject(rhs.value.apply(rhs.context,values),self.expression);
}
return context?{value:value}:value;
};
case AST.AssignmentExpression:
left=this.recurse(ast.left,true,1);
right=this.recurse(ast.right);
return function(scope,locals,assign,inputs){
var lhs=left(scope,locals,assign,inputs);
var rhs=right(scope,locals,assign,inputs);
ensureSafeObject(lhs.value,self.expression);
ensureSafeAssignContext(lhs.context);
lhs.context[lhs.name]=rhs;
return context?{value:rhs}:rhs;
};
case AST.ArrayExpression:
args=[];
forEach(ast.elements,function(expr){
args.push(self.recurse(expr));
});
return function(scope,locals,assign,inputs){
var value=[];
for(var i=0;i<args.length;++i){
value.push(args[i](scope,locals,assign,inputs));
}
return context?{value:value}:value;
};
case AST.ObjectExpression:
args=[];
forEach(ast.properties,function(property){
args.push({key:property.key.type===AST.Identifier?
property.key.name:
(''+property.key.value),
value:self.recurse(property.value)
});
});
return function(scope,locals,assign,inputs){
var value={};
for(var i=0;i<args.length;++i){
value[args[i].key]=args[i].value(scope,locals,assign,inputs);
}
return context?{value:value}:value;
};
case AST.ThisExpression:
return function(scope){
return context?{value:scope}:scope;
};
case AST.LocalsExpression:
return function(scope,locals){
return context?{value:locals}:locals;
};
case AST.NGValueParameter:
return function(scope,locals,assign){
return context?{value:assign}:assign;
};
}
},
'unary+':function(argument,context){
return function(scope,locals,assign,inputs){
var arg=argument(scope,locals,assign,inputs);
if(isDefined(arg)){
arg=+arg;
}else{
arg=0;
}
return context?{value:arg}:arg;
};
},
'unary-':function(argument,context){
return function(scope,locals,assign,inputs){
var arg=argument(scope,locals,assign,inputs);
if(isDefined(arg)){
arg=-arg;
}else{
arg=0;
}
return context?{value:arg}:arg;
};
},
'unary!':function(argument,context){
return function(scope,locals,assign,inputs){
var arg=!argument(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary+':function(left,right,context){
return function(scope,locals,assign,inputs){
var lhs=left(scope,locals,assign,inputs);
var rhs=right(scope,locals,assign,inputs);
var arg=plusFn(lhs,rhs);
return context?{value:arg}:arg;
};
},
'binary-':function(left,right,context){
return function(scope,locals,assign,inputs){
var lhs=left(scope,locals,assign,inputs);
var rhs=right(scope,locals,assign,inputs);
var arg=(isDefined(lhs)?lhs:0)-(isDefined(rhs)?rhs:0);
return context?{value:arg}:arg;
};
},
'binary*':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)*right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary/':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)/right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary%':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)%right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary===':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)===right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary!==':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)!==right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary==':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)==right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary!=':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)!=right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary<':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)<right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary>':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)>right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary<=':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)<=right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary>=':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)>=right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary&&':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)&&right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'binary||':function(left,right,context){
return function(scope,locals,assign,inputs){
var arg=left(scope,locals,assign,inputs)||right(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
'ternary?:':function(test,alternate,consequent,context){
return function(scope,locals,assign,inputs){
var arg=test(scope,locals,assign,inputs)?alternate(scope,locals,assign,inputs):consequent(scope,locals,assign,inputs);
return context?{value:arg}:arg;
};
},
value:function(value,context){
return function(){return context?{context:undefined,name:undefined,value:value}:value;};
},
identifier:function(name,expensiveChecks,context,create,expression){
return function(scope,locals,assign,inputs){
var base=locals&&(name in locals)?locals:scope;
if(create&&create!==1&&base&&!(base[name])){
base[name]={};
}
var value=base?base[name]:undefined;
if(expensiveChecks){
ensureSafeObject(value,expression);
}
if(context){
return{context:base,name:name,value:value};
}else{
return value;
}
};
},
computedMember:function(left,right,context,create,expression){
return function(scope,locals,assign,inputs){
var lhs=left(scope,locals,assign,inputs);
var rhs;
var value;
if(lhs!=null){
rhs=right(scope,locals,assign,inputs);
rhs=getStringValue(rhs);
ensureSafeMemberName(rhs,expression);
if(create&&create!==1){
ensureSafeAssignContext(lhs);
if(lhs&&!(lhs[rhs])){
lhs[rhs]={};
}
}
value=lhs[rhs];
ensureSafeObject(value,expression);
}
if(context){
return{context:lhs,name:rhs,value:value};
}else{
return value;
}
};
},
nonComputedMember:function(left,right,expensiveChecks,context,create,expression){
return function(scope,locals,assign,inputs){
var lhs=left(scope,locals,assign,inputs);
if(create&&create!==1){
ensureSafeAssignContext(lhs);
if(lhs&&!(lhs[right])){
lhs[right]={};
}
}
var value=lhs!=null?lhs[right]:undefined;
if(expensiveChecks||isPossiblyDangerousMemberName(right)){
ensureSafeObject(value,expression);
}
if(context){
return{context:lhs,name:right,value:value};
}else{
return value;
}
};
},
inputs:function(input,watchId){
return function(scope,value,locals,inputs){
if(inputs)return inputs[watchId];
return input(scope,value,locals);
};
}
};
var Parser=function(lexer,$filter,options){
this.lexer=lexer;
this.$filter=$filter;
this.options=options;
this.ast=new AST(lexer,options);
this.astCompiler=options.csp?new ASTInterpreter(this.ast,$filter):
new ASTCompiler(this.ast,$filter);
};
Parser.prototype={
constructor:Parser,
parse:function(text){
return this.astCompiler.compile(text,this.options.expensiveChecks);
}
};
function isPossiblyDangerousMemberName(name){
return name=='constructor';
}
var objectValueOf=Object.prototype.valueOf;
function getValueOf(value){
return isFunction(value.valueOf)?value.valueOf():objectValueOf.call(value);
}
function $ParseProvider(){
var cacheDefault=createMap();
var cacheExpensive=createMap();
var literals={
'true':true,
'false':false,
'null':null,
'undefined':undefined
};
var identStart,identContinue;
this.addLiteral=function(literalName,literalValue){
literals[literalName]=literalValue;
};
this.setIdentifierFns=function(identifierStart,identifierContinue){
identStart=identifierStart;
identContinue=identifierContinue;
return this;
};
this.$get=['$filter',function($filter){
var noUnsafeEval=csp().noUnsafeEval;
var $parseOptions={
csp:noUnsafeEval,
expensiveChecks:false,
literals:copy(literals),
isIdentifierStart:isFunction(identStart)&&identStart,
isIdentifierContinue:isFunction(identContinue)&&identContinue
},
$parseOptionsExpensive={
csp:noUnsafeEval,
expensiveChecks:true,
literals:copy(literals),
isIdentifierStart:isFunction(identStart)&&identStart,
isIdentifierContinue:isFunction(identContinue)&&identContinue
};
var runningChecksEnabled=false;
$parse.$$runningExpensiveChecks=function(){
return runningChecksEnabled;
};
return $parse;
function $parse(exp,interceptorFn,expensiveChecks){
var parsedExpression,oneTime,cacheKey;
expensiveChecks=expensiveChecks||runningChecksEnabled;
switch(typeof exp){
case'string':
exp=exp.trim();
cacheKey=exp;
var cache=(expensiveChecks?cacheExpensive:cacheDefault);
parsedExpression=cache[cacheKey];
if(!parsedExpression){
if(exp.charAt(0)===':'&&exp.charAt(1)===':'){
oneTime=true;
exp=exp.substring(2);
}
var parseOptions=expensiveChecks?$parseOptionsExpensive:$parseOptions;
var lexer=new Lexer(parseOptions);
var parser=new Parser(lexer,$filter,parseOptions);
parsedExpression=parser.parse(exp);
if(parsedExpression.constant){
parsedExpression.$$watchDelegate=constantWatchDelegate;
}else if(oneTime){
parsedExpression.$$watchDelegate=parsedExpression.literal?
oneTimeLiteralWatchDelegate:oneTimeWatchDelegate;
}else if(parsedExpression.inputs){
parsedExpression.$$watchDelegate=inputsWatchDelegate;
}
if(expensiveChecks){
parsedExpression=expensiveChecksInterceptor(parsedExpression);
}
cache[cacheKey]=parsedExpression;
}
return addInterceptor(parsedExpression,interceptorFn);
case'function':
return addInterceptor(exp,interceptorFn);
default:
return addInterceptor(noop,interceptorFn);
}
}
function expensiveChecksInterceptor(fn){
if(!fn)return fn;
expensiveCheckFn.$$watchDelegate=fn.$$watchDelegate;
expensiveCheckFn.assign=expensiveChecksInterceptor(fn.assign);
expensiveCheckFn.constant=fn.constant;
expensiveCheckFn.literal=fn.literal;
for(var i=0;fn.inputs&&i<fn.inputs.length;++i){
fn.inputs[i]=expensiveChecksInterceptor(fn.inputs[i]);
}
expensiveCheckFn.inputs=fn.inputs;
return expensiveCheckFn;
function expensiveCheckFn(scope,locals,assign,inputs){
var expensiveCheckOldValue=runningChecksEnabled;
runningChecksEnabled=true;
try{
return fn(scope,locals,assign,inputs);
}finally{
runningChecksEnabled=expensiveCheckOldValue;
}
}
}
function expressionInputDirtyCheck(newValue,oldValueOfValue){
if(newValue==null||oldValueOfValue==null){
return newValue===oldValueOfValue;
}
if(typeof newValue==='object'){
newValue=getValueOf(newValue);
if(typeof newValue==='object'){
return false;
}
}
return newValue===oldValueOfValue||(newValue!==newValue&&oldValueOfValue!==oldValueOfValue);
}
function inputsWatchDelegate(scope,listener,objectEquality,parsedExpression,prettyPrintExpression){
var inputExpressions=parsedExpression.inputs;
var lastResult;
if(inputExpressions.length===1){
var oldInputValueOf=expressionInputDirtyCheck;
inputExpressions=inputExpressions[0];
return scope.$watch(function expressionInputWatch(scope){
var newInputValue=inputExpressions(scope);
if(!expressionInputDirtyCheck(newInputValue,oldInputValueOf)){
lastResult=parsedExpression(scope,undefined,undefined,[newInputValue]);
oldInputValueOf=newInputValue&&getValueOf(newInputValue);
}
return lastResult;
},listener,objectEquality,prettyPrintExpression);
}
var oldInputValueOfValues=[];
var oldInputValues=[];
for(var i=0,ii=inputExpressions.length;i<ii;i++){
oldInputValueOfValues[i]=expressionInputDirtyCheck;
oldInputValues[i]=null;
}
return scope.$watch(function expressionInputsWatch(scope){
var changed=false;
for(var i=0,ii=inputExpressions.length;i<ii;i++){
var newInputValue=inputExpressions[i](scope);
if(changed||(changed=!expressionInputDirtyCheck(newInputValue,oldInputValueOfValues[i]))){
oldInputValues[i]=newInputValue;
oldInputValueOfValues[i]=newInputValue&&getValueOf(newInputValue);
}
}
if(changed){
lastResult=parsedExpression(scope,undefined,undefined,oldInputValues);
}
return lastResult;
},listener,objectEquality,prettyPrintExpression);
}
function oneTimeWatchDelegate(scope,listener,objectEquality,parsedExpression){
var unwatch,lastValue;
return unwatch=scope.$watch(function oneTimeWatch(scope){
return parsedExpression(scope);
},function oneTimeListener(value,old,scope){
lastValue=value;
if(isFunction(listener)){
listener.apply(this,arguments);
}
if(isDefined(value)){
scope.$$postDigest(function(){
if(isDefined(lastValue)){
unwatch();
}
});
}
},objectEquality);
}
function oneTimeLiteralWatchDelegate(scope,listener,objectEquality,parsedExpression){
var unwatch,lastValue;
return unwatch=scope.$watch(function oneTimeWatch(scope){
return parsedExpression(scope);
},function oneTimeListener(value,old,scope){
lastValue=value;
if(isFunction(listener)){
listener.call(this,value,old,scope);
}
if(isAllDefined(value)){
scope.$$postDigest(function(){
if(isAllDefined(lastValue))unwatch();
});
}
},objectEquality);
function isAllDefined(value){
var allDefined=true;
forEach(value,function(val){
if(!isDefined(val))allDefined=false;
});
return allDefined;
}
}
function constantWatchDelegate(scope,listener,objectEquality,parsedExpression){
var unwatch;
return unwatch=scope.$watch(function constantWatch(scope){
unwatch();
return parsedExpression(scope);
},listener,objectEquality);
}
function addInterceptor(parsedExpression,interceptorFn){
if(!interceptorFn)return parsedExpression;
var watchDelegate=parsedExpression.$$watchDelegate;
var useInputs=false;
var regularWatch=
watchDelegate!==oneTimeLiteralWatchDelegate&&
watchDelegate!==oneTimeWatchDelegate;
var fn=regularWatch?function regularInterceptedExpression(scope,locals,assign,inputs){
var value=useInputs&&inputs?inputs[0]:parsedExpression(scope,locals,assign,inputs);
return interceptorFn(value,scope,locals);
}:function oneTimeInterceptedExpression(scope,locals,assign,inputs){
var value=parsedExpression(scope,locals,assign,inputs);
var result=interceptorFn(value,scope,locals);
return isDefined(value)?result:value;
};
if(parsedExpression.$$watchDelegate&&
parsedExpression.$$watchDelegate!==inputsWatchDelegate){
fn.$$watchDelegate=parsedExpression.$$watchDelegate;
}else if(!interceptorFn.$stateful){
fn.$$watchDelegate=inputsWatchDelegate;
useInputs=!parsedExpression.inputs;
fn.inputs=parsedExpression.inputs?parsedExpression.inputs:[parsedExpression];
}
return fn;
}
}];
}
function $QProvider(){
this.$get=['$rootScope','$exceptionHandler',function($rootScope,$exceptionHandler){
return qFactory(function(callback){
$rootScope.$evalAsync(callback);
},$exceptionHandler);
}];
}
function $$QProvider(){
this.$get=['$browser','$exceptionHandler',function($browser,$exceptionHandler){
return qFactory(function(callback){
$browser.defer(callback);
},$exceptionHandler);
}];
}
function qFactory(nextTick,exceptionHandler){
var $qMinErr=minErr('$q',TypeError);
var defer=function(){
var d=new Deferred();
d.resolve=simpleBind(d,d.resolve);
d.reject=simpleBind(d,d.reject);
d.notify=simpleBind(d,d.notify);
return d;
};
function Promise(){
this.$$state={status:0};
}
extend(Promise.prototype,{
then:function(onFulfilled,onRejected,progressBack){
if(isUndefined(onFulfilled)&&isUndefined(onRejected)&&isUndefined(progressBack)){
return this;
}
var result=new Deferred();
this.$$state.pending=this.$$state.pending||[];
this.$$state.pending.push([result,onFulfilled,onRejected,progressBack]);
if(this.$$state.status>0)scheduleProcessQueue(this.$$state);
return result.promise;
},
"catch":function(callback){
return this.then(null,callback);
},
"finally":function(callback,progressBack){
return this.then(function(value){
return handleCallback(value,true,callback);
},function(error){
return handleCallback(error,false,callback);
},progressBack);
}
});
function simpleBind(context,fn){
return function(value){
fn.call(context,value);
};
}
function processQueue(state){
var fn,deferred,pending;
pending=state.pending;
state.processScheduled=false;
state.pending=undefined;
for(var i=0,ii=pending.length;i<ii;++i){
deferred=pending[i][0];
fn=pending[i][state.status];
try{
if(isFunction(fn)){
deferred.resolve(fn(state.value));
}else if(state.status===1){
deferred.resolve(state.value);
}else{
deferred.reject(state.value);
}
}catch(e){
deferred.reject(e);
exceptionHandler(e);
}
}
}
function scheduleProcessQueue(state){
if(state.processScheduled||!state.pending)return;
state.processScheduled=true;
nextTick(function(){processQueue(state);});
}
function Deferred(){
this.promise=new Promise();
}
extend(Deferred.prototype,{
resolve:function(val){
if(this.promise.$$state.status)return;
if(val===this.promise){
this.$$reject($qMinErr(
'qcycle',
"Expected promise to be resolved with value other than itself '{0}'",
val));
}else{
this.$$resolve(val);
}
},
$$resolve:function(val){
var then;
var that=this;
var done=false;
try{
if((isObject(val)||isFunction(val)))then=val&&val.then;
if(isFunction(then)){
this.promise.$$state.status=-1;
then.call(val,resolvePromise,rejectPromise,simpleBind(this,this.notify));
}else{
this.promise.$$state.value=val;
this.promise.$$state.status=1;
scheduleProcessQueue(this.promise.$$state);
}
}catch(e){
rejectPromise(e);
exceptionHandler(e);
}
function resolvePromise(val){
if(done)return;
done=true;
that.$$resolve(val);
}
function rejectPromise(val){
if(done)return;
done=true;
that.$$reject(val);
}
},
reject:function(reason){
if(this.promise.$$state.status)return;
this.$$reject(reason);
},
$$reject:function(reason){
this.promise.$$state.value=reason;
this.promise.$$state.status=2;
scheduleProcessQueue(this.promise.$$state);
},
notify:function(progress){
var callbacks=this.promise.$$state.pending;
if((this.promise.$$state.status<=0)&&callbacks&&callbacks.length){
nextTick(function(){
var callback,result;
for(var i=0,ii=callbacks.length;i<ii;i++){
result=callbacks[i][0];
callback=callbacks[i][3];
try{
result.notify(isFunction(callback)?callback(progress):progress);
}catch(e){
exceptionHandler(e);
}
}
});
}
}
});
var reject=function(reason){
var result=new Deferred();
result.reject(reason);
return result.promise;
};
var makePromise=function makePromise(value,resolved){
var result=new Deferred();
if(resolved){
result.resolve(value);
}else{
result.reject(value);
}
return result.promise;
};
var handleCallback=function handleCallback(value,isResolved,callback){
var callbackOutput=null;
try{
if(isFunction(callback))callbackOutput=callback();
}catch(e){
return makePromise(e,false);
}
if(isPromiseLike(callbackOutput)){
return callbackOutput.then(function(){
return makePromise(value,isResolved);
},function(error){
return makePromise(error,false);
});
}else{
return makePromise(value,isResolved);
}
};
var when=function(value,callback,errback,progressBack){
var result=new Deferred();
result.resolve(value);
return result.promise.then(callback,errback,progressBack);
};
var resolve=when;
function all(promises){
var deferred=new Deferred(),
counter=0,
results=isArray(promises)?[]:{};
forEach(promises,function(promise,key){
counter++;
when(promise).then(function(value){
if(results.hasOwnProperty(key))return;
results[key]=value;
if(!(--counter))deferred.resolve(results);
},function(reason){
if(results.hasOwnProperty(key))return;
deferred.reject(reason);
});
});
if(counter===0){
deferred.resolve(results);
}
return deferred.promise;
}
var $Q=function Q(resolver){
if(!isFunction(resolver)){
throw $qMinErr('norslvr',"Expected resolverFn, got '{0}'",resolver);
}
var deferred=new Deferred();
function resolveFn(value){
deferred.resolve(value);
}
function rejectFn(reason){
deferred.reject(reason);
}
resolver(resolveFn,rejectFn);
return deferred.promise;
};
$Q.prototype=Promise.prototype;
$Q.defer=defer;
$Q.reject=reject;
$Q.when=when;
$Q.resolve=resolve;
$Q.all=all;
return $Q;
}
function $$RAFProvider(){
this.$get=['$window','$timeout',function($window,$timeout){
var requestAnimationFrame=$window.requestAnimationFrame||
$window.webkitRequestAnimationFrame;
var cancelAnimationFrame=$window.cancelAnimationFrame||
$window.webkitCancelAnimationFrame||
$window.webkitCancelRequestAnimationFrame;
var rafSupported=!!requestAnimationFrame;
var raf=rafSupported
?function(fn){
var id=requestAnimationFrame(fn);
return function(){
cancelAnimationFrame(id);
};
}
:function(fn){
var timer=$timeout(fn,16.66,false);
return function(){
$timeout.cancel(timer);
};
};
raf.supported=rafSupported;
return raf;
}];
}
function $RootScopeProvider(){
var TTL=10;
var $rootScopeMinErr=minErr('$rootScope');
var lastDirtyWatch=null;
var applyAsyncId=null;
this.digestTtl=function(value){
if(arguments.length){
TTL=value;
}
return TTL;
};
function createChildScopeClass(parent){
function ChildScope(){
this.$$watchers=this.$$nextSibling=
this.$$childHead=this.$$childTail=null;
this.$$listeners={};
this.$$listenerCount={};
this.$$watchersCount=0;
this.$id=nextUid();
this.$$ChildScope=null;
}
ChildScope.prototype=parent;
return ChildScope;
}
this.$get=['$exceptionHandler','$parse','$browser',
function($exceptionHandler,$parse,$browser){
function destroyChildScope($event){
$event.currentScope.$$destroyed=true;
}
function cleanUpScope($scope){
if(msie===9){
$scope.$$childHead&&cleanUpScope($scope.$$childHead);
$scope.$$nextSibling&&cleanUpScope($scope.$$nextSibling);
}
$scope.$parent=$scope.$$nextSibling=$scope.$$prevSibling=$scope.$$childHead=
$scope.$$childTail=$scope.$root=$scope.$$watchers=null;
}
function Scope(){
this.$id=nextUid();
this.$$phase=this.$parent=this.$$watchers=
this.$$nextSibling=this.$$prevSibling=
this.$$childHead=this.$$childTail=null;
this.$root=this;
this.$$destroyed=false;
this.$$listeners={};
this.$$listenerCount={};
this.$$watchersCount=0;
this.$$isolateBindings=null;
}
Scope.prototype={
constructor:Scope,
$new:function(isolate,parent){
var child;
parent=parent||this;
if(isolate){
child=new Scope();
child.$root=this.$root;
}else{
if(!this.$$ChildScope){
this.$$ChildScope=createChildScopeClass(this);
}
child=new this.$$ChildScope();
}
child.$parent=parent;
child.$$prevSibling=parent.$$childTail;
if(parent.$$childHead){
parent.$$childTail.$$nextSibling=child;
parent.$$childTail=child;
}else{
parent.$$childHead=parent.$$childTail=child;
}
if(isolate||parent!=this)child.$on('$destroy',destroyChildScope);
return child;
},
$watch:function(watchExp,listener,objectEquality,prettyPrintExpression){
var get=$parse(watchExp);
if(get.$$watchDelegate){
return get.$$watchDelegate(this,listener,objectEquality,get,watchExp);
}
var scope=this,
array=scope.$$watchers,
watcher={
fn:listener,
last:initWatchVal,
get:get,
exp:prettyPrintExpression||watchExp,
eq:!!objectEquality
};
lastDirtyWatch=null;
if(!isFunction(listener)){
watcher.fn=noop;
}
if(!array){
array=scope.$$watchers=[];
}
array.unshift(watcher);
incrementWatchersCount(this,1);
return function deregisterWatch(){
if(arrayRemove(array,watcher)>=0){
incrementWatchersCount(scope,-1);
}
lastDirtyWatch=null;
};
},
$watchGroup:function(watchExpressions,listener){
var oldValues=new Array(watchExpressions.length);
var newValues=new Array(watchExpressions.length);
var deregisterFns=[];
var self=this;
var changeReactionScheduled=false;
var firstRun=true;
if(!watchExpressions.length){
var shouldCall=true;
self.$evalAsync(function(){
if(shouldCall)listener(newValues,newValues,self);
});
return function deregisterWatchGroup(){
shouldCall=false;
};
}
if(watchExpressions.length===1){
return this.$watch(watchExpressions[0],function watchGroupAction(value,oldValue,scope){
newValues[0]=value;
oldValues[0]=oldValue;
listener(newValues,(value===oldValue)?newValues:oldValues,scope);
});
}
forEach(watchExpressions,function(expr,i){
var unwatchFn=self.$watch(expr,function watchGroupSubAction(value,oldValue){
newValues[i]=value;
oldValues[i]=oldValue;
if(!changeReactionScheduled){
changeReactionScheduled=true;
self.$evalAsync(watchGroupAction);
}
});
deregisterFns.push(unwatchFn);
});
function watchGroupAction(){
changeReactionScheduled=false;
if(firstRun){
firstRun=false;
listener(newValues,newValues,self);
}else{
listener(newValues,oldValues,self);
}
}
return function deregisterWatchGroup(){
while(deregisterFns.length){
deregisterFns.shift()();
}
};
},
$watchCollection:function(obj,listener){
$watchCollectionInterceptor.$stateful=true;
var self=this;
var newValue;
var oldValue;
var veryOldValue;
var trackVeryOldValue=(listener.length>1);
var changeDetected=0;
var changeDetector=$parse(obj,$watchCollectionInterceptor);
var internalArray=[];
var internalObject={};
var initRun=true;
var oldLength=0;
function $watchCollectionInterceptor(_value){
newValue=_value;
var newLength,key,bothNaN,newItem,oldItem;
if(isUndefined(newValue))return;
if(!isObject(newValue)){
if(oldValue!==newValue){
oldValue=newValue;
changeDetected++;
}
}else if(isArrayLike(newValue)){
if(oldValue!==internalArray){
oldValue=internalArray;
oldLength=oldValue.length=0;
changeDetected++;
}
newLength=newValue.length;
if(oldLength!==newLength){
changeDetected++;
oldValue.length=oldLength=newLength;
}
for(var i=0;i<newLength;i++){
oldItem=oldValue[i];
newItem=newValue[i];
bothNaN=(oldItem!==oldItem)&&(newItem!==newItem);
if(!bothNaN&&(oldItem!==newItem)){
changeDetected++;
oldValue[i]=newItem;
}
}
}else{
if(oldValue!==internalObject){
oldValue=internalObject={};
oldLength=0;
changeDetected++;
}
newLength=0;
for(key in newValue){
if(hasOwnProperty.call(newValue,key)){
newLength++;
newItem=newValue[key];
oldItem=oldValue[key];
if(key in oldValue){
bothNaN=(oldItem!==oldItem)&&(newItem!==newItem);
if(!bothNaN&&(oldItem!==newItem)){
changeDetected++;
oldValue[key]=newItem;
}
}else{
oldLength++;
oldValue[key]=newItem;
changeDetected++;
}
}
}
if(oldLength>newLength){
changeDetected++;
for(key in oldValue){
if(!hasOwnProperty.call(newValue,key)){
oldLength--;
delete oldValue[key];
}
}
}
}
return changeDetected;
}
function $watchCollectionAction(){
if(initRun){
initRun=false;
listener(newValue,newValue,self);
}else{
listener(newValue,veryOldValue,self);
}
if(trackVeryOldValue){
if(!isObject(newValue)){
veryOldValue=newValue;
}else if(isArrayLike(newValue)){
veryOldValue=new Array(newValue.length);
for(var i=0;i<newValue.length;i++){
veryOldValue[i]=newValue[i];
}
}else{
veryOldValue={};
for(var key in newValue){
if(hasOwnProperty.call(newValue,key)){
veryOldValue[key]=newValue[key];
}
}
}
}
}
return this.$watch(changeDetector,$watchCollectionAction);
},
$digest:function(){
var watch,value,last,fn,get,
watchers,
length,
dirty,ttl=TTL,
next,current,target=this,
watchLog=[],
logIdx,asyncTask;
beginPhase('$digest');
$browser.$$checkUrlChange();
if(this===$rootScope&&applyAsyncId!==null){
$browser.defer.cancel(applyAsyncId);
flushApplyAsync();
}
lastDirtyWatch=null;
do{
dirty=false;
current=target;
while(asyncQueue.length){
try{
asyncTask=asyncQueue.shift();
asyncTask.scope.$eval(asyncTask.expression,asyncTask.locals);
}catch(e){
$exceptionHandler(e);
}
lastDirtyWatch=null;
}
traverseScopesLoop:
do{
if((watchers=current.$$watchers)){
length=watchers.length;
while(length--){
try{
watch=watchers[length];
if(watch){
get=watch.get;
if((value=get(current))!==(last=watch.last)&&
!(watch.eq
?equals(value,last)
:(typeof value==='number'&&typeof last==='number'
&&isNaN(value)&&isNaN(last)))){
dirty=true;
lastDirtyWatch=watch;
watch.last=watch.eq?copy(value,null):value;
fn=watch.fn;
fn(value,((last===initWatchVal)?value:last),current);
if(ttl<5){
logIdx=4-ttl;
if(!watchLog[logIdx])watchLog[logIdx]=[];
watchLog[logIdx].push({
msg:isFunction(watch.exp)?'fn: '+(watch.exp.name||watch.exp.toString()):watch.exp,
newVal:value,
oldVal:last
});
}
}else if(watch===lastDirtyWatch){
dirty=false;
break traverseScopesLoop;
}
}
}catch(e){
$exceptionHandler(e);
}
}
}
if(!(next=((current.$$watchersCount&&current.$$childHead)||
(current!==target&&current.$$nextSibling)))){
while(current!==target&&!(next=current.$$nextSibling)){
current=current.$parent;
}
}
}while((current=next));
if((dirty||asyncQueue.length)&&!(ttl--)){
clearPhase();
throw $rootScopeMinErr('infdig',
'{0} $digest() iterations reached. Aborting!\n'+
'Watchers fired in the last 5 iterations: {1}',
TTL,watchLog);
}
}while(dirty||asyncQueue.length);
clearPhase();
while(postDigestQueue.length){
try{
postDigestQueue.shift()();
}catch(e){
$exceptionHandler(e);
}
}
},
$destroy:function(){
if(this.$$destroyed)return;
var parent=this.$parent;
this.$broadcast('$destroy');
this.$$destroyed=true;
if(this===$rootScope){
$browser.$$applicationDestroyed();
}
incrementWatchersCount(this,-this.$$watchersCount);
for(var eventName in this.$$listenerCount){
decrementListenerCount(this,this.$$listenerCount[eventName],eventName);
}
if(parent&&parent.$$childHead==this)parent.$$childHead=this.$$nextSibling;
if(parent&&parent.$$childTail==this)parent.$$childTail=this.$$prevSibling;
if(this.$$prevSibling)this.$$prevSibling.$$nextSibling=this.$$nextSibling;
if(this.$$nextSibling)this.$$nextSibling.$$prevSibling=this.$$prevSibling;
this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=noop;
this.$on=this.$watch=this.$watchGroup=function(){return noop;};
this.$$listeners={};
this.$$nextSibling=null;
cleanUpScope(this);
},
$eval:function(expr,locals){
return $parse(expr)(this,locals);
},
$evalAsync:function(expr,locals){
if(!$rootScope.$$phase&&!asyncQueue.length){
$browser.defer(function(){
if(asyncQueue.length){
$rootScope.$digest();
}
});
}
asyncQueue.push({scope:this,expression:$parse(expr),locals:locals});
},
$$postDigest:function(fn){
postDigestQueue.push(fn);
},
$apply:function(expr){
try{
beginPhase('$apply');
try{
return this.$eval(expr);
}finally{
clearPhase();
}
}catch(e){
$exceptionHandler(e);
}finally{
try{
$rootScope.$digest();
}catch(e){
$exceptionHandler(e);
throw e;
}
}
},
$applyAsync:function(expr){
var scope=this;
expr&&applyAsyncQueue.push($applyAsyncExpression);
expr=$parse(expr);
scheduleApplyAsync();
function $applyAsyncExpression(){
scope.$eval(expr);
}
},
$on:function(name,listener){
var namedListeners=this.$$listeners[name];
if(!namedListeners){
this.$$listeners[name]=namedListeners=[];
}
namedListeners.push(listener);
var current=this;
do{
if(!current.$$listenerCount[name]){
current.$$listenerCount[name]=0;
}
current.$$listenerCount[name]++;
}while((current=current.$parent));
var self=this;
return function(){
var indexOfListener=namedListeners.indexOf(listener);
if(indexOfListener!==-1){
namedListeners[indexOfListener]=null;
decrementListenerCount(self,1,name);
}
};
},
$emit:function(name,args){
var empty=[],
namedListeners,
scope=this,
stopPropagation=false,
event={
name:name,
targetScope:scope,
stopPropagation:function(){stopPropagation=true;},
preventDefault:function(){
event.defaultPrevented=true;
},
defaultPrevented:false
},
listenerArgs=concat([event],arguments,1),
i,length;
do{
namedListeners=scope.$$listeners[name]||empty;
event.currentScope=scope;
for(i=0,length=namedListeners.length;i<length;i++){
if(!namedListeners[i]){
namedListeners.splice(i,1);
i--;
length--;
continue;
}
try{
namedListeners[i].apply(null,listenerArgs);
}catch(e){
$exceptionHandler(e);
}
}
if(stopPropagation){
event.currentScope=null;
return event;
}
scope=scope.$parent;
}while(scope);
event.currentScope=null;
return event;
},
$broadcast:function(name,args){
var target=this,
current=target,
next=target,
event={
name:name,
targetScope:target,
preventDefault:function(){
event.defaultPrevented=true;
},
defaultPrevented:false
};
if(!target.$$listenerCount[name])return event;
var listenerArgs=concat([event],arguments,1),
listeners,i,length;
while((current=next)){
event.currentScope=current;
listeners=current.$$listeners[name]||[];
for(i=0,length=listeners.length;i<length;i++){
if(!listeners[i]){
listeners.splice(i,1);
i--;
length--;
continue;
}
try{
listeners[i].apply(null,listenerArgs);
}catch(e){
$exceptionHandler(e);
}
}
if(!(next=((current.$$listenerCount[name]&&current.$$childHead)||
(current!==target&&current.$$nextSibling)))){
while(current!==target&&!(next=current.$$nextSibling)){
current=current.$parent;
}
}
}
event.currentScope=null;
return event;
}
};
var $rootScope=new Scope();
var asyncQueue=$rootScope.$$asyncQueue=[];
var postDigestQueue=$rootScope.$$postDigestQueue=[];
var applyAsyncQueue=$rootScope.$$applyAsyncQueue=[];
return $rootScope;
function beginPhase(phase){
if($rootScope.$$phase){
throw $rootScopeMinErr('inprog','{0} already in progress',$rootScope.$$phase);
}
$rootScope.$$phase=phase;
}
function clearPhase(){
$rootScope.$$phase=null;
}
function incrementWatchersCount(current,count){
do{
current.$$watchersCount+=count;
}while((current=current.$parent));
}
function decrementListenerCount(current,count,name){
do{
current.$$listenerCount[name]-=count;
if(current.$$listenerCount[name]===0){
delete current.$$listenerCount[name];
}
}while((current=current.$parent));
}
function initWatchVal(){}
function flushApplyAsync(){
while(applyAsyncQueue.length){
try{
applyAsyncQueue.shift()();
}catch(e){
$exceptionHandler(e);
}
}
applyAsyncId=null;
}
function scheduleApplyAsync(){
if(applyAsyncId===null){
applyAsyncId=$browser.defer(function(){
$rootScope.$apply(flushApplyAsync);
});
}
}
}];
}
function $$SanitizeUriProvider(){
var aHrefSanitizationWhitelist=/^\s*(https?|ftp|mailto|tel|file):/,
imgSrcSanitizationWhitelist=/^\s*((https?|ftp|file|blob):|data:image\/)/;
this.aHrefSanitizationWhitelist=function(regexp){
if(isDefined(regexp)){
aHrefSanitizationWhitelist=regexp;
return this;
}
return aHrefSanitizationWhitelist;
};
this.imgSrcSanitizationWhitelist=function(regexp){
if(isDefined(regexp)){
imgSrcSanitizationWhitelist=regexp;
return this;
}
return imgSrcSanitizationWhitelist;
};
this.$get=function(){
return function sanitizeUri(uri,isImage){
var regex=isImage?imgSrcSanitizationWhitelist:aHrefSanitizationWhitelist;
var normalizedVal;
normalizedVal=urlResolve(uri).href;
if(normalizedVal!==''&&!normalizedVal.match(regex)){
return'unsafe:'+normalizedVal;
}
return uri;
};
};
}
var $sceMinErr=minErr('$sce');
var SCE_CONTEXTS={
HTML:'html',
CSS:'css',
URL:'url',
RESOURCE_URL:'resourceUrl',
JS:'js'
};
function adjustMatcher(matcher){
if(matcher==='self'){
return matcher;
}else if(isString(matcher)){
if(matcher.indexOf('***')>-1){
throw $sceMinErr('iwcard',
'Illegal sequence *** in string matcher.  String: {0}',matcher);
}
matcher=escapeForRegexp(matcher).
replace('\\*\\*','.*').
replace('\\*','[^:/.?&;]*');
return new RegExp('^'+matcher+'$');
}else if(isRegExp(matcher)){
return new RegExp('^'+matcher.source+'$');
}else{
throw $sceMinErr('imatcher',
'Matchers may only be "self", string patterns or RegExp objects');
}
}
function adjustMatchers(matchers){
var adjustedMatchers=[];
if(isDefined(matchers)){
forEach(matchers,function(matcher){
adjustedMatchers.push(adjustMatcher(matcher));
});
}
return adjustedMatchers;
}
function $SceDelegateProvider(){
this.SCE_CONTEXTS=SCE_CONTEXTS;
var resourceUrlWhitelist=['self'],
resourceUrlBlacklist=[];
this.resourceUrlWhitelist=function(value){
if(arguments.length){
resourceUrlWhitelist=adjustMatchers(value);
}
return resourceUrlWhitelist;
};
this.resourceUrlBlacklist=function(value){
if(arguments.length){
resourceUrlBlacklist=adjustMatchers(value);
}
return resourceUrlBlacklist;
};
this.$get=['$injector',function($injector){
var htmlSanitizer=function htmlSanitizer(html){
throw $sceMinErr('unsafe','Attempting to use an unsafe value in a safe context.');
};
if($injector.has('$sanitize')){
htmlSanitizer=$injector.get('$sanitize');
}
function matchUrl(matcher,parsedUrl){
if(matcher==='self'){
return urlIsSameOrigin(parsedUrl);
}else{
return!!matcher.exec(parsedUrl.href);
}
}
function isResourceUrlAllowedByPolicy(url){
var parsedUrl=urlResolve(url.toString());
var i,n,allowed=false;
for(i=0,n=resourceUrlWhitelist.length;i<n;i++){
if(matchUrl(resourceUrlWhitelist[i],parsedUrl)){
allowed=true;
break;
}
}
if(allowed){
for(i=0,n=resourceUrlBlacklist.length;i<n;i++){
if(matchUrl(resourceUrlBlacklist[i],parsedUrl)){
allowed=false;
break;
}
}
}
return allowed;
}
function generateHolderType(Base){
var holderType=function TrustedValueHolderType(trustedValue){
this.$$unwrapTrustedValue=function(){
return trustedValue;
};
};
if(Base){
holderType.prototype=new Base();
}
holderType.prototype.valueOf=function sceValueOf(){
return this.$$unwrapTrustedValue();
};
holderType.prototype.toString=function sceToString(){
return this.$$unwrapTrustedValue().toString();
};
return holderType;
}
var trustedValueHolderBase=generateHolderType(),
byType={};
byType[SCE_CONTEXTS.HTML]=generateHolderType(trustedValueHolderBase);
byType[SCE_CONTEXTS.CSS]=generateHolderType(trustedValueHolderBase);
byType[SCE_CONTEXTS.URL]=generateHolderType(trustedValueHolderBase);
byType[SCE_CONTEXTS.JS]=generateHolderType(trustedValueHolderBase);
byType[SCE_CONTEXTS.RESOURCE_URL]=generateHolderType(byType[SCE_CONTEXTS.URL]);
function trustAs(type,trustedValue){
var Constructor=(byType.hasOwnProperty(type)?byType[type]:null);
if(!Constructor){
throw $sceMinErr('icontext',
'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',
type,trustedValue);
}
if(trustedValue===null||isUndefined(trustedValue)||trustedValue===''){
return trustedValue;
}
if(typeof trustedValue!=='string'){
throw $sceMinErr('itype',
'Attempted to trust a non-string value in a content requiring a string: Context: {0}',
type);
}
return new Constructor(trustedValue);
}
function valueOf(maybeTrusted){
if(maybeTrusted instanceof trustedValueHolderBase){
return maybeTrusted.$$unwrapTrustedValue();
}else{
return maybeTrusted;
}
}
function getTrusted(type,maybeTrusted){
if(maybeTrusted===null||isUndefined(maybeTrusted)||maybeTrusted===''){
return maybeTrusted;
}
var constructor=(byType.hasOwnProperty(type)?byType[type]:null);
if(constructor&&maybeTrusted instanceof constructor){
return maybeTrusted.$$unwrapTrustedValue();
}
if(type===SCE_CONTEXTS.RESOURCE_URL){
if(isResourceUrlAllowedByPolicy(maybeTrusted)){
return maybeTrusted;
}else{
throw $sceMinErr('insecurl',
'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',
maybeTrusted.toString());
}
}else if(type===SCE_CONTEXTS.HTML){
return htmlSanitizer(maybeTrusted);
}
throw $sceMinErr('unsafe','Attempting to use an unsafe value in a safe context.');
}
return{trustAs:trustAs,
getTrusted:getTrusted,
valueOf:valueOf};
}];
}
function $SceProvider(){
var enabled=true;
this.enabled=function(value){
if(arguments.length){
enabled=!!value;
}
return enabled;
};
this.$get=['$parse','$sceDelegate',function(
$parse,$sceDelegate){
if(enabled&&msie<8){
throw $sceMinErr('iequirks',
'Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks '+
'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML '+
'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');
}
var sce=shallowCopy(SCE_CONTEXTS);
sce.isEnabled=function(){
return enabled;
};
sce.trustAs=$sceDelegate.trustAs;
sce.getTrusted=$sceDelegate.getTrusted;
sce.valueOf=$sceDelegate.valueOf;
if(!enabled){
sce.trustAs=sce.getTrusted=function(type,value){return value;};
sce.valueOf=identity;
}
sce.parseAs=function sceParseAs(type,expr){
var parsed=$parse(expr);
if(parsed.literal&&parsed.constant){
return parsed;
}else{
return $parse(expr,function(value){
return sce.getTrusted(type,value);
});
}
};
var parse=sce.parseAs,
getTrusted=sce.getTrusted,
trustAs=sce.trustAs;
forEach(SCE_CONTEXTS,function(enumValue,name){
var lName=lowercase(name);
sce[camelCase("parse_as_"+lName)]=function(expr){
return parse(enumValue,expr);
};
sce[camelCase("get_trusted_"+lName)]=function(value){
return getTrusted(enumValue,value);
};
sce[camelCase("trust_as_"+lName)]=function(value){
return trustAs(enumValue,value);
};
});
return sce;
}];
}
function $SnifferProvider(){
this.$get=['$window','$document',function($window,$document){
var eventSupport={},
isChromePackagedApp=$window.chrome&&$window.chrome.app&&$window.chrome.app.runtime,
hasHistoryPushState=!isChromePackagedApp&&$window.history&&$window.history.pushState,
android=
toInt((/android (\d+)/.exec(lowercase(($window.navigator||{}).userAgent))||[])[1]),
boxee=/Boxee/i.test(($window.navigator||{}).userAgent),
document=$document[0]||{},
vendorPrefix,
vendorRegex=/^(Moz|webkit|ms)(?=[A-Z])/,
bodyStyle=document.body&&document.body.style,
transitions=false,
animations=false,
match;
if(bodyStyle){
for(var prop in bodyStyle){
if(match=vendorRegex.exec(prop)){
vendorPrefix=match[0];
vendorPrefix=vendorPrefix.substr(0,1).toUpperCase()+vendorPrefix.substr(1);
break;
}
}
if(!vendorPrefix){
vendorPrefix=('WebkitOpacity'in bodyStyle)&&'webkit';
}
transitions=!!(('transition'in bodyStyle)||(vendorPrefix+'Transition'in bodyStyle));
animations=!!(('animation'in bodyStyle)||(vendorPrefix+'Animation'in bodyStyle));
if(android&&(!transitions||!animations)){
transitions=isString(bodyStyle.webkitTransition);
animations=isString(bodyStyle.webkitAnimation);
}
}
return{
history:!!(hasHistoryPushState&&!(android<4)&&!boxee),
hasEvent:function(event){
if(event==='input'&&msie<=11)return false;
if(isUndefined(eventSupport[event])){
var divElm=document.createElement('div');
eventSupport[event]='on'+event in divElm;
}
return eventSupport[event];
},
csp:csp(),
vendorPrefix:vendorPrefix,
transitions:transitions,
animations:animations,
android:android
};
}];
}
var $templateRequestMinErr=minErr('$compile');
function $TemplateRequestProvider(){
var httpOptions;
this.httpOptions=function(val){
if(val){
httpOptions=val;
return this;
}
return httpOptions;
};
this.$get=['$templateCache','$http','$q','$sce',function($templateCache,$http,$q,$sce){
function handleRequestFn(tpl,ignoreRequestError){
handleRequestFn.totalPendingRequests++;
if(!isString(tpl)||!$templateCache.get(tpl)){
tpl=$sce.getTrustedResourceUrl(tpl);
}
var transformResponse=$http.defaults&&$http.defaults.transformResponse;
if(isArray(transformResponse)){
transformResponse=transformResponse.filter(function(transformer){
return transformer!==defaultHttpResponseTransform;
});
}else if(transformResponse===defaultHttpResponseTransform){
transformResponse=null;
}
return $http.get(tpl,extend({
cache:$templateCache,
transformResponse:transformResponse
},httpOptions))
['finally'](function(){
handleRequestFn.totalPendingRequests--;
})
.then(function(response){
$templateCache.put(tpl,response.data);
return response.data;
},handleError);
function handleError(resp){
if(!ignoreRequestError){
throw $templateRequestMinErr('tpload','Failed to load template: {0} (HTTP status: {1} {2})',
tpl,resp.status,resp.statusText);
}
return $q.reject(resp);
}
}
handleRequestFn.totalPendingRequests=0;
return handleRequestFn;
}];
}
function $$TestabilityProvider(){
this.$get=['$rootScope','$browser','$location',
function($rootScope,$browser,$location){
var testability={};
testability.findBindings=function(element,expression,opt_exactMatch){
var bindings=element.getElementsByClassName('ng-binding');
var matches=[];
forEach(bindings,function(binding){
var dataBinding=angular.element(binding).data('$binding');
if(dataBinding){
forEach(dataBinding,function(bindingName){
if(opt_exactMatch){
var matcher=new RegExp('(^|\\s)'+escapeForRegexp(expression)+'(\\s|\\||$)');
if(matcher.test(bindingName)){
matches.push(binding);
}
}else{
if(bindingName.indexOf(expression)!=-1){
matches.push(binding);
}
}
});
}
});
return matches;
};
testability.findModels=function(element,expression,opt_exactMatch){
var prefixes=['ng-','data-ng-','ng\\:'];
for(var p=0;p<prefixes.length;++p){
var attributeEquals=opt_exactMatch?'=':'*=';
var selector='['+prefixes[p]+'model'+attributeEquals+'"'+expression+'"]';
var elements=element.querySelectorAll(selector);
if(elements.length){
return elements;
}
}
};
testability.getLocation=function(){
return $location.url();
};
testability.setLocation=function(url){
if(url!==$location.url()){
$location.url(url);
$rootScope.$digest();
}
};
testability.whenStable=function(callback){
$browser.notifyWhenNoOutstandingRequests(callback);
};
return testability;
}];
}
function $TimeoutProvider(){
this.$get=['$rootScope','$browser','$q','$$q','$exceptionHandler',
function($rootScope,$browser,$q,$$q,$exceptionHandler){
var deferreds={};
function timeout(fn,delay,invokeApply){
if(!isFunction(fn)){
invokeApply=delay;
delay=fn;
fn=noop;
}
var args=sliceArgs(arguments,3),
skipApply=(isDefined(invokeApply)&&!invokeApply),
deferred=(skipApply?$$q:$q).defer(),
promise=deferred.promise,
timeoutId;
timeoutId=$browser.defer(function(){
try{
deferred.resolve(fn.apply(null,args));
}catch(e){
deferred.reject(e);
$exceptionHandler(e);
}
finally{
delete deferreds[promise.$$timeoutId];
}
if(!skipApply)$rootScope.$apply();
},delay);
promise.$$timeoutId=timeoutId;
deferreds[timeoutId]=deferred;
return promise;
}
timeout.cancel=function(promise){
if(promise&&promise.$$timeoutId in deferreds){
deferreds[promise.$$timeoutId].reject('canceled');
delete deferreds[promise.$$timeoutId];
return $browser.defer.cancel(promise.$$timeoutId);
}
return false;
};
return timeout;
}];
}
var urlParsingNode=window.document.createElement("a");
var originUrl=urlResolve(window.location.href);
function urlResolve(url){
var href=url;
if(msie){
urlParsingNode.setAttribute("href",href);
href=urlParsingNode.href;
}
urlParsingNode.setAttribute('href',href);
return{
href:urlParsingNode.href,
protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',
host:urlParsingNode.host,
search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,''):'',
hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',
hostname:urlParsingNode.hostname,
port:urlParsingNode.port,
pathname:(urlParsingNode.pathname.charAt(0)==='/')
?urlParsingNode.pathname
:'/'+urlParsingNode.pathname
};
}
function urlIsSameOrigin(requestUrl){
var parsed=(isString(requestUrl))?urlResolve(requestUrl):requestUrl;
return(parsed.protocol===originUrl.protocol&&
parsed.host===originUrl.host);
}
function $WindowProvider(){
this.$get=valueFn(window);
}
function $$CookieReader($document){
var rawDocument=$document[0]||{};
var lastCookies={};
var lastCookieString='';
function safeDecodeURIComponent(str){
try{
return decodeURIComponent(str);
}catch(e){
return str;
}
}
return function(){
var cookieArray,cookie,i,index,name;
var currentCookieString=rawDocument.cookie||'';
if(currentCookieString!==lastCookieString){
lastCookieString=currentCookieString;
cookieArray=lastCookieString.split('; ');
lastCookies={};
for(i=0;i<cookieArray.length;i++){
cookie=cookieArray[i];
index=cookie.indexOf('=');
if(index>0){
name=safeDecodeURIComponent(cookie.substring(0,index));
if(isUndefined(lastCookies[name])){
lastCookies[name]=safeDecodeURIComponent(cookie.substring(index+1));
}
}
}
}
return lastCookies;
};
}
$$CookieReader.$inject=['$document'];
function $$CookieReaderProvider(){
this.$get=$$CookieReader;
}
$FilterProvider.$inject=['$provide'];
function $FilterProvider($provide){
var suffix='Filter';
function register(name,factory){
if(isObject(name)){
var filters={};
forEach(name,function(filter,key){
filters[key]=register(key,filter);
});
return filters;
}else{
return $provide.factory(name+suffix,factory);
}
}
this.register=register;
this.$get=['$injector',function($injector){
return function(name){
return $injector.get(name+suffix);
};
}];
register('currency',currencyFilter);
register('date',dateFilter);
register('filter',filterFilter);
register('json',jsonFilter);
register('limitTo',limitToFilter);
register('lowercase',lowercaseFilter);
register('number',numberFilter);
register('orderBy',orderByFilter);
register('uppercase',uppercaseFilter);
}
function filterFilter(){
return function(array,expression,comparator){
if(!isArrayLike(array)){
if(array==null){
return array;
}else{
throw minErr('filter')('notarray','Expected array but received: {0}',array);
}
}
var expressionType=getTypeForFilter(expression);
var predicateFn;
var matchAgainstAnyProp;
switch(expressionType){
case'function':
predicateFn=expression;
break;
case'boolean':
case'null':
case'number':
case'string':
matchAgainstAnyProp=true;
case'object':
predicateFn=createPredicateFn(expression,comparator,matchAgainstAnyProp);
break;
default:
return array;
}
return Array.prototype.filter.call(array,predicateFn);
};
}
function createPredicateFn(expression,comparator,matchAgainstAnyProp){
var shouldMatchPrimitives=isObject(expression)&&('$'in expression);
var predicateFn;
if(comparator===true){
comparator=equals;
}else if(!isFunction(comparator)){
comparator=function(actual,expected){
if(isUndefined(actual)){
return false;
}
if((actual===null)||(expected===null)){
return actual===expected;
}
if(isObject(expected)||(isObject(actual)&&!hasCustomToString(actual))){
return false;
}
actual=lowercase(''+actual);
expected=lowercase(''+expected);
return actual.indexOf(expected)!==-1;
};
}
predicateFn=function(item){
if(shouldMatchPrimitives&&!isObject(item)){
return deepCompare(item,expression.$,comparator,false);
}
return deepCompare(item,expression,comparator,matchAgainstAnyProp);
};
return predicateFn;
}
function deepCompare(actual,expected,comparator,matchAgainstAnyProp,dontMatchWholeObject){
var actualType=getTypeForFilter(actual);
var expectedType=getTypeForFilter(expected);
if((expectedType==='string')&&(expected.charAt(0)==='!')){
return!deepCompare(actual,expected.substring(1),comparator,matchAgainstAnyProp);
}else if(isArray(actual)){
return actual.some(function(item){
return deepCompare(item,expected,comparator,matchAgainstAnyProp);
});
}
switch(actualType){
case'object':
var key;
if(matchAgainstAnyProp){
for(key in actual){
if((key.charAt(0)!=='$')&&deepCompare(actual[key],expected,comparator,true)){
return true;
}
}
return dontMatchWholeObject?false:deepCompare(actual,expected,comparator,false);
}else if(expectedType==='object'){
for(key in expected){
var expectedVal=expected[key];
if(isFunction(expectedVal)||isUndefined(expectedVal)){
continue;
}
var matchAnyProperty=key==='$';
var actualVal=matchAnyProperty?actual:actual[key];
if(!deepCompare(actualVal,expectedVal,comparator,matchAnyProperty,matchAnyProperty)){
return false;
}
}
return true;
}else{
return comparator(actual,expected);
}
break;
case'function':
return false;
default:
return comparator(actual,expected);
}
}
function getTypeForFilter(val){
return(val===null)?'null':typeof val;
}
var MAX_DIGITS=22;
var DECIMAL_SEP='.';
var ZERO_CHAR='0';
currencyFilter.$inject=['$locale'];
function currencyFilter($locale){
var formats=$locale.NUMBER_FORMATS;
return function(amount,currencySymbol,fractionSize){
if(isUndefined(currencySymbol)){
currencySymbol=formats.CURRENCY_SYM;
}
if(isUndefined(fractionSize)){
fractionSize=formats.PATTERNS[1].maxFrac;
}
return(amount==null)
?amount
:formatNumber(amount,formats.PATTERNS[1],formats.GROUP_SEP,formats.DECIMAL_SEP,fractionSize).
replace(/\u00A4/g,currencySymbol);
};
}
numberFilter.$inject=['$locale'];
function numberFilter($locale){
var formats=$locale.NUMBER_FORMATS;
return function(number,fractionSize){
return(number==null)
?number
:formatNumber(number,formats.PATTERNS[0],formats.GROUP_SEP,formats.DECIMAL_SEP,
fractionSize);
};
}
function parse(numStr){
var exponent=0,digits,numberOfIntegerDigits;
var i,j,zeros;
if((numberOfIntegerDigits=numStr.indexOf(DECIMAL_SEP))>-1){
numStr=numStr.replace(DECIMAL_SEP,'');
}
if((i=numStr.search(/e/i))>0){
if(numberOfIntegerDigits<0)numberOfIntegerDigits=i;
numberOfIntegerDigits+=+numStr.slice(i+1);
numStr=numStr.substring(0,i);
}else if(numberOfIntegerDigits<0){
numberOfIntegerDigits=numStr.length;
}
for(i=0;numStr.charAt(i)==ZERO_CHAR;i++){}
if(i==(zeros=numStr.length)){
digits=[0];
numberOfIntegerDigits=1;
}else{
zeros--;
while(numStr.charAt(zeros)==ZERO_CHAR)zeros--;
numberOfIntegerDigits-=i;
digits=[];
for(j=0;i<=zeros;i++,j++){
digits[j]=+numStr.charAt(i);
}
}
if(numberOfIntegerDigits>MAX_DIGITS){
digits=digits.splice(0,MAX_DIGITS-1);
exponent=numberOfIntegerDigits-1;
numberOfIntegerDigits=1;
}
return{d:digits,e:exponent,i:numberOfIntegerDigits};
}
function roundNumber(parsedNumber,fractionSize,minFrac,maxFrac){
var digits=parsedNumber.d;
var fractionLen=digits.length-parsedNumber.i;
fractionSize=(isUndefined(fractionSize))?Math.min(Math.max(minFrac,fractionLen),maxFrac):+fractionSize;
var roundAt=fractionSize+parsedNumber.i;
var digit=digits[roundAt];
if(roundAt>0){
digits.splice(Math.max(parsedNumber.i,roundAt));
for(var j=roundAt;j<digits.length;j++){
digits[j]=0;
}
}else{
fractionLen=Math.max(0,fractionLen);
parsedNumber.i=1;
digits.length=Math.max(1,roundAt=fractionSize+1);
digits[0]=0;
for(var i=1;i<roundAt;i++)digits[i]=0;
}
if(digit>=5){
if(roundAt-1<0){
for(var k=0;k>roundAt;k--){
digits.unshift(0);
parsedNumber.i++;
}
digits.unshift(1);
parsedNumber.i++;
}else{
digits[roundAt-1]++;
}
}
for(;fractionLen<Math.max(0,fractionSize);fractionLen++)digits.push(0);
var carry=digits.reduceRight(function(carry,d,i,digits){
d=d+carry;
digits[i]=d%10;
return Math.floor(d/10);
},0);
if(carry){
digits.unshift(carry);
parsedNumber.i++;
}
}
function formatNumber(number,pattern,groupSep,decimalSep,fractionSize){
if(!(isString(number)||isNumber(number))||isNaN(number))return'';
var isInfinity=!isFinite(number);
var isZero=false;
var numStr=Math.abs(number)+'',
formattedText='',
parsedNumber;
if(isInfinity){
formattedText='\u221e';
}else{
parsedNumber=parse(numStr);
roundNumber(parsedNumber,fractionSize,pattern.minFrac,pattern.maxFrac);
var digits=parsedNumber.d;
var integerLen=parsedNumber.i;
var exponent=parsedNumber.e;
var decimals=[];
isZero=digits.reduce(function(isZero,d){return isZero&&!d;},true);
while(integerLen<0){
digits.unshift(0);
integerLen++;
}
if(integerLen>0){
decimals=digits.splice(integerLen);
}else{
decimals=digits;
digits=[0];
}
var groups=[];
if(digits.length>=pattern.lgSize){
groups.unshift(digits.splice(-pattern.lgSize).join(''));
}
while(digits.length>pattern.gSize){
groups.unshift(digits.splice(-pattern.gSize).join(''));
}
if(digits.length){
groups.unshift(digits.join(''));
}
formattedText=groups.join(groupSep);
if(decimals.length){
formattedText+=decimalSep+decimals.join('');
}
if(exponent){
formattedText+='e+'+exponent;
}
}
if(number<0&&!isZero){
return pattern.negPre+formattedText+pattern.negSuf;
}else{
return pattern.posPre+formattedText+pattern.posSuf;
}
}
function padNumber(num,digits,trim,negWrap){
var neg='';
if(num<0||(negWrap&&num<=0)){
if(negWrap){
num=-num+1;
}else{
num=-num;
neg='-';
}
}
num=''+num;
while(num.length<digits)num=ZERO_CHAR+num;
if(trim){
num=num.substr(num.length-digits);
}
return neg+num;
}
function dateGetter(name,size,offset,trim,negWrap){
offset=offset||0;
return function(date){
var value=date['get'+name]();
if(offset>0||value>-offset){
value+=offset;
}
if(value===0&&offset==-12)value=12;
return padNumber(value,size,trim,negWrap);
};
}
function dateStrGetter(name,shortForm,standAlone){
return function(date,formats){
var value=date['get'+name]();
var propPrefix=(standAlone?'STANDALONE':'')+(shortForm?'SHORT':'');
var get=uppercase(propPrefix+name);
return formats[get][value];
};
}
function timeZoneGetter(date,formats,offset){
var zone=-1*offset;
var paddedZone=(zone>=0)?"+":"";
paddedZone+=padNumber(Math[zone>0?'floor':'ceil'](zone/60),2)+
padNumber(Math.abs(zone%60),2);
return paddedZone;
}
function getFirstThursdayOfYear(year){
var dayOfWeekOnFirst=(new Date(year,0,1)).getDay();
return new Date(year,0,((dayOfWeekOnFirst<=4)?5:12)-dayOfWeekOnFirst);
}
function getThursdayThisWeek(datetime){
return new Date(datetime.getFullYear(),datetime.getMonth(),
datetime.getDate()+(4-datetime.getDay()));
}
function weekGetter(size){
return function(date){
var firstThurs=getFirstThursdayOfYear(date.getFullYear()),
thisThurs=getThursdayThisWeek(date);
var diff=+thisThurs-+firstThurs,
result=1+Math.round(diff/6.048e8);
return padNumber(result,size);
};
}
function ampmGetter(date,formats){
return date.getHours()<12?formats.AMPMS[0]:formats.AMPMS[1];
}
function eraGetter(date,formats){
return date.getFullYear()<=0?formats.ERAS[0]:formats.ERAS[1];
}
function longEraGetter(date,formats){
return date.getFullYear()<=0?formats.ERANAMES[0]:formats.ERANAMES[1];
}
var DATE_FORMATS={
yyyy:dateGetter('FullYear',4,0,false,true),
yy:dateGetter('FullYear',2,0,true,true),
y:dateGetter('FullYear',1,0,false,true),
MMMM:dateStrGetter('Month'),
MMM:dateStrGetter('Month',true),
MM:dateGetter('Month',2,1),
M:dateGetter('Month',1,1),
LLLL:dateStrGetter('Month',false,true),
dd:dateGetter('Date',2),
d:dateGetter('Date',1),
HH:dateGetter('Hours',2),
H:dateGetter('Hours',1),
hh:dateGetter('Hours',2,-12),
h:dateGetter('Hours',1,-12),
mm:dateGetter('Minutes',2),
m:dateGetter('Minutes',1),
ss:dateGetter('Seconds',2),
s:dateGetter('Seconds',1),
sss:dateGetter('Milliseconds',3),
EEEE:dateStrGetter('Day'),
EEE:dateStrGetter('Day',true),
a:ampmGetter,
Z:timeZoneGetter,
ww:weekGetter(2),
w:weekGetter(1),
G:eraGetter,
GG:eraGetter,
GGG:eraGetter,
GGGG:longEraGetter
};
var DATE_FORMATS_SPLIT=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,
NUMBER_STRING=/^\-?\d+$/;
dateFilter.$inject=['$locale'];
function dateFilter($locale){
var R_ISO8601_STR=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
function jsonStringToDate(string){
var match;
if(match=string.match(R_ISO8601_STR)){
var date=new Date(0),
tzHour=0,
tzMin=0,
dateSetter=match[8]?date.setUTCFullYear:date.setFullYear,
timeSetter=match[8]?date.setUTCHours:date.setHours;
if(match[9]){
tzHour=toInt(match[9]+match[10]);
tzMin=toInt(match[9]+match[11]);
}
dateSetter.call(date,toInt(match[1]),toInt(match[2])-1,toInt(match[3]));
var h=toInt(match[4]||0)-tzHour;
var m=toInt(match[5]||0)-tzMin;
var s=toInt(match[6]||0);
var ms=Math.round(parseFloat('0.'+(match[7]||0))*1000);
timeSetter.call(date,h,m,s,ms);
return date;
}
return string;
}
return function(date,format,timezone){
var text='',
parts=[],
fn,match;
format=format||'mediumDate';
format=$locale.DATETIME_FORMATS[format]||format;
if(isString(date)){
date=NUMBER_STRING.test(date)?toInt(date):jsonStringToDate(date);
}
if(isNumber(date)){
date=new Date(date);
}
if(!isDate(date)||!isFinite(date.getTime())){
return date;
}
while(format){
match=DATE_FORMATS_SPLIT.exec(format);
if(match){
parts=concat(parts,match,1);
format=parts.pop();
}else{
parts.push(format);
format=null;
}
}
var dateTimezoneOffset=date.getTimezoneOffset();
if(timezone){
dateTimezoneOffset=timezoneToOffset(timezone,dateTimezoneOffset);
date=convertTimezoneToLocal(date,timezone,true);
}
forEach(parts,function(value){
fn=DATE_FORMATS[value];
text+=fn?fn(date,$locale.DATETIME_FORMATS,dateTimezoneOffset)
:value==="''"?"'":value.replace(/(^'|'$)/g,'').replace(/''/g,"'");
});
return text;
};
}
function jsonFilter(){
return function(object,spacing){
if(isUndefined(spacing)){
spacing=2;
}
return toJson(object,spacing);
};
}
var lowercaseFilter=valueFn(lowercase);
var uppercaseFilter=valueFn(uppercase);
function limitToFilter(){
return function(input,limit,begin){
if(Math.abs(Number(limit))===Infinity){
limit=Number(limit);
}else{
limit=toInt(limit);
}
if(isNaN(limit))return input;
if(isNumber(input))input=input.toString();
if(!isArray(input)&&!isString(input))return input;
begin=(!begin||isNaN(begin))?0:toInt(begin);
begin=(begin<0)?Math.max(0,input.length+begin):begin;
if(limit>=0){
return input.slice(begin,begin+limit);
}else{
if(begin===0){
return input.slice(limit,input.length);
}else{
return input.slice(Math.max(0,begin+limit),begin);
}
}
};
}
orderByFilter.$inject=['$parse'];
function orderByFilter($parse){
return function(array,sortPredicate,reverseOrder){
if(array==null)return array;
if(!isArrayLike(array)){
throw minErr('orderBy')('notarray','Expected array but received: {0}',array);
}
if(!isArray(sortPredicate)){sortPredicate=[sortPredicate];}
if(sortPredicate.length===0){sortPredicate=['+'];}
var predicates=processPredicates(sortPredicate,reverseOrder);
predicates.push({get:function(){return{};},descending:reverseOrder?-1:1});
var compareValues=Array.prototype.map.call(array,getComparisonObject);
compareValues.sort(doComparison);
array=compareValues.map(function(item){return item.value;});
return array;
function getComparisonObject(value,index){
return{
value:value,
predicateValues:predicates.map(function(predicate){
return getPredicateValue(predicate.get(value),index);
})
};
}
function doComparison(v1,v2){
var result=0;
for(var index=0,length=predicates.length;index<length;++index){
result=compare(v1.predicateValues[index],v2.predicateValues[index])*predicates[index].descending;
if(result)break;
}
return result;
}
};
function processPredicates(sortPredicate,reverseOrder){
reverseOrder=reverseOrder?-1:1;
return sortPredicate.map(function(predicate){
var descending=1,get=identity;
if(isFunction(predicate)){
get=predicate;
}else if(isString(predicate)){
if((predicate.charAt(0)=='+'||predicate.charAt(0)=='-')){
descending=predicate.charAt(0)=='-'?-1:1;
predicate=predicate.substring(1);
}
if(predicate!==''){
get=$parse(predicate);
if(get.constant){
var key=get();
get=function(value){return value[key];};
}
}
}
return{get:get,descending:descending*reverseOrder};
});
}
function isPrimitive(value){
switch(typeof value){
case'number':
case'boolean':
case'string':
return true;
default:
return false;
}
}
function objectValue(value,index){
if(typeof value.valueOf==='function'){
value=value.valueOf();
if(isPrimitive(value))return value;
}
if(hasCustomToString(value)){
value=value.toString();
if(isPrimitive(value))return value;
}
return index;
}
function getPredicateValue(value,index){
var type=typeof value;
if(value===null){
type='string';
value='null';
}else if(type==='string'){
value=value.toLowerCase();
}else if(type==='object'){
value=objectValue(value,index);
}
return{value:value,type:type};
}
function compare(v1,v2){
var result=0;
if(v1.type===v2.type){
if(v1.value!==v2.value){
result=v1.value<v2.value?-1:1;
}
}else{
result=v1.type<v2.type?-1:1;
}
return result;
}
}
function ngDirective(directive){
if(isFunction(directive)){
directive={
link:directive
};
}
directive.restrict=directive.restrict||'AC';
return valueFn(directive);
}
var htmlAnchorDirective=valueFn({
restrict:'E',
compile:function(element,attr){
if(!attr.href&&!attr.xlinkHref){
return function(scope,element){
if(element[0].nodeName.toLowerCase()!=='a')return;
var href=toString.call(element.prop('href'))==='[object SVGAnimatedString]'?
'xlink:href':'href';
element.on('click',function(event){
if(!element.attr(href)){
event.preventDefault();
}
});
};
}
}
});
var ngAttributeAliasDirectives={};
forEach(BOOLEAN_ATTR,function(propName,attrName){
if(propName=="multiple")return;
function defaultLinkFn(scope,element,attr){
scope.$watch(attr[normalized],function ngBooleanAttrWatchAction(value){
attr.$set(attrName,!!value);
});
}
var normalized=directiveNormalize('ng-'+attrName);
var linkFn=defaultLinkFn;
if(propName==='checked'){
linkFn=function(scope,element,attr){
if(attr.ngModel!==attr[normalized]){
defaultLinkFn(scope,element,attr);
}
};
}
ngAttributeAliasDirectives[normalized]=function(){
return{
restrict:'A',
priority:100,
link:linkFn
};
};
});
forEach(ALIASED_ATTR,function(htmlAttr,ngAttr){
ngAttributeAliasDirectives[ngAttr]=function(){
return{
priority:100,
link:function(scope,element,attr){
if(ngAttr==="ngPattern"&&attr.ngPattern.charAt(0)=="/"){
var match=attr.ngPattern.match(REGEX_STRING_REGEXP);
if(match){
attr.$set("ngPattern",new RegExp(match[1],match[2]));
return;
}
}
scope.$watch(attr[ngAttr],function ngAttrAliasWatchAction(value){
attr.$set(ngAttr,value);
});
}
};
};
});
forEach(['src','srcset','href'],function(attrName){
var normalized=directiveNormalize('ng-'+attrName);
ngAttributeAliasDirectives[normalized]=function(){
return{
priority:99,
link:function(scope,element,attr){
var propName=attrName,
name=attrName;
if(attrName==='href'&&
toString.call(element.prop('href'))==='[object SVGAnimatedString]'){
name='xlinkHref';
attr.$attr[name]='xlink:href';
propName=null;
}
attr.$observe(normalized,function(value){
if(!value){
if(attrName==='href'){
attr.$set(name,null);
}
return;
}
attr.$set(name,value);
if(msie&&propName)element.prop(propName,attr[name]);
});
}
};
};
});
var nullFormCtrl={
$addControl:noop,
$$renameControl:nullFormRenameControl,
$removeControl:noop,
$setValidity:noop,
$setDirty:noop,
$setPristine:noop,
$setSubmitted:noop
},
SUBMITTED_CLASS='ng-submitted';
function nullFormRenameControl(control,name){
control.$name=name;
}
FormController.$inject=['$element','$attrs','$scope','$animate','$interpolate'];
function FormController(element,attrs,$scope,$animate,$interpolate){
var form=this,
controls=[];
form.$error={};
form.$$success={};
form.$pending=undefined;
form.$name=$interpolate(attrs.name||attrs.ngForm||'')($scope);
form.$dirty=false;
form.$pristine=true;
form.$valid=true;
form.$invalid=false;
form.$submitted=false;
form.$$parentForm=nullFormCtrl;
form.$rollbackViewValue=function(){
forEach(controls,function(control){
control.$rollbackViewValue();
});
};
form.$commitViewValue=function(){
forEach(controls,function(control){
control.$commitViewValue();
});
};
form.$addControl=function(control){
assertNotHasOwnProperty(control.$name,'input');
controls.push(control);
if(control.$name){
form[control.$name]=control;
}
control.$$parentForm=form;
};
form.$$renameControl=function(control,newName){
var oldName=control.$name;
if(form[oldName]===control){
delete form[oldName];
}
form[newName]=control;
control.$name=newName;
};
form.$removeControl=function(control){
if(control.$name&&form[control.$name]===control){
delete form[control.$name];
}
forEach(form.$pending,function(value,name){
form.$setValidity(name,null,control);
});
forEach(form.$error,function(value,name){
form.$setValidity(name,null,control);
});
forEach(form.$$success,function(value,name){
form.$setValidity(name,null,control);
});
arrayRemove(controls,control);
control.$$parentForm=nullFormCtrl;
};
addSetValidityMethod({
ctrl:this,
$element:element,
set:function(object,property,controller){
var list=object[property];
if(!list){
object[property]=[controller];
}else{
var index=list.indexOf(controller);
if(index===-1){
list.push(controller);
}
}
},
unset:function(object,property,controller){
var list=object[property];
if(!list){
return;
}
arrayRemove(list,controller);
if(list.length===0){
delete object[property];
}
},
$animate:$animate
});
form.$setDirty=function(){
$animate.removeClass(element,PRISTINE_CLASS);
$animate.addClass(element,DIRTY_CLASS);
form.$dirty=true;
form.$pristine=false;
form.$$parentForm.$setDirty();
};
form.$setPristine=function(){
$animate.setClass(element,PRISTINE_CLASS,DIRTY_CLASS+' '+SUBMITTED_CLASS);
form.$dirty=false;
form.$pristine=true;
form.$submitted=false;
forEach(controls,function(control){
control.$setPristine();
});
};
form.$setUntouched=function(){
forEach(controls,function(control){
control.$setUntouched();
});
};
form.$setSubmitted=function(){
$animate.addClass(element,SUBMITTED_CLASS);
form.$submitted=true;
form.$$parentForm.$setSubmitted();
};
}
var formDirectiveFactory=function(isNgForm){
return['$timeout','$parse',function($timeout,$parse){
var formDirective={
name:'form',
restrict:isNgForm?'EAC':'E',
require:['form','^^?form'],
controller:FormController,
compile:function ngFormCompile(formElement,attr){
formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);
var nameAttr=attr.name?'name':(isNgForm&&attr.ngForm?'ngForm':false);
return{
pre:function ngFormPreLink(scope,formElement,attr,ctrls){
var controller=ctrls[0];
if(!('action'in attr)){
var handleFormSubmission=function(event){
scope.$apply(function(){
controller.$commitViewValue();
controller.$setSubmitted();
});
event.preventDefault();
};
addEventListenerFn(formElement[0],'submit',handleFormSubmission);
formElement.on('$destroy',function(){
$timeout(function(){
removeEventListenerFn(formElement[0],'submit',handleFormSubmission);
},0,false);
});
}
var parentFormCtrl=ctrls[1]||controller.$$parentForm;
parentFormCtrl.$addControl(controller);
var setter=nameAttr?getSetter(controller.$name):noop;
if(nameAttr){
setter(scope,controller);
attr.$observe(nameAttr,function(newValue){
if(controller.$name===newValue)return;
setter(scope,undefined);
controller.$$parentForm.$$renameControl(controller,newValue);
setter=getSetter(controller.$name);
setter(scope,controller);
});
}
formElement.on('$destroy',function(){
controller.$$parentForm.$removeControl(controller);
setter(scope,undefined);
extend(controller,nullFormCtrl);
});
}
};
}
};
return formDirective;
function getSetter(expression){
if(expression===''){
return $parse('this[""]').assign;
}
return $parse(expression).assign||noop;
}
}];
};
var formDirective=formDirectiveFactory();
var ngFormDirective=formDirectiveFactory(true);
var ISO_DATE_REGEXP=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/;
var URL_REGEXP=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i;
var EMAIL_REGEXP=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
var NUMBER_REGEXP=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;
var DATE_REGEXP=/^(\d{4,})-(\d{2})-(\d{2})$/;
var DATETIMELOCAL_REGEXP=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
var WEEK_REGEXP=/^(\d{4,})-W(\d\d)$/;
var MONTH_REGEXP=/^(\d{4,})-(\d\d)$/;
var TIME_REGEXP=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
var PARTIAL_VALIDATION_EVENTS='keydown wheel mousedown';
var PARTIAL_VALIDATION_TYPES=createMap();
forEach('date,datetime-local,month,time,week'.split(','),function(type){
PARTIAL_VALIDATION_TYPES[type]=true;
});
var inputType={
'text':textInputType,
'date':createDateInputType('date',DATE_REGEXP,
createDateParser(DATE_REGEXP,['yyyy','MM','dd']),
'yyyy-MM-dd'),
'datetime-local':createDateInputType('datetimelocal',DATETIMELOCAL_REGEXP,
createDateParser(DATETIMELOCAL_REGEXP,['yyyy','MM','dd','HH','mm','ss','sss']),
'yyyy-MM-ddTHH:mm:ss.sss'),
'time':createDateInputType('time',TIME_REGEXP,
createDateParser(TIME_REGEXP,['HH','mm','ss','sss']),
'HH:mm:ss.sss'),
'week':createDateInputType('week',WEEK_REGEXP,weekParser,'yyyy-Www'),
'month':createDateInputType('month',MONTH_REGEXP,
createDateParser(MONTH_REGEXP,['yyyy','MM']),
'yyyy-MM'),
'number':numberInputType,
'url':urlInputType,
'email':emailInputType,
'radio':radioInputType,
'checkbox':checkboxInputType,
'hidden':noop,
'button':noop,
'submit':noop,
'reset':noop,
'file':noop
};
function stringBasedInputType(ctrl){
ctrl.$formatters.push(function(value){
return ctrl.$isEmpty(value)?value:value.toString();
});
}
function textInputType(scope,element,attr,ctrl,$sniffer,$browser){
baseInputType(scope,element,attr,ctrl,$sniffer,$browser);
stringBasedInputType(ctrl);
}
function baseInputType(scope,element,attr,ctrl,$sniffer,$browser){
var type=lowercase(element[0].type);
if(!$sniffer.android){
var composing=false;
element.on('compositionstart',function(){
composing=true;
});
element.on('compositionend',function(){
composing=false;
listener();
});
}
var timeout;
var listener=function(ev){
if(timeout){
$browser.defer.cancel(timeout);
timeout=null;
}
if(composing)return;
var value=element.val(),
event=ev&&ev.type;
if(type!=='password'&&(!attr.ngTrim||attr.ngTrim!=='false')){
value=trim(value);
}
if(ctrl.$viewValue!==value||(value===''&&ctrl.$$hasNativeValidators)){
ctrl.$setViewValue(value,event);
}
};
if($sniffer.hasEvent('input')){
element.on('input',listener);
}else{
var deferListener=function(ev,input,origValue){
if(!timeout){
timeout=$browser.defer(function(){
timeout=null;
if(!input||input.value!==origValue){
listener(ev);
}
});
}
};
element.on('keydown',function(event){
var key=event.keyCode;
if(key===91||(15<key&&key<19)||(37<=key&&key<=40))return;
deferListener(event,this,this.value);
});
if($sniffer.hasEvent('paste')){
element.on('paste cut',deferListener);
}
}
element.on('change',listener);
if(PARTIAL_VALIDATION_TYPES[type]&&ctrl.$$hasNativeValidators&&type===attr.type){
element.on(PARTIAL_VALIDATION_EVENTS,function(ev){
if(!timeout){
var validity=this[VALIDITY_STATE_PROPERTY];
var origBadInput=validity.badInput;
var origTypeMismatch=validity.typeMismatch;
timeout=$browser.defer(function(){
timeout=null;
if(validity.badInput!==origBadInput||validity.typeMismatch!==origTypeMismatch){
listener(ev);
}
});
}
});
}
ctrl.$render=function(){
var value=ctrl.$isEmpty(ctrl.$viewValue)?'':ctrl.$viewValue;
if(element.val()!==value){
element.val(value);
}
};
}
function weekParser(isoWeek,existingDate){
if(isDate(isoWeek)){
return isoWeek;
}
if(isString(isoWeek)){
WEEK_REGEXP.lastIndex=0;
var parts=WEEK_REGEXP.exec(isoWeek);
if(parts){
var year=+parts[1],
week=+parts[2],
hours=0,
minutes=0,
seconds=0,
milliseconds=0,
firstThurs=getFirstThursdayOfYear(year),
addDays=(week-1)*7;
if(existingDate){
hours=existingDate.getHours();
minutes=existingDate.getMinutes();
seconds=existingDate.getSeconds();
milliseconds=existingDate.getMilliseconds();
}
return new Date(year,0,firstThurs.getDate()+addDays,hours,minutes,seconds,milliseconds);
}
}
return NaN;
}
function createDateParser(regexp,mapping){
return function(iso,date){
var parts,map;
if(isDate(iso)){
return iso;
}
if(isString(iso)){
if(iso.charAt(0)=='"'&&iso.charAt(iso.length-1)=='"'){
iso=iso.substring(1,iso.length-1);
}
if(ISO_DATE_REGEXP.test(iso)){
return new Date(iso);
}
regexp.lastIndex=0;
parts=regexp.exec(iso);
if(parts){
parts.shift();
if(date){
map={
yyyy:date.getFullYear(),
MM:date.getMonth()+1,
dd:date.getDate(),
HH:date.getHours(),
mm:date.getMinutes(),
ss:date.getSeconds(),
sss:date.getMilliseconds()/1000
};
}else{
map={yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0};
}
forEach(parts,function(part,index){
if(index<mapping.length){
map[mapping[index]]=+part;
}
});
return new Date(map.yyyy,map.MM-1,map.dd,map.HH,map.mm,map.ss||0,map.sss*1000||0);
}
}
return NaN;
};
}
function createDateInputType(type,regexp,parseDate,format){
return function dynamicDateInputType(scope,element,attr,ctrl,$sniffer,$browser,$filter){
badInputChecker(scope,element,attr,ctrl);
baseInputType(scope,element,attr,ctrl,$sniffer,$browser);
var timezone=ctrl&&ctrl.$options&&ctrl.$options.timezone;
var previousDate;
ctrl.$$parserName=type;
ctrl.$parsers.push(function(value){
if(ctrl.$isEmpty(value))return null;
if(regexp.test(value)){
var parsedDate=parseDate(value,previousDate);
if(timezone){
parsedDate=convertTimezoneToLocal(parsedDate,timezone);
}
return parsedDate;
}
return undefined;
});
ctrl.$formatters.push(function(value){
if(value&&!isDate(value)){
throw ngModelMinErr('datefmt','Expected `{0}` to be a date',value);
}
if(isValidDate(value)){
previousDate=value;
if(previousDate&&timezone){
previousDate=convertTimezoneToLocal(previousDate,timezone,true);
}
return $filter('date')(value,format,timezone);
}else{
previousDate=null;
return'';
}
});
if(isDefined(attr.min)||attr.ngMin){
var minVal;
ctrl.$validators.min=function(value){
return!isValidDate(value)||isUndefined(minVal)||parseDate(value)>=minVal;
};
attr.$observe('min',function(val){
minVal=parseObservedDateValue(val);
ctrl.$validate();
});
}
if(isDefined(attr.max)||attr.ngMax){
var maxVal;
ctrl.$validators.max=function(value){
return!isValidDate(value)||isUndefined(maxVal)||parseDate(value)<=maxVal;
};
attr.$observe('max',function(val){
maxVal=parseObservedDateValue(val);
ctrl.$validate();
});
}
function isValidDate(value){
return value&&!(value.getTime&&value.getTime()!==value.getTime());
}
function parseObservedDateValue(val){
return isDefined(val)&&!isDate(val)?parseDate(val)||undefined:val;
}
};
}
function badInputChecker(scope,element,attr,ctrl){
var node=element[0];
var nativeValidation=ctrl.$$hasNativeValidators=isObject(node.validity);
if(nativeValidation){
ctrl.$parsers.push(function(value){
var validity=element.prop(VALIDITY_STATE_PROPERTY)||{};
return validity.badInput||validity.typeMismatch?undefined:value;
});
}
}
function numberInputType(scope,element,attr,ctrl,$sniffer,$browser){
badInputChecker(scope,element,attr,ctrl);
baseInputType(scope,element,attr,ctrl,$sniffer,$browser);
ctrl.$$parserName='number';
ctrl.$parsers.push(function(value){
if(ctrl.$isEmpty(value))return null;
if(NUMBER_REGEXP.test(value))return parseFloat(value);
return undefined;
});
ctrl.$formatters.push(function(value){
if(!ctrl.$isEmpty(value)){
if(!isNumber(value)){
throw ngModelMinErr('numfmt','Expected `{0}` to be a number',value);
}
value=value.toString();
}
return value;
});
if(isDefined(attr.min)||attr.ngMin){
var minVal;
ctrl.$validators.min=function(value){
return ctrl.$isEmpty(value)||isUndefined(minVal)||value>=minVal;
};
attr.$observe('min',function(val){
if(isDefined(val)&&!isNumber(val)){
val=parseFloat(val,10);
}
minVal=isNumber(val)&&!isNaN(val)?val:undefined;
ctrl.$validate();
});
}
if(isDefined(attr.max)||attr.ngMax){
var maxVal;
ctrl.$validators.max=function(value){
return ctrl.$isEmpty(value)||isUndefined(maxVal)||value<=maxVal;
};
attr.$observe('max',function(val){
if(isDefined(val)&&!isNumber(val)){
val=parseFloat(val,10);
}
maxVal=isNumber(val)&&!isNaN(val)?val:undefined;
ctrl.$validate();
});
}
}
function urlInputType(scope,element,attr,ctrl,$sniffer,$browser){
baseInputType(scope,element,attr,ctrl,$sniffer,$browser);
stringBasedInputType(ctrl);
ctrl.$$parserName='url';
ctrl.$validators.url=function(modelValue,viewValue){
var value=modelValue||viewValue;
return ctrl.$isEmpty(value)||URL_REGEXP.test(value);
};
}
function emailInputType(scope,element,attr,ctrl,$sniffer,$browser){
baseInputType(scope,element,attr,ctrl,$sniffer,$browser);
stringBasedInputType(ctrl);
ctrl.$$parserName='email';
ctrl.$validators.email=function(modelValue,viewValue){
var value=modelValue||viewValue;
return ctrl.$isEmpty(value)||EMAIL_REGEXP.test(value);
};
}
function radioInputType(scope,element,attr,ctrl){
if(isUndefined(attr.name)){
element.attr('name',nextUid());
}
var listener=function(ev){
if(element[0].checked){
ctrl.$setViewValue(attr.value,ev&&ev.type);
}
};
element.on('click',listener);
ctrl.$render=function(){
var value=attr.value;
element[0].checked=(value==ctrl.$viewValue);
};
attr.$observe('value',ctrl.$render);
}
function parseConstantExpr($parse,context,name,expression,fallback){
var parseFn;
if(isDefined(expression)){
parseFn=$parse(expression);
if(!parseFn.constant){
throw ngModelMinErr('constexpr','Expected constant expression for `{0}`, but saw '+
'`{1}`.',name,expression);
}
return parseFn(context);
}
return fallback;
}
function checkboxInputType(scope,element,attr,ctrl,$sniffer,$browser,$filter,$parse){
var trueValue=parseConstantExpr($parse,scope,'ngTrueValue',attr.ngTrueValue,true);
var falseValue=parseConstantExpr($parse,scope,'ngFalseValue',attr.ngFalseValue,false);
var listener=function(ev){
ctrl.$setViewValue(element[0].checked,ev&&ev.type);
};
element.on('click',listener);
ctrl.$render=function(){
element[0].checked=ctrl.$viewValue;
};
ctrl.$isEmpty=function(value){
return value===false;
};
ctrl.$formatters.push(function(value){
return equals(value,trueValue);
});
ctrl.$parsers.push(function(value){
return value?trueValue:falseValue;
});
}
var inputDirective=['$browser','$sniffer','$filter','$parse',
function($browser,$sniffer,$filter,$parse){
return{
restrict:'E',
require:['?ngModel'],
link:{
pre:function(scope,element,attr,ctrls){
if(ctrls[0]){
(inputType[lowercase(attr.type)]||inputType.text)(scope,element,attr,ctrls[0],$sniffer,
$browser,$filter,$parse);
}
}
}
};
}];
var CONSTANT_VALUE_REGEXP=/^(true|false|\d+)$/;
var ngValueDirective=function(){
return{
restrict:'A',
priority:100,
compile:function(tpl,tplAttr){
if(CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)){
return function ngValueConstantLink(scope,elm,attr){
attr.$set('value',scope.$eval(attr.ngValue));
};
}else{
return function ngValueLink(scope,elm,attr){
scope.$watch(attr.ngValue,function valueWatchAction(value){
attr.$set('value',value);
});
};
}
}
};
};
var ngBindDirective=['$compile',function($compile){
return{
restrict:'AC',
compile:function ngBindCompile(templateElement){
$compile.$$addBindingClass(templateElement);
return function ngBindLink(scope,element,attr){
$compile.$$addBindingInfo(element,attr.ngBind);
element=element[0];
scope.$watch(attr.ngBind,function ngBindWatchAction(value){
element.textContent=isUndefined(value)?'':value;
});
};
}
};
}];
var ngBindTemplateDirective=['$interpolate','$compile',function($interpolate,$compile){
return{
compile:function ngBindTemplateCompile(templateElement){
$compile.$$addBindingClass(templateElement);
return function ngBindTemplateLink(scope,element,attr){
var interpolateFn=$interpolate(element.attr(attr.$attr.ngBindTemplate));
$compile.$$addBindingInfo(element,interpolateFn.expressions);
element=element[0];
attr.$observe('ngBindTemplate',function(value){
element.textContent=isUndefined(value)?'':value;
});
};
}
};
}];
var ngBindHtmlDirective=['$sce','$parse','$compile',function($sce,$parse,$compile){
return{
restrict:'A',
compile:function ngBindHtmlCompile(tElement,tAttrs){
var ngBindHtmlGetter=$parse(tAttrs.ngBindHtml);
var ngBindHtmlWatch=$parse(tAttrs.ngBindHtml,function getStringValue(value){
return(value||'').toString();
});
$compile.$$addBindingClass(tElement);
return function ngBindHtmlLink(scope,element,attr){
$compile.$$addBindingInfo(element,attr.ngBindHtml);
scope.$watch(ngBindHtmlWatch,function ngBindHtmlWatchAction(){
element.html($sce.getTrustedHtml(ngBindHtmlGetter(scope))||'');
});
};
}
};
}];
var ngChangeDirective=valueFn({
restrict:'A',
require:'ngModel',
link:function(scope,element,attr,ctrl){
ctrl.$viewChangeListeners.push(function(){
scope.$eval(attr.ngChange);
});
}
});
function classDirective(name,selector){
name='ngClass'+name;
return['$animate',function($animate){
return{
restrict:'AC',
link:function(scope,element,attr){
var oldVal;
scope.$watch(attr[name],ngClassWatchAction,true);
attr.$observe('class',function(value){
ngClassWatchAction(scope.$eval(attr[name]));
});
if(name!=='ngClass'){
scope.$watch('$index',function($index,old$index){
var mod=$index&1;
if(mod!==(old$index&1)){
var classes=arrayClasses(scope.$eval(attr[name]));
mod===selector?
addClasses(classes):
removeClasses(classes);
}
});
}
function addClasses(classes){
var newClasses=digestClassCounts(classes,1);
attr.$addClass(newClasses);
}
function removeClasses(classes){
var newClasses=digestClassCounts(classes,-1);
attr.$removeClass(newClasses);
}
function digestClassCounts(classes,count){
var classCounts=element.data('$classCounts')||createMap();
var classesToUpdate=[];
forEach(classes,function(className){
if(count>0||classCounts[className]){
classCounts[className]=(classCounts[className]||0)+count;
if(classCounts[className]===+(count>0)){
classesToUpdate.push(className);
}
}
});
element.data('$classCounts',classCounts);
return classesToUpdate.join(' ');
}
function updateClasses(oldClasses,newClasses){
var toAdd=arrayDifference(newClasses,oldClasses);
var toRemove=arrayDifference(oldClasses,newClasses);
toAdd=digestClassCounts(toAdd,1);
toRemove=digestClassCounts(toRemove,-1);
if(toAdd&&toAdd.length){
$animate.addClass(element,toAdd);
}
if(toRemove&&toRemove.length){
$animate.removeClass(element,toRemove);
}
}
function ngClassWatchAction(newVal){
if(selector===true||scope.$index%2===selector){
var newClasses=arrayClasses(newVal||[]);
if(!oldVal){
addClasses(newClasses);
}else if(!equals(newVal,oldVal)){
var oldClasses=arrayClasses(oldVal);
updateClasses(oldClasses,newClasses);
}
}
if(isArray(newVal)){
oldVal=newVal.map(function(v){return shallowCopy(v);});
}else{
oldVal=shallowCopy(newVal);
}
}
}
};
function arrayDifference(tokens1,tokens2){
var values=[];
outer:
for(var i=0;i<tokens1.length;i++){
var token=tokens1[i];
for(var j=0;j<tokens2.length;j++){
if(token==tokens2[j])continue outer;
}
values.push(token);
}
return values;
}
function arrayClasses(classVal){
var classes=[];
if(isArray(classVal)){
forEach(classVal,function(v){
classes=classes.concat(arrayClasses(v));
});
return classes;
}else if(isString(classVal)){
return classVal.split(' ');
}else if(isObject(classVal)){
forEach(classVal,function(v,k){
if(v){
classes=classes.concat(k.split(' '));
}
});
return classes;
}
return classVal;
}
}];
}
var ngClassDirective=classDirective('',true);
var ngClassOddDirective=classDirective('Odd',0);
var ngClassEvenDirective=classDirective('Even',1);
var ngCloakDirective=ngDirective({
compile:function(element,attr){
attr.$set('ngCloak',undefined);
element.removeClass('ng-cloak');
}
});
var ngControllerDirective=[function(){
return{
restrict:'A',
scope:true,
controller:'@',
priority:500
};
}];
var ngEventDirectives={};
var forceAsyncEvents={
'blur':true,
'focus':true
};
forEach(
'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),
function(eventName){
var directiveName=directiveNormalize('ng-'+eventName);
ngEventDirectives[directiveName]=['$parse','$rootScope',function($parse,$rootScope){
return{
restrict:'A',
compile:function($element,attr){
var fn=$parse(attr[directiveName],null,true);
return function ngEventHandler(scope,element){
element.on(eventName,function(event){
var callback=function(){
fn(scope,{$event:event});
};
if(forceAsyncEvents[eventName]&&$rootScope.$$phase){
scope.$evalAsync(callback);
}else{
scope.$apply(callback);
}
});
};
}
};
}];
}
);
var ngIfDirective=['$animate','$compile',function($animate,$compile){
return{
multiElement:true,
transclude:'element',
priority:600,
terminal:true,
restrict:'A',
$$tlb:true,
link:function($scope,$element,$attr,ctrl,$transclude){
var block,childScope,previousElements;
$scope.$watch($attr.ngIf,function ngIfWatchAction(value){
if(value){
if(!childScope){
$transclude(function(clone,newScope){
childScope=newScope;
clone[clone.length++]=$compile.$$createComment('end ngIf',$attr.ngIf);
block={
clone:clone
};
$animate.enter(clone,$element.parent(),$element);
});
}
}else{
if(previousElements){
previousElements.remove();
previousElements=null;
}
if(childScope){
childScope.$destroy();
childScope=null;
}
if(block){
previousElements=getBlockNodes(block.clone);
$animate.leave(previousElements).then(function(){
previousElements=null;
});
block=null;
}
}
});
}
};
}];
var ngIncludeDirective=['$templateRequest','$anchorScroll','$animate',
function($templateRequest,$anchorScroll,$animate){
return{
restrict:'ECA',
priority:400,
terminal:true,
transclude:'element',
controller:angular.noop,
compile:function(element,attr){
var srcExp=attr.ngInclude||attr.src,
onloadExp=attr.onload||'',
autoScrollExp=attr.autoscroll;
return function(scope,$element,$attr,ctrl,$transclude){
var changeCounter=0,
currentScope,
previousElement,
currentElement;
var cleanupLastIncludeContent=function(){
if(previousElement){
previousElement.remove();
previousElement=null;
}
if(currentScope){
currentScope.$destroy();
currentScope=null;
}
if(currentElement){
$animate.leave(currentElement).then(function(){
previousElement=null;
});
previousElement=currentElement;
currentElement=null;
}
};
scope.$watch(srcExp,function ngIncludeWatchAction(src){
var afterAnimation=function(){
if(isDefined(autoScrollExp)&&(!autoScrollExp||scope.$eval(autoScrollExp))){
$anchorScroll();
}
};
var thisChangeId=++changeCounter;
if(src){
$templateRequest(src,true).then(function(response){
if(scope.$$destroyed)return;
if(thisChangeId!==changeCounter)return;
var newScope=scope.$new();
ctrl.template=response;
var clone=$transclude(newScope,function(clone){
cleanupLastIncludeContent();
$animate.enter(clone,null,$element).then(afterAnimation);
});
currentScope=newScope;
currentElement=clone;
currentScope.$emit('$includeContentLoaded',src);
scope.$eval(onloadExp);
},function(){
if(scope.$$destroyed)return;
if(thisChangeId===changeCounter){
cleanupLastIncludeContent();
scope.$emit('$includeContentError',src);
}
});
scope.$emit('$includeContentRequested',src);
}else{
cleanupLastIncludeContent();
ctrl.template=null;
}
});
};
}
};
}];
var ngIncludeFillContentDirective=['$compile',
function($compile){
return{
restrict:'ECA',
priority:-400,
require:'ngInclude',
link:function(scope,$element,$attr,ctrl){
if(toString.call($element[0]).match(/SVG/)){
$element.empty();
$compile(jqLiteBuildFragment(ctrl.template,window.document).childNodes)(scope,
function namespaceAdaptedClone(clone){
$element.append(clone);
},{futureParentElement:$element});
return;
}
$element.html(ctrl.template);
$compile($element.contents())(scope);
}
};
}];
var ngInitDirective=ngDirective({
priority:450,
compile:function(){
return{
pre:function(scope,element,attrs){
scope.$eval(attrs.ngInit);
}
};
}
});
var ngListDirective=function(){
return{
restrict:'A',
priority:100,
require:'ngModel',
link:function(scope,element,attr,ctrl){
var ngList=element.attr(attr.$attr.ngList)||', ';
var trimValues=attr.ngTrim!=='false';
var separator=trimValues?trim(ngList):ngList;
var parse=function(viewValue){
if(isUndefined(viewValue))return;
var list=[];
if(viewValue){
forEach(viewValue.split(separator),function(value){
if(value)list.push(trimValues?trim(value):value);
});
}
return list;
};
ctrl.$parsers.push(parse);
ctrl.$formatters.push(function(value){
if(isArray(value)){
return value.join(ngList);
}
return undefined;
});
ctrl.$isEmpty=function(value){
return!value||!value.length;
};
}
};
};
var VALID_CLASS='ng-valid',
INVALID_CLASS='ng-invalid',
PRISTINE_CLASS='ng-pristine',
DIRTY_CLASS='ng-dirty',
UNTOUCHED_CLASS='ng-untouched',
TOUCHED_CLASS='ng-touched',
PENDING_CLASS='ng-pending',
EMPTY_CLASS='ng-empty',
NOT_EMPTY_CLASS='ng-not-empty';
var ngModelMinErr=minErr('ngModel');
var NgModelController=['$scope','$exceptionHandler','$attrs','$element','$parse','$animate','$timeout','$rootScope','$q','$interpolate',
function($scope,$exceptionHandler,$attr,$element,$parse,$animate,$timeout,$rootScope,$q,$interpolate){
this.$viewValue=Number.NaN;
this.$modelValue=Number.NaN;
this.$$rawModelValue=undefined;
this.$validators={};
this.$asyncValidators={};
this.$parsers=[];
this.$formatters=[];
this.$viewChangeListeners=[];
this.$untouched=true;
this.$touched=false;
this.$pristine=true;
this.$dirty=false;
this.$valid=true;
this.$invalid=false;
this.$error={};
this.$$success={};
this.$pending=undefined;
this.$name=$interpolate($attr.name||'',false)($scope);
this.$$parentForm=nullFormCtrl;
var parsedNgModel=$parse($attr.ngModel),
parsedNgModelAssign=parsedNgModel.assign,
ngModelGet=parsedNgModel,
ngModelSet=parsedNgModelAssign,
pendingDebounce=null,
parserValid,
ctrl=this;
this.$$setOptions=function(options){
ctrl.$options=options;
if(options&&options.getterSetter){
var invokeModelGetter=$parse($attr.ngModel+'()'),
invokeModelSetter=$parse($attr.ngModel+'($$$p)');
ngModelGet=function($scope){
var modelValue=parsedNgModel($scope);
if(isFunction(modelValue)){
modelValue=invokeModelGetter($scope);
}
return modelValue;
};
ngModelSet=function($scope,newValue){
if(isFunction(parsedNgModel($scope))){
invokeModelSetter($scope,{$$$p:newValue});
}else{
parsedNgModelAssign($scope,newValue);
}
};
}else if(!parsedNgModel.assign){
throw ngModelMinErr('nonassign',"Expression '{0}' is non-assignable. Element: {1}",
$attr.ngModel,startingTag($element));
}
};
this.$render=noop;
this.$isEmpty=function(value){
return isUndefined(value)||value===''||value===null||value!==value;
};
this.$$updateEmptyClasses=function(value){
if(ctrl.$isEmpty(value)){
$animate.removeClass($element,NOT_EMPTY_CLASS);
$animate.addClass($element,EMPTY_CLASS);
}else{
$animate.removeClass($element,EMPTY_CLASS);
$animate.addClass($element,NOT_EMPTY_CLASS);
}
};
var currentValidationRunId=0;
addSetValidityMethod({
ctrl:this,
$element:$element,
set:function(object,property){
object[property]=true;
},
unset:function(object,property){
delete object[property];
},
$animate:$animate
});
this.$setPristine=function(){
ctrl.$dirty=false;
ctrl.$pristine=true;
$animate.removeClass($element,DIRTY_CLASS);
$animate.addClass($element,PRISTINE_CLASS);
};
this.$setDirty=function(){
ctrl.$dirty=true;
ctrl.$pristine=false;
$animate.removeClass($element,PRISTINE_CLASS);
$animate.addClass($element,DIRTY_CLASS);
ctrl.$$parentForm.$setDirty();
};
this.$setUntouched=function(){
ctrl.$touched=false;
ctrl.$untouched=true;
$animate.setClass($element,UNTOUCHED_CLASS,TOUCHED_CLASS);
};
this.$setTouched=function(){
ctrl.$touched=true;
ctrl.$untouched=false;
$animate.setClass($element,TOUCHED_CLASS,UNTOUCHED_CLASS);
};
this.$rollbackViewValue=function(){
$timeout.cancel(pendingDebounce);
ctrl.$viewValue=ctrl.$$lastCommittedViewValue;
ctrl.$render();
};
this.$validate=function(){
if(isNumber(ctrl.$modelValue)&&isNaN(ctrl.$modelValue)){
return;
}
var viewValue=ctrl.$$lastCommittedViewValue;
var modelValue=ctrl.$$rawModelValue;
var prevValid=ctrl.$valid;
var prevModelValue=ctrl.$modelValue;
var allowInvalid=ctrl.$options&&ctrl.$options.allowInvalid;
ctrl.$$runValidators(modelValue,viewValue,function(allValid){
if(!allowInvalid&&prevValid!==allValid){
ctrl.$modelValue=allValid?modelValue:undefined;
if(ctrl.$modelValue!==prevModelValue){
ctrl.$$writeModelToScope();
}
}
});
};
this.$$runValidators=function(modelValue,viewValue,doneCallback){
currentValidationRunId++;
var localValidationRunId=currentValidationRunId;
if(!processParseErrors()){
validationDone(false);
return;
}
if(!processSyncValidators()){
validationDone(false);
return;
}
processAsyncValidators();
function processParseErrors(){
var errorKey=ctrl.$$parserName||'parse';
if(isUndefined(parserValid)){
setValidity(errorKey,null);
}else{
if(!parserValid){
forEach(ctrl.$validators,function(v,name){
setValidity(name,null);
});
forEach(ctrl.$asyncValidators,function(v,name){
setValidity(name,null);
});
}
setValidity(errorKey,parserValid);
return parserValid;
}
return true;
}
function processSyncValidators(){
var syncValidatorsValid=true;
forEach(ctrl.$validators,function(validator,name){
var result=validator(modelValue,viewValue);
syncValidatorsValid=syncValidatorsValid&&result;
setValidity(name,result);
});
if(!syncValidatorsValid){
forEach(ctrl.$asyncValidators,function(v,name){
setValidity(name,null);
});
return false;
}
return true;
}
function processAsyncValidators(){
var validatorPromises=[];
var allValid=true;
forEach(ctrl.$asyncValidators,function(validator,name){
var promise=validator(modelValue,viewValue);
if(!isPromiseLike(promise)){
throw ngModelMinErr('nopromise',
"Expected asynchronous validator to return a promise but got '{0}' instead.",promise);
}
setValidity(name,undefined);
validatorPromises.push(promise.then(function(){
setValidity(name,true);
},function(){
allValid=false;
setValidity(name,false);
}));
});
if(!validatorPromises.length){
validationDone(true);
}else{
$q.all(validatorPromises).then(function(){
validationDone(allValid);
},noop);
}
}
function setValidity(name,isValid){
if(localValidationRunId===currentValidationRunId){
ctrl.$setValidity(name,isValid);
}
}
function validationDone(allValid){
if(localValidationRunId===currentValidationRunId){
doneCallback(allValid);
}
}
};
this.$commitViewValue=function(){
var viewValue=ctrl.$viewValue;
$timeout.cancel(pendingDebounce);
if(ctrl.$$lastCommittedViewValue===viewValue&&(viewValue!==''||!ctrl.$$hasNativeValidators)){
return;
}
ctrl.$$updateEmptyClasses(viewValue);
ctrl.$$lastCommittedViewValue=viewValue;
if(ctrl.$pristine){
this.$setDirty();
}
this.$$parseAndValidate();
};
this.$$parseAndValidate=function(){
var viewValue=ctrl.$$lastCommittedViewValue;
var modelValue=viewValue;
parserValid=isUndefined(modelValue)?undefined:true;
if(parserValid){
for(var i=0;i<ctrl.$parsers.length;i++){
modelValue=ctrl.$parsers[i](modelValue);
if(isUndefined(modelValue)){
parserValid=false;
break;
}
}
}
if(isNumber(ctrl.$modelValue)&&isNaN(ctrl.$modelValue)){
ctrl.$modelValue=ngModelGet($scope);
}
var prevModelValue=ctrl.$modelValue;
var allowInvalid=ctrl.$options&&ctrl.$options.allowInvalid;
ctrl.$$rawModelValue=modelValue;
if(allowInvalid){
ctrl.$modelValue=modelValue;
writeToModelIfNeeded();
}
ctrl.$$runValidators(modelValue,ctrl.$$lastCommittedViewValue,function(allValid){
if(!allowInvalid){
ctrl.$modelValue=allValid?modelValue:undefined;
writeToModelIfNeeded();
}
});
function writeToModelIfNeeded(){
if(ctrl.$modelValue!==prevModelValue){
ctrl.$$writeModelToScope();
}
}
};
this.$$writeModelToScope=function(){
ngModelSet($scope,ctrl.$modelValue);
forEach(ctrl.$viewChangeListeners,function(listener){
try{
listener();
}catch(e){
$exceptionHandler(e);
}
});
};
this.$setViewValue=function(value,trigger){
ctrl.$viewValue=value;
if(!ctrl.$options||ctrl.$options.updateOnDefault){
ctrl.$$debounceViewValueCommit(trigger);
}
};
this.$$debounceViewValueCommit=function(trigger){
var debounceDelay=0,
options=ctrl.$options,
debounce;
if(options&&isDefined(options.debounce)){
debounce=options.debounce;
if(isNumber(debounce)){
debounceDelay=debounce;
}else if(isNumber(debounce[trigger])){
debounceDelay=debounce[trigger];
}else if(isNumber(debounce['default'])){
debounceDelay=debounce['default'];
}
}
$timeout.cancel(pendingDebounce);
if(debounceDelay){
pendingDebounce=$timeout(function(){
ctrl.$commitViewValue();
},debounceDelay);
}else if($rootScope.$$phase){
ctrl.$commitViewValue();
}else{
$scope.$apply(function(){
ctrl.$commitViewValue();
});
}
};
$scope.$watch(function ngModelWatch(){
var modelValue=ngModelGet($scope);
if(modelValue!==ctrl.$modelValue&&
(ctrl.$modelValue===ctrl.$modelValue||modelValue===modelValue)
){
ctrl.$modelValue=ctrl.$$rawModelValue=modelValue;
parserValid=undefined;
var formatters=ctrl.$formatters,
idx=formatters.length;
var viewValue=modelValue;
while(idx--){
viewValue=formatters[idx](viewValue);
}
if(ctrl.$viewValue!==viewValue){
ctrl.$$updateEmptyClasses(viewValue);
ctrl.$viewValue=ctrl.$$lastCommittedViewValue=viewValue;
ctrl.$render();
ctrl.$$runValidators(modelValue,viewValue,noop);
}
}
return modelValue;
});
}];
var ngModelDirective=['$rootScope',function($rootScope){
return{
restrict:'A',
require:['ngModel','^?form','^?ngModelOptions'],
controller:NgModelController,
priority:1,
compile:function ngModelCompile(element){
element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);
return{
pre:function ngModelPreLink(scope,element,attr,ctrls){
var modelCtrl=ctrls[0],
formCtrl=ctrls[1]||modelCtrl.$$parentForm;
modelCtrl.$$setOptions(ctrls[2]&&ctrls[2].$options);
formCtrl.$addControl(modelCtrl);
attr.$observe('name',function(newValue){
if(modelCtrl.$name!==newValue){
modelCtrl.$$parentForm.$$renameControl(modelCtrl,newValue);
}
});
scope.$on('$destroy',function(){
modelCtrl.$$parentForm.$removeControl(modelCtrl);
});
},
post:function ngModelPostLink(scope,element,attr,ctrls){
var modelCtrl=ctrls[0];
if(modelCtrl.$options&&modelCtrl.$options.updateOn){
element.on(modelCtrl.$options.updateOn,function(ev){
modelCtrl.$$debounceViewValueCommit(ev&&ev.type);
});
}
element.on('blur',function(){
if(modelCtrl.$touched)return;
if($rootScope.$$phase){
scope.$evalAsync(modelCtrl.$setTouched);
}else{
scope.$apply(modelCtrl.$setTouched);
}
});
}
};
}
};
}];
var DEFAULT_REGEXP=/(\s+|^)default(\s+|$)/;
var ngModelOptionsDirective=function(){
return{
restrict:'A',
controller:['$scope','$attrs',function($scope,$attrs){
var that=this;
this.$options=copy($scope.$eval($attrs.ngModelOptions));
if(isDefined(this.$options.updateOn)){
this.$options.updateOnDefault=false;
this.$options.updateOn=trim(this.$options.updateOn.replace(DEFAULT_REGEXP,function(){
that.$options.updateOnDefault=true;
return' ';
}));
}else{
this.$options.updateOnDefault=true;
}
}]
};
};
function addSetValidityMethod(context){
var ctrl=context.ctrl,
$element=context.$element,
classCache={},
set=context.set,
unset=context.unset,
$animate=context.$animate;
classCache[INVALID_CLASS]=!(classCache[VALID_CLASS]=$element.hasClass(VALID_CLASS));
ctrl.$setValidity=setValidity;
function setValidity(validationErrorKey,state,controller){
if(isUndefined(state)){
createAndSet('$pending',validationErrorKey,controller);
}else{
unsetAndCleanup('$pending',validationErrorKey,controller);
}
if(!isBoolean(state)){
unset(ctrl.$error,validationErrorKey,controller);
unset(ctrl.$$success,validationErrorKey,controller);
}else{
if(state){
unset(ctrl.$error,validationErrorKey,controller);
set(ctrl.$$success,validationErrorKey,controller);
}else{
set(ctrl.$error,validationErrorKey,controller);
unset(ctrl.$$success,validationErrorKey,controller);
}
}
if(ctrl.$pending){
cachedToggleClass(PENDING_CLASS,true);
ctrl.$valid=ctrl.$invalid=undefined;
toggleValidationCss('',null);
}else{
cachedToggleClass(PENDING_CLASS,false);
ctrl.$valid=isObjectEmpty(ctrl.$error);
ctrl.$invalid=!ctrl.$valid;
toggleValidationCss('',ctrl.$valid);
}
var combinedState;
if(ctrl.$pending&&ctrl.$pending[validationErrorKey]){
combinedState=undefined;
}else if(ctrl.$error[validationErrorKey]){
combinedState=false;
}else if(ctrl.$$success[validationErrorKey]){
combinedState=true;
}else{
combinedState=null;
}
toggleValidationCss(validationErrorKey,combinedState);
ctrl.$$parentForm.$setValidity(validationErrorKey,combinedState,ctrl);
}
function createAndSet(name,value,controller){
if(!ctrl[name]){
ctrl[name]={};
}
set(ctrl[name],value,controller);
}
function unsetAndCleanup(name,value,controller){
if(ctrl[name]){
unset(ctrl[name],value,controller);
}
if(isObjectEmpty(ctrl[name])){
ctrl[name]=undefined;
}
}
function cachedToggleClass(className,switchValue){
if(switchValue&&!classCache[className]){
$animate.addClass($element,className);
classCache[className]=true;
}else if(!switchValue&&classCache[className]){
$animate.removeClass($element,className);
classCache[className]=false;
}
}
function toggleValidationCss(validationErrorKey,isValid){
validationErrorKey=validationErrorKey?'-'+snake_case(validationErrorKey,'-'):'';
cachedToggleClass(VALID_CLASS+validationErrorKey,isValid===true);
cachedToggleClass(INVALID_CLASS+validationErrorKey,isValid===false);
}
}
function isObjectEmpty(obj){
if(obj){
for(var prop in obj){
if(obj.hasOwnProperty(prop)){
return false;
}
}
}
return true;
}
var ngNonBindableDirective=ngDirective({terminal:true,priority:1000});
var ngOptionsMinErr=minErr('ngOptions');
var NG_OPTIONS_REGEXP=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;
var ngOptionsDirective=['$compile','$document','$parse',function($compile,$document,$parse){
function parseOptionsExpression(optionsExp,selectElement,scope){
var match=optionsExp.match(NG_OPTIONS_REGEXP);
if(!(match)){
throw ngOptionsMinErr('iexp',
"Expected expression in form of "+
"'_select_ (as _label_)? for (_key_,)?_value_ in _collection_'"+
" but got '{0}'. Element: {1}",
optionsExp,startingTag(selectElement));
}
var valueName=match[5]||match[7];
var keyName=match[6];
var selectAs=/ as /.test(match[0])&&match[1];
var trackBy=match[9];
var valueFn=$parse(match[2]?match[1]:valueName);
var selectAsFn=selectAs&&$parse(selectAs);
var viewValueFn=selectAsFn||valueFn;
var trackByFn=trackBy&&$parse(trackBy);
var getTrackByValueFn=trackBy?
function(value,locals){return trackByFn(scope,locals);}:
function getHashOfValue(value){return hashKey(value);};
var getTrackByValue=function(value,key){
return getTrackByValueFn(value,getLocals(value,key));
};
var displayFn=$parse(match[2]||match[1]);
var groupByFn=$parse(match[3]||'');
var disableWhenFn=$parse(match[4]||'');
var valuesFn=$parse(match[8]);
var locals={};
var getLocals=keyName?function(value,key){
locals[keyName]=key;
locals[valueName]=value;
return locals;
}:function(value){
locals[valueName]=value;
return locals;
};
function Option(selectValue,viewValue,label,group,disabled){
this.selectValue=selectValue;
this.viewValue=viewValue;
this.label=label;
this.group=group;
this.disabled=disabled;
}
function getOptionValuesKeys(optionValues){
var optionValuesKeys;
if(!keyName&&isArrayLike(optionValues)){
optionValuesKeys=optionValues;
}else{
optionValuesKeys=[];
for(var itemKey in optionValues){
if(optionValues.hasOwnProperty(itemKey)&&itemKey.charAt(0)!=='$'){
optionValuesKeys.push(itemKey);
}
}
}
return optionValuesKeys;
}
return{
trackBy:trackBy,
getTrackByValue:getTrackByValue,
getWatchables:$parse(valuesFn,function(optionValues){
var watchedArray=[];
optionValues=optionValues||[];
var optionValuesKeys=getOptionValuesKeys(optionValues);
var optionValuesLength=optionValuesKeys.length;
for(var index=0;index<optionValuesLength;index++){
var key=(optionValues===optionValuesKeys)?index:optionValuesKeys[index];
var value=optionValues[key];
var locals=getLocals(value,key);
var selectValue=getTrackByValueFn(value,locals);
watchedArray.push(selectValue);
if(match[2]||match[1]){
var label=displayFn(scope,locals);
watchedArray.push(label);
}
if(match[4]){
var disableWhen=disableWhenFn(scope,locals);
watchedArray.push(disableWhen);
}
}
return watchedArray;
}),
getOptions:function(){
var optionItems=[];
var selectValueMap={};
var optionValues=valuesFn(scope)||[];
var optionValuesKeys=getOptionValuesKeys(optionValues);
var optionValuesLength=optionValuesKeys.length;
for(var index=0;index<optionValuesLength;index++){
var key=(optionValues===optionValuesKeys)?index:optionValuesKeys[index];
var value=optionValues[key];
var locals=getLocals(value,key);
var viewValue=viewValueFn(scope,locals);
var selectValue=getTrackByValueFn(viewValue,locals);
var label=displayFn(scope,locals);
var group=groupByFn(scope,locals);
var disabled=disableWhenFn(scope,locals);
var optionItem=new Option(selectValue,viewValue,label,group,disabled);
optionItems.push(optionItem);
selectValueMap[selectValue]=optionItem;
}
return{
items:optionItems,
selectValueMap:selectValueMap,
getOptionFromViewValue:function(value){
return selectValueMap[getTrackByValue(value)];
},
getViewValueFromOption:function(option){
return trackBy?angular.copy(option.viewValue):option.viewValue;
}
};
}
};
}
var optionTemplate=window.document.createElement('option'),
optGroupTemplate=window.document.createElement('optgroup');
function ngOptionsPostLink(scope,selectElement,attr,ctrls){
var selectCtrl=ctrls[0];
var ngModelCtrl=ctrls[1];
var multiple=attr.multiple;
var emptyOption;
for(var i=0,children=selectElement.children(),ii=children.length;i<ii;i++){
if(children[i].value===''){
emptyOption=children.eq(i);
break;
}
}
var providedEmptyOption=!!emptyOption;
var unknownOption=jqLite(optionTemplate.cloneNode(false));
unknownOption.val('?');
var options;
var ngOptions=parseOptionsExpression(attr.ngOptions,selectElement,scope);
var listFragment=$document[0].createDocumentFragment();
var renderEmptyOption=function(){
if(!providedEmptyOption){
selectElement.prepend(emptyOption);
}
selectElement.val('');
emptyOption.prop('selected',true);
emptyOption.attr('selected',true);
};
var removeEmptyOption=function(){
if(!providedEmptyOption){
emptyOption.remove();
}
};
var renderUnknownOption=function(){
selectElement.prepend(unknownOption);
selectElement.val('?');
unknownOption.prop('selected',true);
unknownOption.attr('selected',true);
};
var removeUnknownOption=function(){
unknownOption.remove();
};
if(!multiple){
selectCtrl.writeValue=function writeNgOptionsValue(value){
var option=options.getOptionFromViewValue(value);
if(option){
if(selectElement[0].value!==option.selectValue){
removeUnknownOption();
removeEmptyOption();
selectElement[0].value=option.selectValue;
option.element.selected=true;
}
option.element.setAttribute('selected','selected');
}else{
if(value===null||providedEmptyOption){
removeUnknownOption();
renderEmptyOption();
}else{
removeEmptyOption();
renderUnknownOption();
}
}
};
selectCtrl.readValue=function readNgOptionsValue(){
var selectedOption=options.selectValueMap[selectElement.val()];
if(selectedOption&&!selectedOption.disabled){
removeEmptyOption();
removeUnknownOption();
return options.getViewValueFromOption(selectedOption);
}
return null;
};
if(ngOptions.trackBy){
scope.$watch(
function(){return ngOptions.getTrackByValue(ngModelCtrl.$viewValue);},
function(){ngModelCtrl.$render();}
);
}
}else{
ngModelCtrl.$isEmpty=function(value){
return!value||value.length===0;
};
selectCtrl.writeValue=function writeNgOptionsMultiple(value){
options.items.forEach(function(option){
option.element.selected=false;
});
if(value){
value.forEach(function(item){
var option=options.getOptionFromViewValue(item);
if(option)option.element.selected=true;
});
}
};
selectCtrl.readValue=function readNgOptionsMultiple(){
var selectedValues=selectElement.val()||[],
selections=[];
forEach(selectedValues,function(value){
var option=options.selectValueMap[value];
if(option&&!option.disabled)selections.push(options.getViewValueFromOption(option));
});
return selections;
};
if(ngOptions.trackBy){
scope.$watchCollection(function(){
if(isArray(ngModelCtrl.$viewValue)){
return ngModelCtrl.$viewValue.map(function(value){
return ngOptions.getTrackByValue(value);
});
}
},function(){
ngModelCtrl.$render();
});
}
}
if(providedEmptyOption){
emptyOption.remove();
$compile(emptyOption)(scope);
emptyOption.removeClass('ng-scope');
}else{
emptyOption=jqLite(optionTemplate.cloneNode(false));
}
selectElement.empty();
updateOptions();
scope.$watchCollection(ngOptions.getWatchables,updateOptions);
function addOptionElement(option,parent){
var optionElement=optionTemplate.cloneNode(false);
parent.appendChild(optionElement);
updateOptionElement(option,optionElement);
}
function updateOptionElement(option,element){
option.element=element;
element.disabled=option.disabled;
if(option.label!==element.label){
element.label=option.label;
element.textContent=option.label;
}
if(option.value!==element.value)element.value=option.selectValue;
}
function updateOptions(){
var previousValue=options&&selectCtrl.readValue();
if(options){
for(var i=options.items.length-1;i>=0;i--){
var option=options.items[i];
if(option.group){
jqLiteRemove(option.element.parentNode);
}else{
jqLiteRemove(option.element);
}
}
}
options=ngOptions.getOptions();
var groupElementMap={};
if(providedEmptyOption){
selectElement.prepend(emptyOption);
}
options.items.forEach(function addOption(option){
var groupElement;
if(isDefined(option.group)){
groupElement=groupElementMap[option.group];
if(!groupElement){
groupElement=optGroupTemplate.cloneNode(false);
listFragment.appendChild(groupElement);
groupElement.label=option.group;
groupElementMap[option.group]=groupElement;
}
addOptionElement(option,groupElement);
}else{
addOptionElement(option,listFragment);
}
});
selectElement[0].appendChild(listFragment);
ngModelCtrl.$render();
if(!ngModelCtrl.$isEmpty(previousValue)){
var nextValue=selectCtrl.readValue();
var isNotPrimitive=ngOptions.trackBy||multiple;
if(isNotPrimitive?!equals(previousValue,nextValue):previousValue!==nextValue){
ngModelCtrl.$setViewValue(nextValue);
ngModelCtrl.$render();
}
}
}
}
return{
restrict:'A',
terminal:true,
require:['select','ngModel'],
link:{
pre:function ngOptionsPreLink(scope,selectElement,attr,ctrls){
ctrls[0].registerOption=noop;
},
post:ngOptionsPostLink
}
};
}];
var ngPluralizeDirective=['$locale','$interpolate','$log',function($locale,$interpolate,$log){
var BRACE=/{}/g,
IS_WHEN=/^when(Minus)?(.+)$/;
return{
link:function(scope,element,attr){
var numberExp=attr.count,
whenExp=attr.$attr.when&&element.attr(attr.$attr.when),
offset=attr.offset||0,
whens=scope.$eval(whenExp)||{},
whensExpFns={},
startSymbol=$interpolate.startSymbol(),
endSymbol=$interpolate.endSymbol(),
braceReplacement=startSymbol+numberExp+'-'+offset+endSymbol,
watchRemover=angular.noop,
lastCount;
forEach(attr,function(expression,attributeName){
var tmpMatch=IS_WHEN.exec(attributeName);
if(tmpMatch){
var whenKey=(tmpMatch[1]?'-':'')+lowercase(tmpMatch[2]);
whens[whenKey]=element.attr(attr.$attr[attributeName]);
}
});
forEach(whens,function(expression,key){
whensExpFns[key]=$interpolate(expression.replace(BRACE,braceReplacement));
});
scope.$watch(numberExp,function ngPluralizeWatchAction(newVal){
var count=parseFloat(newVal);
var countIsNaN=isNaN(count);
if(!countIsNaN&&!(count in whens)){
count=$locale.pluralCat(count-offset);
}
if((count!==lastCount)&&!(countIsNaN&&isNumber(lastCount)&&isNaN(lastCount))){
watchRemover();
var whenExpFn=whensExpFns[count];
if(isUndefined(whenExpFn)){
if(newVal!=null){
$log.debug("ngPluralize: no rule defined for '"+count+"' in "+whenExp);
}
watchRemover=noop;
updateElementText();
}else{
watchRemover=scope.$watch(whenExpFn,updateElementText);
}
lastCount=count;
}
});
function updateElementText(newText){
element.text(newText||'');
}
}
};
}];
var ngRepeatDirective=['$parse','$animate','$compile',function($parse,$animate,$compile){
var NG_REMOVED='$$NG_REMOVED';
var ngRepeatMinErr=minErr('ngRepeat');
var updateScope=function(scope,index,valueIdentifier,value,keyIdentifier,key,arrayLength){
scope[valueIdentifier]=value;
if(keyIdentifier)scope[keyIdentifier]=key;
scope.$index=index;
scope.$first=(index===0);
scope.$last=(index===(arrayLength-1));
scope.$middle=!(scope.$first||scope.$last);
scope.$odd=!(scope.$even=(index&1)===0);
};
var getBlockStart=function(block){
return block.clone[0];
};
var getBlockEnd=function(block){
return block.clone[block.clone.length-1];
};
return{
restrict:'A',
multiElement:true,
transclude:'element',
priority:1000,
terminal:true,
$$tlb:true,
compile:function ngRepeatCompile($element,$attr){
var expression=$attr.ngRepeat;
var ngRepeatEndComment=$compile.$$createComment('end ngRepeat',expression);
var match=expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
if(!match){
throw ngRepeatMinErr('iexp',"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.",
expression);
}
var lhs=match[1];
var rhs=match[2];
var aliasAs=match[3];
var trackByExp=match[4];
match=lhs.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);
if(!match){
throw ngRepeatMinErr('iidexp',"'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.",
lhs);
}
var valueIdentifier=match[3]||match[1];
var keyIdentifier=match[2];
if(aliasAs&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs)||
/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs))){
throw ngRepeatMinErr('badident',"alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.",
aliasAs);
}
var trackByExpGetter,trackByIdExpFn,trackByIdArrayFn,trackByIdObjFn;
var hashFnLocals={$id:hashKey};
if(trackByExp){
trackByExpGetter=$parse(trackByExp);
}else{
trackByIdArrayFn=function(key,value){
return hashKey(value);
};
trackByIdObjFn=function(key){
return key;
};
}
return function ngRepeatLink($scope,$element,$attr,ctrl,$transclude){
if(trackByExpGetter){
trackByIdExpFn=function(key,value,index){
if(keyIdentifier)hashFnLocals[keyIdentifier]=key;
hashFnLocals[valueIdentifier]=value;
hashFnLocals.$index=index;
return trackByExpGetter($scope,hashFnLocals);
};
}
var lastBlockMap=createMap();
$scope.$watchCollection(rhs,function ngRepeatAction(collection){
var index,length,
previousNode=$element[0],
nextNode,
nextBlockMap=createMap(),
collectionLength,
key,value,
trackById,
trackByIdFn,
collectionKeys,
block,
nextBlockOrder,
elementsToRemove;
if(aliasAs){
$scope[aliasAs]=collection;
}
if(isArrayLike(collection)){
collectionKeys=collection;
trackByIdFn=trackByIdExpFn||trackByIdArrayFn;
}else{
trackByIdFn=trackByIdExpFn||trackByIdObjFn;
collectionKeys=[];
for(var itemKey in collection){
if(hasOwnProperty.call(collection,itemKey)&&itemKey.charAt(0)!=='$'){
collectionKeys.push(itemKey);
}
}
}
collectionLength=collectionKeys.length;
nextBlockOrder=new Array(collectionLength);
for(index=0;index<collectionLength;index++){
key=(collection===collectionKeys)?index:collectionKeys[index];
value=collection[key];
trackById=trackByIdFn(key,value,index);
if(lastBlockMap[trackById]){
block=lastBlockMap[trackById];
delete lastBlockMap[trackById];
nextBlockMap[trackById]=block;
nextBlockOrder[index]=block;
}else if(nextBlockMap[trackById]){
forEach(nextBlockOrder,function(block){
if(block&&block.scope)lastBlockMap[block.id]=block;
});
throw ngRepeatMinErr('dupes',
"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}",
expression,trackById,value);
}else{
nextBlockOrder[index]={id:trackById,scope:undefined,clone:undefined};
nextBlockMap[trackById]=true;
}
}
for(var blockKey in lastBlockMap){
block=lastBlockMap[blockKey];
elementsToRemove=getBlockNodes(block.clone);
$animate.leave(elementsToRemove);
if(elementsToRemove[0].parentNode){
for(index=0,length=elementsToRemove.length;index<length;index++){
elementsToRemove[index][NG_REMOVED]=true;
}
}
block.scope.$destroy();
}
for(index=0;index<collectionLength;index++){
key=(collection===collectionKeys)?index:collectionKeys[index];
value=collection[key];
block=nextBlockOrder[index];
if(block.scope){
nextNode=previousNode;
do{
nextNode=nextNode.nextSibling;
}while(nextNode&&nextNode[NG_REMOVED]);
if(getBlockStart(block)!=nextNode){
$animate.move(getBlockNodes(block.clone),null,previousNode);
}
previousNode=getBlockEnd(block);
updateScope(block.scope,index,valueIdentifier,value,keyIdentifier,key,collectionLength);
}else{
$transclude(function ngRepeatTransclude(clone,scope){
block.scope=scope;
var endNode=ngRepeatEndComment.cloneNode(false);
clone[clone.length++]=endNode;
$animate.enter(clone,null,previousNode);
previousNode=endNode;
block.clone=clone;
nextBlockMap[block.id]=block;
updateScope(block.scope,index,valueIdentifier,value,keyIdentifier,key,collectionLength);
});
}
}
lastBlockMap=nextBlockMap;
});
};
}
};
}];
var NG_HIDE_CLASS='ng-hide';
var NG_HIDE_IN_PROGRESS_CLASS='ng-hide-animate';
var ngShowDirective=['$animate',function($animate){
return{
restrict:'A',
multiElement:true,
link:function(scope,element,attr){
scope.$watch(attr.ngShow,function ngShowWatchAction(value){
$animate[value?'removeClass':'addClass'](element,NG_HIDE_CLASS,{
tempClasses:NG_HIDE_IN_PROGRESS_CLASS
});
});
}
};
}];
var ngHideDirective=['$animate',function($animate){
return{
restrict:'A',
multiElement:true,
link:function(scope,element,attr){
scope.$watch(attr.ngHide,function ngHideWatchAction(value){
$animate[value?'addClass':'removeClass'](element,NG_HIDE_CLASS,{
tempClasses:NG_HIDE_IN_PROGRESS_CLASS
});
});
}
};
}];
var ngStyleDirective=ngDirective(function(scope,element,attr){
scope.$watch(attr.ngStyle,function ngStyleWatchAction(newStyles,oldStyles){
if(oldStyles&&(newStyles!==oldStyles)){
forEach(oldStyles,function(val,style){element.css(style,'');});
}
if(newStyles)element.css(newStyles);
},true);
});
var ngSwitchDirective=['$animate','$compile',function($animate,$compile){
return{
require:'ngSwitch',
controller:['$scope',function ngSwitchController(){
this.cases={};
}],
link:function(scope,element,attr,ngSwitchController){
var watchExpr=attr.ngSwitch||attr.on,
selectedTranscludes=[],
selectedElements=[],
previousLeaveAnimations=[],
selectedScopes=[];
var spliceFactory=function(array,index){
return function(){array.splice(index,1);};
};
scope.$watch(watchExpr,function ngSwitchWatchAction(value){
var i,ii;
for(i=0,ii=previousLeaveAnimations.length;i<ii;++i){
$animate.cancel(previousLeaveAnimations[i]);
}
previousLeaveAnimations.length=0;
for(i=0,ii=selectedScopes.length;i<ii;++i){
var selected=getBlockNodes(selectedElements[i].clone);
selectedScopes[i].$destroy();
var promise=previousLeaveAnimations[i]=$animate.leave(selected);
promise.then(spliceFactory(previousLeaveAnimations,i));
}
selectedElements.length=0;
selectedScopes.length=0;
if((selectedTranscludes=ngSwitchController.cases['!'+value]||ngSwitchController.cases['?'])){
forEach(selectedTranscludes,function(selectedTransclude){
selectedTransclude.transclude(function(caseElement,selectedScope){
selectedScopes.push(selectedScope);
var anchor=selectedTransclude.element;
caseElement[caseElement.length++]=$compile.$$createComment('end ngSwitchWhen');
var block={clone:caseElement};
selectedElements.push(block);
$animate.enter(caseElement,anchor.parent(),anchor);
});
});
}
});
}
};
}];
var ngSwitchWhenDirective=ngDirective({
transclude:'element',
priority:1200,
require:'^ngSwitch',
multiElement:true,
link:function(scope,element,attrs,ctrl,$transclude){
ctrl.cases['!'+attrs.ngSwitchWhen]=(ctrl.cases['!'+attrs.ngSwitchWhen]||[]);
ctrl.cases['!'+attrs.ngSwitchWhen].push({transclude:$transclude,element:element});
}
});
var ngSwitchDefaultDirective=ngDirective({
transclude:'element',
priority:1200,
require:'^ngSwitch',
multiElement:true,
link:function(scope,element,attr,ctrl,$transclude){
ctrl.cases['?']=(ctrl.cases['?']||[]);
ctrl.cases['?'].push({transclude:$transclude,element:element});
}
});
var ngTranscludeMinErr=minErr('ngTransclude');
var ngTranscludeDirective=ngDirective({
restrict:'EAC',
link:function($scope,$element,$attrs,controller,$transclude){
if($attrs.ngTransclude===$attrs.$attr.ngTransclude){
$attrs.ngTransclude='';
}
function ngTranscludeCloneAttachFn(clone){
if(clone.length){
$element.empty();
$element.append(clone);
}
}
if(!$transclude){
throw ngTranscludeMinErr('orphan',
'Illegal use of ngTransclude directive in the template! '+
'No parent directive that requires a transclusion found. '+
'Element: {0}',
startingTag($element));
}
var slotName=$attrs.ngTransclude||$attrs.ngTranscludeSlot;
$transclude(ngTranscludeCloneAttachFn,null,slotName);
}
});
var scriptDirective=['$templateCache',function($templateCache){
return{
restrict:'E',
terminal:true,
compile:function(element,attr){
if(attr.type=='text/ng-template'){
var templateUrl=attr.id,
text=element[0].text;
$templateCache.put(templateUrl,text);
}
}
};
}];
var noopNgModelController={$setViewValue:noop,$render:noop};
function chromeHack(optionElement){
if(optionElement[0].hasAttribute('selected')){
optionElement[0].selected=true;
}
}
var SelectController=
['$element','$scope',function($element,$scope){
var self=this,
optionsMap=new HashMap();
self.ngModelCtrl=noopNgModelController;
self.unknownOption=jqLite(window.document.createElement('option'));
self.renderUnknownOption=function(val){
var unknownVal='? '+hashKey(val)+' ?';
self.unknownOption.val(unknownVal);
$element.prepend(self.unknownOption);
$element.val(unknownVal);
};
$scope.$on('$destroy',function(){
self.renderUnknownOption=noop;
});
self.removeUnknownOption=function(){
if(self.unknownOption.parent())self.unknownOption.remove();
};
self.readValue=function readSingleValue(){
self.removeUnknownOption();
return $element.val();
};
self.writeValue=function writeSingleValue(value){
if(self.hasOption(value)){
self.removeUnknownOption();
$element.val(value);
if(value==='')self.emptyOption.prop('selected',true);
}else{
if(value==null&&self.emptyOption){
self.removeUnknownOption();
$element.val('');
}else{
self.renderUnknownOption(value);
}
}
};
self.addOption=function(value,element){
if(element[0].nodeType===NODE_TYPE_COMMENT)return;
assertNotHasOwnProperty(value,'"option value"');
if(value===''){
self.emptyOption=element;
}
var count=optionsMap.get(value)||0;
optionsMap.put(value,count+1);
self.ngModelCtrl.$render();
chromeHack(element);
};
self.removeOption=function(value){
var count=optionsMap.get(value);
if(count){
if(count===1){
optionsMap.remove(value);
if(value===''){
self.emptyOption=undefined;
}
}else{
optionsMap.put(value,count-1);
}
}
};
self.hasOption=function(value){
return!!optionsMap.get(value);
};
self.registerOption=function(optionScope,optionElement,optionAttrs,interpolateValueFn,interpolateTextFn){
if(interpolateValueFn){
var oldVal;
optionAttrs.$observe('value',function valueAttributeObserveAction(newVal){
if(isDefined(oldVal)){
self.removeOption(oldVal);
}
oldVal=newVal;
self.addOption(newVal,optionElement);
});
}else if(interpolateTextFn){
optionScope.$watch(interpolateTextFn,function interpolateWatchAction(newVal,oldVal){
optionAttrs.$set('value',newVal);
if(oldVal!==newVal){
self.removeOption(oldVal);
}
self.addOption(newVal,optionElement);
});
}else{
self.addOption(optionAttrs.value,optionElement);
}
optionElement.on('$destroy',function(){
self.removeOption(optionAttrs.value);
self.ngModelCtrl.$render();
});
};
}];
var selectDirective=function(){
return{
restrict:'E',
require:['select','?ngModel'],
controller:SelectController,
priority:1,
link:{
pre:selectPreLink,
post:selectPostLink
}
};
function selectPreLink(scope,element,attr,ctrls){
var ngModelCtrl=ctrls[1];
if(!ngModelCtrl)return;
var selectCtrl=ctrls[0];
selectCtrl.ngModelCtrl=ngModelCtrl;
element.on('change',function(){
scope.$apply(function(){
ngModelCtrl.$setViewValue(selectCtrl.readValue());
});
});
if(attr.multiple){
selectCtrl.readValue=function readMultipleValue(){
var array=[];
forEach(element.find('option'),function(option){
if(option.selected){
array.push(option.value);
}
});
return array;
};
selectCtrl.writeValue=function writeMultipleValue(value){
var items=new HashMap(value);
forEach(element.find('option'),function(option){
option.selected=isDefined(items.get(option.value));
});
};
var lastView,lastViewRef=NaN;
scope.$watch(function selectMultipleWatch(){
if(lastViewRef===ngModelCtrl.$viewValue&&!equals(lastView,ngModelCtrl.$viewValue)){
lastView=shallowCopy(ngModelCtrl.$viewValue);
ngModelCtrl.$render();
}
lastViewRef=ngModelCtrl.$viewValue;
});
ngModelCtrl.$isEmpty=function(value){
return!value||value.length===0;
};
}
}
function selectPostLink(scope,element,attrs,ctrls){
var ngModelCtrl=ctrls[1];
if(!ngModelCtrl)return;
var selectCtrl=ctrls[0];
ngModelCtrl.$render=function(){
selectCtrl.writeValue(ngModelCtrl.$viewValue);
};
}
};
var optionDirective=['$interpolate',function($interpolate){
return{
restrict:'E',
priority:100,
compile:function(element,attr){
if(isDefined(attr.value)){
var interpolateValueFn=$interpolate(attr.value,true);
}else{
var interpolateTextFn=$interpolate(element.text(),true);
if(!interpolateTextFn){
attr.$set('value',element.text());
}
}
return function(scope,element,attr){
var selectCtrlName='$selectController',
parent=element.parent(),
selectCtrl=parent.data(selectCtrlName)||
parent.parent().data(selectCtrlName);
if(selectCtrl){
selectCtrl.registerOption(scope,element,attr,interpolateValueFn,interpolateTextFn);
}
};
}
};
}];
var styleDirective=valueFn({
restrict:'E',
terminal:false
});
var requiredDirective=function(){
return{
restrict:'A',
require:'?ngModel',
link:function(scope,elm,attr,ctrl){
if(!ctrl)return;
attr.required=true;
ctrl.$validators.required=function(modelValue,viewValue){
return!attr.required||!ctrl.$isEmpty(viewValue);
};
attr.$observe('required',function(){
ctrl.$validate();
});
}
};
};
var patternDirective=function(){
return{
restrict:'A',
require:'?ngModel',
link:function(scope,elm,attr,ctrl){
if(!ctrl)return;
var regexp,patternExp=attr.ngPattern||attr.pattern;
attr.$observe('pattern',function(regex){
if(isString(regex)&&regex.length>0){
regex=new RegExp('^'+regex+'$');
}
if(regex&&!regex.test){
throw minErr('ngPattern')('noregexp',
'Expected {0} to be a RegExp but was {1}. Element: {2}',patternExp,
regex,startingTag(elm));
}
regexp=regex||undefined;
ctrl.$validate();
});
ctrl.$validators.pattern=function(modelValue,viewValue){
return ctrl.$isEmpty(viewValue)||isUndefined(regexp)||regexp.test(viewValue);
};
}
};
};
var maxlengthDirective=function(){
return{
restrict:'A',
require:'?ngModel',
link:function(scope,elm,attr,ctrl){
if(!ctrl)return;
var maxlength=-1;
attr.$observe('maxlength',function(value){
var intVal=toInt(value);
maxlength=isNaN(intVal)?-1:intVal;
ctrl.$validate();
});
ctrl.$validators.maxlength=function(modelValue,viewValue){
return(maxlength<0)||ctrl.$isEmpty(viewValue)||(viewValue.length<=maxlength);
};
}
};
};
var minlengthDirective=function(){
return{
restrict:'A',
require:'?ngModel',
link:function(scope,elm,attr,ctrl){
if(!ctrl)return;
var minlength=0;
attr.$observe('minlength',function(value){
minlength=toInt(value)||0;
ctrl.$validate();
});
ctrl.$validators.minlength=function(modelValue,viewValue){
return ctrl.$isEmpty(viewValue)||viewValue.length>=minlength;
};
}
};
};
if(window.angular.bootstrap){
if(window.console){
console.log('WARNING: Tried to load angular more than once.');
}
return;
}
bindJQuery();
publishExternalAPI(angular);
angular.module("ngLocale",[],["$provide",function($provide){
var PLURAL_CATEGORY={ZERO:"zero",ONE:"one",TWO:"two",FEW:"few",MANY:"many",OTHER:"other"};
function getDecimals(n){
n=n+'';
var i=n.indexOf('.');
return(i==-1)?0:n.length-i-1;
}
function getVF(n,opt_precision){
var v=opt_precision;
if(undefined===v){
v=Math.min(getDecimals(n),3);
}
var base=Math.pow(10,v);
var f=((n*base)|0)%base;
return{v:v,f:f};
}
$provide.value("$locale",{
"DATETIME_FORMATS":{
"AMPMS":[
"AM",
"PM"
],
"DAY":[
"Sunday",
"Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday"
],
"ERANAMES":[
"Before Christ",
"Anno Domini"
],
"ERAS":[
"BC",
"AD"
],
"FIRSTDAYOFWEEK":6,
"MONTH":[
"January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December"
],
"SHORTDAY":[
"Sun",
"Mon",
"Tue",
"Wed",
"Thu",
"Fri",
"Sat"
],
"SHORTMONTH":[
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
],
"STANDALONEMONTH":[
"January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December"
],
"WEEKENDRANGE":[
5,
6
],
"fullDate":"EEEE, MMMM d, y",
"longDate":"MMMM d, y",
"medium":"MMM d, y h:mm:ss a",
"mediumDate":"MMM d, y",
"mediumTime":"h:mm:ss a",
"short":"M/d/yy h:mm a",
"shortDate":"M/d/yy",
"shortTime":"h:mm a"
},
"NUMBER_FORMATS":{
"CURRENCY_SYM":"$",
"DECIMAL_SEP":".",
"GROUP_SEP":",",
"PATTERNS":[
{
"gSize":3,
"lgSize":3,
"maxFrac":3,
"minFrac":0,
"minInt":1,
"negPre":"-",
"negSuf":"",
"posPre":"",
"posSuf":""
},
{
"gSize":3,
"lgSize":3,
"maxFrac":2,
"minFrac":2,
"minInt":1,
"negPre":"-\u00a4",
"negSuf":"",
"posPre":"\u00a4",
"posSuf":""
}
]
},
"id":"en-us",
"localeID":"en_US",
"pluralCat":function(n,opt_precision){var i=n|0;var vf=getVF(n,opt_precision);if(i==1&&vf.v==0){return PLURAL_CATEGORY.ONE;}return PLURAL_CATEGORY.OTHER;}
});
}]);
jqLite(window.document).ready(function(){
angularInit(window.document,bootstrap);
});
})(window);
!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/angular1/vendor/angular-sanitize/angular-sanitize.js";
(function(window,angular){'use strict';
var $sanitizeMinErr=angular.$$minErr('$sanitize');
function $SanitizeProvider(){
var svgEnabled=false;
this.$get=['$$sanitizeUri',function($$sanitizeUri){
if(svgEnabled){
angular.extend(validElements,svgElements);
}
return function(html){
var buf=[];
htmlParser(html,htmlSanitizeWriter(buf,function(uri,isImage){
return!/^unsafe:/.test($$sanitizeUri(uri,isImage));
}));
return buf.join('');
};
}];
this.enableSvg=function(enableSvg){
if(angular.isDefined(enableSvg)){
svgEnabled=enableSvg;
return this;
}else{
return svgEnabled;
}
};
}
function sanitizeText(chars){
var buf=[];
var writer=htmlSanitizeWriter(buf,angular.noop);
writer.chars(chars);
return buf.join('');
}
var SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;
var voidElements=toMap("area,br,col,hr,img,wbr");
var optionalEndTagBlockElements=toMap("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
optionalEndTagInlineElements=toMap("rp,rt"),
optionalEndTagElements=angular.extend({},
optionalEndTagInlineElements,
optionalEndTagBlockElements);
var blockElements=angular.extend({},optionalEndTagBlockElements,toMap("address,article,"+
"aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,"+
"h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul"));
var inlineElements=angular.extend({},optionalEndTagInlineElements,toMap("a,abbr,acronym,b,"+
"bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,"+
"samp,small,span,strike,strong,sub,sup,time,tt,u,var"));
var svgElements=toMap("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,"+
"hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,"+
"radialGradient,rect,stop,svg,switch,text,title,tspan");
var blockedElements=toMap("script,style");
var validElements=angular.extend({},
voidElements,
blockElements,
inlineElements,
optionalEndTagElements);
var uriAttrs=toMap("background,cite,href,longdesc,src,xlink:href");
var htmlAttrs=toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,'+
'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,'+
'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,'+
'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,'+
'valign,value,vspace,width');
var svgAttrs=toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,'+
'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,'+
'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,'+
'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,'+
'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,'+
'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,'+
'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,'+
'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,'+
'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,'+
'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,'+
'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,'+
'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,'+
'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,'+
'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,'+
'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan',true);
var validAttrs=angular.extend({},
uriAttrs,
svgAttrs,
htmlAttrs);
function toMap(str,lowercaseKeys){
var obj={},items=str.split(','),i;
for(i=0;i<items.length;i++){
obj[lowercaseKeys?angular.lowercase(items[i]):items[i]]=true;
}
return obj;
}
var inertBodyElement;
(function(window){
var doc;
if(window.document&&window.document.implementation){
doc=window.document.implementation.createHTMLDocument("inert");
}else{
throw $sanitizeMinErr('noinert',"Can't create an inert html document");
}
var docElement=doc.documentElement||doc.getDocumentElement();
var bodyElements=docElement.getElementsByTagName('body');
if(bodyElements.length===1){
inertBodyElement=bodyElements[0];
}else{
var html=doc.createElement('html');
inertBodyElement=doc.createElement('body');
html.appendChild(inertBodyElement);
doc.appendChild(html);
}
})(window);
function htmlParser(html,handler){
if(html===null||html===undefined){
html='';
}else if(typeof html!=='string'){
html=''+html;
}
inertBodyElement.innerHTML=html;
var mXSSAttempts=5;
do{
if(mXSSAttempts===0){
throw $sanitizeMinErr('uinput',"Failed to sanitize html because the input is unstable");
}
mXSSAttempts--;
if(window.document.documentMode){
stripCustomNsAttrs(inertBodyElement);
}
html=inertBodyElement.innerHTML;
inertBodyElement.innerHTML=html;
}while(html!==inertBodyElement.innerHTML);
var node=inertBodyElement.firstChild;
while(node){
switch(node.nodeType){
case 1:
handler.start(node.nodeName.toLowerCase(),attrToMap(node.attributes));
break;
case 3:
handler.chars(node.textContent);
break;
}
var nextNode;
if(!(nextNode=node.firstChild)){
if(node.nodeType==1){
handler.end(node.nodeName.toLowerCase());
}
nextNode=node.nextSibling;
if(!nextNode){
while(nextNode==null){
node=node.parentNode;
if(node===inertBodyElement)break;
nextNode=node.nextSibling;
if(node.nodeType==1){
handler.end(node.nodeName.toLowerCase());
}
}
}
}
node=nextNode;
}
while(node=inertBodyElement.firstChild){
inertBodyElement.removeChild(node);
}
}
function attrToMap(attrs){
var map={};
for(var i=0,ii=attrs.length;i<ii;i++){
var attr=attrs[i];
map[attr.name]=attr.value;
}
return map;
}
function encodeEntities(value){
return value.
replace(/&/g,'&amp;').
replace(SURROGATE_PAIR_REGEXP,function(value){
var hi=value.charCodeAt(0);
var low=value.charCodeAt(1);
return'&#'+(((hi-0xD800)*0x400)+(low-0xDC00)+0x10000)+';';
}).
replace(NON_ALPHANUMERIC_REGEXP,function(value){
return'&#'+value.charCodeAt(0)+';';
}).
replace(/</g,'&lt;').
replace(/>/g,'&gt;');
}
function htmlSanitizeWriter(buf,uriValidator){
var ignoreCurrentElement=false;
var out=angular.bind(buf,buf.push);
return{
start:function(tag,attrs){
tag=angular.lowercase(tag);
if(!ignoreCurrentElement&&blockedElements[tag]){
ignoreCurrentElement=tag;
}
if(!ignoreCurrentElement&&validElements[tag]===true){
out('<');
out(tag);
angular.forEach(attrs,function(value,key){
var lkey=angular.lowercase(key);
var isImage=(tag==='img'&&lkey==='src')||(lkey==='background');
if(validAttrs[lkey]===true&&
(uriAttrs[lkey]!==true||uriValidator(value,isImage))){
out(' ');
out(key);
out('="');
out(encodeEntities(value));
out('"');
}
});
out('>');
}
},
end:function(tag){
tag=angular.lowercase(tag);
if(!ignoreCurrentElement&&validElements[tag]===true&&voidElements[tag]!==true){
out('</');
out(tag);
out('>');
}
if(tag==ignoreCurrentElement){
ignoreCurrentElement=false;
}
},
chars:function(chars){
if(!ignoreCurrentElement){
out(encodeEntities(chars));
}
}
};
}
function stripCustomNsAttrs(node){
if(node.nodeType===window.Node.ELEMENT_NODE){
var attrs=node.attributes;
for(var i=0,l=attrs.length;i<l;i++){
var attrNode=attrs[i];
var attrName=attrNode.name.toLowerCase();
if(attrName==='xmlns:ns1'||attrName.indexOf('ns1:')===0){
node.removeAttributeNode(attrNode);
i--;
l--;
}
}
}
var nextNode=node.firstChild;
if(nextNode){
stripCustomNsAttrs(nextNode);
}
nextNode=node.nextSibling;
if(nextNode){
stripCustomNsAttrs(nextNode);
}
}
angular.module('ngSanitize',[]).provider('$sanitize',$SanitizeProvider);
angular.module('ngSanitize').filter('linky',['$sanitize',function($sanitize){
var LINKY_URL_REGEXP=
/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
MAILTO_REGEXP=/^mailto:/i;
var linkyMinErr=angular.$$minErr('linky');
var isString=angular.isString;
return function(text,target,attributes){
if(text==null||text==='')return text;
if(!isString(text))throw linkyMinErr('notstring','Expected string but received: {0}',text);
var match;
var raw=text;
var html=[];
var url;
var i;
while((match=raw.match(LINKY_URL_REGEXP))){
url=match[0];
if(!match[2]&&!match[4]){
url=(match[3]?'http://':'mailto:')+url;
}
i=match.index;
addText(raw.substr(0,i));
addLink(url,match[0].replace(MAILTO_REGEXP,''));
raw=raw.substring(i+match[0].length);
}
addText(raw);
return $sanitize(html.join(''));
function addText(text){
if(!text){
return;
}
html.push(sanitizeText(text));
}
function addLink(url,text){
var key;
html.push('<a ');
if(angular.isFunction(attributes)){
attributes=attributes(url);
}
if(angular.isObject(attributes)){
for(key in attributes){
html.push(key+'="'+attributes[key]+'" ');
}
}else{
attributes={};
}
if(angular.isDefined(target)&&!('target'in attributes)){
html.push('target="',
target,
'" ');
}
html.push('href="',
url.replace(/"/g,'&quot;'),
'">');
addText(text);
html.push('</a>');
}
};
}]);
})(window,window.angular);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/angular1/vendor/angular-route/angular-route.js";
(function(window,angular){'use strict';
var ngRouteModule=angular.module('ngRoute',['ng']).
provider('$route',$RouteProvider),
$routeMinErr=angular.$$minErr('ngRoute');
function $RouteProvider(){
function inherit(parent,extra){
return angular.extend(Object.create(parent),extra);
}
var routes={};
this.when=function(path,route){
var routeCopy=angular.copy(route);
if(angular.isUndefined(routeCopy.reloadOnSearch)){
routeCopy.reloadOnSearch=true;
}
if(angular.isUndefined(routeCopy.caseInsensitiveMatch)){
routeCopy.caseInsensitiveMatch=this.caseInsensitiveMatch;
}
routes[path]=angular.extend(
routeCopy,
path&&pathRegExp(path,routeCopy)
);
if(path){
var redirectPath=(path[path.length-1]=='/')
?path.substr(0,path.length-1)
:path+'/';
routes[redirectPath]=angular.extend(
{redirectTo:path},
pathRegExp(redirectPath,routeCopy)
);
}
return this;
};
this.caseInsensitiveMatch=false;
function pathRegExp(path,opts){
var insensitive=opts.caseInsensitiveMatch,
ret={
originalPath:path,
regexp:path
},
keys=ret.keys=[];
path=path
.replace(/([().])/g,'\\$1')
.replace(/(\/)?:(\w+)(\*\?|[\?\*])?/g,function(_,slash,key,option){
var optional=(option==='?'||option==='*?')?'?':null;
var star=(option==='*'||option==='*?')?'*':null;
keys.push({name:key,optional:!!optional});
slash=slash||'';
return''
+(optional?'':slash)
+'(?:'
+(optional?slash:'')
+(star&&'(.+?)'||'([^/]+)')
+(optional||'')
+')'
+(optional||'');
})
.replace(/([\/$\*])/g,'\\$1');
ret.regexp=new RegExp('^'+path+'$',insensitive?'i':'');
return ret;
}
this.otherwise=function(params){
if(typeof params==='string'){
params={redirectTo:params};
}
this.when(null,params);
return this;
};
this.$get=['$rootScope',
'$location',
'$routeParams',
'$q',
'$injector',
'$templateRequest',
'$sce',
function($rootScope,$location,$routeParams,$q,$injector,$templateRequest,$sce){
var forceReload=false,
preparedRoute,
preparedRouteIsUpdateOnly,
$route={
routes:routes,
reload:function(){
forceReload=true;
var fakeLocationEvent={
defaultPrevented:false,
preventDefault:function fakePreventDefault(){
this.defaultPrevented=true;
forceReload=false;
}
};
$rootScope.$evalAsync(function(){
prepareRoute(fakeLocationEvent);
if(!fakeLocationEvent.defaultPrevented)commitRoute();
});
},
updateParams:function(newParams){
if(this.current&&this.current.$$route){
newParams=angular.extend({},this.current.params,newParams);
$location.path(interpolate(this.current.$$route.originalPath,newParams));
$location.search(newParams);
}else{
throw $routeMinErr('norout','Tried updating route when with no current route');
}
}
};
$rootScope.$on('$locationChangeStart',prepareRoute);
$rootScope.$on('$locationChangeSuccess',commitRoute);
return $route;
function switchRouteMatcher(on,route){
var keys=route.keys,
params={};
if(!route.regexp)return null;
var m=route.regexp.exec(on);
if(!m)return null;
for(var i=1,len=m.length;i<len;++i){
var key=keys[i-1];
var val=m[i];
if(key&&val){
params[key.name]=val;
}
}
return params;
}
function prepareRoute($locationEvent){
var lastRoute=$route.current;
preparedRoute=parseRoute();
preparedRouteIsUpdateOnly=preparedRoute&&lastRoute&&preparedRoute.$$route===lastRoute.$$route
&&angular.equals(preparedRoute.pathParams,lastRoute.pathParams)
&&!preparedRoute.reloadOnSearch&&!forceReload;
if(!preparedRouteIsUpdateOnly&&(lastRoute||preparedRoute)){
if($rootScope.$broadcast('$routeChangeStart',preparedRoute,lastRoute).defaultPrevented){
if($locationEvent){
$locationEvent.preventDefault();
}
}
}
}
function commitRoute(){
var lastRoute=$route.current;
var nextRoute=preparedRoute;
if(preparedRouteIsUpdateOnly){
lastRoute.params=nextRoute.params;
angular.copy(lastRoute.params,$routeParams);
$rootScope.$broadcast('$routeUpdate',lastRoute);
}else if(nextRoute||lastRoute){
forceReload=false;
$route.current=nextRoute;
if(nextRoute){
if(nextRoute.redirectTo){
if(angular.isString(nextRoute.redirectTo)){
$location.path(interpolate(nextRoute.redirectTo,nextRoute.params)).search(nextRoute.params)
.replace();
}else{
$location.url(nextRoute.redirectTo(nextRoute.pathParams,$location.path(),$location.search()))
.replace();
}
}
}
$q.when(nextRoute).
then(function(){
if(nextRoute){
var locals=angular.extend({},nextRoute.resolve),
template,templateUrl;
angular.forEach(locals,function(value,key){
locals[key]=angular.isString(value)?
$injector.get(value):$injector.invoke(value,null,null,key);
});
if(angular.isDefined(template=nextRoute.template)){
if(angular.isFunction(template)){
template=template(nextRoute.params);
}
}else if(angular.isDefined(templateUrl=nextRoute.templateUrl)){
if(angular.isFunction(templateUrl)){
templateUrl=templateUrl(nextRoute.params);
}
if(angular.isDefined(templateUrl)){
nextRoute.loadedTemplateUrl=$sce.valueOf(templateUrl);
template=$templateRequest(templateUrl);
}
}
if(angular.isDefined(template)){
locals['$template']=template;
}
return $q.all(locals);
}
}).
then(function(locals){
if(nextRoute==$route.current){
if(nextRoute){
nextRoute.locals=locals;
angular.copy(nextRoute.params,$routeParams);
}
$rootScope.$broadcast('$routeChangeSuccess',nextRoute,lastRoute);
}
},function(error){
if(nextRoute==$route.current){
$rootScope.$broadcast('$routeChangeError',nextRoute,lastRoute,error);
}
});
}
}
function parseRoute(){
var params,match;
angular.forEach(routes,function(route,path){
if(!match&&(params=switchRouteMatcher($location.path(),route))){
match=inherit(route,{
params:angular.extend({},$location.search(),params),
pathParams:params});
match.$$route=route;
}
});
return match||routes[null]&&inherit(routes[null],{params:{},pathParams:{}});
}
function interpolate(string,params){
var result=[];
angular.forEach((string||'').split(':'),function(segment,i){
if(i===0){
result.push(segment);
}else{
var segmentMatch=segment.match(/(\w+)(?:[?*])?(.*)/);
var key=segmentMatch[1];
result.push(params[key]);
result.push(segmentMatch[2]||'');
delete params[key];
}
});
return result.join('');
}
}];
}
ngRouteModule.provider('$routeParams',$RouteParamsProvider);
function $RouteParamsProvider(){
this.$get=function(){return{};};
}
ngRouteModule.directive('ngView',ngViewFactory);
ngRouteModule.directive('ngView',ngViewFillContentFactory);
ngViewFactory.$inject=['$route','$anchorScroll','$animate'];
function ngViewFactory($route,$anchorScroll,$animate){
return{
restrict:'ECA',
terminal:true,
priority:400,
transclude:'element',
link:function(scope,$element,attr,ctrl,$transclude){
var currentScope,
currentElement,
previousLeaveAnimation,
autoScrollExp=attr.autoscroll,
onloadExp=attr.onload||'';
scope.$on('$routeChangeSuccess',update);
update();
function cleanupLastView(){
if(previousLeaveAnimation){
$animate.cancel(previousLeaveAnimation);
previousLeaveAnimation=null;
}
if(currentScope){
currentScope.$destroy();
currentScope=null;
}
if(currentElement){
previousLeaveAnimation=$animate.leave(currentElement);
previousLeaveAnimation.then(function(){
previousLeaveAnimation=null;
});
currentElement=null;
}
}
function update(){
var locals=$route.current&&$route.current.locals,
template=locals&&locals.$template;
if(angular.isDefined(template)){
var newScope=scope.$new();
var current=$route.current;
var clone=$transclude(newScope,function(clone){
$animate.enter(clone,null,currentElement||$element).then(function onNgViewEnter(){
if(angular.isDefined(autoScrollExp)
&&(!autoScrollExp||scope.$eval(autoScrollExp))){
$anchorScroll();
}
});
cleanupLastView();
});
currentElement=clone;
currentScope=current.scope=newScope;
currentScope.$emit('$viewContentLoaded');
currentScope.$eval(onloadExp);
}else{
cleanupLastView();
}
}
}
};
}
ngViewFillContentFactory.$inject=['$compile','$controller','$route'];
function ngViewFillContentFactory($compile,$controller,$route){
return{
restrict:'ECA',
priority:-400,
link:function(scope,$element){
var current=$route.current,
locals=current.locals;
$element.html(locals.$template);
var link=$compile($element.contents());
if(current.controller){
locals.$scope=scope;
var controller=$controller(current.controller,locals);
if(current.controllerAs){
scope[current.controllerAs]=controller;
}
$element.data('$ngControllerController',controller);
$element.children().data('$ngControllerController',controller);
}
scope[current.resolveAs||'$resolve']=locals;
link(scope);
}
};
}
})(window,window.angular);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/angular1/vendor/angular-translate/angular-translate.js";
(function(root,factory){
if(typeof define==='function'&&define.amd){
define([],function(){
return(factory());
});
}else if(typeof exports==='object'){
module.exports=factory();
}else{
factory();
}
}(this,function(){
runTranslate.$inject=['$translate'];
$translate.$inject=['$STORAGE_KEY','$windowProvider','$translateSanitizationProvider','pascalprechtTranslateOverrider'];
$translateDefaultInterpolation.$inject=['$interpolate','$translateSanitization'];
translateDirective.$inject=['$translate','$q','$interpolate','$compile','$parse','$rootScope'];
translateCloakDirective.$inject=['$translate','$rootScope'];
translateFilterFactory.$inject=['$parse','$translate'];
$translationCache.$inject=['$cacheFactory'];
angular.module('pascalprecht.translate',['ng'])
.run(runTranslate);
function runTranslate($translate){
'use strict';
var key=$translate.storageKey(),
storage=$translate.storage();
var fallbackFromIncorrectStorageValue=function(){
var preferred=$translate.preferredLanguage();
if(angular.isString(preferred)){
$translate.use(preferred);
}else{
storage.put(key,$translate.use());
}
};
fallbackFromIncorrectStorageValue.displayName='fallbackFromIncorrectStorageValue';
if(storage){
if(!storage.get(key)){
fallbackFromIncorrectStorageValue();
}else{
$translate.use(storage.get(key))['catch'](fallbackFromIncorrectStorageValue);
}
}else if(angular.isString($translate.preferredLanguage())){
$translate.use($translate.preferredLanguage());
}
}
runTranslate.displayName='runTranslate';
angular.module('pascalprecht.translate').provider('$translateSanitization',$translateSanitizationProvider);
function $translateSanitizationProvider(){
'use strict';
var $sanitize,
currentStrategy=null,
hasConfiguredStrategy=false,
hasShownNoStrategyConfiguredWarning=false,
strategies;
strategies={
sanitize:function(value,mode){
if(mode==='text'){
value=htmlSanitizeValue(value);
}
return value;
},
escape:function(value,mode){
if(mode==='text'){
value=htmlEscapeValue(value);
}
return value;
},
sanitizeParameters:function(value,mode){
if(mode==='params'){
value=mapInterpolationParameters(value,htmlSanitizeValue);
}
return value;
},
escapeParameters:function(value,mode){
if(mode==='params'){
value=mapInterpolationParameters(value,htmlEscapeValue);
}
return value;
}
};
strategies.escaped=strategies.escapeParameters;
this.addStrategy=function(strategyName,strategyFunction){
strategies[strategyName]=strategyFunction;
return this;
};
this.removeStrategy=function(strategyName){
delete strategies[strategyName];
return this;
};
this.useStrategy=function(strategy){
hasConfiguredStrategy=true;
currentStrategy=strategy;
return this;
};
this.$get=['$injector','$log',function($injector,$log){
var cachedStrategyMap={};
var applyStrategies=function(value,mode,selectedStrategies){
angular.forEach(selectedStrategies,function(selectedStrategy){
if(angular.isFunction(selectedStrategy)){
value=selectedStrategy(value,mode);
}else if(angular.isFunction(strategies[selectedStrategy])){
value=strategies[selectedStrategy](value,mode);
}else if(angular.isString(strategies[selectedStrategy])){
if(!cachedStrategyMap[strategies[selectedStrategy]]){
try{
cachedStrategyMap[strategies[selectedStrategy]]=$injector.get(strategies[selectedStrategy]);
}catch(e){
cachedStrategyMap[strategies[selectedStrategy]]=function(){};
throw new Error('pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: \''+selectedStrategy+'\'');
}
}
value=cachedStrategyMap[strategies[selectedStrategy]](value,mode);
}else{
throw new Error('pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: \''+selectedStrategy+'\'');
}
});
return value;
};
var showNoStrategyConfiguredWarning=function(){
if(!hasConfiguredStrategy&&!hasShownNoStrategyConfiguredWarning){
$log.warn('pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details.');
hasShownNoStrategyConfiguredWarning=true;
}
};
if($injector.has('$sanitize')){
$sanitize=$injector.get('$sanitize');
}
return{
useStrategy:(function(self){
return function(strategy){
self.useStrategy(strategy);
};
})(this),
sanitize:function(value,mode,strategy){
if(!currentStrategy){
showNoStrategyConfiguredWarning();
}
if(arguments.length<3){
strategy=currentStrategy;
}
if(!strategy){
return value;
}
var selectedStrategies=angular.isArray(strategy)?strategy:[strategy];
return applyStrategies(value,mode,selectedStrategies);
}
};
}];
var htmlEscapeValue=function(value){
var element=angular.element('<div></div>');
element.text(value);
return element.html();
};
var htmlSanitizeValue=function(value){
if(!$sanitize){
throw new Error('pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as \'escape\'.');
}
return $sanitize(value);
};
var mapInterpolationParameters=function(value,iteratee,stack){
if(angular.isObject(value)){
var result=angular.isArray(value)?[]:{};
if(!stack){
stack=[];
}else{
if(stack.indexOf(value)>-1){
throw new Error('pascalprecht.translate.$translateSanitization: Error cannot interpolate parameter due recursive object');
}
}
stack.push(value);
angular.forEach(value,function(propertyValue,propertyKey){
result[propertyKey]=mapInterpolationParameters(propertyValue,iteratee,stack);
});
stack.splice(-1,1);
return result;
}else if(angular.isNumber(value)){
return value;
}else{
return iteratee(value);
}
};
}
angular.module('pascalprecht.translate')
.constant('pascalprechtTranslateOverrider',{})
.provider('$translate',$translate);
function $translate($STORAGE_KEY,$windowProvider,$translateSanitizationProvider,pascalprechtTranslateOverrider){
'use strict';
var $translationTable={},
$preferredLanguage,
$availableLanguageKeys=[],
$languageKeyAliases,
$fallbackLanguage,
$fallbackWasString,
$uses,
$nextLang,
$storageFactory,
$storageKey=$STORAGE_KEY,
$storagePrefix,
$missingTranslationHandlerFactory,
$interpolationFactory,
$interpolatorFactories=[],
$loaderFactory,
$cloakClassName='translate-cloak',
$loaderOptions,
$notFoundIndicatorLeft,
$notFoundIndicatorRight,
$postCompilingEnabled=false,
$forceAsyncReloadEnabled=false,
$nestedObjectDelimeter='.',
$isReady=false,
loaderCache,
directivePriority=0,
statefulFilter=true,
postProcessFn,
uniformLanguageTagResolver='default',
languageTagResolver={
'default':function(tag){
return(tag||'').split('-').join('_');
},
java:function(tag){
var temp=(tag||'').split('-').join('_');
var parts=temp.split('_');
return parts.length>1?(parts[0].toLowerCase()+'_'+parts[1].toUpperCase()):temp;
},
bcp47:function(tag){
var temp=(tag||'').split('_').join('-');
var parts=temp.split('-');
return parts.length>1?(parts[0].toLowerCase()+'-'+parts[1].toUpperCase()):temp;
},
'iso639-1':function(tag){
var temp=(tag||'').split('_').join('-');
var parts=temp.split('-');
return parts[0].toLowerCase();
}
};
var version='2.11.0';
var getFirstBrowserLanguage=function(){
if(angular.isFunction(pascalprechtTranslateOverrider.getLocale)){
return pascalprechtTranslateOverrider.getLocale();
}
var nav=$windowProvider.$get().navigator,
browserLanguagePropertyKeys=['language','browserLanguage','systemLanguage','userLanguage'],
i,
language;
if(angular.isArray(nav.languages)){
for(i=0;i<nav.languages.length;i++){
language=nav.languages[i];
if(language&&language.length){
return language;
}
}
}
for(i=0;i<browserLanguagePropertyKeys.length;i++){
language=nav[browserLanguagePropertyKeys[i]];
if(language&&language.length){
return language;
}
}
return null;
};
getFirstBrowserLanguage.displayName='angular-translate/service: getFirstBrowserLanguage';
var getLocale=function(){
var locale=getFirstBrowserLanguage()||'';
if(languageTagResolver[uniformLanguageTagResolver]){
locale=languageTagResolver[uniformLanguageTagResolver](locale);
}
return locale;
};
getLocale.displayName='angular-translate/service: getLocale';
var indexOf=function(array,searchElement){
for(var i=0,len=array.length;i<len;i++){
if(array[i]===searchElement){
return i;
}
}
return-1;
};
var trim=function(){
return this.toString().replace(/^\s+|\s+$/g,'');
};
var negotiateLocale=function(preferred){
if(!preferred){
return;
}
var avail=[],
locale=angular.lowercase(preferred),
i=0,
n=$availableLanguageKeys.length;
for(;i<n;i++){
avail.push(angular.lowercase($availableLanguageKeys[i]));
}
if(indexOf(avail,locale)>-1){
return preferred;
}
if($languageKeyAliases){
var alias;
for(var langKeyAlias in $languageKeyAliases){
if($languageKeyAliases.hasOwnProperty(langKeyAlias)){
var hasWildcardKey=false;
var hasExactKey=Object.prototype.hasOwnProperty.call($languageKeyAliases,langKeyAlias)&&
angular.lowercase(langKeyAlias)===angular.lowercase(preferred);
if(langKeyAlias.slice(-1)==='*'){
hasWildcardKey=langKeyAlias.slice(0,-1)===preferred.slice(0,langKeyAlias.length-1);
}
if(hasExactKey||hasWildcardKey){
alias=$languageKeyAliases[langKeyAlias];
if(indexOf(avail,angular.lowercase(alias))>-1){
return alias;
}
}
}
}
}
var parts=preferred.split('_');
if(parts.length>1&&indexOf(avail,angular.lowercase(parts[0]))>-1){
return parts[0];
}
return;
};
var translations=function(langKey,translationTable){
if(!langKey&&!translationTable){
return $translationTable;
}
if(langKey&&!translationTable){
if(angular.isString(langKey)){
return $translationTable[langKey];
}
}else{
if(!angular.isObject($translationTable[langKey])){
$translationTable[langKey]={};
}
angular.extend($translationTable[langKey],flatObject(translationTable));
}
return this;
};
this.translations=translations;
this.cloakClassName=function(name){
if(!name){
return $cloakClassName;
}
$cloakClassName=name;
return this;
};
this.nestedObjectDelimeter=function(delimiter){
if(!delimiter){
return $nestedObjectDelimeter;
}
$nestedObjectDelimeter=delimiter;
return this;
};
var flatObject=function(data,path,result,prevKey){
var key,keyWithPath,keyWithShortPath,val;
if(!path){
path=[];
}
if(!result){
result={};
}
for(key in data){
if(!Object.prototype.hasOwnProperty.call(data,key)){
continue;
}
val=data[key];
if(angular.isObject(val)){
flatObject(val,path.concat(key),result,key);
}else{
keyWithPath=path.length?(''+path.join($nestedObjectDelimeter)+$nestedObjectDelimeter+key):key;
if(path.length&&key===prevKey){
keyWithShortPath=''+path.join($nestedObjectDelimeter);
result[keyWithShortPath]='@:'+keyWithPath;
}
result[keyWithPath]=val;
}
}
return result;
};
flatObject.displayName='flatObject';
this.addInterpolation=function(factory){
$interpolatorFactories.push(factory);
return this;
};
this.useMessageFormatInterpolation=function(){
return this.useInterpolation('$translateMessageFormatInterpolation');
};
this.useInterpolation=function(factory){
$interpolationFactory=factory;
return this;
};
this.useSanitizeValueStrategy=function(value){
$translateSanitizationProvider.useStrategy(value);
return this;
};
this.preferredLanguage=function(langKey){
if(langKey){
setupPreferredLanguage(langKey);
return this;
}
return $preferredLanguage;
};
var setupPreferredLanguage=function(langKey){
if(langKey){
$preferredLanguage=langKey;
}
return $preferredLanguage;
};
this.translationNotFoundIndicator=function(indicator){
this.translationNotFoundIndicatorLeft(indicator);
this.translationNotFoundIndicatorRight(indicator);
return this;
};
this.translationNotFoundIndicatorLeft=function(indicator){
if(!indicator){
return $notFoundIndicatorLeft;
}
$notFoundIndicatorLeft=indicator;
return this;
};
this.translationNotFoundIndicatorRight=function(indicator){
if(!indicator){
return $notFoundIndicatorRight;
}
$notFoundIndicatorRight=indicator;
return this;
};
this.fallbackLanguage=function(langKey){
fallbackStack(langKey);
return this;
};
var fallbackStack=function(langKey){
if(langKey){
if(angular.isString(langKey)){
$fallbackWasString=true;
$fallbackLanguage=[langKey];
}else if(angular.isArray(langKey)){
$fallbackWasString=false;
$fallbackLanguage=langKey;
}
if(angular.isString($preferredLanguage)&&indexOf($fallbackLanguage,$preferredLanguage)<0){
$fallbackLanguage.push($preferredLanguage);
}
return this;
}else{
if($fallbackWasString){
return $fallbackLanguage[0];
}else{
return $fallbackLanguage;
}
}
};
this.use=function(langKey){
if(langKey){
if(!$translationTable[langKey]&&(!$loaderFactory)){
throw new Error('$translateProvider couldn\'t find translationTable for langKey: \''+langKey+'\'');
}
$uses=langKey;
return this;
}
return $uses;
};
this.resolveClientLocale=function(){
return getLocale();
};
var storageKey=function(key){
if(!key){
if($storagePrefix){
return $storagePrefix+$storageKey;
}
return $storageKey;
}
$storageKey=key;
return this;
};
this.storageKey=storageKey;
this.useUrlLoader=function(url,options){
return this.useLoader('$translateUrlLoader',angular.extend({url:url},options));
};
this.useStaticFilesLoader=function(options){
return this.useLoader('$translateStaticFilesLoader',options);
};
this.useLoader=function(loaderFactory,options){
$loaderFactory=loaderFactory;
$loaderOptions=options||{};
return this;
};
this.useLocalStorage=function(){
return this.useStorage('$translateLocalStorage');
};
this.useCookieStorage=function(){
return this.useStorage('$translateCookieStorage');
};
this.useStorage=function(storageFactory){
$storageFactory=storageFactory;
return this;
};
this.storagePrefix=function(prefix){
if(!prefix){
return prefix;
}
$storagePrefix=prefix;
return this;
};
this.useMissingTranslationHandlerLog=function(){
return this.useMissingTranslationHandler('$translateMissingTranslationHandlerLog');
};
this.useMissingTranslationHandler=function(factory){
$missingTranslationHandlerFactory=factory;
return this;
};
this.usePostCompiling=function(value){
$postCompilingEnabled=!(!value);
return this;
};
this.forceAsyncReload=function(value){
$forceAsyncReloadEnabled=!(!value);
return this;
};
this.uniformLanguageTag=function(options){
if(!options){
options={};
}else if(angular.isString(options)){
options={
standard:options
};
}
uniformLanguageTagResolver=options.standard;
return this;
};
this.determinePreferredLanguage=function(fn){
var locale=(fn&&angular.isFunction(fn))?fn():getLocale();
if(!$availableLanguageKeys.length){
$preferredLanguage=locale;
}else{
$preferredLanguage=negotiateLocale(locale)||locale;
}
return this;
};
this.registerAvailableLanguageKeys=function(languageKeys,aliases){
if(languageKeys){
$availableLanguageKeys=languageKeys;
if(aliases){
$languageKeyAliases=aliases;
}
return this;
}
return $availableLanguageKeys;
};
this.useLoaderCache=function(cache){
if(cache===false){
loaderCache=undefined;
}else if(cache===true){
loaderCache=true;
}else if(typeof(cache)==='undefined'){
loaderCache='$translationCache';
}else if(cache){
loaderCache=cache;
}
return this;
};
this.directivePriority=function(priority){
if(priority===undefined){
return directivePriority;
}else{
directivePriority=priority;
return this;
}
};
this.statefulFilter=function(state){
if(state===undefined){
return statefulFilter;
}else{
statefulFilter=state;
return this;
}
};
this.postProcess=function(fn){
if(fn){
postProcessFn=fn;
}else{
postProcessFn=undefined;
}
return this;
};
this.$get=[
'$log',
'$injector',
'$rootScope',
'$q',
function($log,$injector,$rootScope,$q){
var Storage,
defaultInterpolator=$injector.get($interpolationFactory||'$translateDefaultInterpolation'),
pendingLoader=false,
interpolatorHashMap={},
langPromises={},
fallbackIndex,
startFallbackIteration;
var $translate=function(translationId,interpolateParams,interpolationId,defaultTranslationText,forceLanguage){
if(!$uses&&$preferredLanguage){
$uses=$preferredLanguage;
}
var uses=(forceLanguage&&forceLanguage!==$uses)?
(negotiateLocale(forceLanguage)||forceLanguage):$uses;
if(forceLanguage){
loadTranslationsIfMissing(forceLanguage);
}
if(angular.isArray(translationId)){
var translateAll=function(translationIds){
var results={};
var promises=[];
var translate=function(translationId){
var deferred=$q.defer();
var regardless=function(value){
results[translationId]=value;
deferred.resolve([translationId,value]);
};
$translate(translationId,interpolateParams,interpolationId,defaultTranslationText,forceLanguage).then(regardless,regardless);
return deferred.promise;
};
for(var i=0,c=translationIds.length;i<c;i++){
promises.push(translate(translationIds[i]));
}
return $q.all(promises).then(function(){
return results;
});
};
return translateAll(translationId);
}
var deferred=$q.defer();
if(translationId){
translationId=trim.apply(translationId);
}
var promiseToWaitFor=(function(){
var promise=$preferredLanguage?
langPromises[$preferredLanguage]:
langPromises[uses];
fallbackIndex=0;
if($storageFactory&&!promise){
var langKey=Storage.get($storageKey);
promise=langPromises[langKey];
if($fallbackLanguage&&$fallbackLanguage.length){
var index=indexOf($fallbackLanguage,langKey);
fallbackIndex=(index===0)?1:0;
if(indexOf($fallbackLanguage,$preferredLanguage)<0){
$fallbackLanguage.push($preferredLanguage);
}
}
}
return promise;
}());
if(!promiseToWaitFor){
determineTranslation(translationId,interpolateParams,interpolationId,defaultTranslationText,uses).then(deferred.resolve,deferred.reject);
}else{
var promiseResolved=function(){
if(!forceLanguage){
uses=$uses;
}
determineTranslation(translationId,interpolateParams,interpolationId,defaultTranslationText,uses).then(deferred.resolve,deferred.reject);
};
promiseResolved.displayName='promiseResolved';
promiseToWaitFor['finally'](promiseResolved);
}
return deferred.promise;
};
var applyNotFoundIndicators=function(translationId){
if($notFoundIndicatorLeft){
translationId=[$notFoundIndicatorLeft,translationId].join(' ');
}
if($notFoundIndicatorRight){
translationId=[translationId,$notFoundIndicatorRight].join(' ');
}
return translationId;
};
var useLanguage=function(key){
$uses=key;
if($storageFactory){
Storage.put($translate.storageKey(),$uses);
}
$rootScope.$emit('$translateChangeSuccess',{language:key});
defaultInterpolator.setLocale($uses);
var eachInterpolator=function(interpolator,id){
interpolatorHashMap[id].setLocale($uses);
};
eachInterpolator.displayName='eachInterpolatorLocaleSetter';
angular.forEach(interpolatorHashMap,eachInterpolator);
$rootScope.$emit('$translateChangeEnd',{language:key});
};
var loadAsync=function(key){
if(!key){
throw'No language key specified for loading.';
}
var deferred=$q.defer();
$rootScope.$emit('$translateLoadingStart',{language:key});
pendingLoader=true;
var cache=loaderCache;
if(typeof(cache)==='string'){
cache=$injector.get(cache);
}
var loaderOptions=angular.extend({},$loaderOptions,{
key:key,
$http:angular.extend({},{
cache:cache
},$loaderOptions.$http)
});
var onLoaderSuccess=function(data){
var translationTable={};
$rootScope.$emit('$translateLoadingSuccess',{language:key});
if(angular.isArray(data)){
angular.forEach(data,function(table){
angular.extend(translationTable,flatObject(table));
});
}else{
angular.extend(translationTable,flatObject(data));
}
pendingLoader=false;
deferred.resolve({
key:key,
table:translationTable
});
$rootScope.$emit('$translateLoadingEnd',{language:key});
};
onLoaderSuccess.displayName='onLoaderSuccess';
var onLoaderError=function(key){
$rootScope.$emit('$translateLoadingError',{language:key});
deferred.reject(key);
$rootScope.$emit('$translateLoadingEnd',{language:key});
};
onLoaderError.displayName='onLoaderError';
$injector.get($loaderFactory)(loaderOptions)
.then(onLoaderSuccess,onLoaderError);
return deferred.promise;
};
if($storageFactory){
Storage=$injector.get($storageFactory);
if(!Storage.get||!Storage.put){
throw new Error('Couldn\'t use storage \''+$storageFactory+'\', missing get() or put() method!');
}
}
if($interpolatorFactories.length){
var eachInterpolationFactory=function(interpolatorFactory){
var interpolator=$injector.get(interpolatorFactory);
interpolator.setLocale($preferredLanguage||$uses);
interpolatorHashMap[interpolator.getInterpolationIdentifier()]=interpolator;
};
eachInterpolationFactory.displayName='interpolationFactoryAdder';
angular.forEach($interpolatorFactories,eachInterpolationFactory);
}
var getTranslationTable=function(langKey){
var deferred=$q.defer();
if(Object.prototype.hasOwnProperty.call($translationTable,langKey)){
deferred.resolve($translationTable[langKey]);
}else if(langPromises[langKey]){
var onResolve=function(data){
translations(data.key,data.table);
deferred.resolve(data.table);
};
onResolve.displayName='translationTableResolver';
langPromises[langKey].then(onResolve,deferred.reject);
}else{
deferred.reject();
}
return deferred.promise;
};
var getFallbackTranslation=function(langKey,translationId,interpolateParams,Interpolator){
var deferred=$q.defer();
var onResolve=function(translationTable){
if(Object.prototype.hasOwnProperty.call(translationTable,translationId)){
Interpolator.setLocale(langKey);
var translation=translationTable[translationId];
if(translation.substr(0,2)==='@:'){
getFallbackTranslation(langKey,translation.substr(2),interpolateParams,Interpolator)
.then(deferred.resolve,deferred.reject);
}else{
var interpolatedValue=Interpolator.interpolate(translationTable[translationId],interpolateParams);
interpolatedValue=applyPostProcessing(translationId,translationTable[translationId],interpolatedValue,interpolateParams,langKey);
deferred.resolve(interpolatedValue);
}
Interpolator.setLocale($uses);
}else{
deferred.reject();
}
};
onResolve.displayName='fallbackTranslationResolver';
getTranslationTable(langKey).then(onResolve,deferred.reject);
return deferred.promise;
};
var getFallbackTranslationInstant=function(langKey,translationId,interpolateParams,Interpolator){
var result,translationTable=$translationTable[langKey];
if(translationTable&&Object.prototype.hasOwnProperty.call(translationTable,translationId)){
Interpolator.setLocale(langKey);
result=Interpolator.interpolate(translationTable[translationId],interpolateParams);
if(result.substr(0,2)==='@:'){
return getFallbackTranslationInstant(langKey,result.substr(2),interpolateParams,Interpolator);
}
Interpolator.setLocale($uses);
}
return result;
};
var translateByHandler=function(translationId,interpolateParams,defaultTranslationText){
if($missingTranslationHandlerFactory){
var resultString=$injector.get($missingTranslationHandlerFactory)(translationId,$uses,interpolateParams,defaultTranslationText);
if(resultString!==undefined){
return resultString;
}else{
return translationId;
}
}else{
return translationId;
}
};
var resolveForFallbackLanguage=function(fallbackLanguageIndex,translationId,interpolateParams,Interpolator,defaultTranslationText){
var deferred=$q.defer();
if(fallbackLanguageIndex<$fallbackLanguage.length){
var langKey=$fallbackLanguage[fallbackLanguageIndex];
getFallbackTranslation(langKey,translationId,interpolateParams,Interpolator).then(
function(data){
deferred.resolve(data);
},
function(){
return resolveForFallbackLanguage(fallbackLanguageIndex+1,translationId,interpolateParams,Interpolator,defaultTranslationText).then(deferred.resolve,deferred.reject);
}
);
}else{
if(defaultTranslationText){
deferred.resolve(defaultTranslationText);
}else{
if($missingTranslationHandlerFactory){
deferred.resolve(translateByHandler(translationId,interpolateParams));
}else{
deferred.reject(translateByHandler(translationId,interpolateParams));
}
}
}
return deferred.promise;
};
var resolveForFallbackLanguageInstant=function(fallbackLanguageIndex,translationId,interpolateParams,Interpolator){
var result;
if(fallbackLanguageIndex<$fallbackLanguage.length){
var langKey=$fallbackLanguage[fallbackLanguageIndex];
result=getFallbackTranslationInstant(langKey,translationId,interpolateParams,Interpolator);
if(!result){
result=resolveForFallbackLanguageInstant(fallbackLanguageIndex+1,translationId,interpolateParams,Interpolator);
}
}
return result;
};
var fallbackTranslation=function(translationId,interpolateParams,Interpolator,defaultTranslationText){
return resolveForFallbackLanguage((startFallbackIteration>0?startFallbackIteration:fallbackIndex),translationId,interpolateParams,Interpolator,defaultTranslationText);
};
var fallbackTranslationInstant=function(translationId,interpolateParams,Interpolator){
return resolveForFallbackLanguageInstant((startFallbackIteration>0?startFallbackIteration:fallbackIndex),translationId,interpolateParams,Interpolator);
};
var determineTranslation=function(translationId,interpolateParams,interpolationId,defaultTranslationText,uses){
var deferred=$q.defer();
var table=uses?$translationTable[uses]:$translationTable,
Interpolator=(interpolationId)?interpolatorHashMap[interpolationId]:defaultInterpolator;
if(table&&Object.prototype.hasOwnProperty.call(table,translationId)){
var translation=table[translationId];
if(translation.substr(0,2)==='@:'){
$translate(translation.substr(2),interpolateParams,interpolationId,defaultTranslationText,uses)
.then(deferred.resolve,deferred.reject);
}else{
var resolvedTranslation=Interpolator.interpolate(translation,interpolateParams);
resolvedTranslation=applyPostProcessing(translationId,translation,resolvedTranslation,interpolateParams,uses);
deferred.resolve(resolvedTranslation);
}
}else{
var missingTranslationHandlerTranslation;
if($missingTranslationHandlerFactory&&!pendingLoader){
missingTranslationHandlerTranslation=translateByHandler(translationId,interpolateParams,defaultTranslationText);
}
if(uses&&$fallbackLanguage&&$fallbackLanguage.length){
fallbackTranslation(translationId,interpolateParams,Interpolator,defaultTranslationText)
.then(function(translation){
deferred.resolve(translation);
},function(_translationId){
deferred.reject(applyNotFoundIndicators(_translationId));
});
}else if($missingTranslationHandlerFactory&&!pendingLoader&&missingTranslationHandlerTranslation){
if(defaultTranslationText){
deferred.resolve(defaultTranslationText);
}else{
deferred.resolve(missingTranslationHandlerTranslation);
}
}else{
if(defaultTranslationText){
deferred.resolve(defaultTranslationText);
}else{
deferred.reject(applyNotFoundIndicators(translationId));
}
}
}
return deferred.promise;
};
var determineTranslationInstant=function(translationId,interpolateParams,interpolationId,uses){
var result,table=uses?$translationTable[uses]:$translationTable,
Interpolator=defaultInterpolator;
if(interpolatorHashMap&&Object.prototype.hasOwnProperty.call(interpolatorHashMap,interpolationId)){
Interpolator=interpolatorHashMap[interpolationId];
}
if(table&&Object.prototype.hasOwnProperty.call(table,translationId)){
var translation=table[translationId];
if(translation.substr(0,2)==='@:'){
result=determineTranslationInstant(translation.substr(2),interpolateParams,interpolationId,uses);
}else{
result=Interpolator.interpolate(translation,interpolateParams);
}
}else{
var missingTranslationHandlerTranslation;
if($missingTranslationHandlerFactory&&!pendingLoader){
missingTranslationHandlerTranslation=translateByHandler(translationId,interpolateParams);
}
if(uses&&$fallbackLanguage&&$fallbackLanguage.length){
fallbackIndex=0;
result=fallbackTranslationInstant(translationId,interpolateParams,Interpolator);
}else if($missingTranslationHandlerFactory&&!pendingLoader&&missingTranslationHandlerTranslation){
result=missingTranslationHandlerTranslation;
}else{
result=applyNotFoundIndicators(translationId);
}
}
return result;
};
var clearNextLangAndPromise=function(key){
if($nextLang===key){
$nextLang=undefined;
}
langPromises[key]=undefined;
};
var applyPostProcessing=function(translationId,translation,resolvedTranslation,interpolateParams,uses){
var fn=postProcessFn;
if(fn){
if(typeof(fn)==='string'){
fn=$injector.get(fn);
}
if(fn){
return fn(translationId,translation,resolvedTranslation,interpolateParams,uses);
}
}
return resolvedTranslation;
};
var loadTranslationsIfMissing=function(key){
if(!$translationTable[key]&&$loaderFactory&&!langPromises[key]){
langPromises[key]=loadAsync(key).then(function(translation){
translations(translation.key,translation.table);
});
}
};
$translate.preferredLanguage=function(langKey){
if(langKey){
setupPreferredLanguage(langKey);
}
return $preferredLanguage;
};
$translate.cloakClassName=function(){
return $cloakClassName;
};
$translate.nestedObjectDelimeter=function(){
return $nestedObjectDelimeter;
};
$translate.fallbackLanguage=function(langKey){
if(langKey!==undefined&&langKey!==null){
fallbackStack(langKey);
if($loaderFactory){
if($fallbackLanguage&&$fallbackLanguage.length){
for(var i=0,len=$fallbackLanguage.length;i<len;i++){
if(!langPromises[$fallbackLanguage[i]]){
langPromises[$fallbackLanguage[i]]=loadAsync($fallbackLanguage[i]);
}
}
}
}
$translate.use($translate.use());
}
if($fallbackWasString){
return $fallbackLanguage[0];
}else{
return $fallbackLanguage;
}
};
$translate.useFallbackLanguage=function(langKey){
if(langKey!==undefined&&langKey!==null){
if(!langKey){
startFallbackIteration=0;
}else{
var langKeyPosition=indexOf($fallbackLanguage,langKey);
if(langKeyPosition>-1){
startFallbackIteration=langKeyPosition;
}
}
}
};
$translate.proposedLanguage=function(){
return $nextLang;
};
$translate.storage=function(){
return Storage;
};
$translate.negotiateLocale=negotiateLocale;
$translate.use=function(key){
if(!key){
return $uses;
}
var deferred=$q.defer();
$rootScope.$emit('$translateChangeStart',{language:key});
var aliasedKey=negotiateLocale(key);
if($availableLanguageKeys.length>0&&!aliasedKey){
return $q.reject(key);
}
if(aliasedKey){
key=aliasedKey;
}
$nextLang=key;
if(($forceAsyncReloadEnabled||!$translationTable[key])&&$loaderFactory&&!langPromises[key]){
langPromises[key]=loadAsync(key).then(function(translation){
translations(translation.key,translation.table);
deferred.resolve(translation.key);
if($nextLang===key){
useLanguage(translation.key);
}
return translation;
},function(key){
$rootScope.$emit('$translateChangeError',{language:key});
deferred.reject(key);
$rootScope.$emit('$translateChangeEnd',{language:key});
return $q.reject(key);
});
langPromises[key]['finally'](function(){
clearNextLangAndPromise(key);
});
}else if(langPromises[key]){
langPromises[key].then(function(translation){
if($nextLang===translation.key){
useLanguage(translation.key);
}
deferred.resolve(translation.key);
return translation;
},function(key){
if(!$uses&&$fallbackLanguage&&$fallbackLanguage.length>0){
return $translate.use($fallbackLanguage[0]).then(deferred.resolve,deferred.reject);
}else{
return deferred.reject(key);
}
});
}else{
deferred.resolve(key);
useLanguage(key);
}
return deferred.promise;
};
$translate.resolveClientLocale=function(){
return getLocale();
};
$translate.storageKey=function(){
return storageKey();
};
$translate.isPostCompilingEnabled=function(){
return $postCompilingEnabled;
};
$translate.isForceAsyncReloadEnabled=function(){
return $forceAsyncReloadEnabled;
};
$translate.refresh=function(langKey){
if(!$loaderFactory){
throw new Error('Couldn\'t refresh translation table, no loader registered!');
}
var deferred=$q.defer();
function resolve(){
deferred.resolve();
$rootScope.$emit('$translateRefreshEnd',{language:langKey});
}
function reject(){
deferred.reject();
$rootScope.$emit('$translateRefreshEnd',{language:langKey});
}
$rootScope.$emit('$translateRefreshStart',{language:langKey});
if(!langKey){
var tables=[],loadingKeys={};
if($fallbackLanguage&&$fallbackLanguage.length){
for(var i=0,len=$fallbackLanguage.length;i<len;i++){
tables.push(loadAsync($fallbackLanguage[i]));
loadingKeys[$fallbackLanguage[i]]=true;
}
}
if($uses&&!loadingKeys[$uses]){
tables.push(loadAsync($uses));
}
var allTranslationsLoaded=function(tableData){
$translationTable={};
angular.forEach(tableData,function(data){
translations(data.key,data.table);
});
if($uses){
useLanguage($uses);
}
resolve();
};
allTranslationsLoaded.displayName='refreshPostProcessor';
$q.all(tables).then(allTranslationsLoaded,reject);
}else if($translationTable[langKey]){
var oneTranslationsLoaded=function(data){
translations(data.key,data.table);
if(langKey===$uses){
useLanguage($uses);
}
resolve();
};
oneTranslationsLoaded.displayName='refreshPostProcessor';
loadAsync(langKey).then(oneTranslationsLoaded,reject);
}else{
reject();
}
return deferred.promise;
};
$translate.instant=function(translationId,interpolateParams,interpolationId,forceLanguage){
var uses=(forceLanguage&&forceLanguage!==$uses)?
(negotiateLocale(forceLanguage)||forceLanguage):$uses;
if(translationId===null||angular.isUndefined(translationId)){
return translationId;
}
if(forceLanguage){
loadTranslationsIfMissing(forceLanguage);
}
if(angular.isArray(translationId)){
var results={};
for(var i=0,c=translationId.length;i<c;i++){
results[translationId[i]]=$translate.instant(translationId[i],interpolateParams,interpolationId,forceLanguage);
}
return results;
}
if(angular.isString(translationId)&&translationId.length<1){
return translationId;
}
if(translationId){
translationId=trim.apply(translationId);
}
var result,possibleLangKeys=[];
if($preferredLanguage){
possibleLangKeys.push($preferredLanguage);
}
if(uses){
possibleLangKeys.push(uses);
}
if($fallbackLanguage&&$fallbackLanguage.length){
possibleLangKeys=possibleLangKeys.concat($fallbackLanguage);
}
for(var j=0,d=possibleLangKeys.length;j<d;j++){
var possibleLangKey=possibleLangKeys[j];
if($translationTable[possibleLangKey]){
if(typeof $translationTable[possibleLangKey][translationId]!=='undefined'){
result=determineTranslationInstant(translationId,interpolateParams,interpolationId,uses);
}
}
if(typeof result!=='undefined'){
break;
}
}
if(!result&&result!==''){
if($notFoundIndicatorLeft||$notFoundIndicatorRight){
result=applyNotFoundIndicators(translationId);
}else{
result=defaultInterpolator.interpolate(translationId,interpolateParams);
if($missingTranslationHandlerFactory&&!pendingLoader){
result=translateByHandler(translationId,interpolateParams);
}
}
}
return result;
};
$translate.versionInfo=function(){
return version;
};
$translate.loaderCache=function(){
return loaderCache;
};
$translate.directivePriority=function(){
return directivePriority;
};
$translate.statefulFilter=function(){
return statefulFilter;
};
$translate.isReady=function(){
return $isReady;
};
var $onReadyDeferred=$q.defer();
$onReadyDeferred.promise.then(function(){
$isReady=true;
});
$translate.onReady=function(fn){
var deferred=$q.defer();
if(angular.isFunction(fn)){
deferred.promise.then(fn);
}
if($isReady){
deferred.resolve();
}else{
$onReadyDeferred.promise.then(deferred.resolve);
}
return deferred.promise;
};
$translate.getAvailableLanguageKeys=function(){
if($availableLanguageKeys.length>0){
return $availableLanguageKeys;
}
return null;
};
var globalOnReadyListener=$rootScope.$on('$translateReady',function(){
$onReadyDeferred.resolve();
globalOnReadyListener();
globalOnReadyListener=null;
});
var globalOnChangeListener=$rootScope.$on('$translateChangeEnd',function(){
$onReadyDeferred.resolve();
globalOnChangeListener();
globalOnChangeListener=null;
});
if($loaderFactory){
if(angular.equals($translationTable,{})){
if($translate.use()){
$translate.use($translate.use());
}
}
if($fallbackLanguage&&$fallbackLanguage.length){
var processAsyncResult=function(translation){
translations(translation.key,translation.table);
$rootScope.$emit('$translateChangeEnd',{language:translation.key});
return translation;
};
for(var i=0,len=$fallbackLanguage.length;i<len;i++){
var fallbackLanguageId=$fallbackLanguage[i];
if($forceAsyncReloadEnabled||!$translationTable[fallbackLanguageId]){
langPromises[fallbackLanguageId]=loadAsync(fallbackLanguageId).then(processAsyncResult);
}
}
}
}else{
$rootScope.$emit('$translateReady',{language:$translate.use()});
}
return $translate;
}
];
}
$translate.displayName='displayName';
angular.module('pascalprecht.translate').factory('$translateDefaultInterpolation',$translateDefaultInterpolation);
function $translateDefaultInterpolation($interpolate,$translateSanitization){
'use strict';
var $translateInterpolator={},
$locale,
$identifier='default';
$translateInterpolator.setLocale=function(locale){
$locale=locale;
};
$translateInterpolator.getInterpolationIdentifier=function(){
return $identifier;
};
$translateInterpolator.useSanitizeValueStrategy=function(value){
$translateSanitization.useStrategy(value);
return this;
};
$translateInterpolator.interpolate=function(string,interpolationParams){
interpolationParams=interpolationParams||{};
interpolationParams=$translateSanitization.sanitize(interpolationParams,'params');
var interpolatedText=$interpolate(string)(interpolationParams);
interpolatedText=$translateSanitization.sanitize(interpolatedText,'text');
return interpolatedText;
};
return $translateInterpolator;
}
$translateDefaultInterpolation.displayName='$translateDefaultInterpolation';
angular.module('pascalprecht.translate').constant('$STORAGE_KEY','NG_TRANSLATE_LANG_KEY');
angular.module('pascalprecht.translate')
.directive('translate',translateDirective);
function translateDirective($translate,$q,$interpolate,$compile,$parse,$rootScope){
'use strict';
var trim=function(){
return this.toString().replace(/^\s+|\s+$/g,'');
};
return{
restrict:'AE',
scope:true,
priority:$translate.directivePriority(),
compile:function(tElement,tAttr){
var translateValuesExist=(tAttr.translateValues)?
tAttr.translateValues:undefined;
var translateInterpolation=(tAttr.translateInterpolation)?
tAttr.translateInterpolation:undefined;
var translateValueExist=tElement[0].outerHTML.match(/translate-value-+/i);
var interpolateRegExp='^(.*)('+$interpolate.startSymbol()+'.*'+$interpolate.endSymbol()+')(.*)',
watcherRegExp='^(.*)'+$interpolate.startSymbol()+'(.*)'+$interpolate.endSymbol()+'(.*)';
return function linkFn(scope,iElement,iAttr){
scope.interpolateParams={};
scope.preText='';
scope.postText='';
scope.translateNamespace=getTranslateNamespace(scope);
var translationIds={};
var initInterpolationParams=function(interpolateParams,iAttr,tAttr){
if(iAttr.translateValues){
angular.extend(interpolateParams,$parse(iAttr.translateValues)(scope.$parent));
}
if(translateValueExist){
for(var attr in tAttr){
if(Object.prototype.hasOwnProperty.call(iAttr,attr)&&attr.substr(0,14)==='translateValue'&&attr!=='translateValues'){
var attributeName=angular.lowercase(attr.substr(14,1))+attr.substr(15);
interpolateParams[attributeName]=tAttr[attr];
}
}
}
};
var observeElementTranslation=function(translationId){
if(angular.isFunction(observeElementTranslation._unwatchOld)){
observeElementTranslation._unwatchOld();
observeElementTranslation._unwatchOld=undefined;
}
if(angular.equals(translationId,'')||!angular.isDefined(translationId)){
var iElementText=trim.apply(iElement.text());
var interpolateMatches=iElementText.match(interpolateRegExp);
if(angular.isArray(interpolateMatches)){
scope.preText=interpolateMatches[1];
scope.postText=interpolateMatches[3];
translationIds.translate=$interpolate(interpolateMatches[2])(scope.$parent);
var watcherMatches=iElementText.match(watcherRegExp);
if(angular.isArray(watcherMatches)&&watcherMatches[2]&&watcherMatches[2].length){
observeElementTranslation._unwatchOld=scope.$watch(watcherMatches[2],function(newValue){
translationIds.translate=newValue;
updateTranslations();
});
}
}else{
translationIds.translate=!iElementText?undefined:iElementText;
}
}else{
translationIds.translate=translationId;
}
updateTranslations();
};
var observeAttributeTranslation=function(translateAttr){
iAttr.$observe(translateAttr,function(translationId){
translationIds[translateAttr]=translationId;
updateTranslations();
});
};
initInterpolationParams(scope.interpolateParams,iAttr,tAttr);
var firstAttributeChangedEvent=true;
iAttr.$observe('translate',function(translationId){
if(typeof translationId==='undefined'){
observeElementTranslation('');
}else{
if(translationId!==''||!firstAttributeChangedEvent){
translationIds.translate=translationId;
updateTranslations();
}
}
firstAttributeChangedEvent=false;
});
for(var translateAttr in iAttr){
if(iAttr.hasOwnProperty(translateAttr)&&translateAttr.substr(0,13)==='translateAttr'){
observeAttributeTranslation(translateAttr);
}
}
iAttr.$observe('translateDefault',function(value){
scope.defaultText=value;
updateTranslations();
});
if(translateValuesExist){
iAttr.$observe('translateValues',function(interpolateParams){
if(interpolateParams){
scope.$parent.$watch(function(){
angular.extend(scope.interpolateParams,$parse(interpolateParams)(scope.$parent));
});
}
});
}
if(translateValueExist){
var observeValueAttribute=function(attrName){
iAttr.$observe(attrName,function(value){
var attributeName=angular.lowercase(attrName.substr(14,1))+attrName.substr(15);
scope.interpolateParams[attributeName]=value;
});
};
for(var attr in iAttr){
if(Object.prototype.hasOwnProperty.call(iAttr,attr)&&attr.substr(0,14)==='translateValue'&&attr!=='translateValues'){
observeValueAttribute(attr);
}
}
}
var updateTranslations=function(){
for(var key in translationIds){
if(translationIds.hasOwnProperty(key)&&translationIds[key]!==undefined){
updateTranslation(key,translationIds[key],scope,scope.interpolateParams,scope.defaultText,scope.translateNamespace);
}
}
};
var updateTranslation=function(translateAttr,translationId,scope,interpolateParams,defaultTranslationText,translateNamespace){
if(translationId){
if(translateNamespace&&translationId.charAt(0)==='.'){
translationId=translateNamespace+translationId;
}
$translate(translationId,interpolateParams,translateInterpolation,defaultTranslationText,scope.translateLanguage)
.then(function(translation){
applyTranslation(translation,scope,true,translateAttr);
},function(translationId){
applyTranslation(translationId,scope,false,translateAttr);
});
}else{
applyTranslation(translationId,scope,false,translateAttr);
}
};
var applyTranslation=function(value,scope,successful,translateAttr){
if(!successful){
if(typeof scope.defaultText!=='undefined'){
value=scope.defaultText;
}
}
if(translateAttr==='translate'){
if(successful||(!successful&&typeof iAttr.translateKeepContent==='undefined')){
iElement.empty().append(scope.preText+value+scope.postText);
}
var globallyEnabled=$translate.isPostCompilingEnabled();
var locallyDefined=typeof tAttr.translateCompile!=='undefined';
var locallyEnabled=locallyDefined&&tAttr.translateCompile!=='false';
if((globallyEnabled&&!locallyDefined)||locallyEnabled){
$compile(iElement.contents())(scope);
}
}else{
var attributeName=iAttr.$attr[translateAttr];
if(attributeName.substr(0,5)==='data-'){
attributeName=attributeName.substr(5);
}
attributeName=attributeName.substr(15);
iElement.attr(attributeName,value);
}
};
if(translateValuesExist||translateValueExist||iAttr.translateDefault){
scope.$watch('interpolateParams',updateTranslations,true);
}
var unbindTranslateLanguage=scope.$on('translateLanguageChanged',updateTranslations);
var unbind=$rootScope.$on('$translateChangeSuccess',updateTranslations);
if(iElement.text().length){
if(iAttr.translate){
observeElementTranslation(iAttr.translate);
}else{
observeElementTranslation('');
}
}else if(iAttr.translate){
observeElementTranslation(iAttr.translate);
}
updateTranslations();
scope.$on('$destroy',function(){
unbindTranslateLanguage();
unbind();
});
};
}
};
}
function getTranslateNamespace(scope){
'use strict';
if(scope.translateNamespace){
return scope.translateNamespace;
}
if(scope.$parent){
return getTranslateNamespace(scope.$parent);
}
}
translateDirective.displayName='translateDirective';
angular.module('pascalprecht.translate')
.directive('translateCloak',translateCloakDirective);
function translateCloakDirective($translate,$rootScope){
'use strict';
return{
compile:function(tElement){
var applyCloak=function(){
tElement.addClass($translate.cloakClassName());
},
removeCloak=function(){
tElement.removeClass($translate.cloakClassName());
};
$translate.onReady(function(){
removeCloak();
});
applyCloak();
return function linkFn(scope,iElement,iAttr){
if(iAttr.translateCloak&&iAttr.translateCloak.length){
iAttr.$observe('translateCloak',function(translationId){
$translate(translationId).then(removeCloak,applyCloak);
});
$rootScope.$on('$translateChangeSuccess',function(){
$translate(iAttr.translateCloak).then(removeCloak,applyCloak);
});
}
};
}
};
}
translateCloakDirective.displayName='translateCloakDirective';
angular.module('pascalprecht.translate')
.directive('translateNamespace',translateNamespaceDirective);
function translateNamespaceDirective(){
'use strict';
return{
restrict:'A',
scope:true,
compile:function(){
return{
pre:function(scope,iElement,iAttrs){
scope.translateNamespace=getTranslateNamespace(scope);
if(scope.translateNamespace&&iAttrs.translateNamespace.charAt(0)==='.'){
scope.translateNamespace+=iAttrs.translateNamespace;
}else{
scope.translateNamespace=iAttrs.translateNamespace;
}
}
};
}
};
}
function getTranslateNamespace(scope){
'use strict';
if(scope.translateNamespace){
return scope.translateNamespace;
}
if(scope.$parent){
return getTranslateNamespace(scope.$parent);
}
}
translateNamespaceDirective.displayName='translateNamespaceDirective';
angular.module('pascalprecht.translate')
.directive('translateLanguage',translateLanguageDirective);
function translateLanguageDirective(){
'use strict';
return{
restrict:'A',
scope:true,
compile:function(){
return function linkFn(scope,iElement,iAttrs){
iAttrs.$observe('translateLanguage',function(newTranslateLanguage){
scope.translateLanguage=newTranslateLanguage;
});
scope.$watch('translateLanguage',function(){
scope.$broadcast('translateLanguageChanged');
});
};
}
};
}
translateLanguageDirective.displayName='translateLanguageDirective';
angular.module('pascalprecht.translate')
.filter('translate',translateFilterFactory);
function translateFilterFactory($parse,$translate){
'use strict';
var translateFilter=function(translationId,interpolateParams,interpolation,forceLanguage){
if(!angular.isObject(interpolateParams)){
interpolateParams=$parse(interpolateParams)(this);
}
return $translate.instant(translationId,interpolateParams,interpolation,forceLanguage);
};
if($translate.statefulFilter()){
translateFilter.$stateful=true;
}
return translateFilter;
}
translateFilterFactory.displayName='translateFilterFactory';
angular.module('pascalprecht.translate')
.factory('$translationCache',$translationCache);
function $translationCache($cacheFactory){
'use strict';
return $cacheFactory('translations');
}
$translationCache.displayName='$translationCache';
return'pascalprecht.translate';
}));
(function(){
var module=angular.module("ionasImages",[]);
module.directive('ngSrc',function(){
return{
priority:100,
link:function(scope,element,attr){
if(!window._ionasApplySrcsetPolyfill){
return;
}
attr.$observe('ngSrc',function(value){
if(!value){
return;
}
var srcset=attr.ngSrcset||attr.srcset;
var sizes=attr.sizes;
if(!srcset&&!sizes){
return;
}
window._ionasApplySrcsetPolyfill(element[0],srcset,sizes);
});
}
}
});
})();
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/what-input/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/what-input/vendor/what-input/dist/what-input.js";
(function webpackUniversalModuleDefinition(root,factory){
if(typeof exports==='object'&&typeof module==='object')
module.exports=factory();
else if(typeof define==='function'&&define.amd)
define("whatInput",[],factory);
else if(typeof exports==='object')
exports["whatInput"]=factory();
else
root["whatInput"]=factory();
})(this,function(){
return(function(modules){
var installedModules={};
function __webpack_require__(moduleId){
if(installedModules[moduleId])
return installedModules[moduleId].exports;
var module=installedModules[moduleId]={
exports:{},
id:moduleId,
loaded:false
};
modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);
module.loaded=true;
return module.exports;
}
__webpack_require__.m=modules;
__webpack_require__.c=installedModules;
__webpack_require__.p="";
return __webpack_require__(0);
})
([
function(module,exports){
module.exports=(function(){
var docElem=document.documentElement;
var currentInput='initial';
var currentIntent=null;
var formInputs=[
'input',
'select',
'textarea'
];
var ignoreMap=[
16,
17,
18,
91,
93
];
var inputMap={
'keyup':'keyboard',
'mousedown':'mouse',
'mousemove':'mouse',
'MSPointerDown':'pointer',
'MSPointerMove':'pointer',
'pointerdown':'pointer',
'pointermove':'pointer',
'touchstart':'touch'
};
var inputTypes=[];
var isBuffering=false;
var pointerMap={
2:'touch',
3:'touch',
4:'mouse'
};
var touchTimer=null;
var setUp=function(){
inputMap[detectWheel()]='mouse';
addListeners();
setInput();
};
var addListeners=function(){
if(window.PointerEvent){
docElem.addEventListener('pointerdown',updateInput);
docElem.addEventListener('pointermove',setIntent);
}else if(window.MSPointerEvent){
docElem.addEventListener('MSPointerDown',updateInput);
docElem.addEventListener('MSPointerMove',setIntent);
}else{
docElem.addEventListener('mousedown',updateInput);
docElem.addEventListener('mousemove',setIntent);
if('ontouchstart'in window){
docElem.addEventListener('touchstart',touchBuffer);
}
}
docElem.addEventListener(detectWheel(),setIntent);
docElem.addEventListener('keydown',updateInput);
docElem.addEventListener('keyup',updateInput);
};
var updateInput=function(event){
if(!isBuffering){
var eventKey=event.which;
var value=inputMap[event.type];
if(value==='pointer')value=pointerType(event);
if(
currentInput!==value||
currentIntent!==value
){
var activeElem=document.activeElement;
var activeInput=(
activeElem&&
activeElem.nodeName&&
formInputs.indexOf(activeElem.nodeName.toLowerCase())===-1
)?true:false;
if(
value==='touch'||
(value==='mouse'&&ignoreMap.indexOf(eventKey)===-1)||
(value==='keyboard'&&activeInput)
){
currentInput=currentIntent=value;
setInput();
}
}
}
};
var setInput=function(){
docElem.setAttribute('data-whatinput',currentInput);
docElem.setAttribute('data-whatintent',currentInput);
if(inputTypes.indexOf(currentInput)===-1){
inputTypes.push(currentInput);
docElem.className+=' whatinput-types-'+currentInput;
}
};
var setIntent=function(event){
if(!isBuffering){
var value=inputMap[event.type];
if(value==='pointer')value=pointerType(event);
if(currentIntent!==value){
currentIntent=value;
docElem.setAttribute('data-whatintent',currentIntent);
}
}
};
var touchBuffer=function(event){
window.clearTimeout(touchTimer);
updateInput(event);
isBuffering=true;
touchTimer=window.setTimeout(function(){
isBuffering=false;
},200);
};
var pointerType=function(event){
if(typeof event.pointerType==='number'){
return pointerMap[event.pointerType];
}else{
return(event.pointerType==='pen')?'touch':event.pointerType;
}
};
var detectWheel=function(){
return'onwheel'in document.createElement('div')?
'wheel':
document.onmousewheel!==undefined?
'mousewheel':
'DOMMouseScroll';
};
if(
'addEventListener'in window&&
Array.prototype.indexOf
){
setUp();
}
return{
ask:function(opt){return(opt==='loose')?currentIntent:currentInput;},
types:function(){return inputTypes;}
};
}());
}
])
});
;
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/foundation6-sites/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/foundation6-sites/vendor/foundation-sites/dist/js/foundation.js";
(function(modules){
var installedModules={};
function __webpack_require__(moduleId){
if(installedModules[moduleId]){
return installedModules[moduleId].exports;
}
var module=installedModules[moduleId]={
i:moduleId,
l:false,
exports:{}
};
modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);
module.l=true;
return module.exports;
}
__webpack_require__.m=modules;
__webpack_require__.c=installedModules;
__webpack_require__.i=function(value){return value;};
__webpack_require__.d=function(exports,name,getter){
if(!__webpack_require__.o(exports,name)){
Object.defineProperty(exports,name,{
configurable:false,
enumerable:true,
get:getter
});
}
};
__webpack_require__.n=function(module){
var getter=module&&module.__esModule?
function getDefault(){return module['default'];}:
function getModuleExports(){return module;};
__webpack_require__.d(getter,'a',getter);
return getter;
};
__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};
__webpack_require__.p="";
return __webpack_require__(__webpack_require__.s=36);
})
([
(function(module,exports){
module.exports=jQuery;
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return rtl;});
__webpack_require__.d(__webpack_exports__,"b",function(){return GetYoDigits;});
__webpack_require__.d(__webpack_exports__,"c",function(){return transitionend;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
function rtl(){
return __WEBPACK_IMPORTED_MODULE_0_jquery___default()('html').attr('dir')==='rtl';
}
function GetYoDigits(length,namespace){
length=length||6;
return Math.round(Math.pow(36,length+1)-Math.random()*Math.pow(36,length)).toString(36).slice(1)+(namespace?'-'+namespace:'');
}
function transitionend($elem){
var transitions={
'transition':'transitionend',
'WebkitTransition':'webkitTransitionEnd',
'MozTransition':'transitionend',
'OTransition':'otransitionend'
};
var elem=document.createElement('div'),
end;
for(var t in transitions){
if(typeof elem.style[t]!=='undefined'){
end=transitions[t];
}
}
if(end){
return end;
}else{
end=setTimeout(function(){
$elem.triggerHandler('transitionend',[$elem]);
},1);
return'transitionend';
}
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Plugin;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
var Plugin=function(){
function Plugin(element,options){
_classCallCheck(this,Plugin);
this._setup(element,options);
var pluginName=getPluginName(this);
this.uuid=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["b"])(6,pluginName);
if(!this.$element.attr('data-'+pluginName)){
this.$element.attr('data-'+pluginName,this.uuid);
}
if(!this.$element.data('zfPlugin')){
this.$element.data('zfPlugin',this);
}
this.$element.trigger('init.zf.'+pluginName);
}
_createClass(Plugin,[{
key:'destroy',
value:function destroy(){
this._destroy();
var pluginName=getPluginName(this);
this.$element.removeAttr('data-'+pluginName).removeData('zfPlugin')
.trigger('destroyed.zf.'+pluginName);
for(var prop in this){
this[prop]=null;
}
}
}]);
return Plugin;
}();
function hyphenate(str){
return str.replace(/([a-z])([A-Z])/g,'$1-$2').toLowerCase();
}
function getPluginName(obj){
if(typeof obj.constructor.name!=='undefined'){
return hyphenate(obj.constructor.name);
}else{
return hyphenate(obj.className);
}
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Keyboard;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var keyCodes={
9:'TAB',
13:'ENTER',
27:'ESCAPE',
32:'SPACE',
35:'END',
36:'HOME',
37:'ARROW_LEFT',
38:'ARROW_UP',
39:'ARROW_RIGHT',
40:'ARROW_DOWN'
};
var commands={};
function findFocusable($element){
if(!$element){
return false;
}
return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function(){
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is(':visible')||__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr('tabindex')<0){
return false;
}
return true;
});
}
function parseKey(event){
var key=keyCodes[event.which||event.keyCode]||String.fromCharCode(event.which).toUpperCase();
key=key.replace(/\W+/,'');
if(event.shiftKey)key='SHIFT_'+key;
if(event.ctrlKey)key='CTRL_'+key;
if(event.altKey)key='ALT_'+key;
key=key.replace(/_$/,'');
return key;
}
var Keyboard={
keys:getKeyCodes(keyCodes),
parseKey:parseKey,
handleKey:function(event,component,functions){
var commandList=commands[component],
keyCode=this.parseKey(event),
cmds,
command,
fn;
if(!commandList)return console.warn('Component not defined!');
if(typeof commandList.ltr==='undefined'){
cmds=commandList;
}else{
if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["a"])())cmds=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},commandList.ltr,commandList.rtl);else cmds=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},commandList.rtl,commandList.ltr);
}
command=cmds[keyCode];
fn=functions[command];
if(fn&&typeof fn==='function'){
var returnValue=fn.apply();
if(functions.handled||typeof functions.handled==='function'){
functions.handled(returnValue);
}
}else{
if(functions.unhandled||typeof functions.unhandled==='function'){
functions.unhandled();
}
}
},
findFocusable:findFocusable,
register:function(componentName,cmds){
commands[componentName]=cmds;
},
trapFocus:function($element){
var $focusable=findFocusable($element),
$firstFocusable=$focusable.eq(0),
$lastFocusable=$focusable.eq(-1);
$element.on('keydown.zf.trapfocus',function(event){
if(event.target===$lastFocusable[0]&&parseKey(event)==='TAB'){
event.preventDefault();
$firstFocusable.focus();
}else if(event.target===$firstFocusable[0]&&parseKey(event)==='SHIFT_TAB'){
event.preventDefault();
$lastFocusable.focus();
}
});
},
releaseFocus:function($element){
$element.off('keydown.zf.trapfocus');
}
};
function getKeyCodes(kcs){
var k={};
for(var kc in kcs){
k[kcs[kc]]=kcs[kc];
}return k;
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return MediaQuery;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var defaultQueries={
'default':'only screen',
landscape:'only screen and (orientation: landscape)',
portrait:'only screen and (orientation: portrait)',
retina:'only screen and (-webkit-min-device-pixel-ratio: 2),'+'only screen and (min--moz-device-pixel-ratio: 2),'+'only screen and (-o-min-device-pixel-ratio: 2/1),'+'only screen and (min-device-pixel-ratio: 2),'+'only screen and (min-resolution: 192dpi),'+'only screen and (min-resolution: 2dppx)'
};
var matchMedia=window.matchMedia||function(){
'use strict';
var styleMedia=window.styleMedia||window.media;
if(!styleMedia){
var style=document.createElement('style'),
script=document.getElementsByTagName('script')[0],
info=null;
style.type='text/css';
style.id='matchmediajs-test';
script&&script.parentNode&&script.parentNode.insertBefore(style,script);
info='getComputedStyle'in window&&window.getComputedStyle(style,null)||style.currentStyle;
styleMedia={
matchMedium:function(media){
var text='@media '+media+'{ #matchmediajs-test { width: 1px; } }';
if(style.styleSheet){
style.styleSheet.cssText=text;
}else{
style.textContent=text;
}
return info.width==='1px';
}
};
}
return function(media){
return{
matches:styleMedia.matchMedium(media||'all'),
media:media||'all'
};
};
}();
var MediaQuery={
queries:[],
current:'',
_init:function(){
var self=this;
var $meta=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('meta.foundation-mq');
if(!$meta.length){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('<meta class="foundation-mq">').appendTo(document.head);
}
var extractedStyles=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('.foundation-mq').css('font-family');
var namedQueries;
namedQueries=parseStyleToObject(extractedStyles);
for(var key in namedQueries){
if(namedQueries.hasOwnProperty(key)){
self.queries.push({
name:key,
value:'only screen and (min-width: '+namedQueries[key]+')'
});
}
}
this.current=this._getCurrentSize();
this._watcher();
},
atLeast:function(size){
var query=this.get(size);
if(query){
return matchMedia(query).matches;
}
return false;
},
is:function(size){
size=size.trim().split(' ');
if(size.length>1&&size[1]==='only'){
if(size[0]===this._getCurrentSize())return true;
}else{
return this.atLeast(size[0]);
}
return false;
},
get:function(size){
for(var i in this.queries){
if(this.queries.hasOwnProperty(i)){
var query=this.queries[i];
if(size===query.name)return query.value;
}
}
return null;
},
_getCurrentSize:function(){
var matched;
for(var i=0;i<this.queries.length;i++){
var query=this.queries[i];
if(matchMedia(query.value).matches){
matched=query;
}
}
if(typeof matched==='object'){
return matched.name;
}else{
return matched;
}
},
_watcher:function(){
var _this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('resize.zf.mediaquery').on('resize.zf.mediaquery',function(){
var newSize=_this._getCurrentSize(),
currentSize=_this.current;
if(newSize!==currentSize){
_this.current=newSize;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).trigger('changed.zf.mediaquery',[newSize,currentSize]);
}
});
}
};
function parseStyleToObject(str){
var styleObject={};
if(typeof str!=='string'){
return styleObject;
}
str=str.trim().slice(1,-1);
if(!str){
return styleObject;
}
styleObject=str.split('&').reduce(function(ret,param){
var parts=param.replace(/\+/g,' ').split('=');
var key=parts[0];
var val=parts[1];
key=decodeURIComponent(key);
val=val===undefined?null:decodeURIComponent(val);
if(!ret.hasOwnProperty(key)){
ret[key]=val;
}else if(Array.isArray(ret[key])){
ret[key].push(val);
}else{
ret[key]=[ret[key],val];
}
return ret;
},{});
return styleObject;
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Triggers;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_motion__=__webpack_require__(6);
var MutationObserver=function(){
var prefixes=['WebKit','Moz','O','Ms',''];
for(var i=0;i<prefixes.length;i++){
if(prefixes[i]+'MutationObserver'in window){
return window[prefixes[i]+'MutationObserver'];
}
}
return false;
}();
var triggers=function(el,type){
el.data(type).split(' ').forEach(function(id){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+id)[type==='close'?'trigger':'triggerHandler'](type+'.zf.trigger',[el]);
});
};
var Triggers={
Listeners:{
Basic:{},
Global:{}
},
Initializers:{}
};
Triggers.Listeners.Basic={
openListener:function(){
triggers(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),'open');
},
closeListener:function(){
var id=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('close');
if(id){
triggers(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),'close');
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).trigger('close.zf.trigger');
}
},
toggleListener:function(){
var id=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('toggle');
if(id){
triggers(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),'toggle');
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).trigger('toggle.zf.trigger');
}
},
closeableListener:function(e){
e.stopPropagation();
var animation=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('closable');
if(animation!==''){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_motion__["a"].animateOut(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),animation,function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).trigger('closed.zf');
});
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).fadeOut().trigger('closed.zf');
}
},
toggleFocusListener:function(){
var id=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('toggle-focus');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+id).triggerHandler('toggle.zf.trigger',[__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this)]);
}
};
Triggers.Initializers.addOpenListener=function($elem){
$elem.off('click.zf.trigger',Triggers.Listeners.Basic.openListener);
$elem.on('click.zf.trigger','[data-open]',Triggers.Listeners.Basic.openListener);
};
Triggers.Initializers.addCloseListener=function($elem){
$elem.off('click.zf.trigger',Triggers.Listeners.Basic.closeListener);
$elem.on('click.zf.trigger','[data-close]',Triggers.Listeners.Basic.closeListener);
};
Triggers.Initializers.addToggleListener=function($elem){
$elem.off('click.zf.trigger',Triggers.Listeners.Basic.toggleListener);
$elem.on('click.zf.trigger','[data-toggle]',Triggers.Listeners.Basic.toggleListener);
};
Triggers.Initializers.addCloseableListener=function($elem){
$elem.off('close.zf.trigger',Triggers.Listeners.Basic.closeableListener);
$elem.on('close.zf.trigger','[data-closeable], [data-closable]',Triggers.Listeners.Basic.closeableListener);
};
Triggers.Initializers.addToggleFocusListener=function($elem){
$elem.off('focus.zf.trigger blur.zf.trigger',Triggers.Listeners.Basic.toggleFocusListener);
$elem.on('focus.zf.trigger blur.zf.trigger','[data-toggle-focus]',Triggers.Listeners.Basic.toggleFocusListener);
};
Triggers.Listeners.Global={
resizeListener:function($nodes){
if(!MutationObserver){
$nodes.each(function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).triggerHandler('resizeme.zf.trigger');
});
}
$nodes.attr('data-events',"resize");
},
scrollListener:function($nodes){
if(!MutationObserver){
$nodes.each(function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).triggerHandler('scrollme.zf.trigger');
});
}
$nodes.attr('data-events',"scroll");
},
closeMeListener:function(e,pluginId){
var plugin=e.namespace.split('.')[0];
var plugins=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-'+plugin+']').not('[data-yeti-box="'+pluginId+'"]');
plugins.each(function(){
var _this=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this);
_this.triggerHandler('close.zf.trigger',[_this]);
});
}
};Triggers.Initializers.addClosemeListener=function(pluginName){
var yetiBoxes=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-yeti-box]'),
plugNames=['dropdown','tooltip','reveal'];
if(pluginName){
if(typeof pluginName==='string'){
plugNames.push(pluginName);
}else if(typeof pluginName==='object'&&typeof pluginName[0]==='string'){
plugNames.concat(pluginName);
}else{
console.error('Plugin names must be strings');
}
}
if(yetiBoxes.length){
var listeners=plugNames.map(function(name){
return'closeme.zf.'+name;
}).join(' ');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off(listeners).on(listeners,Triggers.Listeners.Global.closeMeListener);
}
};
function debounceGlobalListener(debounce,trigger,listener){
var timer=void 0,
args=Array.prototype.slice.call(arguments,3);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off(trigger).on(trigger,function(e){
if(timer){
clearTimeout(timer);
}
timer=setTimeout(function(){
listener.apply(null,args);
},debounce||10);
});
}
Triggers.Initializers.addResizeListener=function(debounce){
var $nodes=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-resize]');
if($nodes.length){
debounceGlobalListener(debounce,'resize.zf.trigger',Triggers.Listeners.Global.resizeListener,$nodes);
}
};
Triggers.Initializers.addScrollListener=function(debounce){
var $nodes=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-scroll]');
if($nodes.length){
debounceGlobalListener(debounce,'scroll.zf.trigger',Triggers.Listeners.Global.scrollListener,$nodes);
}
};
Triggers.Initializers.addMutationEventsListener=function($elem){
if(!MutationObserver){
return false;
}
var $nodes=$elem.find('[data-resize], [data-scroll], [data-mutate]');
var listeningElementsMutation=function(mutationRecordsList){
var $target=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(mutationRecordsList[0].target);
switch(mutationRecordsList[0].type){
case"attributes":
if($target.attr("data-events")==="scroll"&&mutationRecordsList[0].attributeName==="data-events"){
$target.triggerHandler('scrollme.zf.trigger',[$target,window.pageYOffset]);
}
if($target.attr("data-events")==="resize"&&mutationRecordsList[0].attributeName==="data-events"){
$target.triggerHandler('resizeme.zf.trigger',[$target]);
}
if(mutationRecordsList[0].attributeName==="style"){
$target.closest("[data-mutate]").attr("data-events","mutate");
$target.closest("[data-mutate]").triggerHandler('mutateme.zf.trigger',[$target.closest("[data-mutate]")]);
}
break;
case"childList":
$target.closest("[data-mutate]").attr("data-events","mutate");
$target.closest("[data-mutate]").triggerHandler('mutateme.zf.trigger',[$target.closest("[data-mutate]")]);
break;
default:
return false;
}
};
if($nodes.length){
for(var i=0;i<=$nodes.length-1;i++){
var elementObserver=new MutationObserver(listeningElementsMutation);
elementObserver.observe($nodes[i],{attributes:true,childList:true,characterData:false,subtree:true,attributeFilter:["data-events","style"]});
}
}
};
Triggers.Initializers.addSimpleListeners=function(){
var $document=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document);
Triggers.Initializers.addOpenListener($document);
Triggers.Initializers.addCloseListener($document);
Triggers.Initializers.addToggleListener($document);
Triggers.Initializers.addCloseableListener($document);
Triggers.Initializers.addToggleFocusListener($document);
};
Triggers.Initializers.addGlobalListeners=function(){
var $document=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document);
Triggers.Initializers.addMutationEventsListener($document);
Triggers.Initializers.addResizeListener();
Triggers.Initializers.addScrollListener();
Triggers.Initializers.addClosemeListener();
};
Triggers.init=function($,Foundation){
if(typeof $.triggersInitialized==='undefined'){
var $document=$(document);
if(document.readyState==="complete"){
Triggers.Initializers.addSimpleListeners();
Triggers.Initializers.addGlobalListeners();
}else{
$(window).on('load',function(){
Triggers.Initializers.addSimpleListeners();
Triggers.Initializers.addGlobalListeners();
});
}
$.triggersInitialized=true;
}
if(Foundation){
Foundation.Triggers=Triggers;
Foundation.IHearYou=Triggers.Initializers.addGlobalListeners;
}
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"b",function(){return Move;});
__webpack_require__.d(__webpack_exports__,"a",function(){return Motion;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var initClasses=['mui-enter','mui-leave'];
var activeClasses=['mui-enter-active','mui-leave-active'];
var Motion={
animateIn:function(element,animation,cb){
animate(true,element,animation,cb);
},
animateOut:function(element,animation,cb){
animate(false,element,animation,cb);
}
};
function Move(duration,elem,fn){
var anim,
prog,
start=null;
if(duration===0){
fn.apply(elem);
elem.trigger('finished.zf.animate',[elem]).triggerHandler('finished.zf.animate',[elem]);
return;
}
function move(ts){
if(!start)start=ts;
prog=ts-start;
fn.apply(elem);
if(prog<duration){
anim=window.requestAnimationFrame(move,elem);
}else{
window.cancelAnimationFrame(anim);
elem.trigger('finished.zf.animate',[elem]).triggerHandler('finished.zf.animate',[elem]);
}
}
anim=window.requestAnimationFrame(move);
}
function animate(isIn,element,animation,cb){
element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(element).eq(0);
if(!element.length)return;
var initClass=isIn?initClasses[0]:initClasses[1];
var activeClass=isIn?activeClasses[0]:activeClasses[1];
reset();
element.addClass(animation).css('transition','none');
requestAnimationFrame(function(){
element.addClass(initClass);
if(isIn)element.show();
});
requestAnimationFrame(function(){
element[0].offsetWidth;
element.css('transition','').addClass(activeClass);
});
element.one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["c"])(element),finish);
function finish(){
if(!isIn)element.hide();
reset();
if(cb)cb.apply(element);
}
function reset(){
element[0].style.transitionDuration=0;
element.removeClass(initClass+' '+activeClass+' '+animation);
}
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Box;});
var __WEBPACK_IMPORTED_MODULE_0__foundation_util_core__=__webpack_require__(1);
var Box={
ImNotTouchingYou:ImNotTouchingYou,
OverlapArea:OverlapArea,
GetDimensions:GetDimensions,
GetOffsets:GetOffsets,
GetExplicitOffsets:GetExplicitOffsets
};function ImNotTouchingYou(element,parent,lrOnly,tbOnly,ignoreBottom){
return OverlapArea(element,parent,lrOnly,tbOnly,ignoreBottom)===0;
};
function OverlapArea(element,parent,lrOnly,tbOnly,ignoreBottom){
var eleDims=GetDimensions(element),
topOver,
bottomOver,
leftOver,
rightOver;
if(parent){
var parDims=GetDimensions(parent);
bottomOver=parDims.height+parDims.offset.top-(eleDims.offset.top+eleDims.height);
topOver=eleDims.offset.top-parDims.offset.top;
leftOver=eleDims.offset.left-parDims.offset.left;
rightOver=parDims.width+parDims.offset.left-(eleDims.offset.left+eleDims.width);
}else{
bottomOver=eleDims.windowDims.height+eleDims.windowDims.offset.top-(eleDims.offset.top+eleDims.height);
topOver=eleDims.offset.top-eleDims.windowDims.offset.top;
leftOver=eleDims.offset.left-eleDims.windowDims.offset.left;
rightOver=eleDims.windowDims.width-(eleDims.offset.left+eleDims.width);
}
bottomOver=ignoreBottom?0:Math.min(bottomOver,0);
topOver=Math.min(topOver,0);
leftOver=Math.min(leftOver,0);
rightOver=Math.min(rightOver,0);
if(lrOnly){
return leftOver+rightOver;
}
if(tbOnly){
return topOver+bottomOver;
}
return Math.sqrt(topOver*topOver+bottomOver*bottomOver+leftOver*leftOver+rightOver*rightOver);
}
function GetDimensions(elem){
elem=elem.length?elem[0]:elem;
if(elem===window||elem===document){
throw new Error("I'm sorry, Dave. I'm afraid I can't do that.");
}
var rect=elem.getBoundingClientRect(),
parRect=elem.parentNode.getBoundingClientRect(),
winRect=document.body.getBoundingClientRect(),
winY=window.pageYOffset,
winX=window.pageXOffset;
return{
width:rect.width,
height:rect.height,
offset:{
top:rect.top+winY,
left:rect.left+winX
},
parentDims:{
width:parRect.width,
height:parRect.height,
offset:{
top:parRect.top+winY,
left:parRect.left+winX
}
},
windowDims:{
width:winRect.width,
height:winRect.height,
offset:{
top:winY,
left:winX
}
}
};
}
function GetOffsets(element,anchor,position,vOffset,hOffset,isOverflow){
console.log("NOTE: GetOffsets is deprecated in favor of GetExplicitOffsets and will be removed in 6.5");
switch(position){
case'top':
return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__foundation_util_core__["a"])()?GetExplicitOffsets(element,anchor,'top','left',vOffset,hOffset,isOverflow):GetExplicitOffsets(element,anchor,'top','right',vOffset,hOffset,isOverflow);
case'bottom':
return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__foundation_util_core__["a"])()?GetExplicitOffsets(element,anchor,'bottom','left',vOffset,hOffset,isOverflow):GetExplicitOffsets(element,anchor,'bottom','right',vOffset,hOffset,isOverflow);
case'center top':
return GetExplicitOffsets(element,anchor,'top','center',vOffset,hOffset,isOverflow);
case'center bottom':
return GetExplicitOffsets(element,anchor,'bottom','center',vOffset,hOffset,isOverflow);
case'center left':
return GetExplicitOffsets(element,anchor,'left','center',vOffset,hOffset,isOverflow);
case'center right':
return GetExplicitOffsets(element,anchor,'right','center',vOffset,hOffset,isOverflow);
case'left bottom':
return GetExplicitOffsets(element,anchor,'bottom','left',vOffset,hOffset,isOverflow);
case'right bottom':
return GetExplicitOffsets(element,anchor,'bottom','right',vOffset,hOffset,isOverflow);
case'center':
return{
left:$eleDims.windowDims.offset.left+$eleDims.windowDims.width/2-$eleDims.width/2+hOffset,
top:$eleDims.windowDims.offset.top+$eleDims.windowDims.height/2-($eleDims.height/2+vOffset)
};
case'reveal':
return{
left:($eleDims.windowDims.width-$eleDims.width)/2+hOffset,
top:$eleDims.windowDims.offset.top+vOffset
};
case'reveal full':
return{
left:$eleDims.windowDims.offset.left,
top:$eleDims.windowDims.offset.top
};
break;
default:
return{
left:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__foundation_util_core__["a"])()?$anchorDims.offset.left-$eleDims.width+$anchorDims.width-hOffset:$anchorDims.offset.left+hOffset,
top:$anchorDims.offset.top+$anchorDims.height+vOffset
};
}
}
function GetExplicitOffsets(element,anchor,position,alignment,vOffset,hOffset,isOverflow){
var $eleDims=GetDimensions(element),
$anchorDims=anchor?GetDimensions(anchor):null;
var topVal,leftVal;
switch(position){
case'top':
topVal=$anchorDims.offset.top-($eleDims.height+vOffset);
break;
case'bottom':
topVal=$anchorDims.offset.top+$anchorDims.height+vOffset;
break;
case'left':
leftVal=$anchorDims.offset.left-($eleDims.width+hOffset);
break;
case'right':
leftVal=$anchorDims.offset.left+$anchorDims.width+hOffset;
break;
}
switch(position){
case'top':
case'bottom':
switch(alignment){
case'left':
leftVal=$anchorDims.offset.left+hOffset;
break;
case'right':
leftVal=$anchorDims.offset.left-$eleDims.width+$anchorDims.width-hOffset;
break;
case'center':
leftVal=isOverflow?hOffset:$anchorDims.offset.left+$anchorDims.width/2-$eleDims.width/2+hOffset;
break;
}
break;
case'right':
case'left':
switch(alignment){
case'bottom':
topVal=$anchorDims.offset.top-vOffset+$anchorDims.height-$eleDims.height;
break;
case'top':
topVal=$anchorDims.offset.top+vOffset;
break;
case'center':
topVal=$anchorDims.offset.top+vOffset+$anchorDims.height/2-$eleDims.height/2;
break;
}
break;
}
return{top:topVal,left:leftVal};
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return onImagesLoaded;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
function onImagesLoaded(images,callback){
var self=this,
unloaded=images.length;
if(unloaded===0){
callback();
}
images.each(function(){
if(this.complete&&this.naturalWidth!==undefined){
singleImageLoaded();
}else{
var image=new Image();
var events="load.zf.images error.zf.images";
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(image).one(events,function me(event){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).off(events,me);
singleImageLoaded();
});
image.src=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr('src');
}
});
function singleImageLoaded(){
unloaded--;
if(unloaded===0){
callback();
}
}
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Nest;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var Nest={
Feather:function(menu){
var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'zf';
menu.attr('role','menubar');
var items=menu.find('li').attr({'role':'menuitem'}),
subMenuClass='is-'+type+'-submenu',
subItemClass=subMenuClass+'-item',
hasSubClass='is-'+type+'-submenu-parent',
applyAria=type!=='accordion';
items.each(function(){
var $item=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$sub=$item.children('ul');
if($sub.length){
$item.addClass(hasSubClass);
$sub.addClass('submenu '+subMenuClass).attr({'data-submenu':''});
if(applyAria){
$item.attr({
'aria-haspopup':true,
'aria-label':$item.children('a:first').text()
});
if(type==='drilldown'){
$item.attr({'aria-expanded':false});
}
}
$sub.addClass('submenu '+subMenuClass).attr({
'data-submenu':'',
'role':'menu'
});
if(type==='drilldown'){
$sub.attr({'aria-hidden':true});
}
}
if($item.parent('[data-submenu]').length){
$item.addClass('is-submenu-item '+subItemClass);
}
});
return;
},
Burn:function(menu,type){
var
subMenuClass='is-'+type+'-submenu',
subItemClass=subMenuClass+'-item',
hasSubClass='is-'+type+'-submenu-parent';
menu.find('>li, .menu, .menu > li').removeClass(subMenuClass+' '+subItemClass+' '+hasSubClass+' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display','');
}
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Touch;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
var Touch={};
var startPosX,
startPosY,
startTime,
elapsedTime,
isMoving=false;
function onTouchEnd(){
this.removeEventListener('touchmove',onTouchMove);
this.removeEventListener('touchend',onTouchEnd);
isMoving=false;
}
function onTouchMove(e){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.spotSwipe.preventDefault){
e.preventDefault();
}
if(isMoving){
var x=e.touches[0].pageX;
var y=e.touches[0].pageY;
var dx=startPosX-x;
var dy=startPosY-y;
var dir;
elapsedTime=new Date().getTime()-startTime;
if(Math.abs(dx)>=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.spotSwipe.moveThreshold&&elapsedTime<=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.spotSwipe.timeThreshold){
dir=dx>0?'left':'right';
}
if(dir){
e.preventDefault();
onTouchEnd.call(this);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).trigger('swipe',dir).trigger('swipe'+dir);
}
}
}
function onTouchStart(e){
if(e.touches.length==1){
startPosX=e.touches[0].pageX;
startPosY=e.touches[0].pageY;
isMoving=true;
startTime=new Date().getTime();
this.addEventListener('touchmove',onTouchMove,false);
this.addEventListener('touchend',onTouchEnd,false);
}
}
function init(){
this.addEventListener&&this.addEventListener('touchstart',onTouchStart,false);
}
function teardown(){
this.removeEventListener('touchstart',onTouchStart);
}
var SpotSwipe=function(){
function SpotSwipe($){
_classCallCheck(this,SpotSwipe);
this.version='1.0.0';
this.enabled='ontouchstart'in document.documentElement;
this.preventDefault=false;
this.moveThreshold=75;
this.timeThreshold=200;
this.$=$;
this._init();
}
_createClass(SpotSwipe,[{
key:'_init',
value:function _init(){
var $=this.$;
$.event.special.swipe={setup:init};
$.each(['left','up','down','right'],function(){
$.event.special['swipe'+this]={setup:function(){
$(this).on('swipe',$.noop);
}};
});
}
}]);
return SpotSwipe;
}();
Touch.setupSpotSwipe=function($){
$.spotSwipe=new SpotSwipe($);
};
Touch.setupTouchHandler=function($){
$.fn.addTouch=function(){
this.each(function(i,el){
$(el).bind('touchstart touchmove touchend touchcancel',function(){
handleTouch(event);
});
});
var handleTouch=function(event){
var touches=event.changedTouches,
first=touches[0],
eventTypes={
touchstart:'mousedown',
touchmove:'mousemove',
touchend:'mouseup'
},
type=eventTypes[event.type],
simulatedEvent;
if('MouseEvent'in window&&typeof window.MouseEvent==='function'){
simulatedEvent=new window.MouseEvent(type,{
'bubbles':true,
'cancelable':true,
'screenX':first.screenX,
'screenY':first.screenY,
'clientX':first.clientX,
'clientY':first.clientY
});
}else{
simulatedEvent=document.createEvent('MouseEvent');
simulatedEvent.initMouseEvent(type,true,true,window,1,first.screenX,first.screenY,first.clientX,first.clientY,false,false,false,false,0,null);
}
first.target.dispatchEvent(simulatedEvent);
};
};
};
Touch.init=function($){
if(typeof $.spotSwipe==='undefined'){
Touch.setupSpotSwipe($);
Touch.setupTouchHandler($);
}
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Accordion;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_3__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Accordion=function(_Plugin){
_inherits(Accordion,_Plugin);
function Accordion(){
_classCallCheck(this,Accordion);
return _possibleConstructorReturn(this,(Accordion.__proto__||Object.getPrototypeOf(Accordion)).apply(this,arguments));
}
_createClass(Accordion,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Accordion.defaults,this.$element.data(),options);
this.className='Accordion';
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Accordion',{
'ENTER':'toggle',
'SPACE':'toggle',
'ARROW_DOWN':'next',
'ARROW_UP':'previous'
});
}
},{
key:'_init',
value:function _init(){
var _this3=this;
this.$element.attr('role','tablist');
this.$tabs=this.$element.children('[data-accordion-item]');
this.$tabs.each(function(idx,el){
var $el=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(el),
$content=$el.children('[data-tab-content]'),
id=$content[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["b"])(6,'accordion'),
linkId=el.id||id+'-label';
$el.find('a:first').attr({
'aria-controls':id,
'role':'tab',
'id':linkId,
'aria-expanded':false,
'aria-selected':false
});
$content.attr({'role':'tabpanel','aria-labelledby':linkId,'aria-hidden':true,'id':id});
});
var $initActive=this.$element.find('.is-active').children('[data-tab-content]');
this.firstTimeInit=true;
if($initActive.length){
this.down($initActive,this.firstTimeInit);
this.firstTimeInit=false;
}
this._checkDeepLink=function(){
var anchor=window.location.hash;
if(anchor.length){
var $link=_this3.$element.find('[href$="'+anchor+'"]'),
$anchor=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(anchor);
if($link.length&&$anchor){
if(!$link.parent('[data-accordion-item]').hasClass('is-active')){
_this3.down($anchor,_this3.firstTimeInit);
_this3.firstTimeInit=false;
};
if(_this3.options.deepLinkSmudge){
var _this=_this3;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).load(function(){
var offset=_this.$element.offset();
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').animate({scrollTop:offset.top},_this.options.deepLinkSmudgeDelay);
});
}
_this3.$element.trigger('deeplink.zf.accordion',[$link,$anchor]);
}
}
};
if(this.options.deepLink){
this._checkDeepLink();
}
this._events();
}
},{
key:'_events',
value:function _events(){
var _this=this;
this.$tabs.each(function(){
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this);
var $tabContent=$elem.children('[data-tab-content]');
if($tabContent.length){
$elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion',function(e){
e.preventDefault();
_this.toggle($tabContent);
}).on('keydown.zf.accordion',function(e){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Accordion',{
toggle:function(){
_this.toggle($tabContent);
},
next:function(){
var $a=$elem.next().find('a').focus();
if(!_this.options.multiExpand){
$a.trigger('click.zf.accordion');
}
},
previous:function(){
var $a=$elem.prev().find('a').focus();
if(!_this.options.multiExpand){
$a.trigger('click.zf.accordion');
}
},
handled:function(){
e.preventDefault();
e.stopPropagation();
}
});
});
}
});
if(this.options.deepLink){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('popstate',this._checkDeepLink);
}
}
},{
key:'toggle',
value:function toggle($target){
if($target.closest('[data-accordion]').is('[disabled]')){
console.info('Cannot toggle an accordion that is disabled.');
return;
}
if($target.parent().hasClass('is-active')){
this.up($target);
}else{
this.down($target);
}
if(this.options.deepLink){
var anchor=$target.prev('a').attr('href');
if(this.options.updateHistory){
history.pushState({},'',anchor);
}else{
history.replaceState({},'',anchor);
}
}
}
},{
key:'down',
value:function down($target,firstTime){
var _this4=this;
if($target.closest('[data-accordion]').is('[disabled]')&&!firstTime){
console.info('Cannot call down on an accordion that is disabled.');
return;
}
$target.attr('aria-hidden',false).parent('[data-tab-content]').addBack().parent().addClass('is-active');
if(!this.options.multiExpand&&!firstTime){
var $currentActive=this.$element.children('.is-active').children('[data-tab-content]');
if($currentActive.length){
this.up($currentActive.not($target));
}
}
$target.slideDown(this.options.slideSpeed,function(){
_this4.$element.trigger('down.zf.accordion',[$target]);
});
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+$target.attr('aria-labelledby')).attr({
'aria-expanded':true,
'aria-selected':true
});
}
},{
key:'up',
value:function up($target){
if($target.closest('[data-accordion]').is('[disabled]')){
console.info('Cannot call up on an accordion that is disabled.');
return;
}
var $aunts=$target.parent().siblings(),
_this=this;
if(!this.options.allowAllClosed&&!$aunts.hasClass('is-active')||!$target.parent().hasClass('is-active')){
return;
}
$target.slideUp(_this.options.slideSpeed,function(){
_this.$element.trigger('up.zf.accordion',[$target]);
});
$target.attr('aria-hidden',true).parent().removeClass('is-active');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+$target.attr('aria-labelledby')).attr({
'aria-expanded':false,
'aria-selected':false
});
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display','');
this.$element.find('a').off('.zf.accordion');
if(this.options.deepLink){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('popstate',this._checkDeepLink);
}
}
}]);
return Accordion;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_plugin__["a"]);
Accordion.defaults={
slideSpeed:250,
multiExpand:false,
allowAllClosed:false,
deepLink:false,
deepLinkSmudge:false,
deepLinkSmudgeDelay:300,
updateHistory:false
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return AccordionMenu;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__=__webpack_require__(9);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_4__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var AccordionMenu=function(_Plugin){
_inherits(AccordionMenu,_Plugin);
function AccordionMenu(){
_classCallCheck(this,AccordionMenu);
return _possibleConstructorReturn(this,(AccordionMenu.__proto__||Object.getPrototypeOf(AccordionMenu)).apply(this,arguments));
}
_createClass(AccordionMenu,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},AccordionMenu.defaults,this.$element.data(),options);
this.className='AccordionMenu';
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('AccordionMenu',{
'ENTER':'toggle',
'SPACE':'toggle',
'ARROW_RIGHT':'open',
'ARROW_UP':'up',
'ARROW_DOWN':'down',
'ARROW_LEFT':'close',
'ESCAPE':'closeAll'
});
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__["a"].Feather(this.$element,'accordion');
var _this=this;
this.$element.find('[data-submenu]').not('.is-active').slideUp(0);
this.$element.attr({
'role':'tree',
'aria-multiselectable':this.options.multiOpen
});
this.$menuLinks=this.$element.find('.is-accordion-submenu-parent');
this.$menuLinks.each(function(){
var linkId=this.id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'acc-menu-link'),
$elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$sub=$elem.children('[data-submenu]'),
subId=$sub[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'acc-menu'),
isActive=$sub.hasClass('is-active');
if(_this.options.submenuToggle){
$elem.addClass('has-submenu-toggle');
$elem.children('a').after('<button id="'+linkId+'" class="submenu-toggle" aria-controls="'+subId+'" aria-expanded="'+isActive+'" title="'+_this.options.submenuToggleText+'"><span class="submenu-toggle-text">'+_this.options.submenuToggleText+'</span></button>');
}else{
$elem.attr({
'aria-controls':subId,
'aria-expanded':isActive,
'id':linkId
});
}
$sub.attr({
'aria-labelledby':linkId,
'aria-hidden':!isActive,
'role':'group',
'id':subId
});
});
this.$element.find('li').attr({
'role':'treeitem'
});
var initPanes=this.$element.find('.is-active');
if(initPanes.length){
var _this=this;
initPanes.each(function(){
_this.down(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this));
});
}
this._events();
}
},{
key:'_events',
value:function _events(){
var _this=this;
this.$element.find('li').each(function(){
var $submenu=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).children('[data-submenu]');
if($submenu.length){
if(_this.options.submenuToggle){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).children('.submenu-toggle').off('click.zf.accordionMenu').on('click.zf.accordionMenu',function(e){
_this.toggle($submenu);
});
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu',function(e){
e.preventDefault();
_this.toggle($submenu);
});
}
}
}).on('keydown.zf.accordionmenu',function(e){
var $element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$elements=$element.parent('ul').children('li'),
$prevElement,
$nextElement,
$target=$element.children('[data-submenu]');
$elements.each(function(i){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is($element)){
$prevElement=$elements.eq(Math.max(0,i-1)).find('a').first();
$nextElement=$elements.eq(Math.min(i+1,$elements.length-1)).find('a').first();
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).children('[data-submenu]:visible').length){
$nextElement=$element.find('li:first-child').find('a').first();
}
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is(':first-child')){
$prevElement=$element.parents('li').first().find('a').first();
}else if($prevElement.parents('li').first().children('[data-submenu]:visible').length){
$prevElement=$prevElement.parents('li').find('li:last-child').find('a').first();
}
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is(':last-child')){
$nextElement=$element.parents('li').first().next('li').find('a').first();
}
return;
}
});
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'AccordionMenu',{
open:function(){
if($target.is(':hidden')){
_this.down($target);
$target.find('li').first().find('a').first().focus();
}
},
close:function(){
if($target.length&&!$target.is(':hidden')){
_this.up($target);
}else if($element.parent('[data-submenu]').length){
_this.up($element.parent('[data-submenu]'));
$element.parents('li').first().find('a').first().focus();
}
},
up:function(){
$prevElement.focus();
return true;
},
down:function(){
$nextElement.focus();
return true;
},
toggle:function(){
if(_this.options.submenuToggle){
return false;
}
if($element.children('[data-submenu]').length){
_this.toggle($element.children('[data-submenu]'));
return true;
}
},
closeAll:function(){
_this.hideAll();
},
handled:function(preventDefault){
if(preventDefault){
e.preventDefault();
}
e.stopImmediatePropagation();
}
});
});
}
},{
key:'hideAll',
value:function hideAll(){
this.up(this.$element.find('[data-submenu]'));
}
},{
key:'showAll',
value:function showAll(){
this.down(this.$element.find('[data-submenu]'));
}
},{
key:'toggle',
value:function toggle($target){
if(!$target.is(':animated')){
if(!$target.is(':hidden')){
this.up($target);
}else{
this.down($target);
}
}
}
},{
key:'down',
value:function down($target){
var _this=this;
if(!this.options.multiOpen){
this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));
}
$target.addClass('is-active').attr({'aria-hidden':false});
if(this.options.submenuToggle){
$target.prev('.submenu-toggle').attr({'aria-expanded':true});
}else{
$target.parent('.is-accordion-submenu-parent').attr({'aria-expanded':true});
}
$target.slideDown(_this.options.slideSpeed,function(){
_this.$element.trigger('down.zf.accordionMenu',[$target]);
});
}
},{
key:'up',
value:function up($target){
var _this=this;
$target.slideUp(_this.options.slideSpeed,function(){
_this.$element.trigger('up.zf.accordionMenu',[$target]);
});
var $menus=$target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden',true);
if(this.options.submenuToggle){
$menus.prev('.submenu-toggle').attr('aria-expanded',false);
}else{
$menus.parent('.is-accordion-submenu-parent').attr('aria-expanded',false);
}
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.find('[data-submenu]').slideDown(0).css('display','');
this.$element.find('a').off('click.zf.accordionMenu');
if(this.options.submenuToggle){
this.$element.find('.has-submenu-toggle').removeClass('has-submenu-toggle');
this.$element.find('.submenu-toggle').remove();
}
__WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__["a"].Burn(this.$element,'accordion');
}
}]);
return AccordionMenu;
}(__WEBPACK_IMPORTED_MODULE_4__foundation_plugin__["a"]);
AccordionMenu.defaults={
slideSpeed:250,
submenuToggle:false,
submenuToggleText:'Toggle menu',
multiOpen:true
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Drilldown;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__=__webpack_require__(9);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_4__foundation_util_box__=__webpack_require__(7);
var __WEBPACK_IMPORTED_MODULE_5__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Drilldown=function(_Plugin){
_inherits(Drilldown,_Plugin);
function Drilldown(){
_classCallCheck(this,Drilldown);
return _possibleConstructorReturn(this,(Drilldown.__proto__||Object.getPrototypeOf(Drilldown)).apply(this,arguments));
}
_createClass(Drilldown,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Drilldown.defaults,this.$element.data(),options);
this.className='Drilldown';
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Drilldown',{
'ENTER':'open',
'SPACE':'open',
'ARROW_RIGHT':'next',
'ARROW_UP':'up',
'ARROW_DOWN':'down',
'ARROW_LEFT':'previous',
'ESCAPE':'close',
'TAB':'down',
'SHIFT_TAB':'up'
});
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__["a"].Feather(this.$element,'drilldown');
if(this.options.autoApplyClass){
this.$element.addClass('drilldown');
}
this.$element.attr({
'role':'tree',
'aria-multiselectable':false
});
this.$submenuAnchors=this.$element.find('li.is-drilldown-submenu-parent').children('a');
this.$submenus=this.$submenuAnchors.parent('li').children('[data-submenu]').attr('role','group');
this.$menuItems=this.$element.find('li').not('.js-drilldown-back').attr('role','treeitem').find('a');
this.$element.attr('data-mutate',this.$element.attr('data-drilldown')||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'drilldown'));
this._prepareMenu();
this._registerEvents();
this._keyboardEvents();
}
},{
key:'_prepareMenu',
value:function _prepareMenu(){
var _this=this;
this.$submenuAnchors.each(function(){
var $link=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this);
var $sub=$link.parent();
if(_this.options.parentLink){
$link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class="is-submenu-parent-item is-submenu-item is-drilldown-submenu-item" role="menuitem"></li>');
}
$link.data('savedHref',$link.attr('href')).removeAttr('href').attr('tabindex',0);
$link.children('[data-submenu]').attr({
'aria-hidden':true,
'tabindex':0,
'role':'group'
});
_this._events($link);
});
this.$submenus.each(function(){
var $menu=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$back=$menu.find('.js-drilldown-back');
if(!$back.length){
switch(_this.options.backButtonPosition){
case"bottom":
$menu.append(_this.options.backButton);
break;
case"top":
$menu.prepend(_this.options.backButton);
break;
default:
console.error("Unsupported backButtonPosition value '"+_this.options.backButtonPosition+"'");
}
}
_this._back($menu);
});
this.$submenus.addClass('invisible');
if(!this.options.autoHeight){
this.$submenus.addClass('drilldown-submenu-cover-previous');
}
if(!this.$element.parent().hasClass('is-drilldown')){
this.$wrapper=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.options.wrapper).addClass('is-drilldown');
if(this.options.animateHeight)this.$wrapper.addClass('animate-height');
this.$element.wrap(this.$wrapper);
}
this.$wrapper=this.$element.parent();
this.$wrapper.css(this._getMaxDims());
}
},{
key:'_resize',
value:function _resize(){
this.$wrapper.css({'max-width':'none','min-height':'none'});
this.$wrapper.css(this._getMaxDims());
}
},{
key:'_events',
value:function _events($elem){
var _this=this;
$elem.off('click.zf.drilldown').on('click.zf.drilldown',function(e){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).parentsUntil('ul','li').hasClass('is-drilldown-submenu-parent')){
e.stopImmediatePropagation();
e.preventDefault();
}
_this._show($elem.parent('li'));
if(_this.options.closeOnClick){
var $body=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body');
$body.off('.zf.drilldown').on('click.zf.drilldown',function(e){
if(e.target===_this.$element[0]||__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.contains(_this.$element[0],e.target)){
return;
}
e.preventDefault();
_this._hideAll();
$body.off('.zf.drilldown');
});
}
});
}
},{
key:'_registerEvents',
value:function _registerEvents(){
if(this.options.scrollTop){
this._bindHandler=this._scrollTop.bind(this);
this.$element.on('open.zf.drilldown hide.zf.drilldown closed.zf.drilldown',this._bindHandler);
}
this.$element.on('mutateme.zf.trigger',this._resize.bind(this));
}
},{
key:'_scrollTop',
value:function _scrollTop(){
var _this=this;
var $scrollTopElement=_this.options.scrollTopElement!=''?__WEBPACK_IMPORTED_MODULE_0_jquery___default()(_this.options.scrollTopElement):_this.$element,
scrollPos=parseInt($scrollTopElement.offset().top+_this.options.scrollTopOffset,10);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').stop(true).animate({scrollTop:scrollPos},_this.options.animationDuration,_this.options.animationEasing,function(){
if(this===__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html')[0])_this.$element.trigger('scrollme.zf.drilldown');
});
}
},{
key:'_keyboardEvents',
value:function _keyboardEvents(){
var _this=this;
this.$menuItems.add(this.$element.find('.js-drilldown-back > a, .is-submenu-parent-item > a')).on('keydown.zf.drilldown',function(e){
var $element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$elements=$element.parent('li').parent('ul').children('li').children('a'),
$prevElement,
$nextElement;
$elements.each(function(i){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is($element)){
$prevElement=$elements.eq(Math.max(0,i-1));
$nextElement=$elements.eq(Math.min(i+1,$elements.length-1));
return;
}
});
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Drilldown',{
next:function(){
if($element.is(_this.$submenuAnchors)){
_this._show($element.parent('li'));
$element.parent('li').one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])($element),function(){
$element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();
});
return true;
}
},
previous:function(){
_this._hide($element.parent('li').parent('ul'));
$element.parent('li').parent('ul').one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])($element),function(){
setTimeout(function(){
$element.parent('li').parent('ul').parent('li').children('a').first().focus();
},1);
});
return true;
},
up:function(){
$prevElement.focus();
return!$element.is(_this.$element.find('> li:first-child > a'));
},
down:function(){
$nextElement.focus();
return!$element.is(_this.$element.find('> li:last-child > a'));
},
close:function(){
if(!$element.is(_this.$element.find('> li > a'))){
_this._hide($element.parent().parent());
$element.parent().parent().siblings('a').focus();
}
},
open:function(){
if(!$element.is(_this.$menuItems)){
_this._hide($element.parent('li').parent('ul'));
$element.parent('li').parent('ul').one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])($element),function(){
setTimeout(function(){
$element.parent('li').parent('ul').parent('li').children('a').first().focus();
},1);
});
return true;
}else if($element.is(_this.$submenuAnchors)){
_this._show($element.parent('li'));
$element.parent('li').one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])($element),function(){
$element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();
});
return true;
}
},
handled:function(preventDefault){
if(preventDefault){
e.preventDefault();
}
e.stopImmediatePropagation();
}
});
});
}
},{
key:'_hideAll',
value:function _hideAll(){
var $elem=this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');
if(this.options.autoHeight)this.$wrapper.css({height:$elem.parent().closest('ul').data('calcHeight')});
$elem.one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])($elem),function(e){
$elem.removeClass('is-active is-closing');
});
this.$element.trigger('closed.zf.drilldown');
}
},{
key:'_back',
value:function _back($elem){
var _this=this;
$elem.off('click.zf.drilldown');
$elem.children('.js-drilldown-back').on('click.zf.drilldown',function(e){
e.stopImmediatePropagation();
_this._hide($elem);
var parentSubMenu=$elem.parent('li').parent('ul').parent('li');
if(parentSubMenu.length){
_this._show(parentSubMenu);
}
});
}
},{
key:'_menuLinkEvents',
value:function _menuLinkEvents(){
var _this=this;
this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown',function(e){
setTimeout(function(){
_this._hideAll();
},0);
});
}
},{
key:'_show',
value:function _show($elem){
if(this.options.autoHeight)this.$wrapper.css({height:$elem.children('[data-submenu]').data('calcHeight')});
$elem.attr('aria-expanded',true);
$elem.children('[data-submenu]').addClass('is-active').removeClass('invisible').attr('aria-hidden',false);
this.$element.trigger('open.zf.drilldown',[$elem]);
}
},{
key:'_hide',
value:function _hide($elem){
if(this.options.autoHeight)this.$wrapper.css({height:$elem.parent().closest('ul').data('calcHeight')});
var _this=this;
$elem.parent('li').attr('aria-expanded',false);
$elem.attr('aria-hidden',true).addClass('is-closing');
$elem.addClass('is-closing').one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])($elem),function(){
$elem.removeClass('is-active is-closing');
$elem.blur().addClass('invisible');
});
$elem.trigger('hide.zf.drilldown',[$elem]);
}
},{
key:'_getMaxDims',
value:function _getMaxDims(){
var maxHeight=0,
result={},
_this=this;
this.$submenus.add(this.$element).each(function(){
var numOfElems=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).children('li').length;
var height=__WEBPACK_IMPORTED_MODULE_4__foundation_util_box__["a"].GetDimensions(this).height;
maxHeight=height>maxHeight?height:maxHeight;
if(_this.options.autoHeight){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('calcHeight',height);
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).hasClass('is-drilldown-submenu'))result['height']=height;
}
});
if(!this.options.autoHeight)result['min-height']=maxHeight+'px';
result['max-width']=this.$element[0].getBoundingClientRect().width+'px';
return result;
}
},{
key:'_destroy',
value:function _destroy(){
if(this.options.scrollTop)this.$element.off('.zf.drilldown',this._bindHandler);
this._hideAll();
this.$element.off('mutateme.zf.trigger');
__WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__["a"].Burn(this.$element,'drilldown');
this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');
this.$submenuAnchors.each(function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).off('.zf.drilldown');
});
this.$submenus.removeClass('drilldown-submenu-cover-previous invisible');
this.$element.find('a').each(function(){
var $link=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this);
$link.removeAttr('tabindex');
if($link.data('savedHref')){
$link.attr('href',$link.data('savedHref')).removeData('savedHref');
}else{
return;
}
});
}
}]);
return Drilldown;
}(__WEBPACK_IMPORTED_MODULE_5__foundation_plugin__["a"]);
Drilldown.defaults={
autoApplyClass:true,
backButton:'<li class="js-drilldown-back"><a tabindex="0">Back</a></li>',
backButtonPosition:'top',
wrapper:'<div></div>',
parentLink:false,
closeOnClick:false,
autoHeight:false,
animateHeight:false,
scrollTop:false,
scrollTopElement:'',
scrollTopOffset:0,
animationDuration:500,
animationEasing:'swing'
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return DropdownMenu;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__=__webpack_require__(9);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_box__=__webpack_require__(7);
var __WEBPACK_IMPORTED_MODULE_4__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_5__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var DropdownMenu=function(_Plugin){
_inherits(DropdownMenu,_Plugin);
function DropdownMenu(){
_classCallCheck(this,DropdownMenu);
return _possibleConstructorReturn(this,(DropdownMenu.__proto__||Object.getPrototypeOf(DropdownMenu)).apply(this,arguments));
}
_createClass(DropdownMenu,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},DropdownMenu.defaults,this.$element.data(),options);
this.className='DropdownMenu';
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('DropdownMenu',{
'ENTER':'open',
'SPACE':'open',
'ARROW_RIGHT':'next',
'ARROW_UP':'up',
'ARROW_DOWN':'down',
'ARROW_LEFT':'previous',
'ESCAPE':'close'
});
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__["a"].Feather(this.$element,'dropdown');
var subs=this.$element.find('li.is-dropdown-submenu-parent');
this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');
this.$menuItems=this.$element.find('[role="menuitem"]');
this.$tabs=this.$element.children('[role="menuitem"]');
this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);
if(this.options.alignment==='auto'){
if(this.$element.hasClass(this.options.rightClass)||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__foundation_util_core__["a"])()||this.$element.parents('.top-bar-right').is('*')){
this.options.alignment='right';
subs.addClass('opens-left');
}else{
this.options.alignment='left';
subs.addClass('opens-right');
}
}else{
if(this.options.alignment==='right'){
subs.addClass('opens-left');
}else{
subs.addClass('opens-right');
}
}
this.changed=false;
this._events();
}
},{
key:'_isVertical',
value:function _isVertical(){
return this.$tabs.css('display')==='block'||this.$element.css('flex-direction')==='column';
}
},{
key:'_isRtl',
value:function _isRtl(){
return this.$element.hasClass('align-right')||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__foundation_util_core__["a"])()&&!this.$element.hasClass('align-left');
}
},{
key:'_events',
value:function _events(){
var _this=this,
hasTouch='ontouchstart'in window||typeof window.ontouchstart!=='undefined',
parClass='is-dropdown-submenu-parent';
var handleClickFn=function(e){
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).parentsUntil('ul','.'+parClass),
hasSub=$elem.hasClass(parClass),
hasClicked=$elem.attr('data-is-click')==='true',
$sub=$elem.children('.is-dropdown-submenu');
if(hasSub){
if(hasClicked){
if(!_this.options.closeOnClick||!_this.options.clickOpen&&!hasTouch||_this.options.forceFollow&&hasTouch){
return;
}else{
e.stopImmediatePropagation();
e.preventDefault();
_this._hide($elem);
}
}else{
e.preventDefault();
e.stopImmediatePropagation();
_this._show($sub);
$elem.add($elem.parentsUntil(_this.$element,'.'+parClass)).attr('data-is-click',true);
}
}
};
if(this.options.clickOpen||hasTouch){
this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu',handleClickFn);
}
if(_this.options.closeOnClickInside){
this.$menuItems.on('click.zf.dropdownmenu',function(e){
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
hasSub=$elem.hasClass(parClass);
if(!hasSub){
_this._hide();
}
});
}
if(!this.options.disableHover){
this.$menuItems.on('mouseenter.zf.dropdownmenu',function(e){
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
hasSub=$elem.hasClass(parClass);
if(hasSub){
clearTimeout($elem.data('_delay'));
$elem.data('_delay',setTimeout(function(){
_this._show($elem.children('.is-dropdown-submenu'));
},_this.options.hoverDelay));
}
}).on('mouseleave.zf.dropdownmenu',function(e){
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
hasSub=$elem.hasClass(parClass);
if(hasSub&&_this.options.autoclose){
if($elem.attr('data-is-click')==='true'&&_this.options.clickOpen){
return false;
}
clearTimeout($elem.data('_delay'));
$elem.data('_delay',setTimeout(function(){
_this._hide($elem);
},_this.options.closingTime));
}
});
}
this.$menuItems.on('keydown.zf.dropdownmenu',function(e){
var $element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).parentsUntil('ul','[role="menuitem"]'),
isTab=_this.$tabs.index($element)>-1,
$elements=isTab?_this.$tabs:$element.siblings('li').add($element),
$prevElement,
$nextElement;
$elements.each(function(i){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is($element)){
$prevElement=$elements.eq(i-1);
$nextElement=$elements.eq(i+1);
return;
}
});
var nextSibling=function(){
$nextElement.children('a:first').focus();
e.preventDefault();
},
prevSibling=function(){
$prevElement.children('a:first').focus();
e.preventDefault();
},
openSub=function(){
var $sub=$element.children('ul.is-dropdown-submenu');
if($sub.length){
_this._show($sub);
$element.find('li > a:first').focus();
e.preventDefault();
}else{
return;
}
},
closeSub=function(){
var close=$element.parent('ul').parent('li');
close.children('a:first').focus();
_this._hide(close);
e.preventDefault();
};
var functions={
open:openSub,
close:function(){
_this._hide(_this.$element);
_this.$menuItems.eq(0).children('a').focus();
e.preventDefault();
},
handled:function(){
e.stopImmediatePropagation();
}
};
if(isTab){
if(_this._isVertical()){
if(_this._isRtl()){
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(functions,{
down:nextSibling,
up:prevSibling,
next:closeSub,
previous:openSub
});
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(functions,{
down:nextSibling,
up:prevSibling,
next:openSub,
previous:closeSub
});
}
}else{
if(_this._isRtl()){
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(functions,{
next:prevSibling,
previous:nextSibling,
down:openSub,
up:closeSub
});
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(functions,{
next:nextSibling,
previous:prevSibling,
down:openSub,
up:closeSub
});
}
}
}else{
if(_this._isRtl()){
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(functions,{
next:closeSub,
previous:openSub,
down:nextSibling,
up:prevSibling
});
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(functions,{
next:openSub,
previous:closeSub,
down:nextSibling,
up:prevSibling
});
}
}
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'DropdownMenu',functions);
});
}
},{
key:'_addBodyHandler',
value:function _addBodyHandler(){
var $body=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document.body),
_this=this;
$body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu',function(e){
var $link=_this.$element.find(e.target);
if($link.length){
return;
}
_this._hide();
$body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');
});
}
},{
key:'_show',
value:function _show($sub){
var idx=this.$tabs.index(this.$tabs.filter(function(i,el){
return __WEBPACK_IMPORTED_MODULE_0_jquery___default()(el).find($sub).length>0;
}));
var $sibs=$sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');
this._hide($sibs,idx);
$sub.css('visibility','hidden').addClass('js-dropdown-active').parent('li.is-dropdown-submenu-parent').addClass('is-active');
var clear=__WEBPACK_IMPORTED_MODULE_3__foundation_util_box__["a"].ImNotTouchingYou($sub,null,true);
if(!clear){
var oldClass=this.options.alignment==='left'?'-right':'-left',
$parentLi=$sub.parent('.is-dropdown-submenu-parent');
$parentLi.removeClass('opens'+oldClass).addClass('opens-'+this.options.alignment);
clear=__WEBPACK_IMPORTED_MODULE_3__foundation_util_box__["a"].ImNotTouchingYou($sub,null,true);
if(!clear){
$parentLi.removeClass('opens-'+this.options.alignment).addClass('opens-inner');
}
this.changed=true;
}
$sub.css('visibility','');
if(this.options.closeOnClick){
this._addBodyHandler();
}
this.$element.trigger('show.zf.dropdownmenu',[$sub]);
}
},{
key:'_hide',
value:function _hide($elem,idx){
var $toClose;
if($elem&&$elem.length){
$toClose=$elem;
}else if(idx!==undefined){
$toClose=this.$tabs.not(function(i,el){
return i===idx;
});
}else{
$toClose=this.$element;
}
var somethingToClose=$toClose.hasClass('is-active')||$toClose.find('.is-active').length>0;
if(somethingToClose){
$toClose.find('li.is-active').add($toClose).attr({
'data-is-click':false
}).removeClass('is-active');
$toClose.find('ul.js-dropdown-active').removeClass('js-dropdown-active');
if(this.changed||$toClose.find('opens-inner').length){
var oldClass=this.options.alignment==='left'?'right':'left';
$toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-'+this.options.alignment).addClass('opens-'+oldClass);
this.changed=false;
}
this.$element.trigger('hide.zf.dropdownmenu',[$toClose]);
}
}
},{
key:'_destroy',
value:function _destroy(){
this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document.body).off('.zf.dropdownmenu');
__WEBPACK_IMPORTED_MODULE_2__foundation_util_nest__["a"].Burn(this.$element,'dropdown');
}
}]);
return DropdownMenu;
}(__WEBPACK_IMPORTED_MODULE_5__foundation_plugin__["a"]);
DropdownMenu.defaults={
disableHover:false,
autoclose:true,
hoverDelay:50,
clickOpen:false,
closingTime:500,
alignment:'auto',
closeOnClick:true,
closeOnClickInside:true,
verticalClass:'vertical',
rightClass:'align-right',
forceFollow:true
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Positionable;});
var __WEBPACK_IMPORTED_MODULE_0__foundation_util_box__=__webpack_require__(7);
var __WEBPACK_IMPORTED_MODULE_1__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_core__=__webpack_require__(1);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var POSITIONS=['left','right','top','bottom'];
var VERTICAL_ALIGNMENTS=['top','bottom','center'];
var HORIZONTAL_ALIGNMENTS=['left','right','center'];
var ALIGNMENTS={
'left':VERTICAL_ALIGNMENTS,
'right':VERTICAL_ALIGNMENTS,
'top':HORIZONTAL_ALIGNMENTS,
'bottom':HORIZONTAL_ALIGNMENTS
};
function nextItem(item,array){
var currentIdx=array.indexOf(item);
if(currentIdx===array.length-1){
return array[0];
}else{
return array[currentIdx+1];
}
}
var Positionable=function(_Plugin){
_inherits(Positionable,_Plugin);
function Positionable(){
_classCallCheck(this,Positionable);
return _possibleConstructorReturn(this,(Positionable.__proto__||Object.getPrototypeOf(Positionable)).apply(this,arguments));
}
_createClass(Positionable,[{
key:'_init',
value:function _init(){
this.triedPositions={};
this.position=this.options.position==='auto'?this._getDefaultPosition():this.options.position;
this.alignment=this.options.alignment==='auto'?this._getDefaultAlignment():this.options.alignment;
}
},{
key:'_getDefaultPosition',
value:function _getDefaultPosition(){
return'bottom';
}
},{
key:'_getDefaultAlignment',
value:function _getDefaultAlignment(){
switch(this.position){
case'bottom':
case'top':
return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["a"])()?'right':'left';
case'left':
case'right':
return'bottom';
}
}
},{
key:'_reposition',
value:function _reposition(){
if(this._alignmentsExhausted(this.position)){
this.position=nextItem(this.position,POSITIONS);
this.alignment=ALIGNMENTS[this.position][0];
}else{
this._realign();
}
}
},{
key:'_realign',
value:function _realign(){
this._addTriedPosition(this.position,this.alignment);
this.alignment=nextItem(this.alignment,ALIGNMENTS[this.position]);
}
},{
key:'_addTriedPosition',
value:function _addTriedPosition(position,alignment){
this.triedPositions[position]=this.triedPositions[position]||[];
this.triedPositions[position].push(alignment);
}
},{
key:'_positionsExhausted',
value:function _positionsExhausted(){
var isExhausted=true;
for(var i=0;i<POSITIONS.length;i++){
isExhausted=isExhausted&&this._alignmentsExhausted(POSITIONS[i]);
}
return isExhausted;
}
},{
key:'_alignmentsExhausted',
value:function _alignmentsExhausted(position){
return this.triedPositions[position]&&this.triedPositions[position].length==ALIGNMENTS[position].length;
}
},{
key:'_getVOffset',
value:function _getVOffset(){
return this.options.vOffset;
}
},{
key:'_getHOffset',
value:function _getHOffset(){
return this.options.hOffset;
}
},{
key:'_setPosition',
value:function _setPosition($anchor,$element,$parent){
if($anchor.attr('aria-expanded')==='false'){
return false;
}
var $eleDims=__WEBPACK_IMPORTED_MODULE_0__foundation_util_box__["a"].GetDimensions($element),
$anchorDims=__WEBPACK_IMPORTED_MODULE_0__foundation_util_box__["a"].GetDimensions($anchor);
$element.offset(__WEBPACK_IMPORTED_MODULE_0__foundation_util_box__["a"].GetExplicitOffsets($element,$anchor,this.position,this.alignment,this._getVOffset(),this._getHOffset()));
if(!this.options.allowOverlap){
var overlaps={};
var minOverlap=100000000;
var minCoordinates={position:this.position,alignment:this.alignment};
while(!this._positionsExhausted()){
var overlap=__WEBPACK_IMPORTED_MODULE_0__foundation_util_box__["a"].OverlapArea($element,$parent,false,false,this.options.allowBottomOverlap);
if(overlap===0){
return;
}
if(overlap<minOverlap){
minOverlap=overlap;
minCoordinates={position:this.position,alignment:this.alignment};
}
this._reposition();
$element.offset(__WEBPACK_IMPORTED_MODULE_0__foundation_util_box__["a"].GetExplicitOffsets($element,$anchor,this.position,this.alignment,this._getVOffset(),this._getHOffset()));
}
this.position=minCoordinates.position;
this.alignment=minCoordinates.alignment;
$element.offset(__WEBPACK_IMPORTED_MODULE_0__foundation_util_box__["a"].GetExplicitOffsets($element,$anchor,this.position,this.alignment,this._getVOffset(),this._getHOffset()));
}
}
}]);
return Positionable;
}(__WEBPACK_IMPORTED_MODULE_1__foundation_plugin__["a"]);
Positionable.defaults={
position:'auto',
alignment:'auto',
allowOverlap:false,
allowBottomOverlap:true,
vOffset:0,
hOffset:0
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return SmoothScroll;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_2__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var SmoothScroll=function(_Plugin){
_inherits(SmoothScroll,_Plugin);
function SmoothScroll(){
_classCallCheck(this,SmoothScroll);
return _possibleConstructorReturn(this,(SmoothScroll.__proto__||Object.getPrototypeOf(SmoothScroll)).apply(this,arguments));
}
_createClass(SmoothScroll,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},SmoothScroll.defaults,this.$element.data(),options);
this.className='SmoothScroll';
this._init();
}
},{
key:'_init',
value:function _init(){
var id=this.$element[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["b"])(6,'smooth-scroll');
var _this=this;
this.$element.attr({
'id':id
});
this._events();
}
},{
key:'_events',
value:function _events(){
var _this=this;
var handleLinkClick=function(e){
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is('a[href^="#"]')){
return false;
}
var arrival=this.getAttribute('href');
_this._inTransition=true;
SmoothScroll.scrollToLoc(arrival,_this.options,function(){
_this._inTransition=false;
});
e.preventDefault();
};
this.$element.on('click.zf.smoothScroll',handleLinkClick);
this.$element.on('click.zf.smoothScroll','a[href^="#"]',handleLinkClick);
}
}],[{
key:'scrollToLoc',
value:function scrollToLoc(loc){
var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:SmoothScroll.defaults;
var callback=arguments[2];
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(loc).length){
return false;
}
var scrollPos=Math.round(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(loc).offset().top-options.threshold/2-options.offset);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').stop(true).animate({scrollTop:scrollPos},options.animationDuration,options.animationEasing,function(){
if(callback&&typeof callback=="function"){
callback();
}
});
}
}]);
return SmoothScroll;
}(__WEBPACK_IMPORTED_MODULE_2__foundation_plugin__["a"]);
SmoothScroll.defaults={
animationDuration:500,
animationEasing:'linear',
threshold:50,
offset:0
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Tabs;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_imageLoader__=__webpack_require__(8);
var __WEBPACK_IMPORTED_MODULE_3__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Tabs=function(_Plugin){
_inherits(Tabs,_Plugin);
function Tabs(){
_classCallCheck(this,Tabs);
return _possibleConstructorReturn(this,(Tabs.__proto__||Object.getPrototypeOf(Tabs)).apply(this,arguments));
}
_createClass(Tabs,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Tabs.defaults,this.$element.data(),options);
this.className='Tabs';
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Tabs',{
'ENTER':'open',
'SPACE':'open',
'ARROW_RIGHT':'next',
'ARROW_UP':'previous',
'ARROW_DOWN':'next',
'ARROW_LEFT':'previous'
});
}
},{
key:'_init',
value:function _init(){
var _this3=this;
var _this=this;
this.$element.attr({'role':'tablist'});
this.$tabTitles=this.$element.find('.'+this.options.linkClass);
this.$tabContent=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-tabs-content="'+this.$element[0].id+'"]');
this.$tabTitles.each(function(){
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$link=$elem.find('a'),
isActive=$elem.hasClass(''+_this.options.linkActiveClass),
hash=$link.attr('data-tabs-target')||$link[0].hash.slice(1),
linkId=$link[0].id?$link[0].id:hash+'-label',
$tabContent=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+hash);
$elem.attr({'role':'presentation'});
$link.attr({
'role':'tab',
'aria-controls':hash,
'aria-selected':isActive,
'id':linkId,
'tabindex':isActive?'0':'-1'
});
$tabContent.attr({
'role':'tabpanel',
'aria-labelledby':linkId
});
if(!isActive){
$tabContent.attr('aria-hidden','true');
}
if(isActive&&_this.options.autoFocus){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).load(function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').animate({scrollTop:$elem.offset().top},_this.options.deepLinkSmudgeDelay,function(){
$link.focus();
});
});
}
});
if(this.options.matchHeight){
var $images=this.$tabContent.find('img');
if($images.length){
__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_imageLoader__["a"])($images,this._setHeight.bind(this));
}else{
this._setHeight();
}
}
this._checkDeepLink=function(){
var anchor=window.location.hash;
if(anchor.length){
var $link=_this3.$element.find('[href$="'+anchor+'"]');
if($link.length){
_this3.selectTab(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(anchor),true);
if(_this3.options.deepLinkSmudge){
var offset=_this3.$element.offset();
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').animate({scrollTop:offset.top},_this3.options.deepLinkSmudgeDelay);
}
_this3.$element.trigger('deeplink.zf.tabs',[$link,__WEBPACK_IMPORTED_MODULE_0_jquery___default()(anchor)]);
}
}
};
if(this.options.deepLink){
this._checkDeepLink();
}
this._events();
}
},{
key:'_events',
value:function _events(){
this._addKeyHandler();
this._addClickHandler();
this._setHeightMqHandler=null;
if(this.options.matchHeight){
this._setHeightMqHandler=this._setHeight.bind(this);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('changed.zf.mediaquery',this._setHeightMqHandler);
}
if(this.options.deepLink){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('popstate',this._checkDeepLink);
}
}
},{
key:'_addClickHandler',
value:function _addClickHandler(){
var _this=this;
this.$element.off('click.zf.tabs').on('click.zf.tabs','.'+this.options.linkClass,function(e){
e.preventDefault();
e.stopPropagation();
_this._handleTabChange(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this));
});
}
},{
key:'_addKeyHandler',
value:function _addKeyHandler(){
var _this=this;
this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs',function(e){
if(e.which===9)return;
var $element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
$elements=$element.parent('ul').children('li'),
$prevElement,
$nextElement;
$elements.each(function(i){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).is($element)){
if(_this.options.wrapOnKeys){
$prevElement=i===0?$elements.last():$elements.eq(i-1);
$nextElement=i===$elements.length-1?$elements.first():$elements.eq(i+1);
}else{
$prevElement=$elements.eq(Math.max(0,i-1));
$nextElement=$elements.eq(Math.min(i+1,$elements.length-1));
}
return;
}
});
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Tabs',{
open:function(){
$element.find('[role="tab"]').focus();
_this._handleTabChange($element);
},
previous:function(){
$prevElement.find('[role="tab"]').focus();
_this._handleTabChange($prevElement);
},
next:function(){
$nextElement.find('[role="tab"]').focus();
_this._handleTabChange($nextElement);
},
handled:function(){
e.stopPropagation();
e.preventDefault();
}
});
});
}
},{
key:'_handleTabChange',
value:function _handleTabChange($target,historyHandled){
if($target.hasClass(''+this.options.linkActiveClass)){
if(this.options.activeCollapse){
this._collapseTab($target);
this.$element.trigger('collapse.zf.tabs',[$target]);
}
return;
}
var $oldTab=this.$element.find('.'+this.options.linkClass+'.'+this.options.linkActiveClass),
$tabLink=$target.find('[role="tab"]'),
hash=$tabLink.attr('data-tabs-target')||$tabLink[0].hash.slice(1),
$targetContent=this.$tabContent.find('#'+hash);
this._collapseTab($oldTab);
this._openTab($target);
if(this.options.deepLink&&!historyHandled){
var anchor=$target.find('a').attr('href');
if(this.options.updateHistory){
history.pushState({},'',anchor);
}else{
history.replaceState({},'',anchor);
}
}
this.$element.trigger('change.zf.tabs',[$target,$targetContent]);
$targetContent.find("[data-mutate]").trigger("mutateme.zf.trigger");
}
},{
key:'_openTab',
value:function _openTab($target){
var $tabLink=$target.find('[role="tab"]'),
hash=$tabLink.attr('data-tabs-target')||$tabLink[0].hash.slice(1),
$targetContent=this.$tabContent.find('#'+hash);
$target.addClass(''+this.options.linkActiveClass);
$tabLink.attr({
'aria-selected':'true',
'tabindex':'0'
});
$targetContent.addClass(''+this.options.panelActiveClass).removeAttr('aria-hidden');
}
},{
key:'_collapseTab',
value:function _collapseTab($target){
var $target_anchor=$target.removeClass(''+this.options.linkActiveClass).find('[role="tab"]').attr({
'aria-selected':'false',
'tabindex':-1
});
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+$target_anchor.attr('aria-controls')).removeClass(''+this.options.panelActiveClass).attr({'aria-hidden':'true'});
}
},{
key:'selectTab',
value:function selectTab(elem,historyHandled){
var idStr;
if(typeof elem==='object'){
idStr=elem[0].id;
}else{
idStr=elem;
}
if(idStr.indexOf('#')<0){
idStr='#'+idStr;
}
var $target=this.$tabTitles.find('[href$="'+idStr+'"]').parent('.'+this.options.linkClass);
this._handleTabChange($target,historyHandled);
}
},{
key:'_setHeight',
value:function _setHeight(){
var max=0,
_this=this;
this.$tabContent.find('.'+this.options.panelClass).css('height','').each(function(){
var panel=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
isActive=panel.hasClass(''+_this.options.panelActiveClass);
if(!isActive){
panel.css({'visibility':'hidden','display':'block'});
}
var temp=this.getBoundingClientRect().height;
if(!isActive){
panel.css({
'visibility':'',
'display':''
});
}
max=temp>max?temp:max;
}).css('height',max+'px');
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.find('.'+this.options.linkClass).off('.zf.tabs').hide().end().find('.'+this.options.panelClass).hide();
if(this.options.matchHeight){
if(this._setHeightMqHandler!=null){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('changed.zf.mediaquery',this._setHeightMqHandler);
}
}
if(this.options.deepLink){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('popstate',this._checkDeepLink);
}
}
}]);
return Tabs;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_plugin__["a"]);
Tabs.defaults={
deepLink:false,
deepLinkSmudge:false,
deepLinkSmudgeDelay:300,
updateHistory:false,
autoFocus:false,
wrapOnKeys:true,
matchHeight:false,
activeCollapse:false,
linkClass:'tabs-title',
linkActiveClass:'is-active',
panelClass:'tabs-panel',
panelActiveClass:'is-active'
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Timer;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
function Timer(elem,options,cb){
var _this=this,
duration=options.duration,
nameSpace=Object.keys(elem.data())[0]||'timer',
remain=-1,
start,
timer;
this.isPaused=false;
this.restart=function(){
remain=-1;
clearTimeout(timer);
this.start();
};
this.start=function(){
this.isPaused=false;
clearTimeout(timer);
remain=remain<=0?duration:remain;
elem.data('paused',false);
start=Date.now();
timer=setTimeout(function(){
if(options.infinite){
_this.restart();
}
if(cb&&typeof cb==='function'){
cb();
}
},remain);
elem.trigger('timerstart.zf.'+nameSpace);
};
this.pause=function(){
this.isPaused=true;
clearTimeout(timer);
elem.data('paused',true);
var end=Date.now();
remain=remain-(end-start);
elem.trigger('timerpaused.zf.'+nameSpace);
};
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
Object.defineProperty(__webpack_exports__,"__esModule",{value:true});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_core__=__webpack_require__(21);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_box__=__webpack_require__(7);
var __WEBPACK_IMPORTED_MODULE_4__foundation_util_imageLoader__=__webpack_require__(8);
var __WEBPACK_IMPORTED_MODULE_5__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_6__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_7__foundation_util_motion__=__webpack_require__(6);
var __WEBPACK_IMPORTED_MODULE_8__foundation_util_nest__=__webpack_require__(9);
var __WEBPACK_IMPORTED_MODULE_9__foundation_util_timer__=__webpack_require__(18);
var __WEBPACK_IMPORTED_MODULE_10__foundation_util_touch__=__webpack_require__(10);
var __WEBPACK_IMPORTED_MODULE_11__foundation_util_triggers__=__webpack_require__(5);
var __WEBPACK_IMPORTED_MODULE_12__foundation_abide__=__webpack_require__(20);
var __WEBPACK_IMPORTED_MODULE_13__foundation_accordion__=__webpack_require__(11);
var __WEBPACK_IMPORTED_MODULE_14__foundation_accordionMenu__=__webpack_require__(12);
var __WEBPACK_IMPORTED_MODULE_15__foundation_drilldown__=__webpack_require__(13);
var __WEBPACK_IMPORTED_MODULE_16__foundation_dropdown__=__webpack_require__(22);
var __WEBPACK_IMPORTED_MODULE_17__foundation_dropdownMenu__=__webpack_require__(14);
var __WEBPACK_IMPORTED_MODULE_18__foundation_equalizer__=__webpack_require__(23);
var __WEBPACK_IMPORTED_MODULE_19__foundation_interchange__=__webpack_require__(24);
var __WEBPACK_IMPORTED_MODULE_20__foundation_magellan__=__webpack_require__(25);
var __WEBPACK_IMPORTED_MODULE_21__foundation_offcanvas__=__webpack_require__(26);
var __WEBPACK_IMPORTED_MODULE_22__foundation_orbit__=__webpack_require__(27);
var __WEBPACK_IMPORTED_MODULE_23__foundation_responsiveMenu__=__webpack_require__(29);
var __WEBPACK_IMPORTED_MODULE_24__foundation_responsiveToggle__=__webpack_require__(30);
var __WEBPACK_IMPORTED_MODULE_25__foundation_reveal__=__webpack_require__(31);
var __WEBPACK_IMPORTED_MODULE_26__foundation_slider__=__webpack_require__(32);
var __WEBPACK_IMPORTED_MODULE_27__foundation_smoothScroll__=__webpack_require__(16);
var __WEBPACK_IMPORTED_MODULE_28__foundation_sticky__=__webpack_require__(33);
var __WEBPACK_IMPORTED_MODULE_29__foundation_tabs__=__webpack_require__(17);
var __WEBPACK_IMPORTED_MODULE_30__foundation_toggler__=__webpack_require__(34);
var __WEBPACK_IMPORTED_MODULE_31__foundation_tooltip__=__webpack_require__(35);
var __WEBPACK_IMPORTED_MODULE_32__foundation_responsiveAccordionTabs__=__webpack_require__(28);
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].addToJquery(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].rtl=__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].GetYoDigits=__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["b"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].transitionend=__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["c"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].Box=__WEBPACK_IMPORTED_MODULE_3__foundation_util_box__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].onImagesLoaded=__WEBPACK_IMPORTED_MODULE_4__foundation_util_imageLoader__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].Keyboard=__WEBPACK_IMPORTED_MODULE_5__foundation_util_keyboard__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].MediaQuery=__WEBPACK_IMPORTED_MODULE_6__foundation_util_mediaQuery__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].Motion=__WEBPACK_IMPORTED_MODULE_7__foundation_util_motion__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].Move=__WEBPACK_IMPORTED_MODULE_7__foundation_util_motion__["b"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].Nest=__WEBPACK_IMPORTED_MODULE_8__foundation_util_nest__["a"];
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].Timer=__WEBPACK_IMPORTED_MODULE_9__foundation_util_timer__["a"];
__WEBPACK_IMPORTED_MODULE_10__foundation_util_touch__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
__WEBPACK_IMPORTED_MODULE_11__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a,__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"]);
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_12__foundation_abide__["a"],'Abide');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_13__foundation_accordion__["a"],'Accordion');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_14__foundation_accordionMenu__["a"],'AccordionMenu');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_15__foundation_drilldown__["a"],'Drilldown');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_16__foundation_dropdown__["a"],'Dropdown');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_17__foundation_dropdownMenu__["a"],'DropdownMenu');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_18__foundation_equalizer__["a"],'Equalizer');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_19__foundation_interchange__["a"],'Interchange');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_20__foundation_magellan__["a"],'Magellan');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_21__foundation_offcanvas__["a"],'OffCanvas');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_22__foundation_orbit__["a"],'Orbit');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_23__foundation_responsiveMenu__["a"],'ResponsiveMenu');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_24__foundation_responsiveToggle__["a"],'ResponsiveToggle');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_25__foundation_reveal__["a"],'Reveal');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_26__foundation_slider__["a"],'Slider');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_27__foundation_smoothScroll__["a"],'SmoothScroll');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_28__foundation_sticky__["a"],'Sticky');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_29__foundation_tabs__["a"],'Tabs');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_30__foundation_toggler__["a"],'Toggler');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_31__foundation_tooltip__["a"],'Tooltip');
__WEBPACK_IMPORTED_MODULE_1__foundation_core__["a"].plugin(__WEBPACK_IMPORTED_MODULE_32__foundation_responsiveAccordionTabs__["a"],'ResponsiveAccordionTabs');
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Abide;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Abide=function(_Plugin){
_inherits(Abide,_Plugin);
function Abide(){
_classCallCheck(this,Abide);
return _possibleConstructorReturn(this,(Abide.__proto__||Object.getPrototypeOf(Abide)).apply(this,arguments));
}
_createClass(Abide,[{
key:'_setup',
value:function _setup(element){
var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(true,{},Abide.defaults,this.$element.data(),options);
this.className='Abide';
this._init();
}
},{
key:'_init',
value:function _init(){
this.$inputs=this.$element.find('input, textarea, select');
this._events();
}
},{
key:'_events',
value:function _events(){
var _this3=this;
this.$element.off('.abide').on('reset.zf.abide',function(){
_this3.resetForm();
}).on('submit.zf.abide',function(){
return _this3.validateForm();
});
if(this.options.validateOn==='fieldChange'){
this.$inputs.off('change.zf.abide').on('change.zf.abide',function(e){
_this3.validateInput(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target));
});
}
if(this.options.liveValidate){
this.$inputs.off('input.zf.abide').on('input.zf.abide',function(e){
_this3.validateInput(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target));
});
}
if(this.options.validateOnBlur){
this.$inputs.off('blur.zf.abide').on('blur.zf.abide',function(e){
_this3.validateInput(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target));
});
}
}
},{
key:'_reflow',
value:function _reflow(){
this._init();
}
},{
key:'requiredCheck',
value:function requiredCheck($el){
if(!$el.attr('required'))return true;
var isGood=true;
switch($el[0].type){
case'checkbox':
isGood=$el[0].checked;
break;
case'select':
case'select-one':
case'select-multiple':
var opt=$el.find('option:selected');
if(!opt.length||!opt.val())isGood=false;
break;
default:
if(!$el.val()||!$el.val().length)isGood=false;
}
return isGood;
}
},{
key:'findFormError',
value:function findFormError($el){
var id=$el[0].id;
var $error=$el.siblings(this.options.formErrorSelector);
if(!$error.length){
$error=$el.parent().find(this.options.formErrorSelector);
}
$error=$error.add(this.$element.find('[data-form-error-for="'+id+'"]'));
return $error;
}
},{
key:'findLabel',
value:function findLabel($el){
var id=$el[0].id;
var $label=this.$element.find('label[for="'+id+'"]');
if(!$label.length){
return $el.closest('label');
}
return $label;
}
},{
key:'findRadioLabels',
value:function findRadioLabels($els){
var _this4=this;
var labels=$els.map(function(i,el){
var id=el.id;
var $label=_this4.$element.find('label[for="'+id+'"]');
if(!$label.length){
$label=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(el).closest('label');
}
return $label[0];
});
return __WEBPACK_IMPORTED_MODULE_0_jquery___default()(labels);
}
},{
key:'addErrorClasses',
value:function addErrorClasses($el){
var $label=this.findLabel($el);
var $formError=this.findFormError($el);
if($label.length){
$label.addClass(this.options.labelErrorClass);
}
if($formError.length){
$formError.addClass(this.options.formErrorClass);
}
$el.addClass(this.options.inputErrorClass).attr('data-invalid','');
}
},{
key:'removeRadioErrorClasses',
value:function removeRadioErrorClasses(groupName){
var $els=this.$element.find(':radio[name="'+groupName+'"]');
var $labels=this.findRadioLabels($els);
var $formErrors=this.findFormError($els);
if($labels.length){
$labels.removeClass(this.options.labelErrorClass);
}
if($formErrors.length){
$formErrors.removeClass(this.options.formErrorClass);
}
$els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');
}
},{
key:'removeErrorClasses',
value:function removeErrorClasses($el){
if($el[0].type=='radio'){
return this.removeRadioErrorClasses($el.attr('name'));
}
var $label=this.findLabel($el);
var $formError=this.findFormError($el);
if($label.length){
$label.removeClass(this.options.labelErrorClass);
}
if($formError.length){
$formError.removeClass(this.options.formErrorClass);
}
$el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');
}
},{
key:'validateInput',
value:function validateInput($el){
var clearRequire=this.requiredCheck($el),
validated=false,
customValidator=true,
validator=$el.attr('data-validator'),
equalTo=true;
if($el.is('[data-abide-ignore]')||$el.is('[type="hidden"]')||$el.is('[disabled]')){
return true;
}
switch($el[0].type){
case'radio':
validated=this.validateRadio($el.attr('name'));
break;
case'checkbox':
validated=clearRequire;
break;
case'select':
case'select-one':
case'select-multiple':
validated=clearRequire;
break;
default:
validated=this.validateText($el);
}
if(validator){
customValidator=this.matchValidation($el,validator,$el.attr('required'));
}
if($el.attr('data-equalto')){
equalTo=this.options.validators.equalTo($el);
}
var goodToGo=[clearRequire,validated,customValidator,equalTo].indexOf(false)===-1;
var message=(goodToGo?'valid':'invalid')+'.zf.abide';
if(goodToGo){
var dependentElements=this.$element.find('[data-equalto="'+$el.attr('id')+'"]');
if(dependentElements.length){
var _this=this;
dependentElements.each(function(){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).val()){
_this.validateInput(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this));
}
});
}
}
this[goodToGo?'removeErrorClasses':'addErrorClasses']($el);
$el.trigger(message,[$el]);
return goodToGo;
}
},{
key:'validateForm',
value:function validateForm(){
var acc=[];
var _this=this;
this.$inputs.each(function(){
acc.push(_this.validateInput(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this)));
});
var noError=acc.indexOf(false)===-1;
this.$element.find('[data-abide-error]').css('display',noError?'none':'block');
this.$element.trigger((noError?'formvalid':'forminvalid')+'.zf.abide',[this.$element]);
return noError;
}
},{
key:'validateText',
value:function validateText($el,pattern){
pattern=pattern||$el.attr('pattern')||$el.attr('type');
var inputText=$el.val();
var valid=false;
if(inputText.length){
if(this.options.patterns.hasOwnProperty(pattern)){
valid=this.options.patterns[pattern].test(inputText);
}
else if(pattern!==$el.attr('type')){
valid=new RegExp(pattern).test(inputText);
}else{
valid=true;
}
}
else if(!$el.prop('required')){
valid=true;
}
return valid;
}
},{
key:'validateRadio',
value:function validateRadio(groupName){
var $group=this.$element.find(':radio[name="'+groupName+'"]');
var valid=false,
required=false;
$group.each(function(i,e){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e).attr('required')){
required=true;
}
});
if(!required)valid=true;
if(!valid){
$group.each(function(i,e){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e).prop('checked')){
valid=true;
}
});
};
return valid;
}
},{
key:'matchValidation',
value:function matchValidation($el,validators,required){
var _this5=this;
required=required?true:false;
var clear=validators.split(' ').map(function(v){
return _this5.options.validators[v]($el,required,$el.parent());
});
return clear.indexOf(false)===-1;
}
},{
key:'resetForm',
value:function resetForm(){
var $form=this.$element,
opts=this.options;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('.'+opts.labelErrorClass,$form).not('small').removeClass(opts.labelErrorClass);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('.'+opts.inputErrorClass,$form).not('small').removeClass(opts.inputErrorClass);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(opts.formErrorSelector+'.'+opts.formErrorClass).removeClass(opts.formErrorClass);
$form.find('[data-abide-error]').css('display','none');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(':input',$form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(':input:radio',$form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(':input:checkbox',$form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');
$form.trigger('formreset.zf.abide',[$form]);
}
},{
key:'_destroy',
value:function _destroy(){
var _this=this;
this.$element.off('.abide').find('[data-abide-error]').css('display','none');
this.$inputs.off('.abide').each(function(){
_this.removeErrorClasses(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this));
});
}
}]);
return Abide;
}(__WEBPACK_IMPORTED_MODULE_1__foundation_plugin__["a"]);
Abide.defaults={
validateOn:'fieldChange',
labelErrorClass:'is-invalid-label',
inputErrorClass:'is-invalid-input',
formErrorSelector:'.form-error',
formErrorClass:'is-visible',
liveValidate:false,
validateOnBlur:false,
patterns:{
alpha:/^[a-zA-Z]+$/,
alpha_numeric:/^[a-zA-Z0-9]+$/,
integer:/^[-+]?\d+$/,
number:/^[-+]?\d*(?:[\.\,]\d+)?$/,
card:/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(?:222[1-9]|2[3-6][0-9]{2}|27[0-1][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/,
cvv:/^([0-9]){3,4}$/,
email:/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,
url:/^(https?|ftp|file|ssh):\/\/(((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/,
domain:/^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,8}$/,
datetime:/^([0-2][0-9]{3})\-([0-1][0-9])\-([0-3][0-9])T([0-5][0-9])\:([0-5][0-9])\:([0-5][0-9])(Z|([\-\+]([0-1][0-9])\:00))$/,
date:/(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,
time:/^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,
dateISO:/^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/,
month_day_year:/^(0[1-9]|1[012])[- \/.](0[1-9]|[12][0-9]|3[01])[- \/.]\d{4}$/,
day_month_year:/^(0[1-9]|[12][0-9]|3[01])[- \/.](0[1-9]|1[012])[- \/.]\d{4}$/,
color:/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,
website:{
test:function(text){
return Abide.defaults.patterns['domain'].test(text)||Abide.defaults.patterns['url'].test(text);
}
}
},
validators:{
equalTo:function(el,required,parent){
return __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+el.attr('data-equalto')).val()===el.val();
}
}
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Foundation;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__=__webpack_require__(4);
var FOUNDATION_VERSION='6.4.3';
var Foundation={
version:FOUNDATION_VERSION,
_plugins:{},
_uuids:[],
plugin:function(plugin,name){
var className=name||functionName(plugin);
var attrName=hyphenate(className);
this._plugins[attrName]=this[className]=plugin;
},
registerPlugin:function(plugin,name){
var pluginName=name?hyphenate(name):functionName(plugin.constructor).toLowerCase();
plugin.uuid=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["b"])(6,pluginName);
if(!plugin.$element.attr('data-'+pluginName)){
plugin.$element.attr('data-'+pluginName,plugin.uuid);
}
if(!plugin.$element.data('zfPlugin')){
plugin.$element.data('zfPlugin',plugin);
}
plugin.$element.trigger('init.zf.'+pluginName);
this._uuids.push(plugin.uuid);
return;
},
unregisterPlugin:function(plugin){
var pluginName=hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));
this._uuids.splice(this._uuids.indexOf(plugin.uuid),1);
plugin.$element.removeAttr('data-'+pluginName).removeData('zfPlugin')
.trigger('destroyed.zf.'+pluginName);
for(var prop in plugin){
plugin[prop]=null;
}
return;
},
reInit:function(plugins){
var isJQ=plugins instanceof __WEBPACK_IMPORTED_MODULE_0_jquery___default.a;
try{
if(isJQ){
plugins.each(function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('zfPlugin')._init();
});
}else{
var type=typeof plugins,
_this=this,
fns={
'object':function(plgs){
plgs.forEach(function(p){
p=hyphenate(p);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-'+p+']').foundation('_init');
});
},
'string':function(){
plugins=hyphenate(plugins);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-'+plugins+']').foundation('_init');
},
'undefined':function(){
this['object'](Object.keys(_this._plugins));
}
};
fns[type](plugins);
}
}catch(err){
console.error(err);
}finally{
return plugins;
}
},
reflow:function(elem,plugins){
if(typeof plugins==='undefined'){
plugins=Object.keys(this._plugins);
}
else if(typeof plugins==='string'){
plugins=[plugins];
}
var _this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.each(plugins,function(i,name){
var plugin=_this._plugins[name];
var $elem=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem).find('[data-'+name+']').addBack('[data-'+name+']');
$elem.each(function(){
var $el=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
opts={};
if($el.data('zfPlugin')){
console.warn("Tried to initialize "+name+" on an element that already has a Foundation plugin.");
return;
}
if($el.attr('data-options')){
var thing=$el.attr('data-options').split(';').forEach(function(e,i){
var opt=e.split(':').map(function(el){
return el.trim();
});
if(opt[0])opts[opt[0]]=parseValue(opt[1]);
});
}
try{
$el.data('zfPlugin',new plugin(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),opts));
}catch(er){
console.error(er);
}finally{
return;
}
});
});
},
getFnName:functionName,
addToJquery:function($){
var foundation=function(method){
var type=typeof method,
$noJS=$('.no-js');
if($noJS.length){
$noJS.removeClass('no-js');
}
if(type==='undefined'){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"]._init();
Foundation.reflow(this);
}else if(type==='string'){
var args=Array.prototype.slice.call(arguments,1);
var plugClass=this.data('zfPlugin');
if(plugClass!==undefined&&plugClass[method]!==undefined){
if(this.length===1){
plugClass[method].apply(plugClass,args);
}else{
this.each(function(i,el){
plugClass[method].apply($(el).data('zfPlugin'),args);
});
}
}else{
throw new ReferenceError("We're sorry, '"+method+"' is not an available method for "+(plugClass?functionName(plugClass):'this element')+'.');
}
}else{
throw new TypeError('We\'re sorry, '+type+' is not a valid parameter. You must use a string representing the method you wish to invoke.');
}
return this;
};
$.fn.foundation=foundation;
return $;
}
};
Foundation.util={
throttle:function(func,delay){
var timer=null;
return function(){
var context=this,
args=arguments;
if(timer===null){
timer=setTimeout(function(){
func.apply(context,args);
timer=null;
},delay);
}
};
}
};
window.Foundation=Foundation;
(function(){
if(!Date.now||!window.Date.now)window.Date.now=Date.now=function(){
return new Date().getTime();
};
var vendors=['webkit','moz'];
for(var i=0;i<vendors.length&&!window.requestAnimationFrame;++i){
var vp=vendors[i];
window.requestAnimationFrame=window[vp+'RequestAnimationFrame'];
window.cancelAnimationFrame=window[vp+'CancelAnimationFrame']||window[vp+'CancelRequestAnimationFrame'];
}
if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){
var lastTime=0;
window.requestAnimationFrame=function(callback){
var now=Date.now();
var nextTime=Math.max(lastTime+16,now);
return setTimeout(function(){
callback(lastTime=nextTime);
},nextTime-now);
};
window.cancelAnimationFrame=clearTimeout;
}
if(!window.performance||!window.performance.now){
window.performance={
start:Date.now(),
now:function(){
return Date.now()-this.start;
}
};
}
})();
if(!Function.prototype.bind){
Function.prototype.bind=function(oThis){
if(typeof this!=='function'){
throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
}
var aArgs=Array.prototype.slice.call(arguments,1),
fToBind=this,
fNOP=function(){},
fBound=function(){
return fToBind.apply(this instanceof fNOP?this:oThis,aArgs.concat(Array.prototype.slice.call(arguments)));
};
if(this.prototype){
fNOP.prototype=this.prototype;
}
fBound.prototype=new fNOP();
return fBound;
};
}
function functionName(fn){
if(Function.prototype.name===undefined){
var funcNameRegex=/function\s([^(]{1,})\(/;
var results=funcNameRegex.exec(fn.toString());
return results&&results.length>1?results[1].trim():"";
}else if(fn.prototype===undefined){
return fn.constructor.name;
}else{
return fn.prototype.constructor.name;
}
}
function parseValue(str){
if('true'===str)return true;else if('false'===str)return false;else if(!isNaN(str*1))return parseFloat(str);
return str;
}
function hyphenate(str){
return str.replace(/([a-z])([A-Z])/g,'$1-$2').toLowerCase();
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Dropdown;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_3__foundation_positionable__=__webpack_require__(15);
var __WEBPACK_IMPORTED_MODULE_4__foundation_util_triggers__=__webpack_require__(5);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Dropdown=function(_Positionable){
_inherits(Dropdown,_Positionable);
function Dropdown(){
_classCallCheck(this,Dropdown);
return _possibleConstructorReturn(this,(Dropdown.__proto__||Object.getPrototypeOf(Dropdown)).apply(this,arguments));
}
_createClass(Dropdown,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Dropdown.defaults,this.$element.data(),options);
this.className='Dropdown';
__WEBPACK_IMPORTED_MODULE_4__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Dropdown',{
'ENTER':'open',
'SPACE':'open',
'ESCAPE':'close'
});
}
},{
key:'_init',
value:function _init(){
var $id=this.$element.attr('id');
this.$anchors=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-toggle="'+$id+'"]').length?__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-toggle="'+$id+'"]'):__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-open="'+$id+'"]');
this.$anchors.attr({
'aria-controls':$id,
'data-is-focus':false,
'data-yeti-box':$id,
'aria-haspopup':true,
'aria-expanded':false
});
this._setCurrentAnchor(this.$anchors.first());
if(this.options.parentClass){
this.$parent=this.$element.parents('.'+this.options.parentClass);
}else{
this.$parent=null;
}
this.$element.attr({
'aria-hidden':'true',
'data-yeti-box':$id,
'data-resize':$id,
'aria-labelledby':this.$currentAnchor.id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["b"])(6,'dd-anchor')
});
_get(Dropdown.prototype.__proto__||Object.getPrototypeOf(Dropdown.prototype),'_init',this).call(this);
this._events();
}
},{
key:'_getDefaultPosition',
value:function _getDefaultPosition(){
var position=this.$element[0].className.match(/(top|left|right|bottom)/g);
if(position){
return position[0];
}else{
return'bottom';
}
}
},{
key:'_getDefaultAlignment',
value:function _getDefaultAlignment(){
var horizontalPosition=/float-(\S+)/.exec(this.$currentAnchor.className);
if(horizontalPosition){
return horizontalPosition[1];
}
return _get(Dropdown.prototype.__proto__||Object.getPrototypeOf(Dropdown.prototype),'_getDefaultAlignment',this).call(this);
}
},{
key:'_setPosition',
value:function _setPosition(){
_get(Dropdown.prototype.__proto__||Object.getPrototypeOf(Dropdown.prototype),'_setPosition',this).call(this,this.$currentAnchor,this.$element,this.$parent);
}
},{
key:'_setCurrentAnchor',
value:function _setCurrentAnchor(el){
this.$currentAnchor=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(el);
}
},{
key:'_events',
value:function _events(){
var _this=this;
this.$element.on({
'open.zf.trigger':this.open.bind(this),
'close.zf.trigger':this.close.bind(this),
'toggle.zf.trigger':this.toggle.bind(this),
'resizeme.zf.trigger':this._setPosition.bind(this)
});
this.$anchors.off('click.zf.trigger').on('click.zf.trigger',function(){
_this._setCurrentAnchor(this);
});
if(this.options.hover){
this.$anchors.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown',function(){
_this._setCurrentAnchor(this);
var bodyData=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').data();
if(typeof bodyData.whatinput==='undefined'||bodyData.whatinput==='mouse'){
clearTimeout(_this.timeout);
_this.timeout=setTimeout(function(){
_this.open();
_this.$anchors.data('hover',true);
},_this.options.hoverDelay);
}
}).on('mouseleave.zf.dropdown',function(){
clearTimeout(_this.timeout);
_this.timeout=setTimeout(function(){
_this.close();
_this.$anchors.data('hover',false);
},_this.options.hoverDelay);
});
if(this.options.hoverPane){
this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown',function(){
clearTimeout(_this.timeout);
}).on('mouseleave.zf.dropdown',function(){
clearTimeout(_this.timeout);
_this.timeout=setTimeout(function(){
_this.close();
_this.$anchors.data('hover',false);
},_this.options.hoverDelay);
});
}
}
this.$anchors.add(this.$element).on('keydown.zf.dropdown',function(e){
var $target=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
visibleFocusableElements=__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].findFocusable(_this.$element);
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Dropdown',{
open:function(){
if($target.is(_this.$anchors)){
_this.open();
_this.$element.attr('tabindex',-1).focus();
e.preventDefault();
}
},
close:function(){
_this.close();
_this.$anchors.focus();
}
});
});
}
},{
key:'_addBodyHandler',
value:function _addBodyHandler(){
var $body=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document.body).not(this.$element),
_this=this;
$body.off('click.zf.dropdown').on('click.zf.dropdown',function(e){
if(_this.$anchors.is(e.target)||_this.$anchors.find(e.target).length){
return;
}
if(_this.$element.find(e.target).length){
return;
}
_this.close();
$body.off('click.zf.dropdown');
});
}
},{
key:'open',
value:function open(){
this.$element.trigger('closeme.zf.dropdown',this.$element.attr('id'));
this.$anchors.addClass('hover').attr({'aria-expanded':true});
this.$element.addClass('is-opening');
this._setPosition();
this.$element.removeClass('is-opening').addClass('is-open').attr({'aria-hidden':false});
if(this.options.autoFocus){
var $focusable=__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].findFocusable(this.$element);
if($focusable.length){
$focusable.eq(0).focus();
}
}
if(this.options.closeOnClick){
this._addBodyHandler();
}
if(this.options.trapFocus){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].trapFocus(this.$element);
}
this.$element.trigger('show.zf.dropdown',[this.$element]);
}
},{
key:'close',
value:function close(){
if(!this.$element.hasClass('is-open')){
return false;
}
this.$element.removeClass('is-open').attr({'aria-hidden':true});
this.$anchors.removeClass('hover').attr('aria-expanded',false);
this.$element.trigger('hide.zf.dropdown',[this.$element]);
if(this.options.trapFocus){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].releaseFocus(this.$element);
}
}
},{
key:'toggle',
value:function toggle(){
if(this.$element.hasClass('is-open')){
if(this.$anchors.data('hover'))return;
this.close();
}else{
this.open();
}
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.off('.zf.trigger').hide();
this.$anchors.off('.zf.dropdown');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document.body).off('click.zf.dropdown');
}
}]);
return Dropdown;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_positionable__["a"]);
Dropdown.defaults={
parentClass:null,
hoverDelay:250,
hover:false,
hoverPane:false,
vOffset:0,
hOffset:0,
positionClass:'',
position:'auto',
alignment:'auto',
allowOverlap:false,
allowBottomOverlap:true,
trapFocus:false,
autoFocus:false,
closeOnClick:false
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Equalizer;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_imageLoader__=__webpack_require__(8);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_4__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Equalizer=function(_Plugin){
_inherits(Equalizer,_Plugin);
function Equalizer(){
_classCallCheck(this,Equalizer);
return _possibleConstructorReturn(this,(Equalizer.__proto__||Object.getPrototypeOf(Equalizer)).apply(this,arguments));
}
_createClass(Equalizer,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Equalizer.defaults,this.$element.data(),options);
this.className='Equalizer';
this._init();
}
},{
key:'_init',
value:function _init(){
var eqId=this.$element.attr('data-equalizer')||'';
var $watched=this.$element.find('[data-equalizer-watch="'+eqId+'"]');
__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"]._init();
this.$watched=$watched.length?$watched:this.$element.find('[data-equalizer-watch]');
this.$element.attr('data-resize',eqId||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'eq'));
this.$element.attr('data-mutate',eqId||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'eq'));
this.hasNested=this.$element.find('[data-equalizer]').length>0;
this.isNested=this.$element.parentsUntil(document.body,'[data-equalizer]').length>0;
this.isOn=false;
this._bindHandler={
onResizeMeBound:this._onResizeMe.bind(this),
onPostEqualizedBound:this._onPostEqualized.bind(this)
};
var imgs=this.$element.find('img');
var tooSmall;
if(this.options.equalizeOn){
tooSmall=this._checkMQ();
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('changed.zf.mediaquery',this._checkMQ.bind(this));
}else{
this._events();
}
if(tooSmall!==undefined&&tooSmall===false||tooSmall===undefined){
if(imgs.length){
__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_imageLoader__["a"])(imgs,this._reflow.bind(this));
}else{
this._reflow();
}
}
}
},{
key:'_pauseEvents',
value:function _pauseEvents(){
this.isOn=false;
this.$element.off({
'.zf.equalizer':this._bindHandler.onPostEqualizedBound,
'resizeme.zf.trigger':this._bindHandler.onResizeMeBound,
'mutateme.zf.trigger':this._bindHandler.onResizeMeBound
});
}
},{
key:'_onResizeMe',
value:function _onResizeMe(e){
this._reflow();
}
},{
key:'_onPostEqualized',
value:function _onPostEqualized(e){
if(e.target!==this.$element[0]){
this._reflow();
}
}
},{
key:'_events',
value:function _events(){
var _this=this;
this._pauseEvents();
if(this.hasNested){
this.$element.on('postequalized.zf.equalizer',this._bindHandler.onPostEqualizedBound);
}else{
this.$element.on('resizeme.zf.trigger',this._bindHandler.onResizeMeBound);
this.$element.on('mutateme.zf.trigger',this._bindHandler.onResizeMeBound);
}
this.isOn=true;
}
},{
key:'_checkMQ',
value:function _checkMQ(){
var tooSmall=!__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].is(this.options.equalizeOn);
if(tooSmall){
if(this.isOn){
this._pauseEvents();
this.$watched.css('height','auto');
}
}else{
if(!this.isOn){
this._events();
}
}
return tooSmall;
}
},{
key:'_killswitch',
value:function _killswitch(){
return;
}
},{
key:'_reflow',
value:function _reflow(){
if(!this.options.equalizeOnStack){
if(this._isStacked()){
this.$watched.css('height','auto');
return false;
}
}
if(this.options.equalizeByRow){
this.getHeightsByRow(this.applyHeightByRow.bind(this));
}else{
this.getHeights(this.applyHeight.bind(this));
}
}
},{
key:'_isStacked',
value:function _isStacked(){
if(!this.$watched[0]||!this.$watched[1]){
return true;
}
return this.$watched[0].getBoundingClientRect().top!==this.$watched[1].getBoundingClientRect().top;
}
},{
key:'getHeights',
value:function getHeights(cb){
var heights=[];
for(var i=0,len=this.$watched.length;i<len;i++){
this.$watched[i].style.height='auto';
heights.push(this.$watched[i].offsetHeight);
}
cb(heights);
}
},{
key:'getHeightsByRow',
value:function getHeightsByRow(cb){
var lastElTopOffset=this.$watched.length?this.$watched.first().offset().top:0,
groups=[],
group=0;
groups[group]=[];
for(var i=0,len=this.$watched.length;i<len;i++){
this.$watched[i].style.height='auto';
var elOffsetTop=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.$watched[i]).offset().top;
if(elOffsetTop!=lastElTopOffset){
group++;
groups[group]=[];
lastElTopOffset=elOffsetTop;
}
groups[group].push([this.$watched[i],this.$watched[i].offsetHeight]);
}
for(var j=0,ln=groups.length;j<ln;j++){
var heights=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(groups[j]).map(function(){
return this[1];
}).get();
var max=Math.max.apply(null,heights);
groups[j].push(max);
}
cb(groups);
}
},{
key:'applyHeight',
value:function applyHeight(heights){
var max=Math.max.apply(null,heights);
this.$element.trigger('preequalized.zf.equalizer');
this.$watched.css('height',max);
this.$element.trigger('postequalized.zf.equalizer');
}
},{
key:'applyHeightByRow',
value:function applyHeightByRow(groups){
this.$element.trigger('preequalized.zf.equalizer');
for(var i=0,len=groups.length;i<len;i++){
var groupsILength=groups[i].length,
max=groups[i][groupsILength-1];
if(groupsILength<=2){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(groups[i][0][0]).css({'height':'auto'});
continue;
}
this.$element.trigger('preequalizedrow.zf.equalizer');
for(var j=0,lenJ=groupsILength-1;j<lenJ;j++){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(groups[i][j][0]).css({'height':max});
}
this.$element.trigger('postequalizedrow.zf.equalizer');
}
this.$element.trigger('postequalized.zf.equalizer');
}
},{
key:'_destroy',
value:function _destroy(){
this._pauseEvents();
this.$watched.css('height','auto');
}
}]);
return Equalizer;
}(__WEBPACK_IMPORTED_MODULE_4__foundation_plugin__["a"]);
Equalizer.defaults={
equalizeOnStack:false,
equalizeByRow:false,
equalizeOn:''
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Interchange;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_2__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_core__=__webpack_require__(1);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Interchange=function(_Plugin){
_inherits(Interchange,_Plugin);
function Interchange(){
_classCallCheck(this,Interchange);
return _possibleConstructorReturn(this,(Interchange.__proto__||Object.getPrototypeOf(Interchange)).apply(this,arguments));
}
_createClass(Interchange,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Interchange.defaults,options);
this.rules=[];
this.currentPath='';
this.className='Interchange';
this._init();
this._events();
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"]._init();
var id=this.$element[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'interchange');
this.$element.attr({
'data-resize':id,
'id':id
});
this._addBreakpoints();
this._generateRules();
this._reflow();
}
},{
key:'_events',
value:function _events(){
var _this3=this;
this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger',function(){
return _this3._reflow();
});
}
},{
key:'_reflow',
value:function _reflow(){
var match;
for(var i in this.rules){
if(this.rules.hasOwnProperty(i)){
var rule=this.rules[i];
if(window.matchMedia(rule.query).matches){
match=rule;
}
}
}
if(match){
this.replace(match.path);
}
}
},{
key:'_addBreakpoints',
value:function _addBreakpoints(){
for(var i in __WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].queries){
if(__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].queries.hasOwnProperty(i)){
var query=__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].queries[i];
Interchange.SPECIAL_QUERIES[query.name]=query.value;
}
}
}
},{
key:'_generateRules',
value:function _generateRules(element){
var rulesList=[];
var rules;
if(this.options.rules){
rules=this.options.rules;
}else{
rules=this.$element.data('interchange');
}
rules=typeof rules==='string'?rules.match(/\[.*?\]/g):rules;
for(var i in rules){
if(rules.hasOwnProperty(i)){
var rule=rules[i].slice(1,-1).split(', ');
var path=rule.slice(0,-1).join('');
var query=rule[rule.length-1];
if(Interchange.SPECIAL_QUERIES[query]){
query=Interchange.SPECIAL_QUERIES[query];
}
rulesList.push({
path:path,
query:query
});
}
}
this.rules=rulesList;
}
},{
key:'replace',
value:function replace(path){
if(this.currentPath===path)return;
var _this=this,
trigger='replaced.zf.interchange';
if(this.$element[0].nodeName==='IMG'){
this.$element.attr('src',path).on('load',function(){
_this.currentPath=path;
}).trigger(trigger);
}
else if(path.match(/\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)){
path=path.replace(/\(/g,'%28').replace(/\)/g,'%29');
this.$element.css({'background-image':'url('+path+')'}).trigger(trigger);
}
else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.get(path,function(response){
_this.$element.html(response).trigger(trigger);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(response).foundation();
_this.currentPath=path;
});
}
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.off('resizeme.zf.trigger');
}
}]);
return Interchange;
}(__WEBPACK_IMPORTED_MODULE_2__foundation_plugin__["a"]);
Interchange.defaults={
rules:null
};
Interchange.SPECIAL_QUERIES={
'landscape':'screen and (orientation: landscape)',
'portrait':'screen and (orientation: portrait)',
'retina':'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Magellan;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_2__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_3__foundation_smoothScroll__=__webpack_require__(16);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Magellan=function(_Plugin){
_inherits(Magellan,_Plugin);
function Magellan(){
_classCallCheck(this,Magellan);
return _possibleConstructorReturn(this,(Magellan.__proto__||Object.getPrototypeOf(Magellan)).apply(this,arguments));
}
_createClass(Magellan,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Magellan.defaults,this.$element.data(),options);
this.className='Magellan';
this._init();
this.calcPoints();
}
},{
key:'_init',
value:function _init(){
var id=this.$element[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["b"])(6,'magellan');
var _this=this;
this.$targets=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-magellan-target]');
this.$links=this.$element.find('a');
this.$element.attr({
'data-resize':id,
'data-scroll':id,
'id':id
});
this.$active=__WEBPACK_IMPORTED_MODULE_0_jquery___default()();
this.scrollPos=parseInt(window.pageYOffset,10);
this._events();
}
},{
key:'calcPoints',
value:function calcPoints(){
var _this=this,
body=document.body,
html=document.documentElement;
this.points=[];
this.winHeight=Math.round(Math.max(window.innerHeight,html.clientHeight));
this.docHeight=Math.round(Math.max(body.scrollHeight,body.offsetHeight,html.clientHeight,html.scrollHeight,html.offsetHeight));
this.$targets.each(function(){
var $tar=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
pt=Math.round($tar.offset().top-_this.options.threshold);
$tar.targetPoint=pt;
_this.points.push(pt);
});
}
},{
key:'_events',
value:function _events(){
var _this=this,
$body=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body'),
opts={
duration:_this.options.animationDuration,
easing:_this.options.animationEasing
};
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).one('load',function(){
if(_this.options.deepLinking){
if(location.hash){
_this.scrollToLoc(location.hash);
}
}
_this.calcPoints();
_this._updateActive();
});
this.$element.on({
'resizeme.zf.trigger':this.reflow.bind(this),
'scrollme.zf.trigger':this._updateActive.bind(this)
}).on('click.zf.magellan','a[href^="#"]',function(e){
e.preventDefault();
var arrival=this.getAttribute('href');
_this.scrollToLoc(arrival);
});
this._deepLinkScroll=function(e){
if(_this.options.deepLinking){
_this.scrollToLoc(window.location.hash);
}
};
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('popstate',this._deepLinkScroll);
}
},{
key:'scrollToLoc',
value:function scrollToLoc(loc){
this._inTransition=true;
var _this=this;
var options={
animationEasing:this.options.animationEasing,
animationDuration:this.options.animationDuration,
threshold:this.options.threshold,
offset:this.options.offset
};
__WEBPACK_IMPORTED_MODULE_3__foundation_smoothScroll__["a"].scrollToLoc(loc,options,function(){
_this._inTransition=false;
_this._updateActive();
});
}
},{
key:'reflow',
value:function reflow(){
this.calcPoints();
this._updateActive();
}
},{
key:'_updateActive',
value:function _updateActive(){
if(this._inTransition){
return;
}
var winPos=parseInt(window.pageYOffset,10),
curIdx;
if(winPos+this.winHeight===this.docHeight){
curIdx=this.points.length-1;
}else if(winPos<this.points[0]){
curIdx=undefined;
}else{
var isDown=this.scrollPos<winPos,
_this=this,
curVisible=this.points.filter(function(p,i){
return isDown?p-_this.options.offset<=winPos:p-_this.options.offset-_this.options.threshold<=winPos;
});
curIdx=curVisible.length?curVisible.length-1:0;
}
this.$active.removeClass(this.options.activeClass);
this.$active=this.$links.filter('[href="#'+this.$targets.eq(curIdx).data('magellan-target')+'"]').addClass(this.options.activeClass);
if(this.options.deepLinking){
var hash="";
if(curIdx!=undefined){
hash=this.$active[0].getAttribute('href');
}
if(hash!==window.location.hash){
if(window.history.pushState){
window.history.pushState(null,null,hash);
}else{
window.location.hash=hash;
}
}
}
this.scrollPos=winPos;
this.$element.trigger('update.zf.magellan',[this.$active]);
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.off('.zf.trigger .zf.magellan').find('.'+this.options.activeClass).removeClass(this.options.activeClass);
if(this.options.deepLinking){
var hash=this.$active[0].getAttribute('href');
window.location.hash.replace(hash,'');
}
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('popstate',this._deepLinkScroll);
}
}]);
return Magellan;
}(__WEBPACK_IMPORTED_MODULE_2__foundation_plugin__["a"]);
Magellan.defaults={
animationDuration:500,
animationEasing:'linear',
threshold:50,
activeClass:'is-active',
deepLinking:false,
offset:0
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return OffCanvas;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_4__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_5__foundation_util_triggers__=__webpack_require__(5);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var OffCanvas=function(_Plugin){
_inherits(OffCanvas,_Plugin);
function OffCanvas(){
_classCallCheck(this,OffCanvas);
return _possibleConstructorReturn(this,(OffCanvas.__proto__||Object.getPrototypeOf(OffCanvas)).apply(this,arguments));
}
_createClass(OffCanvas,[{
key:'_setup',
value:function _setup(element,options){
var _this3=this;
this.className='OffCanvas';
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},OffCanvas.defaults,this.$element.data(),options);
this.contentClasses={base:[],reveal:[]};
this.$lastTrigger=__WEBPACK_IMPORTED_MODULE_0_jquery___default()();
this.$triggers=__WEBPACK_IMPORTED_MODULE_0_jquery___default()();
this.position='left';
this.$content=__WEBPACK_IMPORTED_MODULE_0_jquery___default()();
this.nested=!!this.options.nested;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(['push','overlap']).each(function(index,val){
_this3.contentClasses.base.push('has-transition-'+val);
});
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(['left','right','top','bottom']).each(function(index,val){
_this3.contentClasses.base.push('has-position-'+val);
_this3.contentClasses.reveal.push('has-reveal-'+val);
});
__WEBPACK_IMPORTED_MODULE_5__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"]._init();
this._init();
this._events();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('OffCanvas',{
'ESCAPE':'close'
});
}
},{
key:'_init',
value:function _init(){
var id=this.$element.attr('id');
this.$element.attr('aria-hidden','true');
if(this.options.contentId){
this.$content=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+this.options.contentId);
}else if(this.$element.siblings('[data-off-canvas-content]').length){
this.$content=this.$element.siblings('[data-off-canvas-content]').first();
}else{
this.$content=this.$element.closest('[data-off-canvas-content]').first();
}
if(!this.options.contentId){
this.nested=this.$element.siblings('[data-off-canvas-content]').length===0;
}else if(this.options.contentId&&this.options.nested===null){
console.warn('Remember to use the nested option if using the content ID option!');
}
if(this.nested===true){
this.options.transition='overlap';
this.$element.removeClass('is-transition-push');
}
this.$element.addClass('is-transition-'+this.options.transition+' is-closed');
this.$triggers=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document).find('[data-open="'+id+'"], [data-close="'+id+'"], [data-toggle="'+id+'"]').attr('aria-expanded','false').attr('aria-controls',id);
this.position=this.$element.is('.position-left, .position-top, .position-right, .position-bottom')?this.$element.attr('class').match(/position\-(left|top|right|bottom)/)[1]:this.position;
if(this.options.contentOverlay===true){
var overlay=document.createElement('div');
var overlayPosition=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.$element).css("position")==='fixed'?'is-overlay-fixed':'is-overlay-absolute';
overlay.setAttribute('class','js-off-canvas-overlay '+overlayPosition);
this.$overlay=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(overlay);
if(overlayPosition==='is-overlay-fixed'){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.$overlay).insertAfter(this.$element);
}else{
this.$content.append(this.$overlay);
}
}
this.options.isRevealed=this.options.isRevealed||new RegExp(this.options.revealClass,'g').test(this.$element[0].className);
if(this.options.isRevealed===true){
this.options.revealOn=this.options.revealOn||this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];
this._setMQChecker();
}
if(this.options.transitionTime){
this.$element.css('transition-duration',this.options.transitionTime);
}
this._removeContentClasses();
}
},{
key:'_events',
value:function _events(){
this.$element.off('.zf.trigger .zf.offcanvas').on({
'open.zf.trigger':this.open.bind(this),
'close.zf.trigger':this.close.bind(this),
'toggle.zf.trigger':this.toggle.bind(this),
'keydown.zf.offcanvas':this._handleKeyboard.bind(this)
});
if(this.options.closeOnClick===true){
var $target=this.options.contentOverlay?this.$overlay:this.$content;
$target.on({'click.zf.offcanvas':this.close.bind(this)});
}
}
},{
key:'_setMQChecker',
value:function _setMQChecker(){
var _this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('changed.zf.mediaquery',function(){
if(__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"].atLeast(_this.options.revealOn)){
_this.reveal(true);
}else{
_this.reveal(false);
}
}).one('load.zf.offcanvas',function(){
if(__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"].atLeast(_this.options.revealOn)){
_this.reveal(true);
}
});
}
},{
key:'_removeContentClasses',
value:function _removeContentClasses(hasReveal){
if(typeof hasReveal!=='boolean'){
this.$content.removeClass(this.contentClasses.base.join(' '));
}else if(hasReveal===false){
this.$content.removeClass('has-reveal-'+this.position);
}
}
},{
key:'_addContentClasses',
value:function _addContentClasses(hasReveal){
this._removeContentClasses(hasReveal);
if(typeof hasReveal!=='boolean'){
this.$content.addClass('has-transition-'+this.options.transition+' has-position-'+this.position);
}else if(hasReveal===true){
this.$content.addClass('has-reveal-'+this.position);
}
}
},{
key:'reveal',
value:function reveal(isRevealed){
if(isRevealed){
this.close();
this.isRevealed=true;
this.$element.attr('aria-hidden','false');
this.$element.off('open.zf.trigger toggle.zf.trigger');
this.$element.removeClass('is-closed');
}else{
this.isRevealed=false;
this.$element.attr('aria-hidden','true');
this.$element.off('open.zf.trigger toggle.zf.trigger').on({
'open.zf.trigger':this.open.bind(this),
'toggle.zf.trigger':this.toggle.bind(this)
});
this.$element.addClass('is-closed');
}
this._addContentClasses(isRevealed);
}
},{
key:'_stopScrolling',
value:function _stopScrolling(event){
return false;
}
},{
key:'_recordScrollable',
value:function _recordScrollable(event){
var elem=this;
if(elem.scrollHeight!==elem.clientHeight){
if(elem.scrollTop===0){
elem.scrollTop=1;
}
if(elem.scrollTop===elem.scrollHeight-elem.clientHeight){
elem.scrollTop=elem.scrollHeight-elem.clientHeight-1;
}
}
elem.allowUp=elem.scrollTop>0;
elem.allowDown=elem.scrollTop<elem.scrollHeight-elem.clientHeight;
elem.lastY=event.originalEvent.pageY;
}
},{
key:'_stopScrollPropagation',
value:function _stopScrollPropagation(event){
var elem=this;
var up=event.pageY<elem.lastY;
var down=!up;
elem.lastY=event.pageY;
if(up&&elem.allowUp||down&&elem.allowDown){
event.stopPropagation();
}else{
event.preventDefault();
}
}
},{
key:'open',
value:function open(event,trigger){
if(this.$element.hasClass('is-open')||this.isRevealed){
return;
}
var _this=this;
if(trigger){
this.$lastTrigger=trigger;
}
if(this.options.forceTo==='top'){
window.scrollTo(0,0);
}else if(this.options.forceTo==='bottom'){
window.scrollTo(0,document.body.scrollHeight);
}
if(this.options.transitionTime&&this.options.transition!=='overlap'){
this.$element.siblings('[data-off-canvas-content]').css('transition-duration',this.options.transitionTime);
}else{
this.$element.siblings('[data-off-canvas-content]').css('transition-duration','');
}
this.$element.addClass('is-open').removeClass('is-closed');
this.$triggers.attr('aria-expanded','true');
this.$element.attr('aria-hidden','false').trigger('opened.zf.offcanvas');
this.$content.addClass('is-open-'+this.position);
if(this.options.contentScroll===false){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').addClass('is-off-canvas-open').on('touchmove',this._stopScrolling);
this.$element.on('touchstart',this._recordScrollable);
this.$element.on('touchmove',this._stopScrollPropagation);
}
if(this.options.contentOverlay===true){
this.$overlay.addClass('is-visible');
}
if(this.options.closeOnClick===true&&this.options.contentOverlay===true){
this.$overlay.addClass('is-closable');
}
if(this.options.autoFocus===true){
this.$element.one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])(this.$element),function(){
if(!_this.$element.hasClass('is-open')){
return;
}
var canvasFocus=_this.$element.find('[data-autofocus]');
if(canvasFocus.length){
canvasFocus.eq(0).focus();
}else{
_this.$element.find('a, button').eq(0).focus();
}
});
}
if(this.options.trapFocus===true){
this.$content.attr('tabindex','-1');
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].trapFocus(this.$element);
}
this._addContentClasses();
}
},{
key:'close',
value:function close(cb){
if(!this.$element.hasClass('is-open')||this.isRevealed){
return;
}
var _this=this;
this.$element.removeClass('is-open');
this.$element.attr('aria-hidden','true')
.trigger('closed.zf.offcanvas');
this.$content.removeClass('is-open-left is-open-top is-open-right is-open-bottom');
if(this.options.contentScroll===false){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').removeClass('is-off-canvas-open').off('touchmove',this._stopScrolling);
this.$element.off('touchstart',this._recordScrollable);
this.$element.off('touchmove',this._stopScrollPropagation);
}
if(this.options.contentOverlay===true){
this.$overlay.removeClass('is-visible');
}
if(this.options.closeOnClick===true&&this.options.contentOverlay===true){
this.$overlay.removeClass('is-closable');
}
this.$triggers.attr('aria-expanded','false');
if(this.options.trapFocus===true){
this.$content.removeAttr('tabindex');
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].releaseFocus(this.$element);
}
this.$element.one(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["c"])(this.$element),function(e){
_this.$element.addClass('is-closed');
_this._removeContentClasses();
});
}
},{
key:'toggle',
value:function toggle(event,trigger){
if(this.$element.hasClass('is-open')){
this.close(event,trigger);
}else{
this.open(event,trigger);
}
}
},{
key:'_handleKeyboard',
value:function _handleKeyboard(e){
var _this4=this;
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'OffCanvas',{
close:function(){
_this4.close();
_this4.$lastTrigger.focus();
return true;
},
handled:function(){
e.stopPropagation();
e.preventDefault();
}
});
}
},{
key:'_destroy',
value:function _destroy(){
this.close();
this.$element.off('.zf.trigger .zf.offcanvas');
this.$overlay.off('.zf.offcanvas');
}
}]);
return OffCanvas;
}(__WEBPACK_IMPORTED_MODULE_4__foundation_plugin__["a"]);
OffCanvas.defaults={
closeOnClick:true,
contentOverlay:true,
contentId:null,
nested:null,
contentScroll:true,
transitionTime:null,
transition:'push',
forceTo:null,
isRevealed:false,
revealOn:null,
autoFocus:true,
revealClass:'reveal-for-',
trapFocus:false
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Orbit;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__=__webpack_require__(6);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_timer__=__webpack_require__(18);
var __WEBPACK_IMPORTED_MODULE_4__foundation_util_imageLoader__=__webpack_require__(8);
var __WEBPACK_IMPORTED_MODULE_5__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_6__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_7__foundation_util_touch__=__webpack_require__(10);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Orbit=function(_Plugin){
_inherits(Orbit,_Plugin);
function Orbit(){
_classCallCheck(this,Orbit);
return _possibleConstructorReturn(this,(Orbit.__proto__||Object.getPrototypeOf(Orbit)).apply(this,arguments));
}
_createClass(Orbit,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Orbit.defaults,this.$element.data(),options);
this.className='Orbit';
__WEBPACK_IMPORTED_MODULE_7__foundation_util_touch__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Orbit',{
'ltr':{
'ARROW_RIGHT':'next',
'ARROW_LEFT':'previous'
},
'rtl':{
'ARROW_LEFT':'next',
'ARROW_RIGHT':'previous'
}
});
}
},{
key:'_init',
value:function _init(){
this._reset();
this.$wrapper=this.$element.find('.'+this.options.containerClass);
this.$slides=this.$element.find('.'+this.options.slideClass);
var $images=this.$element.find('img'),
initActive=this.$slides.filter('.is-active'),
id=this.$element[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__foundation_util_core__["b"])(6,'orbit');
this.$element.attr({
'data-resize':id,
'id':id
});
if(!initActive.length){
this.$slides.eq(0).addClass('is-active');
}
if(!this.options.useMUI){
this.$slides.addClass('no-motionui');
}
if($images.length){
__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__foundation_util_imageLoader__["a"])($images,this._prepareForOrbit.bind(this));
}else{
this._prepareForOrbit();
}
if(this.options.bullets){
this._loadBullets();
}
this._events();
if(this.options.autoPlay&&this.$slides.length>1){
this.geoSync();
}
if(this.options.accessible){
this.$wrapper.attr('tabindex',0);
}
}
},{
key:'_loadBullets',
value:function _loadBullets(){
this.$bullets=this.$element.find('.'+this.options.boxOfBullets).find('button');
}
},{
key:'geoSync',
value:function geoSync(){
var _this=this;
this.timer=new __WEBPACK_IMPORTED_MODULE_3__foundation_util_timer__["a"](this.$element,{
duration:this.options.timerDelay,
infinite:false
},function(){
_this.changeSlide(true);
});
this.timer.start();
}
},{
key:'_prepareForOrbit',
value:function _prepareForOrbit(){
var _this=this;
this._setWrapperHeight();
}
},{
key:'_setWrapperHeight',
value:function _setWrapperHeight(cb){
var max=0,
temp,
counter=0,
_this=this;
this.$slides.each(function(){
temp=this.getBoundingClientRect().height;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr('data-slide',counter);
if(!/mui/g.test(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this)[0].className)&&_this.$slides.filter('.is-active')[0]!==_this.$slides.eq(counter)[0]){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).css({'position':'relative','display':'none'});
}
max=temp>max?temp:max;
counter++;
});
if(counter===this.$slides.length){
this.$wrapper.css({'height':max});
if(cb){
cb(max);
}
}
}
},{
key:'_setSlideHeight',
value:function _setSlideHeight(height){
this.$slides.each(function(){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).css('max-height',height);
});
}
},{
key:'_events',
value:function _events(){
var _this=this;
this.$element.off('.resizeme.zf.trigger').on({
'resizeme.zf.trigger':this._prepareForOrbit.bind(this)
});
if(this.$slides.length>1){
if(this.options.swipe){
this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit',function(e){
e.preventDefault();
_this.changeSlide(true);
}).on('swiperight.zf.orbit',function(e){
e.preventDefault();
_this.changeSlide(false);
});
}
if(this.options.autoPlay){
this.$slides.on('click.zf.orbit',function(){
_this.$element.data('clickedOn',_this.$element.data('clickedOn')?false:true);
_this.timer[_this.$element.data('clickedOn')?'pause':'start']();
});
if(this.options.pauseOnHover){
this.$element.on('mouseenter.zf.orbit',function(){
_this.timer.pause();
}).on('mouseleave.zf.orbit',function(){
if(!_this.$element.data('clickedOn')){
_this.timer.start();
}
});
}
}
if(this.options.navButtons){
var $controls=this.$element.find('.'+this.options.nextClass+', .'+this.options.prevClass);
$controls.attr('tabindex',0)
.on('click.zf.orbit touchend.zf.orbit',function(e){
e.preventDefault();
_this.changeSlide(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).hasClass(_this.options.nextClass));
});
}
if(this.options.bullets){
this.$bullets.on('click.zf.orbit touchend.zf.orbit',function(){
if(/is-active/g.test(this.className)){
return false;
}
var idx=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('slide'),
ltr=idx>_this.$slides.filter('.is-active').data('slide'),
$slide=_this.$slides.eq(idx);
_this.changeSlide(ltr,$slide,idx);
});
}
if(this.options.accessible){
this.$wrapper.add(this.$bullets).on('keydown.zf.orbit',function(e){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Orbit',{
next:function(){
_this.changeSlide(true);
},
previous:function(){
_this.changeSlide(false);
},
handled:function(){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).is(_this.$bullets)){
_this.$bullets.filter('.is-active').focus();
}
}
});
});
}
}
}
},{
key:'_reset',
value:function _reset(){
if(typeof this.$slides=='undefined'){
return;
}
if(this.$slides.length>1){
this.$element.off('.zf.orbit').find('*').off('.zf.orbit');
if(this.options.autoPlay){
this.timer.restart();
}
this.$slides.each(function(el){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(el).removeClass('is-active is-active is-in').removeAttr('aria-live').hide();
});
this.$slides.first().addClass('is-active').show();
this.$element.trigger('slidechange.zf.orbit',[this.$slides.first()]);
if(this.options.bullets){
this._updateBullets(0);
}
}
}
},{
key:'changeSlide',
value:function changeSlide(isLTR,chosenSlide,idx){
if(!this.$slides){
return;
}
var $curSlide=this.$slides.filter('.is-active').eq(0);
if(/mui/g.test($curSlide[0].className)){
return false;
}
var $firstSlide=this.$slides.first(),
$lastSlide=this.$slides.last(),
dirIn=isLTR?'Right':'Left',
dirOut=isLTR?'Left':'Right',
_this=this,
$newSlide;
if(!chosenSlide){
$newSlide=isLTR?
this.options.infiniteWrap?$curSlide.next('.'+this.options.slideClass).length?$curSlide.next('.'+this.options.slideClass):$firstSlide:$curSlide.next('.'+this.options.slideClass):
this.options.infiniteWrap?$curSlide.prev('.'+this.options.slideClass).length?$curSlide.prev('.'+this.options.slideClass):$lastSlide:$curSlide.prev('.'+this.options.slideClass);
}else{
$newSlide=chosenSlide;
}
if($newSlide.length){
this.$element.trigger('beforeslidechange.zf.orbit',[$curSlide,$newSlide]);
if(this.options.bullets){
idx=idx||this.$slides.index($newSlide);
this._updateBullets(idx);
}
if(this.options.useMUI&&!this.$element.is(':hidden')){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__["a"].animateIn($newSlide.addClass('is-active').css({'position':'absolute','top':0}),this.options['animInFrom'+dirIn],function(){
$newSlide.css({'position':'relative','display':'block'}).attr('aria-live','polite');
});
__WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__["a"].animateOut($curSlide.removeClass('is-active'),this.options['animOutTo'+dirOut],function(){
$curSlide.removeAttr('aria-live');
if(_this.options.autoPlay&&!_this.timer.isPaused){
_this.timer.restart();
}
});
}else{
$curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();
$newSlide.addClass('is-active is-in').attr('aria-live','polite').show();
if(this.options.autoPlay&&!this.timer.isPaused){
this.timer.restart();
}
}
this.$element.trigger('slidechange.zf.orbit',[$newSlide]);
}
}
},{
key:'_updateBullets',
value:function _updateBullets(idx){
var $oldBullet=this.$element.find('.'+this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),
span=$oldBullet.find('span:last').detach(),
$newBullet=this.$bullets.eq(idx).addClass('is-active').append(span);
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();
}
}]);
return Orbit;
}(__WEBPACK_IMPORTED_MODULE_6__foundation_plugin__["a"]);
Orbit.defaults={
bullets:true,
navButtons:true,
animInFromRight:'slide-in-right',
animOutToRight:'slide-out-right',
animInFromLeft:'slide-in-left',
animOutToLeft:'slide-out-left',
autoPlay:true,
timerDelay:5000,
infiniteWrap:true,
swipe:true,
pauseOnHover:true,
accessible:true,
containerClass:'orbit-container',
slideClass:'orbit-slide',
boxOfBullets:'orbit-bullets',
nextClass:'orbit-next',
prevClass:'orbit-previous',
useMUI:true
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return ResponsiveAccordionTabs;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_3__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_4__foundation_accordion__=__webpack_require__(11);
var __WEBPACK_IMPORTED_MODULE_5__foundation_tabs__=__webpack_require__(17);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var MenuPlugins={
tabs:{
cssClass:'tabs',
plugin:__WEBPACK_IMPORTED_MODULE_5__foundation_tabs__["a"]
},
accordion:{
cssClass:'accordion',
plugin:__WEBPACK_IMPORTED_MODULE_4__foundation_accordion__["a"]
}
};
var ResponsiveAccordionTabs=function(_Plugin){
_inherits(ResponsiveAccordionTabs,_Plugin);
function ResponsiveAccordionTabs(){
_classCallCheck(this,ResponsiveAccordionTabs);
return _possibleConstructorReturn(this,(ResponsiveAccordionTabs.__proto__||Object.getPrototypeOf(ResponsiveAccordionTabs)).apply(this,arguments));
}
_createClass(ResponsiveAccordionTabs,[{
key:'_setup',
value:function _setup(element,options){
this.$element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(element);
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},this.$element.data(),options);
this.rules=this.$element.data('responsive-accordion-tabs');
this.currentMq=null;
this.currentPlugin=null;
this.className='ResponsiveAccordionTabs';
if(!this.$element.attr('id')){
this.$element.attr('id',__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["b"])(6,'responsiveaccordiontabs'));
};
this._init();
this._events();
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"]._init();
if(typeof this.rules==='string'){
var rulesTree={};
var rules=this.rules.split(' ');
for(var i=0;i<rules.length;i++){
var rule=rules[i].split('-');
var ruleSize=rule.length>1?rule[0]:'small';
var rulePlugin=rule.length>1?rule[1]:rule[0];
if(MenuPlugins[rulePlugin]!==null){
rulesTree[ruleSize]=MenuPlugins[rulePlugin];
}
}
this.rules=rulesTree;
}
this._getAllOptions();
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.isEmptyObject(this.rules)){
this._checkMediaQueries();
}
}
},{
key:'_getAllOptions',
value:function _getAllOptions(){
var _this=this;
_this.allOptions={};
for(var key in MenuPlugins){
if(MenuPlugins.hasOwnProperty(key)){
var obj=MenuPlugins[key];
try{
var dummyPlugin=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('<ul></ul>');
var tmpPlugin=new obj.plugin(dummyPlugin,_this.options);
for(var keyKey in tmpPlugin.options){
if(tmpPlugin.options.hasOwnProperty(keyKey)&&keyKey!=='zfPlugin'){
var objObj=tmpPlugin.options[keyKey];
_this.allOptions[keyKey]=objObj;
}
}
tmpPlugin.destroy();
}catch(e){}
}
}
}
},{
key:'_events',
value:function _events(){
var _this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('changed.zf.mediaquery',function(){
_this._checkMediaQueries();
});
}
},{
key:'_checkMediaQueries',
value:function _checkMediaQueries(){
var matchedMq,
_this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.each(this.rules,function(key){
if(__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].atLeast(key)){
matchedMq=key;
}
});
if(!matchedMq)return;
if(this.currentPlugin instanceof this.rules[matchedMq].plugin)return;
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.each(MenuPlugins,function(key,value){
_this.$element.removeClass(value.cssClass);
});
this.$element.addClass(this.rules[matchedMq].cssClass);
if(this.currentPlugin){
if(!this.currentPlugin.$element.data('zfPlugin')&&this.storezfData)this.currentPlugin.$element.data('zfPlugin',this.storezfData);
this.currentPlugin.destroy();
}
this._handleMarkup(this.rules[matchedMq].cssClass);
this.currentPlugin=new this.rules[matchedMq].plugin(this.$element,{});
this.storezfData=this.currentPlugin.$element.data('zfPlugin');
}
},{
key:'_handleMarkup',
value:function _handleMarkup(toSet){
var _this=this,
fromString='accordion';
var $panels=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-tabs-content='+this.$element.attr('id')+']');
if($panels.length)fromString='tabs';
if(fromString===toSet){
return;
};
var tabsTitle=_this.allOptions.linkClass?_this.allOptions.linkClass:'tabs-title';
var tabsPanel=_this.allOptions.panelClass?_this.allOptions.panelClass:'tabs-panel';
this.$element.removeAttr('role');
var $liHeads=this.$element.children('.'+tabsTitle+',[data-accordion-item]').removeClass(tabsTitle).removeClass('accordion-item').removeAttr('data-accordion-item');
var $liHeadsA=$liHeads.children('a').removeClass('accordion-title');
if(fromString==='tabs'){
$panels=$panels.children('.'+tabsPanel).removeClass(tabsPanel).removeAttr('role').removeAttr('aria-hidden').removeAttr('aria-labelledby');
$panels.children('a').removeAttr('role').removeAttr('aria-controls').removeAttr('aria-selected');
}else{
$panels=$liHeads.children('[data-tab-content]').removeClass('accordion-content');
};
$panels.css({display:'',visibility:''});
$liHeads.css({display:'',visibility:''});
if(toSet==='accordion'){
$panels.each(function(key,value){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(value).appendTo($liHeads.get(key)).addClass('accordion-content').attr('data-tab-content','').removeClass('is-active').css({height:''});
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-tabs-content='+_this.$element.attr('id')+']').after('<div id="tabs-placeholder-'+_this.$element.attr('id')+'"></div>').detach();
$liHeads.addClass('accordion-item').attr('data-accordion-item','');
$liHeadsA.addClass('accordion-title');
});
}else if(toSet==='tabs'){
var $tabsContent=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-tabs-content='+_this.$element.attr('id')+']');
var $placeholder=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#tabs-placeholder-'+_this.$element.attr('id'));
if($placeholder.length){
$tabsContent=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div class="tabs-content"></div>').insertAfter($placeholder).attr('data-tabs-content',_this.$element.attr('id'));
$placeholder.remove();
}else{
$tabsContent=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div class="tabs-content"></div>').insertAfter(_this.$element).attr('data-tabs-content',_this.$element.attr('id'));
};
$panels.each(function(key,value){
var tempValue=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(value).appendTo($tabsContent).addClass(tabsPanel);
var hash=$liHeadsA.get(key).hash.slice(1);
var id=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(value).attr('id')||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["b"])(6,'accordion');
if(hash!==id){
if(hash!==''){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(value).attr('id',hash);
}else{
hash=id;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(value).attr('id',hash);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()($liHeadsA.get(key)).attr('href',__WEBPACK_IMPORTED_MODULE_0_jquery___default()($liHeadsA.get(key)).attr('href').replace('#','')+'#'+hash);
};
};
var isActive=__WEBPACK_IMPORTED_MODULE_0_jquery___default()($liHeads.get(key)).hasClass('is-active');
if(isActive){
tempValue.addClass('is-active');
};
});
$liHeads.addClass(tabsTitle);
};
}
},{
key:'_destroy',
value:function _destroy(){
if(this.currentPlugin)this.currentPlugin.destroy();
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('.zf.ResponsiveAccordionTabs');
}
}]);
return ResponsiveAccordionTabs;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_plugin__["a"]);
ResponsiveAccordionTabs.defaults={};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return ResponsiveMenu;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_3__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_4__foundation_dropdownMenu__=__webpack_require__(14);
var __WEBPACK_IMPORTED_MODULE_5__foundation_drilldown__=__webpack_require__(13);
var __WEBPACK_IMPORTED_MODULE_6__foundation_accordionMenu__=__webpack_require__(12);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var MenuPlugins={
dropdown:{
cssClass:'dropdown',
plugin:__WEBPACK_IMPORTED_MODULE_4__foundation_dropdownMenu__["a"]
},
drilldown:{
cssClass:'drilldown',
plugin:__WEBPACK_IMPORTED_MODULE_5__foundation_drilldown__["a"]
},
accordion:{
cssClass:'accordion-menu',
plugin:__WEBPACK_IMPORTED_MODULE_6__foundation_accordionMenu__["a"]
}
};
var ResponsiveMenu=function(_Plugin){
_inherits(ResponsiveMenu,_Plugin);
function ResponsiveMenu(){
_classCallCheck(this,ResponsiveMenu);
return _possibleConstructorReturn(this,(ResponsiveMenu.__proto__||Object.getPrototypeOf(ResponsiveMenu)).apply(this,arguments));
}
_createClass(ResponsiveMenu,[{
key:'_setup',
value:function _setup(element,options){
this.$element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(element);
this.rules=this.$element.data('responsive-menu');
this.currentMq=null;
this.currentPlugin=null;
this.className='ResponsiveMenu';
this._init();
this._events();
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"]._init();
if(typeof this.rules==='string'){
var rulesTree={};
var rules=this.rules.split(' ');
for(var i=0;i<rules.length;i++){
var rule=rules[i].split('-');
var ruleSize=rule.length>1?rule[0]:'small';
var rulePlugin=rule.length>1?rule[1]:rule[0];
if(MenuPlugins[rulePlugin]!==null){
rulesTree[ruleSize]=MenuPlugins[rulePlugin];
}
}
this.rules=rulesTree;
}
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.isEmptyObject(this.rules)){
this._checkMediaQueries();
}
this.$element.attr('data-mutate',this.$element.attr('data-mutate')||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_core__["b"])(6,'responsive-menu'));
}
},{
key:'_events',
value:function _events(){
var _this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('changed.zf.mediaquery',function(){
_this._checkMediaQueries();
});
}
},{
key:'_checkMediaQueries',
value:function _checkMediaQueries(){
var matchedMq,
_this=this;
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.each(this.rules,function(key){
if(__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].atLeast(key)){
matchedMq=key;
}
});
if(!matchedMq)return;
if(this.currentPlugin instanceof this.rules[matchedMq].plugin)return;
__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.each(MenuPlugins,function(key,value){
_this.$element.removeClass(value.cssClass);
});
this.$element.addClass(this.rules[matchedMq].cssClass);
if(this.currentPlugin)this.currentPlugin.destroy();
this.currentPlugin=new this.rules[matchedMq].plugin(this.$element,{});
}
},{
key:'_destroy',
value:function _destroy(){
this.currentPlugin.destroy();
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('.zf.ResponsiveMenu');
}
}]);
return ResponsiveMenu;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_plugin__["a"]);
ResponsiveMenu.defaults={};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return ResponsiveToggle;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__=__webpack_require__(6);
var __WEBPACK_IMPORTED_MODULE_3__foundation_plugin__=__webpack_require__(2);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var ResponsiveToggle=function(_Plugin){
_inherits(ResponsiveToggle,_Plugin);
function ResponsiveToggle(){
_classCallCheck(this,ResponsiveToggle);
return _possibleConstructorReturn(this,(ResponsiveToggle.__proto__||Object.getPrototypeOf(ResponsiveToggle)).apply(this,arguments));
}
_createClass(ResponsiveToggle,[{
key:'_setup',
value:function _setup(element,options){
this.$element=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(element);
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},ResponsiveToggle.defaults,this.$element.data(),options);
this.className='ResponsiveToggle';
this._init();
this._events();
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"]._init();
var targetID=this.$element.data('responsive-toggle');
if(!targetID){
console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');
}
this.$targetMenu=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+targetID);
this.$toggler=this.$element.find('[data-toggle]').filter(function(){
var target=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data('toggle');
return target===targetID||target==="";
});
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},this.options,this.$targetMenu.data());
if(this.options.animate){
var input=this.options.animate.split(' ');
this.animationIn=input[0];
this.animationOut=input[1]||null;
}
this._update();
}
},{
key:'_events',
value:function _events(){
var _this=this;
this._updateMqHandler=this._update.bind(this);
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('changed.zf.mediaquery',this._updateMqHandler);
this.$toggler.on('click.zf.responsiveToggle',this.toggleMenu.bind(this));
}
},{
key:'_update',
value:function _update(){
if(!__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].atLeast(this.options.hideFor)){
this.$element.show();
this.$targetMenu.hide();
}
else{
this.$element.hide();
this.$targetMenu.show();
}
}
},{
key:'toggleMenu',
value:function toggleMenu(){
var _this3=this;
if(!__WEBPACK_IMPORTED_MODULE_1__foundation_util_mediaQuery__["a"].atLeast(this.options.hideFor)){
if(this.options.animate){
if(this.$targetMenu.is(':hidden')){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__["a"].animateIn(this.$targetMenu,this.animationIn,function(){
_this3.$element.trigger('toggled.zf.responsiveToggle');
_this3.$targetMenu.find('[data-mutate]').triggerHandler('mutateme.zf.trigger');
});
}else{
__WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__["a"].animateOut(this.$targetMenu,this.animationOut,function(){
_this3.$element.trigger('toggled.zf.responsiveToggle');
});
}
}else{
this.$targetMenu.toggle(0);
this.$targetMenu.find('[data-mutate]').trigger('mutateme.zf.trigger');
this.$element.trigger('toggled.zf.responsiveToggle');
}
}
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.off('.zf.responsiveToggle');
this.$toggler.off('.zf.responsiveToggle');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('changed.zf.mediaquery',this._updateMqHandler);
}
}]);
return ResponsiveToggle;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_plugin__["a"]);
ResponsiveToggle.defaults={
hideFor:'medium',
animate:false
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Reveal;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_motion__=__webpack_require__(6);
var __WEBPACK_IMPORTED_MODULE_4__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_5__foundation_util_triggers__=__webpack_require__(5);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Reveal=function(_Plugin){
_inherits(Reveal,_Plugin);
function Reveal(){
_classCallCheck(this,Reveal);
return _possibleConstructorReturn(this,(Reveal.__proto__||Object.getPrototypeOf(Reveal)).apply(this,arguments));
}
_createClass(Reveal,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Reveal.defaults,this.$element.data(),options);
this.className='Reveal';
this._init();
__WEBPACK_IMPORTED_MODULE_5__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Reveal',{
'ESCAPE':'close'
});
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"]._init();
this.id=this.$element.attr('id');
this.isActive=false;
this.cached={mq:__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"].current};
this.isMobile=mobileSniff();
this.$anchor=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-open="'+this.id+'"]').length?__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-open="'+this.id+'"]'):__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-toggle="'+this.id+'"]');
this.$anchor.attr({
'aria-controls':this.id,
'aria-haspopup':true,
'tabindex':0
});
if(this.options.fullScreen||this.$element.hasClass('full')){
this.options.fullScreen=true;
this.options.overlay=false;
}
if(this.options.overlay&&!this.$overlay){
this.$overlay=this._makeOverlay(this.id);
}
this.$element.attr({
'role':'dialog',
'aria-hidden':true,
'data-yeti-box':this.id,
'data-resize':this.id
});
if(this.$overlay){
this.$element.detach().appendTo(this.$overlay);
}else{
this.$element.detach().appendTo(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.options.appendTo));
this.$element.addClass('without-overlay');
}
this._events();
if(this.options.deepLink&&window.location.hash==='#'+this.id){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).one('load.zf.reveal',this.open.bind(this));
}
}
},{
key:'_makeOverlay',
value:function _makeOverlay(){
var additionalOverlayClasses='';
if(this.options.additionalOverlayClasses){
additionalOverlayClasses=' '+this.options.additionalOverlayClasses;
}
return __WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div></div>').addClass('reveal-overlay'+additionalOverlayClasses).appendTo(this.options.appendTo);
}
},{
key:'_updatePosition',
value:function _updatePosition(){
var width=this.$element.outerWidth();
var outerWidth=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).width();
var height=this.$element.outerHeight();
var outerHeight=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).height();
var left,top;
if(this.options.hOffset==='auto'){
left=parseInt((outerWidth-width)/2,10);
}else{
left=parseInt(this.options.hOffset,10);
}
if(this.options.vOffset==='auto'){
if(height>outerHeight){
top=parseInt(Math.min(100,outerHeight/10),10);
}else{
top=parseInt((outerHeight-height)/4,10);
}
}else{
top=parseInt(this.options.vOffset,10);
}
this.$element.css({top:top+'px'});
if(!this.$overlay||this.options.hOffset!=='auto'){
this.$element.css({left:left+'px'});
this.$element.css({margin:'0px'});
}
}
},{
key:'_events',
value:function _events(){
var _this3=this;
var _this=this;
this.$element.on({
'open.zf.trigger':this.open.bind(this),
'close.zf.trigger':function(event,$element){
if(event.target===_this.$element[0]||__WEBPACK_IMPORTED_MODULE_0_jquery___default()(event.target).parents('[data-closable]')[0]===$element){
return _this3.close.apply(_this3);
}
},
'toggle.zf.trigger':this.toggle.bind(this),
'resizeme.zf.trigger':function(){
_this._updatePosition();
}
});
if(this.options.closeOnClick&&this.options.overlay){
this.$overlay.off('.zf.reveal').on('click.zf.reveal',function(e){
if(e.target===_this.$element[0]||__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.contains(_this.$element[0],e.target)||!__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.contains(document,e.target)){
return;
}
_this.close();
});
}
if(this.options.deepLink){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('popstate.zf.reveal:'+this.id,this._handleState.bind(this));
}
}
},{
key:'_handleState',
value:function _handleState(e){
if(window.location.hash==='#'+this.id&&!this.isActive){
this.open();
}else{
this.close();
}
}
},{
key:'open',
value:function open(){
var _this4=this;
if(this.options.deepLink){
var hash='#'+this.id;
if(window.history.pushState){
if(this.options.updateHistory){
window.history.pushState({},'',hash);
}else{
window.history.replaceState({},'',hash);
}
}else{
window.location.hash=hash;
}
}
this.isActive=true;
this.$element.css({'visibility':'hidden'}).show().scrollTop(0);
if(this.options.overlay){
this.$overlay.css({'visibility':'hidden'}).show();
}
this._updatePosition();
this.$element.hide().css({'visibility':''});
if(this.$overlay){
this.$overlay.css({'visibility':''}).hide();
if(this.$element.hasClass('fast')){
this.$overlay.addClass('fast');
}else if(this.$element.hasClass('slow')){
this.$overlay.addClass('slow');
}
}
if(!this.options.multipleOpened){
this.$element.trigger('closeme.zf.reveal',this.id);
}
var _this=this;
function addRevealOpenClasses(){
if(_this.isMobile){
if(!_this.originalScrollPos){
_this.originalScrollPos=window.pageYOffset;
}
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').addClass('is-reveal-open');
}else{
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').addClass('is-reveal-open');
}
}
if(this.options.animationIn){
var afterAnimation=function(){
_this.$element.attr({
'aria-hidden':false,
'tabindex':-1
}).focus();
addRevealOpenClasses();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].trapFocus(_this.$element);
};
if(this.options.overlay){
__WEBPACK_IMPORTED_MODULE_3__foundation_util_motion__["a"].animateIn(this.$overlay,'fade-in');
}
__WEBPACK_IMPORTED_MODULE_3__foundation_util_motion__["a"].animateIn(this.$element,this.options.animationIn,function(){
if(_this4.$element){
_this4.focusableElements=__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].findFocusable(_this4.$element);
afterAnimation();
}
});
}
else{
if(this.options.overlay){
this.$overlay.show(0);
}
this.$element.show(this.options.showDelay);
}
this.$element.attr({
'aria-hidden':false,
'tabindex':-1
}).focus();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].trapFocus(this.$element);
addRevealOpenClasses();
this._extraHandlers();
this.$element.trigger('open.zf.reveal');
}
},{
key:'_extraHandlers',
value:function _extraHandlers(){
var _this=this;
if(!this.$element){
return;
}
this.focusableElements=__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].findFocusable(this.$element);
if(!this.options.overlay&&this.options.closeOnClick&&!this.options.fullScreen){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').on('click.zf.reveal',function(e){
if(e.target===_this.$element[0]||__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.contains(_this.$element[0],e.target)||!__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.contains(document,e.target)){
return;
}
_this.close();
});
}
if(this.options.closeOnEsc){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).on('keydown.zf.reveal',function(e){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Reveal',{
close:function(){
if(_this.options.closeOnEsc){
_this.close();
}
}
});
});
}
}
},{
key:'close',
value:function close(){
if(!this.isActive||!this.$element.is(':visible')){
return false;
}
var _this=this;
if(this.options.animationOut){
if(this.options.overlay){
__WEBPACK_IMPORTED_MODULE_3__foundation_util_motion__["a"].animateOut(this.$overlay,'fade-out');
}
__WEBPACK_IMPORTED_MODULE_3__foundation_util_motion__["a"].animateOut(this.$element,this.options.animationOut,finishUp);
}
else{
this.$element.hide(this.options.hideDelay);
if(this.options.overlay){
this.$overlay.hide(0,finishUp);
}else{
finishUp();
}
}
if(this.options.closeOnEsc){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('keydown.zf.reveal');
}
if(!this.options.overlay&&this.options.closeOnClick){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').off('click.zf.reveal');
}
this.$element.off('keydown.zf.reveal');
function finishUp(){
if(_this.isMobile){
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()('.reveal:visible').length===0){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('html, body').removeClass('is-reveal-open');
}
if(_this.originalScrollPos){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').scrollTop(_this.originalScrollPos);
_this.originalScrollPos=null;
}
}else{
if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()('.reveal:visible').length===0){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body').removeClass('is-reveal-open');
}
}
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].releaseFocus(_this.$element);
_this.$element.attr('aria-hidden',true);
_this.$element.trigger('closed.zf.reveal');
}
if(this.options.resetOnClose){
this.$element.html(this.$element.html());
}
this.isActive=false;
if(_this.options.deepLink){
if(window.history.replaceState){
window.history.replaceState('',document.title,window.location.href.replace('#'+this.id,''));
}else{
window.location.hash='';
}
}
this.$anchor.focus();
}
},{
key:'toggle',
value:function toggle(){
if(this.isActive){
this.close();
}else{
this.open();
}
}
},{
key:'_destroy',
value:function _destroy(){
if(this.options.overlay){
this.$element.appendTo(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.options.appendTo));
this.$overlay.hide().off().remove();
}
this.$element.hide().off();
this.$anchor.off('.zf');
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off('.zf.reveal:'+this.id);
}
}]);
return Reveal;
}(__WEBPACK_IMPORTED_MODULE_4__foundation_plugin__["a"]);
Reveal.defaults={
animationIn:'',
animationOut:'',
showDelay:0,
hideDelay:0,
closeOnClick:true,
closeOnEsc:true,
multipleOpened:false,
vOffset:'auto',
hOffset:'auto',
fullScreen:false,
btmOffsetPct:10,
overlay:true,
resetOnClose:false,
deepLink:false,
updateHistory:false,
appendTo:"body",
additionalOverlayClasses:''
};
function iPhoneSniff(){
return(/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)
);
}
function androidSniff(){
return(/Android/.test(window.navigator.userAgent)
);
}
function mobileSniff(){
return iPhoneSniff()||androidSniff();
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Slider;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__=__webpack_require__(3);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__=__webpack_require__(6);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_4__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_5__foundation_util_touch__=__webpack_require__(10);
var __WEBPACK_IMPORTED_MODULE_6__foundation_util_triggers__=__webpack_require__(5);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Slider=function(_Plugin){
_inherits(Slider,_Plugin);
function Slider(){
_classCallCheck(this,Slider);
return _possibleConstructorReturn(this,(Slider.__proto__||Object.getPrototypeOf(Slider)).apply(this,arguments));
}
_createClass(Slider,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Slider.defaults,this.$element.data(),options);
this.className='Slider';
__WEBPACK_IMPORTED_MODULE_5__foundation_util_touch__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
__WEBPACK_IMPORTED_MODULE_6__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
this._init();
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].register('Slider',{
'ltr':{
'ARROW_RIGHT':'increase',
'ARROW_UP':'increase',
'ARROW_DOWN':'decrease',
'ARROW_LEFT':'decrease',
'SHIFT_ARROW_RIGHT':'increase_fast',
'SHIFT_ARROW_UP':'increase_fast',
'SHIFT_ARROW_DOWN':'decrease_fast',
'SHIFT_ARROW_LEFT':'decrease_fast',
'HOME':'min',
'END':'max'
},
'rtl':{
'ARROW_LEFT':'increase',
'ARROW_RIGHT':'decrease',
'SHIFT_ARROW_LEFT':'increase_fast',
'SHIFT_ARROW_RIGHT':'decrease_fast'
}
});
}
},{
key:'_init',
value:function _init(){
this.inputs=this.$element.find('input');
this.handles=this.$element.find('[data-slider-handle]');
this.$handle=this.handles.eq(0);
this.$input=this.inputs.length?this.inputs.eq(0):__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+this.$handle.attr('aria-controls'));
this.$fill=this.$element.find('[data-slider-fill]').css(this.options.vertical?'height':'width',0);
var isDbl=false,
_this=this;
if(this.options.disabled||this.$element.hasClass(this.options.disabledClass)){
this.options.disabled=true;
this.$element.addClass(this.options.disabledClass);
}
if(!this.inputs.length){
this.inputs=__WEBPACK_IMPORTED_MODULE_0_jquery___default()().add(this.$input);
this.options.binding=true;
}
this._setInitAttr(0);
if(this.handles[1]){
this.options.doubleSided=true;
this.$handle2=this.handles.eq(1);
this.$input2=this.inputs.length>1?this.inputs.eq(1):__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+this.$handle2.attr('aria-controls'));
if(!this.inputs[1]){
this.inputs=this.inputs.add(this.$input2);
}
isDbl=true;
this._setInitAttr(1);
}
this.setHandles();
this._events();
}
},{
key:'setHandles',
value:function setHandles(){
var _this3=this;
if(this.handles[1]){
this._setHandlePos(this.$handle,this.inputs.eq(0).val(),true,function(){
_this3._setHandlePos(_this3.$handle2,_this3.inputs.eq(1).val(),true);
});
}else{
this._setHandlePos(this.$handle,this.inputs.eq(0).val(),true);
}
}
},{
key:'_reflow',
value:function _reflow(){
this.setHandles();
}
},{
key:'_pctOfBar',
value:function _pctOfBar(value){
var pctOfBar=percent(value-this.options.start,this.options.end-this.options.start);
switch(this.options.positionValueFunction){
case"pow":
pctOfBar=this._logTransform(pctOfBar);
break;
case"log":
pctOfBar=this._powTransform(pctOfBar);
break;
}
return pctOfBar.toFixed(2);
}
},{
key:'_value',
value:function _value(pctOfBar){
switch(this.options.positionValueFunction){
case"pow":
pctOfBar=this._powTransform(pctOfBar);
break;
case"log":
pctOfBar=this._logTransform(pctOfBar);
break;
}
var value=(this.options.end-this.options.start)*pctOfBar+this.options.start;
return value;
}
},{
key:'_logTransform',
value:function _logTransform(value){
return baseLog(this.options.nonLinearBase,value*(this.options.nonLinearBase-1)+1);
}
},{
key:'_powTransform',
value:function _powTransform(value){
return(Math.pow(this.options.nonLinearBase,value)-1)/(this.options.nonLinearBase-1);
}
},{
key:'_setHandlePos',
value:function _setHandlePos($hndl,location,noInvert,cb){
if(this.$element.hasClass(this.options.disabledClass)){
return;
}
location=parseFloat(location);
if(location<this.options.start){
location=this.options.start;
}else if(location>this.options.end){
location=this.options.end;
}
var isDbl=this.options.doubleSided;
if(this.options.vertical&&!noInvert){
location=this.options.end-location;
}
if(isDbl){
if(this.handles.index($hndl)===0){
var h2Val=parseFloat(this.$handle2.attr('aria-valuenow'));
location=location>=h2Val?h2Val-this.options.step:location;
}else{
var h1Val=parseFloat(this.$handle.attr('aria-valuenow'));
location=location<=h1Val?h1Val+this.options.step:location;
}
}
var _this=this,
vert=this.options.vertical,
hOrW=vert?'height':'width',
lOrT=vert?'top':'left',
handleDim=$hndl[0].getBoundingClientRect()[hOrW],
elemDim=this.$element[0].getBoundingClientRect()[hOrW],
pctOfBar=this._pctOfBar(location),
pxToMove=(elemDim-handleDim)*pctOfBar,
movement=(percent(pxToMove,elemDim)*100).toFixed(this.options.decimal);
location=parseFloat(location.toFixed(this.options.decimal));
var css={};
this._setValues($hndl,location);
if(isDbl){
var isLeftHndl=this.handles.index($hndl)===0,
dim,
handlePct=~~(percent(handleDim,elemDim)*100);
if(isLeftHndl){
css[lOrT]=movement+'%';
dim=parseFloat(this.$handle2[0].style[lOrT])-movement+handlePct;
if(cb&&typeof cb==='function'){
cb();
}
}else{
var handlePos=parseFloat(this.$handle[0].style[lOrT]);
dim=movement-(isNaN(handlePos)?(this.options.initialStart-this.options.start)/((this.options.end-this.options.start)/100):handlePos)+handlePct;
}
css['min-'+hOrW]=dim+'%';
}
this.$element.one('finished.zf.animate',function(){
_this.$element.trigger('moved.zf.slider',[$hndl]);
});
var moveTime=this.$element.data('dragging')?1000/60:this.options.moveTime;
__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__foundation_util_motion__["b"])(moveTime,$hndl,function(){
if(isNaN(movement)){
$hndl.css(lOrT,pctOfBar*100+'%');
}else{
$hndl.css(lOrT,movement+'%');
}
if(!_this.options.doubleSided){
_this.$fill.css(hOrW,pctOfBar*100+'%');
}else{
_this.$fill.css(css);
}
});
clearTimeout(_this.timeout);
_this.timeout=setTimeout(function(){
_this.$element.trigger('changed.zf.slider',[$hndl]);
},_this.options.changedDelay);
}
},{
key:'_setInitAttr',
value:function _setInitAttr(idx){
var initVal=idx===0?this.options.initialStart:this.options.initialEnd;
var id=this.inputs.eq(idx).attr('id')||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["b"])(6,'slider');
this.inputs.eq(idx).attr({
'id':id,
'max':this.options.end,
'min':this.options.start,
'step':this.options.step
});
this.inputs.eq(idx).val(initVal);
this.handles.eq(idx).attr({
'role':'slider',
'aria-controls':id,
'aria-valuemax':this.options.end,
'aria-valuemin':this.options.start,
'aria-valuenow':initVal,
'aria-orientation':this.options.vertical?'vertical':'horizontal',
'tabindex':0
});
}
},{
key:'_setValues',
value:function _setValues($handle,val){
var idx=this.options.doubleSided?this.handles.index($handle):0;
this.inputs.eq(idx).val(val);
$handle.attr('aria-valuenow',val);
}
},{
key:'_handleEvent',
value:function _handleEvent(e,$handle,val){
var value,hasVal;
if(!val){
e.preventDefault();
var _this=this,
vertical=this.options.vertical,
param=vertical?'height':'width',
direction=vertical?'top':'left',
eventOffset=vertical?e.pageY:e.pageX,
halfOfHandle=this.$handle[0].getBoundingClientRect()[param]/2,
barDim=this.$element[0].getBoundingClientRect()[param],
windowScroll=vertical?__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).scrollTop():__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).scrollLeft();
var elemOffset=this.$element.offset()[direction];
if(e.clientY===e.pageY){
eventOffset=eventOffset+windowScroll;
}
var eventFromBar=eventOffset-elemOffset;
var barXY;
if(eventFromBar<0){
barXY=0;
}else if(eventFromBar>barDim){
barXY=barDim;
}else{
barXY=eventFromBar;
}
var offsetPct=percent(barXY,barDim);
value=this._value(offsetPct);
if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__foundation_util_core__["a"])()&&!this.options.vertical){
value=this.options.end-value;
}
value=_this._adjustValue(null,value);
hasVal=false;
if(!$handle){
var firstHndlPos=absPosition(this.$handle,direction,barXY,param),
secndHndlPos=absPosition(this.$handle2,direction,barXY,param);
$handle=firstHndlPos<=secndHndlPos?this.$handle:this.$handle2;
}
}else{
value=this._adjustValue(null,val);
hasVal=true;
}
this._setHandlePos($handle,value,hasVal);
}
},{
key:'_adjustValue',
value:function _adjustValue($handle,value){
var val,
step=this.options.step,
div=parseFloat(step/2),
left,
prev_val,
next_val;
if(!!$handle){
val=parseFloat($handle.attr('aria-valuenow'));
}else{
val=value;
}
left=val%step;
prev_val=val-left;
next_val=prev_val+step;
if(left===0){
return val;
}
val=val>=prev_val+div?next_val:prev_val;
return val;
}
},{
key:'_events',
value:function _events(){
this._eventsForHandle(this.$handle);
if(this.handles[1]){
this._eventsForHandle(this.$handle2);
}
}
},{
key:'_eventsForHandle',
value:function _eventsForHandle($handle){
var _this=this,
curHandle,
timer;
this.inputs.off('change.zf.slider').on('change.zf.slider',function(e){
var idx=_this.inputs.index(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this));
_this._handleEvent(e,_this.handles.eq(idx),__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).val());
});
if(this.options.clickSelect){
this.$element.off('click.zf.slider').on('click.zf.slider',function(e){
if(_this.$element.data('dragging')){
return false;
}
if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).is('[data-slider-handle]')){
if(_this.options.doubleSided){
_this._handleEvent(e);
}else{
_this._handleEvent(e,_this.$handle);
}
}
});
}
if(this.options.draggable){
this.handles.addTouch();
var $body=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('body');
$handle.off('mousedown.zf.slider').on('mousedown.zf.slider',function(e){
$handle.addClass('is-dragging');
_this.$fill.addClass('is-dragging');
_this.$element.data('dragging',true);
curHandle=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.currentTarget);
$body.on('mousemove.zf.slider',function(e){
e.preventDefault();
_this._handleEvent(e,curHandle);
}).on('mouseup.zf.slider',function(e){
_this._handleEvent(e,curHandle);
$handle.removeClass('is-dragging');
_this.$fill.removeClass('is-dragging');
_this.$element.data('dragging',false);
$body.off('mousemove.zf.slider mouseup.zf.slider');
});
})
.on('selectstart.zf.slider touchmove.zf.slider',function(e){
e.preventDefault();
});
}
$handle.off('keydown.zf.slider').on('keydown.zf.slider',function(e){
var _$handle=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
idx=_this.options.doubleSided?_this.handles.index(_$handle):0,
oldValue=parseFloat(_this.inputs.eq(idx).val()),
newValue;
__WEBPACK_IMPORTED_MODULE_1__foundation_util_keyboard__["a"].handleKey(e,'Slider',{
decrease:function(){
newValue=oldValue-_this.options.step;
},
increase:function(){
newValue=oldValue+_this.options.step;
},
decrease_fast:function(){
newValue=oldValue-_this.options.step*10;
},
increase_fast:function(){
newValue=oldValue+_this.options.step*10;
},
min:function(){
newValue=_this.options.start;
},
max:function(){
newValue=_this.options.end;
},
handled:function(){
e.preventDefault();
_this._setHandlePos(_$handle,newValue,true);
}
});
});
}
},{
key:'_destroy',
value:function _destroy(){
this.handles.off('.zf.slider');
this.inputs.off('.zf.slider');
this.$element.off('.zf.slider');
clearTimeout(this.timeout);
}
}]);
return Slider;
}(__WEBPACK_IMPORTED_MODULE_4__foundation_plugin__["a"]);
Slider.defaults={
start:0,
end:100,
step:1,
initialStart:0,
initialEnd:100,
binding:false,
clickSelect:true,
vertical:false,
draggable:true,
disabled:false,
doubleSided:false,
decimal:2,
moveTime:200,
disabledClass:'disabled',
invertVertical:false,
changedDelay:500,
nonLinearBase:5,
positionValueFunction:'linear'
};
function percent(frac,num){
return frac/num;
}
function absPosition($handle,dir,clickPos,param){
return Math.abs($handle.position()[dir]+$handle[param]()/2-clickPos);
}
function baseLog(base,value){
return Math.log(value)/Math.log(base);
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Sticky;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_3__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_4__foundation_util_triggers__=__webpack_require__(5);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Sticky=function(_Plugin){
_inherits(Sticky,_Plugin);
function Sticky(){
_classCallCheck(this,Sticky);
return _possibleConstructorReturn(this,(Sticky.__proto__||Object.getPrototypeOf(Sticky)).apply(this,arguments));
}
_createClass(Sticky,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Sticky.defaults,this.$element.data(),options);
this.className='Sticky';
__WEBPACK_IMPORTED_MODULE_4__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
this._init();
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"]._init();
var $parent=this.$element.parent('[data-sticky-container]'),
id=this.$element[0].id||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["b"])(6,'sticky'),
_this=this;
if($parent.length){
this.$container=$parent;
}else{
this.wasWrapped=true;
this.$element.wrap(this.options.container);
this.$container=this.$element.parent();
}
this.$container.addClass(this.options.containerClass);
this.$element.addClass(this.options.stickyClass).attr({'data-resize':id,'data-mutate':id});
if(this.options.anchor!==''){
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+_this.options.anchor).attr({'data-mutate':id});
}
this.scrollCount=this.options.checkEvery;
this.isStuck=false;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).one('load.zf.sticky',function(){
_this.containerHeight=_this.$element.css("display")=="none"?0:_this.$element[0].getBoundingClientRect().height;
_this.$container.css('height',_this.containerHeight);
_this.elemHeight=_this.containerHeight;
if(_this.options.anchor!==''){
_this.$anchor=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+_this.options.anchor);
}else{
_this._parsePoints();
}
_this._setSizes(function(){
var scroll=window.pageYOffset;
_this._calc(false,scroll);
if(!_this.isStuck){
_this._removeSticky(scroll>=_this.topPoint?false:true);
}
});
_this._events(id.split('-').reverse().join('-'));
});
}
},{
key:'_parsePoints',
value:function _parsePoints(){
var top=this.options.topAnchor==""?1:this.options.topAnchor,
btm=this.options.btmAnchor==""?document.documentElement.scrollHeight:this.options.btmAnchor,
pts=[top,btm],
breaks={};
for(var i=0,len=pts.length;i<len&&pts[i];i++){
var pt;
if(typeof pts[i]==='number'){
pt=pts[i];
}else{
var place=pts[i].split(':'),
anchor=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#'+place[0]);
pt=anchor.offset().top;
if(place[1]&&place[1].toLowerCase()==='bottom'){
pt+=anchor[0].getBoundingClientRect().height;
}
}
breaks[i]=pt;
}
this.points=breaks;
return;
}
},{
key:'_events',
value:function _events(id){
var _this=this,
scrollListener=this.scrollListener='scroll.zf.'+id;
if(this.isOn){
return;
}
if(this.canStick){
this.isOn=true;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off(scrollListener).on(scrollListener,function(e){
if(_this.scrollCount===0){
_this.scrollCount=_this.options.checkEvery;
_this._setSizes(function(){
_this._calc(false,window.pageYOffset);
});
}else{
_this.scrollCount--;
_this._calc(false,window.pageYOffset);
}
});
}
this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger',function(e,el){
_this._eventsHandler(id);
});
this.$element.on('mutateme.zf.trigger',function(e,el){
_this._eventsHandler(id);
});
if(this.$anchor){
this.$anchor.on('mutateme.zf.trigger',function(e,el){
_this._eventsHandler(id);
});
}
}
},{
key:'_eventsHandler',
value:function _eventsHandler(id){
var _this=this,
scrollListener=this.scrollListener='scroll.zf.'+id;
_this._setSizes(function(){
_this._calc(false);
if(_this.canStick){
if(!_this.isOn){
_this._events(id);
}
}else if(_this.isOn){
_this._pauseListeners(scrollListener);
}
});
}
},{
key:'_pauseListeners',
value:function _pauseListeners(scrollListener){
this.isOn=false;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off(scrollListener);
this.$element.trigger('pause.zf.sticky');
}
},{
key:'_calc',
value:function _calc(checkSizes,scroll){
if(checkSizes){
this._setSizes();
}
if(!this.canStick){
if(this.isStuck){
this._removeSticky(true);
}
return false;
}
if(!scroll){
scroll=window.pageYOffset;
}
if(scroll>=this.topPoint){
if(scroll<=this.bottomPoint){
if(!this.isStuck){
this._setSticky();
}
}else{
if(this.isStuck){
this._removeSticky(false);
}
}
}else{
if(this.isStuck){
this._removeSticky(true);
}
}
}
},{
key:'_setSticky',
value:function _setSticky(){
var _this=this,
stickTo=this.options.stickTo,
mrgn=stickTo==='top'?'marginTop':'marginBottom',
notStuckTo=stickTo==='top'?'bottom':'top',
css={};
css[mrgn]=this.options[mrgn]+'em';
css[stickTo]=0;
css[notStuckTo]='auto';
this.isStuck=true;
this.$element.removeClass('is-anchored is-at-'+notStuckTo).addClass('is-stuck is-at-'+stickTo).css(css)
.trigger('sticky.zf.stuckto:'+stickTo);
this.$element.on("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",function(){
_this._setSizes();
});
}
},{
key:'_removeSticky',
value:function _removeSticky(isTop){
var stickTo=this.options.stickTo,
stickToTop=stickTo==='top',
css={},
anchorPt=(this.points?this.points[1]-this.points[0]:this.anchorHeight)-this.elemHeight,
mrgn=stickToTop?'marginTop':'marginBottom',
notStuckTo=stickToTop?'bottom':'top',
topOrBottom=isTop?'top':'bottom';
css[mrgn]=0;
css['bottom']='auto';
if(isTop){
css['top']=0;
}else{
css['top']=anchorPt;
}
this.isStuck=false;
this.$element.removeClass('is-stuck is-at-'+stickTo).addClass('is-anchored is-at-'+topOrBottom).css(css)
.trigger('sticky.zf.unstuckfrom:'+topOrBottom);
}
},{
key:'_setSizes',
value:function _setSizes(cb){
this.canStick=__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"].is(this.options.stickyOn);
if(!this.canStick){
if(cb&&typeof cb==='function'){
cb();
}
}
var _this=this,
newElemWidth=this.$container[0].getBoundingClientRect().width,
comp=window.getComputedStyle(this.$container[0]),
pdngl=parseInt(comp['padding-left'],10),
pdngr=parseInt(comp['padding-right'],10);
if(this.$anchor&&this.$anchor.length){
this.anchorHeight=this.$anchor[0].getBoundingClientRect().height;
}else{
this._parsePoints();
}
this.$element.css({
'max-width':newElemWidth-pdngl-pdngr+'px'
});
var newContainerHeight=this.$element[0].getBoundingClientRect().height||this.containerHeight;
if(this.$element.css("display")=="none"){
newContainerHeight=0;
}
this.containerHeight=newContainerHeight;
this.$container.css({
height:newContainerHeight
});
this.elemHeight=newContainerHeight;
if(!this.isStuck){
if(this.$element.hasClass('is-at-bottom')){
var anchorPt=(this.points?this.points[1]-this.$container.offset().top:this.anchorHeight)-this.elemHeight;
this.$element.css('top',anchorPt);
}
}
this._setBreakPoints(newContainerHeight,function(){
if(cb&&typeof cb==='function'){
cb();
}
});
}
},{
key:'_setBreakPoints',
value:function _setBreakPoints(elemHeight,cb){
if(!this.canStick){
if(cb&&typeof cb==='function'){
cb();
}else{
return false;
}
}
var mTop=emCalc(this.options.marginTop),
mBtm=emCalc(this.options.marginBottom),
topPoint=this.points?this.points[0]:this.$anchor.offset().top,
bottomPoint=this.points?this.points[1]:topPoint+this.anchorHeight,
winHeight=window.innerHeight;
if(this.options.stickTo==='top'){
topPoint-=mTop;
bottomPoint-=elemHeight+mTop;
}else if(this.options.stickTo==='bottom'){
topPoint-=winHeight-(elemHeight+mBtm);
bottomPoint-=winHeight-mBtm;
}else{
}
this.topPoint=topPoint;
this.bottomPoint=bottomPoint;
if(cb&&typeof cb==='function'){
cb();
}
}
},{
key:'_destroy',
value:function _destroy(){
this._removeSticky(true);
this.$element.removeClass(this.options.stickyClass+' is-anchored is-at-top').css({
height:'',
top:'',
bottom:'',
'max-width':''
}).off('resizeme.zf.trigger').off('mutateme.zf.trigger');
if(this.$anchor&&this.$anchor.length){
this.$anchor.off('change.zf.sticky');
}
__WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).off(this.scrollListener);
if(this.wasWrapped){
this.$element.unwrap();
}else{
this.$container.removeClass(this.options.containerClass).css({
height:''
});
}
}
}]);
return Sticky;
}(__WEBPACK_IMPORTED_MODULE_3__foundation_plugin__["a"]);
Sticky.defaults={
container:'<div data-sticky-container></div>',
stickTo:'top',
anchor:'',
topAnchor:'',
btmAnchor:'',
marginTop:1,
marginBottom:1,
stickyOn:'medium',
stickyClass:'sticky',
containerClass:'sticky-container',
checkEvery:-1
};
function emCalc(em){
return parseInt(window.getComputedStyle(document.body,null).fontSize,10)*em;
}
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Toggler;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_motion__=__webpack_require__(6);
var __WEBPACK_IMPORTED_MODULE_2__foundation_plugin__=__webpack_require__(2);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_triggers__=__webpack_require__(5);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Toggler=function(_Plugin){
_inherits(Toggler,_Plugin);
function Toggler(){
_classCallCheck(this,Toggler);
return _possibleConstructorReturn(this,(Toggler.__proto__||Object.getPrototypeOf(Toggler)).apply(this,arguments));
}
_createClass(Toggler,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Toggler.defaults,element.data(),options);
this.className='';
this.className='Toggler';
__WEBPACK_IMPORTED_MODULE_3__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
this._init();
this._events();
}
},{
key:'_init',
value:function _init(){
var input;
if(this.options.animate){
input=this.options.animate.split(' ');
this.animationIn=input[0];
this.animationOut=input[1]||null;
}
else{
input=this.$element.data('toggler');
this.className=input[0]==='.'?input.slice(1):input;
}
var id=this.$element[0].id;
__WEBPACK_IMPORTED_MODULE_0_jquery___default()('[data-open="'+id+'"], [data-close="'+id+'"], [data-toggle="'+id+'"]').attr('aria-controls',id);
this.$element.attr('aria-expanded',this.$element.is(':hidden')?false:true);
}
},{
key:'_events',
value:function _events(){
this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger',this.toggle.bind(this));
}
},{
key:'toggle',
value:function toggle(){
this[this.options.animate?'_toggleAnimate':'_toggleClass']();
}
},{
key:'_toggleClass',
value:function _toggleClass(){
this.$element.toggleClass(this.className);
var isOn=this.$element.hasClass(this.className);
if(isOn){
this.$element.trigger('on.zf.toggler');
}else{
this.$element.trigger('off.zf.toggler');
}
this._updateARIA(isOn);
this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');
}
},{
key:'_toggleAnimate',
value:function _toggleAnimate(){
var _this=this;
if(this.$element.is(':hidden')){
__WEBPACK_IMPORTED_MODULE_1__foundation_util_motion__["a"].animateIn(this.$element,this.animationIn,function(){
_this._updateARIA(true);
this.trigger('on.zf.toggler');
this.find('[data-mutate]').trigger('mutateme.zf.trigger');
});
}else{
__WEBPACK_IMPORTED_MODULE_1__foundation_util_motion__["a"].animateOut(this.$element,this.animationOut,function(){
_this._updateARIA(false);
this.trigger('off.zf.toggler');
this.find('[data-mutate]').trigger('mutateme.zf.trigger');
});
}
}
},{
key:'_updateARIA',
value:function _updateARIA(isOn){
this.$element.attr('aria-expanded',isOn?true:false);
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.off('.zf.toggler');
}
}]);
return Toggler;
}(__WEBPACK_IMPORTED_MODULE_2__foundation_plugin__["a"]);
Toggler.defaults={
animate:false
};
}),
(function(module,__webpack_exports__,__webpack_require__){
"use strict";
__webpack_require__.d(__webpack_exports__,"a",function(){return Tooltip;});
var __WEBPACK_IMPORTED_MODULE_0_jquery__=__webpack_require__(0);
var __WEBPACK_IMPORTED_MODULE_0_jquery___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
var __WEBPACK_IMPORTED_MODULE_1__foundation_util_core__=__webpack_require__(1);
var __WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__=__webpack_require__(4);
var __WEBPACK_IMPORTED_MODULE_3__foundation_util_triggers__=__webpack_require__(5);
var __WEBPACK_IMPORTED_MODULE_4__foundation_positionable__=__webpack_require__(15);
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}
function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Tooltip=function(_Positionable){
_inherits(Tooltip,_Positionable);
function Tooltip(){
_classCallCheck(this,Tooltip);
return _possibleConstructorReturn(this,(Tooltip.__proto__||Object.getPrototypeOf(Tooltip)).apply(this,arguments));
}
_createClass(Tooltip,[{
key:'_setup',
value:function _setup(element,options){
this.$element=element;
this.options=__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({},Tooltip.defaults,this.$element.data(),options);
this.className='Tooltip';
this.isActive=false;
this.isClick=false;
__WEBPACK_IMPORTED_MODULE_3__foundation_util_triggers__["a"].init(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);
this._init();
}
},{
key:'_init',
value:function _init(){
__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"]._init();
var elemId=this.$element.attr('aria-describedby')||__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__foundation_util_core__["b"])(6,'tooltip');
this.options.tipText=this.options.tipText||this.$element.attr('title');
this.template=this.options.template?__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.options.template):this._buildTemplate(elemId);
if(this.options.allowHtml){
this.template.appendTo(document.body).html(this.options.tipText).hide();
}else{
this.template.appendTo(document.body).text(this.options.tipText).hide();
}
this.$element.attr({
'title':'',
'aria-describedby':elemId,
'data-yeti-box':elemId,
'data-toggle':elemId,
'data-resize':elemId
}).addClass(this.options.triggerClass);
_get(Tooltip.prototype.__proto__||Object.getPrototypeOf(Tooltip.prototype),'_init',this).call(this);
this._events();
}
},{
key:'_getDefaultPosition',
value:function _getDefaultPosition(){
var position=this.$element[0].className.match(/\b(top|left|right|bottom)\b/g);
return position?position[0]:'top';
}
},{
key:'_getDefaultAlignment',
value:function _getDefaultAlignment(){
return'center';
}
},{
key:'_getHOffset',
value:function _getHOffset(){
if(this.position==='left'||this.position==='right'){
return this.options.hOffset+this.options.tooltipWidth;
}else{
return this.options.hOffset;
}
}
},{
key:'_getVOffset',
value:function _getVOffset(){
if(this.position==='top'||this.position==='bottom'){
return this.options.vOffset+this.options.tooltipHeight;
}else{
return this.options.vOffset;
}
}
},{
key:'_buildTemplate',
value:function _buildTemplate(id){
var templateClasses=(this.options.tooltipClass+' '+this.options.positionClass+' '+this.options.templateClasses).trim();
var $template=__WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div></div>').addClass(templateClasses).attr({
'role':'tooltip',
'aria-hidden':true,
'data-is-active':false,
'data-is-focus':false,
'id':id
});
return $template;
}
},{
key:'_setPosition',
value:function _setPosition(){
_get(Tooltip.prototype.__proto__||Object.getPrototypeOf(Tooltip.prototype),'_setPosition',this).call(this,this.$element,this.template);
}
},{
key:'show',
value:function show(){
if(this.options.showOn!=='all'&&!__WEBPACK_IMPORTED_MODULE_2__foundation_util_mediaQuery__["a"].is(this.options.showOn)){
return false;
}
var _this=this;
this.template.css('visibility','hidden').show();
this._setPosition();
this.template.removeClass('top bottom left right').addClass(this.position);
this.template.removeClass('align-top align-bottom align-left align-right align-center').addClass('align-'+this.alignment);
this.$element.trigger('closeme.zf.tooltip',this.template.attr('id'));
this.template.attr({
'data-is-active':true,
'aria-hidden':false
});
_this.isActive=true;
this.template.stop().hide().css('visibility','').fadeIn(this.options.fadeInDuration,function(){
});
this.$element.trigger('show.zf.tooltip');
}
},{
key:'hide',
value:function hide(){
var _this=this;
this.template.stop().attr({
'aria-hidden':true,
'data-is-active':false
}).fadeOut(this.options.fadeOutDuration,function(){
_this.isActive=false;
_this.isClick=false;
});
this.$element.trigger('hide.zf.tooltip');
}
},{
key:'_events',
value:function _events(){
var _this=this;
var $template=this.template;
var isFocus=false;
if(!this.options.disableHover){
this.$element.on('mouseenter.zf.tooltip',function(e){
if(!_this.isActive){
_this.timeout=setTimeout(function(){
_this.show();
},_this.options.hoverDelay);
}
}).on('mouseleave.zf.tooltip',function(e){
clearTimeout(_this.timeout);
if(!isFocus||_this.isClick&&!_this.options.clickOpen){
_this.hide();
}
});
}
if(this.options.clickOpen){
this.$element.on('mousedown.zf.tooltip',function(e){
e.stopImmediatePropagation();
if(_this.isClick){
}else{
_this.isClick=true;
if((_this.options.disableHover||!_this.$element.attr('tabindex'))&&!_this.isActive){
_this.show();
}
}
});
}else{
this.$element.on('mousedown.zf.tooltip',function(e){
e.stopImmediatePropagation();
_this.isClick=true;
});
}
if(!this.options.disableForTouch){
this.$element.on('tap.zf.tooltip touchend.zf.tooltip',function(e){
_this.isActive?_this.hide():_this.show();
});
}
this.$element.on({
'close.zf.trigger':this.hide.bind(this)
});
this.$element.on('focus.zf.tooltip',function(e){
isFocus=true;
if(_this.isClick){
if(!_this.options.clickOpen){
isFocus=false;
}
return false;
}else{
_this.show();
}
}).on('focusout.zf.tooltip',function(e){
isFocus=false;
_this.isClick=false;
_this.hide();
}).on('resizeme.zf.trigger',function(){
if(_this.isActive){
_this._setPosition();
}
});
}
},{
key:'toggle',
value:function toggle(){
if(this.isActive){
this.hide();
}else{
this.show();
}
}
},{
key:'_destroy',
value:function _destroy(){
this.$element.attr('title',this.template.text()).off('.zf.trigger .zf.tooltip').removeClass('has-tip top right left').removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');
this.template.remove();
}
}]);
return Tooltip;
}(__WEBPACK_IMPORTED_MODULE_4__foundation_positionable__["a"]);
Tooltip.defaults={
disableForTouch:false,
hoverDelay:200,
fadeInDuration:150,
fadeOutDuration:150,
disableHover:false,
templateClasses:'',
tooltipClass:'tooltip',
triggerClass:'has-tip',
showOn:'small',
template:'',
tipText:'',
touchCloseText:'Tap to close.',
clickOpen:true,
positionClass:'',
position:'auto',
alignment:'auto',
allowOverlap:false,
allowBottomOverlap:false,
vOffset:0,
hOffset:0,
tooltipHeight:14,
tooltipWidth:12,
allowHtml:false
};
}),
(function(module,exports,__webpack_require__){
module.exports=__webpack_require__(19);
})
]);
jQuery(function($){
$(document).foundation();
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fancyBox/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fancyBox/vendor/jquery.fancybox.pack.js";
(function(r,G,f,v){var J=f("html"),n=f(r),p=f(G),b=f.fancybox=function(){b.open.apply(this,arguments)},I=navigator.userAgent.match(/msie/i),B=null,s=G.createTouch!==v,t=function(a){return a&&a.hasOwnProperty&&a instanceof f},q=function(a){return a&&"string"===f.type(a)},E=function(a){return q(a)&&0<a.indexOf("%")},l=function(a,d){var e=parseInt(a,10)||0;d&&E(a)&&(e*=b.getViewport()[d]/100);return Math.ceil(e)},w=function(a,b){return l(a,b)+"px"};f.extend(b,{version:"2.1.5",defaults:{padding:15,margin:20,
width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!s,fitToView:!0,aspectRatio:!1,topRatio:0.5,leftRatio:0.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3E3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},
keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+
(I?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,
openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:f.noop,beforeLoad:f.noop,afterLoad:f.noop,beforeShow:f.noop,afterShow:f.noop,beforeChange:f.noop,beforeClose:f.noop,afterClose:f.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,
isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(a,d){if(a&&(f.isPlainObject(d)||(d={}),!1!==b.close(!0)))return f.isArray(a)||(a=t(a)?f(a).get():[a]),f.each(a,function(e,c){var k={},g,h,j,m,l;"object"===f.type(c)&&(c.nodeType&&(c=f(c)),t(c)?(k={href:c.data("fancybox-href")||c.attr("href"),title:c.data("fancybox-title")||c.attr("title"),isDom:!0,element:c},f.metadata&&f.extend(!0,k,
c.metadata())):k=c);g=d.href||k.href||(q(c)?c:null);h=d.title!==v?d.title:k.title||"";m=(j=d.content||k.content)?"html":d.type||k.type;!m&&k.isDom&&(m=c.data("fancybox-type"),m||(m=(m=c.prop("class").match(/fancybox\.(\w+)/))?m[1]:null));q(g)&&(m||(b.isImage(g)?m="image":b.isSWF(g)?m="swf":"#"===g.charAt(0)?m="inline":q(c)&&(m="html",j=c)),"ajax"===m&&(l=g.split(/\s+/,2),g=l.shift(),l=l.shift()));j||("inline"===m?g?j=f(q(g)?g.replace(/.*(?=#[^\s]+$)/,""):g):k.isDom&&(j=c):"html"===m?j=g:!m&&(!g&&
k.isDom)&&(m="inline",j=c));f.extend(k,{href:g,type:m,content:j,title:h,selector:l});a[e]=k}),b.opts=f.extend(!0,{},b.defaults,d),d.keys!==v&&(b.opts.keys=d.keys?f.extend({},b.defaults.keys,d.keys):!1),b.group=a,b._start(b.opts.index)},cancel:function(){var a=b.coming;a&&!1!==b.trigger("onCancel")&&(b.hideLoading(),b.ajaxLoad&&b.ajaxLoad.abort(),b.ajaxLoad=null,b.imgPreload&&(b.imgPreload.onload=b.imgPreload.onerror=null),a.wrap&&a.wrap.stop(!0,!0).trigger("onReset").remove(),b.coming=null,b.current||
b._afterZoomOut(a))},close:function(a){b.cancel();!1!==b.trigger("beforeClose")&&(b.unbindEvents(),b.isActive&&(!b.isOpen||!0===a?(f(".fancybox-wrap").stop(!0).trigger("onReset").remove(),b._afterZoomOut()):(b.isOpen=b.isOpened=!1,b.isClosing=!0,f(".fancybox-item, .fancybox-nav").remove(),b.wrap.stop(!0,!0).removeClass("fancybox-opened"),b.transitions[b.current.closeMethod]())))},play:function(a){var d=function(){clearTimeout(b.player.timer)},e=function(){d();b.current&&b.player.isActive&&(b.player.timer=
setTimeout(b.next,b.current.playSpeed))},c=function(){d();p.unbind(".player");b.player.isActive=!1;b.trigger("onPlayEnd")};if(!0===a||!b.player.isActive&&!1!==a){if(b.current&&(b.current.loop||b.current.index<b.group.length-1))b.player.isActive=!0,p.bind({"onCancel.player beforeClose.player":c,"onUpdate.player":e,"beforeLoad.player":d}),e(),b.trigger("onPlayStart")}else c()},next:function(a){var d=b.current;d&&(q(a)||(a=d.direction.next),b.jumpto(d.index+1,a,"next"))},prev:function(a){var d=b.current;
d&&(q(a)||(a=d.direction.prev),b.jumpto(d.index-1,a,"prev"))},jumpto:function(a,d,e){var c=b.current;c&&(a=l(a),b.direction=d||c.direction[a>=c.index?"next":"prev"],b.router=e||"jumpto",c.loop&&(0>a&&(a=c.group.length+a%c.group.length),a%=c.group.length),c.group[a]!==v&&(b.cancel(),b._start(a)))},reposition:function(a,d){var e=b.current,c=e?e.wrap:null,k;c&&(k=b._getPosition(d),a&&"scroll"===a.type?(delete k.position,c.stop(!0,!0).animate(k,200)):(c.css(k),e.pos=f.extend({},e.dim,k)))},update:function(a){var d=
a&&a.type,e=!d||"orientationchange"===d;e&&(clearTimeout(B),B=null);b.isOpen&&!B&&(B=setTimeout(function(){var c=b.current;c&&!b.isClosing&&(b.wrap.removeClass("fancybox-tmp"),(e||"load"===d||"resize"===d&&c.autoResize)&&b._setDimension(),"scroll"===d&&c.canShrink||b.reposition(a),b.trigger("onUpdate"),B=null)},e&&!s?0:300))},toggle:function(a){b.isOpen&&(b.current.fitToView="boolean"===f.type(a)?a:!b.current.fitToView,s&&(b.wrap.removeAttr("style").addClass("fancybox-tmp"),b.trigger("onUpdate")),
b.update())},hideLoading:function(){p.unbind(".loading");f("#fancybox-loading").remove()},showLoading:function(){var a,d;b.hideLoading();a=f('<div id="fancybox-loading"><div></div></div>').click(b.cancel).appendTo("body");p.bind("keydown.loading",function(a){if(27===(a.which||a.keyCode))a.preventDefault(),b.cancel()});b.defaults.fixed||(d=b.getViewport(),a.css({position:"absolute",top:0.5*d.h+d.y,left:0.5*d.w+d.x}))},getViewport:function(){var a=b.current&&b.current.locked||!1,d={x:n.scrollLeft(),
y:n.scrollTop()};a?(d.w=a[0].clientWidth,d.h=a[0].clientHeight):(d.w=s&&r.innerWidth?r.innerWidth:n.width(),d.h=s&&r.innerHeight?r.innerHeight:n.height());return d},unbindEvents:function(){b.wrap&&t(b.wrap)&&b.wrap.unbind(".fb");p.unbind(".fb");n.unbind(".fb")},bindEvents:function(){var a=b.current,d;a&&(n.bind("orientationchange.fb"+(s?"":" resize.fb")+(a.autoCenter&&!a.locked?" scroll.fb":""),b.update),(d=a.keys)&&p.bind("keydown.fb",function(e){var c=e.which||e.keyCode,k=e.target||e.srcElement;
if(27===c&&b.coming)return!1;!e.ctrlKey&&(!e.altKey&&!e.shiftKey&&!e.metaKey&&(!k||!k.type&&!f(k).is("[contenteditable]")))&&f.each(d,function(d,k){if(1<a.group.length&&k[c]!==v)return b[d](k[c]),e.preventDefault(),!1;if(-1<f.inArray(c,k))return b[d](),e.preventDefault(),!1})}),f.fn.mousewheel&&a.mouseWheel&&b.wrap.bind("mousewheel.fb",function(d,c,k,g){for(var h=f(d.target||null),j=!1;h.length&&!j&&!h.is(".fancybox-skin")&&!h.is(".fancybox-wrap");)j=h[0]&&!(h[0].style.overflow&&"hidden"===h[0].style.overflow)&&
(h[0].clientWidth&&h[0].scrollWidth>h[0].clientWidth||h[0].clientHeight&&h[0].scrollHeight>h[0].clientHeight),h=f(h).parent();if(0!==c&&!j&&1<b.group.length&&!a.canShrink){if(0<g||0<k)b.prev(0<g?"down":"left");else if(0>g||0>k)b.next(0>g?"up":"right");d.preventDefault()}}))},trigger:function(a,d){var e,c=d||b.coming||b.current;if(c){f.isFunction(c[a])&&(e=c[a].apply(c,Array.prototype.slice.call(arguments,1)));if(!1===e)return!1;c.helpers&&f.each(c.helpers,function(d,e){if(e&&b.helpers[d]&&f.isFunction(b.helpers[d][a]))b.helpers[d][a](f.extend(!0,
{},b.helpers[d].defaults,e),c)});p.trigger(a)}},isImage:function(a){return q(a)&&a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(a){return q(a)&&a.match(/\.(swf)((\?|#).*)?$/i)},_start:function(a){var d={},e,c;a=l(a);e=b.group[a]||null;if(!e)return!1;d=f.extend(!0,{},b.opts,e);e=d.margin;c=d.padding;"number"===f.type(e)&&(d.margin=[e,e,e,e]);"number"===f.type(c)&&(d.padding=[c,c,c,c]);d.modal&&f.extend(!0,d,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,
mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}});d.autoSize&&(d.autoWidth=d.autoHeight=!0);"auto"===d.width&&(d.autoWidth=!0);"auto"===d.height&&(d.autoHeight=!0);d.group=b.group;d.index=a;b.coming=d;if(!1===b.trigger("beforeLoad"))b.coming=null;else{c=d.type;e=d.href;if(!c)return b.coming=null,b.current&&b.router&&"jumpto"!==b.router?(b.current.index=a,b[b.router](b.direction)):!1;b.isActive=!0;if("image"===c||"swf"===c)d.autoHeight=d.autoWidth=!1,d.scrolling="visible";"image"===c&&(d.aspectRatio=
!0);"iframe"===c&&s&&(d.scrolling="scroll");d.wrap=f(d.tpl.wrap).addClass("fancybox-"+(s?"mobile":"desktop")+" fancybox-type-"+c+" fancybox-tmp "+d.wrapCSS).appendTo(d.parent||"body");f.extend(d,{skin:f(".fancybox-skin",d.wrap),outer:f(".fancybox-outer",d.wrap),inner:f(".fancybox-inner",d.wrap)});f.each(["Top","Right","Bottom","Left"],function(a,b){d.skin.css("padding"+b,w(d.padding[a]))});b.trigger("onReady");if("inline"===c||"html"===c){if(!d.content||!d.content.length)return b._error("content")}else if(!e)return b._error("href");
"image"===c?b._loadImage():"ajax"===c?b._loadAjax():"iframe"===c?b._loadIframe():b._afterLoad()}},_error:function(a){f.extend(b.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:a,content:b.coming.tpl.error});b._afterLoad()},_loadImage:function(){var a=b.imgPreload=new Image;a.onload=function(){this.onload=this.onerror=null;b.coming.width=this.width/b.opts.pixelRatio;b.coming.height=this.height/b.opts.pixelRatio;b._afterLoad()};a.onerror=function(){this.onload=
this.onerror=null;b._error("image")};a.src=b.coming.href;!0!==a.complete&&b.showLoading()},_loadAjax:function(){var a=b.coming;b.showLoading();b.ajaxLoad=f.ajax(f.extend({},a.ajax,{url:a.href,error:function(a,e){b.coming&&"abort"!==e?b._error("ajax",a):b.hideLoading()},success:function(d,e){"success"===e&&(a.content=d,b._afterLoad())}}))},_loadIframe:function(){var a=b.coming,d=f(a.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",s?"auto":a.iframe.scrolling).attr("src",a.href);
f(a.wrap).bind("onReset",function(){try{f(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(a){}});a.iframe.preload&&(b.showLoading(),d.one("load",function(){f(this).data("ready",1);s||f(this).bind("load.fb",b.update);f(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show();b._afterLoad()}));a.content=d.appendTo(a.inner);a.iframe.preload||b._afterLoad()},_preloadImages:function(){var a=b.group,d=b.current,e=a.length,c=d.preload?Math.min(d.preload,
e-1):0,f,g;for(g=1;g<=c;g+=1)f=a[(d.index+g)%e],"image"===f.type&&f.href&&((new Image).src=f.href)},_afterLoad:function(){var a=b.coming,d=b.current,e,c,k,g,h;b.hideLoading();if(a&&!1!==b.isActive)if(!1===b.trigger("afterLoad",a,d))a.wrap.stop(!0).trigger("onReset").remove(),b.coming=null;else{d&&(b.trigger("beforeChange",d),d.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove());b.unbindEvents();e=a.content;c=a.type;k=a.scrolling;f.extend(b,{wrap:a.wrap,skin:a.skin,
outer:a.outer,inner:a.inner,current:a,previous:d});g=a.href;switch(c){case"inline":case"ajax":case"html":a.selector?e=f("<div>").html(e).find(a.selector):t(e)&&(e.data("fancybox-placeholder")||e.data("fancybox-placeholder",f('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()),e=e.show().detach(),a.wrap.bind("onReset",function(){f(this).find(e).length&&e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case"image":e=a.tpl.image.replace("{href}",
g);break;case"swf":e='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+g+'"></param>',h="",f.each(a.swf,function(a,b){e+='<param name="'+a+'" value="'+b+'"></param>';h+=" "+a+'="'+b+'"'}),e+='<embed src="'+g+'" type="application/x-shockwave-flash" width="100%" height="100%"'+h+"></embed></object>"}(!t(e)||!e.parent().is(a.inner))&&a.inner.append(e);b.trigger("beforeShow");a.inner.css("overflow","yes"===k?"scroll":
"no"===k?"hidden":k);b._setDimension();b.reposition();b.isOpen=!1;b.coming=null;b.bindEvents();if(b.isOpened){if(d.prevMethod)b.transitions[d.prevMethod]()}else f(".fancybox-wrap").not(a.wrap).stop(!0).trigger("onReset").remove();b.transitions[b.isOpened?a.nextMethod:a.openMethod]();b._preloadImages()}},_setDimension:function(){var a=b.getViewport(),d=0,e=!1,c=!1,e=b.wrap,k=b.skin,g=b.inner,h=b.current,c=h.width,j=h.height,m=h.minWidth,u=h.minHeight,n=h.maxWidth,p=h.maxHeight,s=h.scrolling,q=h.scrollOutside?
h.scrollbarWidth:0,x=h.margin,y=l(x[1]+x[3]),r=l(x[0]+x[2]),v,z,t,C,A,F,B,D,H;e.add(k).add(g).width("auto").height("auto").removeClass("fancybox-tmp");x=l(k.outerWidth(!0)-k.width());v=l(k.outerHeight(!0)-k.height());z=y+x;t=r+v;C=E(c)?(a.w-z)*l(c)/100:c;A=E(j)?(a.h-t)*l(j)/100:j;if("iframe"===h.type){if(H=h.content,h.autoHeight&&1===H.data("ready"))try{H[0].contentWindow.document.location&&(g.width(C).height(9999),F=H.contents().find("body"),q&&F.css("overflow-x","hidden"),A=F.outerHeight(!0))}catch(G){}}else if(h.autoWidth||
h.autoHeight)g.addClass("fancybox-tmp"),h.autoWidth||g.width(C),h.autoHeight||g.height(A),h.autoWidth&&(C=g.width()),h.autoHeight&&(A=g.height()),g.removeClass("fancybox-tmp");c=l(C);j=l(A);D=C/A;m=l(E(m)?l(m,"w")-z:m);n=l(E(n)?l(n,"w")-z:n);u=l(E(u)?l(u,"h")-t:u);p=l(E(p)?l(p,"h")-t:p);F=n;B=p;h.fitToView&&(n=Math.min(a.w-z,n),p=Math.min(a.h-t,p));z=a.w-y;r=a.h-r;h.aspectRatio?(c>n&&(c=n,j=l(c/D)),j>p&&(j=p,c=l(j*D)),c<m&&(c=m,j=l(c/D)),j<u&&(j=u,c=l(j*D))):(c=Math.max(m,Math.min(c,n)),h.autoHeight&&
"iframe"!==h.type&&(g.width(c),j=g.height()),j=Math.max(u,Math.min(j,p)));if(h.fitToView)if(g.width(c).height(j),e.width(c+x),a=e.width(),y=e.height(),h.aspectRatio)for(;(a>z||y>r)&&(c>m&&j>u)&&!(19<d++);)j=Math.max(u,Math.min(p,j-10)),c=l(j*D),c<m&&(c=m,j=l(c/D)),c>n&&(c=n,j=l(c/D)),g.width(c).height(j),e.width(c+x),a=e.width(),y=e.height();else c=Math.max(m,Math.min(c,c-(a-z))),j=Math.max(u,Math.min(j,j-(y-r)));q&&("auto"===s&&j<A&&c+x+q<z)&&(c+=q);g.width(c).height(j);e.width(c+x);a=e.width();
y=e.height();e=(a>z||y>r)&&c>m&&j>u;c=h.aspectRatio?c<F&&j<B&&c<C&&j<A:(c<F||j<B)&&(c<C||j<A);f.extend(h,{dim:{width:w(a),height:w(y)},origWidth:C,origHeight:A,canShrink:e,canExpand:c,wPadding:x,hPadding:v,wrapSpace:y-k.outerHeight(!0),skinSpace:k.height()-j});!H&&(h.autoHeight&&j>u&&j<p&&!c)&&g.height("auto")},_getPosition:function(a){var d=b.current,e=b.getViewport(),c=d.margin,f=b.wrap.width()+c[1]+c[3],g=b.wrap.height()+c[0]+c[2],c={position:"absolute",top:c[0],left:c[3]};d.autoCenter&&d.fixed&&
!a&&g<=e.h&&f<=e.w?c.position="fixed":d.locked||(c.top+=e.y,c.left+=e.x);c.top=w(Math.max(c.top,c.top+(e.h-g)*d.topRatio));c.left=w(Math.max(c.left,c.left+(e.w-f)*d.leftRatio));return c},_afterZoomIn:function(){var a=b.current;a&&(b.isOpen=b.isOpened=!0,b.wrap.css("overflow","visible").addClass("fancybox-opened"),b.update(),(a.closeClick||a.nextClick&&1<b.group.length)&&b.inner.css("cursor","pointer").bind("click.fb",function(d){!f(d.target).is("a")&&!f(d.target).parent().is("a")&&(d.preventDefault(),
b[a.closeClick?"close":"next"]())}),a.closeBtn&&f(a.tpl.closeBtn).appendTo(b.skin).bind("click.fb",function(a){a.preventDefault();b.close()}),a.arrows&&1<b.group.length&&((a.loop||0<a.index)&&f(a.tpl.prev).appendTo(b.outer).bind("click.fb",b.prev),(a.loop||a.index<b.group.length-1)&&f(a.tpl.next).appendTo(b.outer).bind("click.fb",b.next)),b.trigger("afterShow"),!a.loop&&a.index===a.group.length-1?b.play(!1):b.opts.autoPlay&&!b.player.isActive&&(b.opts.autoPlay=!1,b.play()))},_afterZoomOut:function(a){a=
a||b.current;f(".fancybox-wrap").trigger("onReset").remove();f.extend(b,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null});b.trigger("afterClose",a)}});b.transitions={getOrigPosition:function(){var a=b.current,d=a.element,e=a.orig,c={},f=50,g=50,h=a.hPadding,j=a.wPadding,m=b.getViewport();!e&&(a.isDom&&d.is(":visible"))&&(e=d.find("img:first"),e.length||(e=d));t(e)?(c=e.offset(),e.is("img")&&(f=e.outerWidth(),g=e.outerHeight())):
(c.top=m.y+(m.h-g)*a.topRatio,c.left=m.x+(m.w-f)*a.leftRatio);if("fixed"===b.wrap.css("position")||a.locked)c.top-=m.y,c.left-=m.x;return c={top:w(c.top-h*a.topRatio),left:w(c.left-j*a.leftRatio),width:w(f+j),height:w(g+h)}},step:function(a,d){var e,c,f=d.prop;c=b.current;var g=c.wrapSpace,h=c.skinSpace;if("width"===f||"height"===f)e=d.end===d.start?1:(a-d.start)/(d.end-d.start),b.isClosing&&(e=1-e),c="width"===f?c.wPadding:c.hPadding,c=a-c,b.skin[f](l("width"===f?c:c-g*e)),b.inner[f](l("width"===
f?c:c-g*e-h*e))},zoomIn:function(){var a=b.current,d=a.pos,e=a.openEffect,c="elastic"===e,k=f.extend({opacity:1},d);delete k.position;c?(d=this.getOrigPosition(),a.openOpacity&&(d.opacity=0.1)):"fade"===e&&(d.opacity=0.1);b.wrap.css(d).animate(k,{duration:"none"===e?0:a.openSpeed,easing:a.openEasing,step:c?this.step:null,complete:b._afterZoomIn})},zoomOut:function(){var a=b.current,d=a.closeEffect,e="elastic"===d,c={opacity:0.1};e&&(c=this.getOrigPosition(),a.closeOpacity&&(c.opacity=0.1));b.wrap.animate(c,
{duration:"none"===d?0:a.closeSpeed,easing:a.closeEasing,step:e?this.step:null,complete:b._afterZoomOut})},changeIn:function(){var a=b.current,d=a.nextEffect,e=a.pos,c={opacity:1},f=b.direction,g;e.opacity=0.1;"elastic"===d&&(g="down"===f||"up"===f?"top":"left","down"===f||"right"===f?(e[g]=w(l(e[g])-200),c[g]="+=200px"):(e[g]=w(l(e[g])+200),c[g]="-=200px"));"none"===d?b._afterZoomIn():b.wrap.css(e).animate(c,{duration:a.nextSpeed,easing:a.nextEasing,complete:b._afterZoomIn})},changeOut:function(){var a=
b.previous,d=a.prevEffect,e={opacity:0.1},c=b.direction;"elastic"===d&&(e["down"===c||"up"===c?"top":"left"]=("up"===c||"left"===c?"-":"+")+"=200px");a.wrap.animate(e,{duration:"none"===d?0:a.prevSpeed,easing:a.prevEasing,complete:function(){f(this).trigger("onReset").remove()}})}};b.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!s,fixed:!0},overlay:null,fixed:!1,el:f("html"),create:function(a){a=f.extend({},this.defaults,a);this.overlay&&this.close();this.overlay=
f('<div class="fancybox-overlay"></div>').appendTo(b.coming?b.coming.parent:a.parent);this.fixed=!1;a.fixed&&b.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(a){var d=this;a=f.extend({},this.defaults,a);this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(a);this.fixed||(n.bind("resize.overlay",f.proxy(this.update,this)),this.update());a.closeClick&&this.overlay.bind("click.overlay",function(a){if(f(a.target).hasClass("fancybox-overlay"))return b.isActive?
b.close():d.close(),!1});this.overlay.css(a.css).show()},close:function(){var a,b;n.unbind("resize.overlay");this.el.hasClass("fancybox-lock")&&(f(".fancybox-margin").removeClass("fancybox-margin"),a=n.scrollTop(),b=n.scrollLeft(),this.el.removeClass("fancybox-lock"),n.scrollTop(a).scrollLeft(b));f(".fancybox-overlay").remove().hide();f.extend(this,{overlay:null,fixed:!1})},update:function(){var a="100%",b;this.overlay.width(a).height("100%");I?(b=Math.max(G.documentElement.offsetWidth,G.body.offsetWidth),
p.width()>b&&(a=p.width())):p.width()>n.width()&&(a=p.width());this.overlay.width(a).height(p.height())},onReady:function(a,b){var e=this.overlay;f(".fancybox-overlay").stop(!0,!0);e||this.create(a);a.locked&&(this.fixed&&b.fixed)&&(e||(this.margin=p.height()>n.height()?f("html").css("margin-right").replace("px",""):!1),b.locked=this.overlay.append(b.wrap),b.fixed=!1);!0===a.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(a,b){var e,c;b.locked&&(!1!==this.margin&&(f("*").filter(function(){return"fixed"===
f(this).css("position")&&!f(this).hasClass("fancybox-overlay")&&!f(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),e=n.scrollTop(),c=n.scrollLeft(),this.el.addClass("fancybox-lock"),n.scrollTop(e).scrollLeft(c));this.open(a)},onUpdate:function(){this.fixed||this.update()},afterClose:function(a){this.overlay&&!b.coming&&this.overlay.fadeOut(a.speedOut,f.proxy(this.close,this))}};b.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(a){var d=
b.current,e=d.title,c=a.type;f.isFunction(e)&&(e=e.call(d.element,d));if(q(e)&&""!==f.trim(e)){d=f('<div class="fancybox-title fancybox-title-'+c+'-wrap">'+e+"</div>");switch(c){case"inside":c=b.skin;break;case"outside":c=b.wrap;break;case"over":c=b.inner;break;default:c=b.skin,d.appendTo("body"),I&&d.width(d.width()),d.wrapInner('<span class="child"></span>'),b.current.margin[2]+=Math.abs(l(d.css("margin-bottom")))}d["top"===a.position?"prependTo":"appendTo"](c)}}};f.fn.fancybox=function(a){var d,
e=f(this),c=this.selector||"",k=function(g){var h=f(this).blur(),j=d,k,l;!g.ctrlKey&&(!g.altKey&&!g.shiftKey&&!g.metaKey)&&!h.is(".fancybox-wrap")&&(k=a.groupAttr||"data-fancybox-group",l=h.attr(k),l||(k="rel",l=h.get(0)[k]),l&&(""!==l&&"nofollow"!==l)&&(h=c.length?f(c):e,h=h.filter("["+k+'="'+l+'"]'),j=h.index(this)),a.index=j,!1!==b.open(h,a)&&g.preventDefault())};a=a||{};d=a.index||0;!c||!1===a.live?e.unbind("click.fb-start").bind("click.fb-start",k):p.undelegate(c,"click.fb-start").delegate(c+
":not('.fancybox-item, .fancybox-nav')","click.fb-start",k);this.filter("[data-fancybox-start=1]").trigger("click");return this};p.ready(function(){var a,d;f.scrollbarWidth===v&&(f.scrollbarWidth=function(){var a=f('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),b=a.children(),b=b.innerWidth()-b.height(99).innerWidth();a.remove();return b});if(f.support.fixedPosition===v){a=f.support;d=f('<div style="position:fixed;top:20px;"></div>').appendTo("body");var e=20===
d[0].offsetTop||15===d[0].offsetTop;d.remove();a.fixedPosition=e}f.extend(b.defaults,{scrollbarWidth:f.scrollbarWidth(),fixed:f.support.fixedPosition,parent:f("body")});a=f(r).width();J.addClass("fancybox-lock-test");d=f(r).width();J.removeClass("fancybox-lock-test");f("<style type='text/css'>.fancybox-margin{margin-right:"+(d-a)+"px;}</style>").appendTo("head")})})(window,document,jQuery);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fancyBox/vendor/helpers/jquery.fancybox-buttons.js";
(function($){
var F=$.fancybox;
F.helpers.buttons={
defaults:{
skipSingle:false,
position:'top',
tpl:'<div id="fancybox-buttons"><ul><li><a class="btnPrev" title="Previous" href="javascript:;"></a></li><li><a class="btnPlay" title="Start slideshow" href="javascript:;"></a></li><li><a class="btnNext" title="Next" href="javascript:;"></a></li><li><a class="btnToggle" title="Toggle size" href="javascript:;"></a></li><li><a class="btnClose" title="Close" href="javascript:;"></a></li></ul></div>'
},
list:null,
buttons:null,
beforeLoad:function(opts,obj){
if(opts.skipSingle&&obj.group.length<2){
obj.helpers.buttons=false;
obj.closeBtn=true;
return;
}
obj.margin[opts.position==='bottom'?2:0]+=30;
},
onPlayStart:function(){
if(this.buttons){
this.buttons.play.attr('title','Pause slideshow').addClass('btnPlayOn');
}
},
onPlayEnd:function(){
if(this.buttons){
this.buttons.play.attr('title','Start slideshow').removeClass('btnPlayOn');
}
},
afterShow:function(opts,obj){
var buttons=this.buttons;
if(!buttons){
this.list=$(opts.tpl).addClass(opts.position).appendTo('body');
buttons={
prev:this.list.find('.btnPrev').click(F.prev),
next:this.list.find('.btnNext').click(F.next),
play:this.list.find('.btnPlay').click(F.play),
toggle:this.list.find('.btnToggle').click(F.toggle),
close:this.list.find('.btnClose').click(F.close)
}
}
if(obj.index>0||obj.loop){
buttons.prev.removeClass('btnDisabled');
}else{
buttons.prev.addClass('btnDisabled');
}
if(obj.loop||obj.index<obj.group.length-1){
buttons.next.removeClass('btnDisabled');
buttons.play.removeClass('btnDisabled');
}else{
buttons.next.addClass('btnDisabled');
buttons.play.addClass('btnDisabled');
}
this.buttons=buttons;
this.onUpdate(opts,obj);
},
onUpdate:function(opts,obj){
var toggle;
if(!this.buttons){
return;
}
toggle=this.buttons.toggle.removeClass('btnDisabled btnToggleOn');
if(obj.canShrink){
toggle.addClass('btnToggleOn');
}else if(!obj.canExpand){
toggle.addClass('btnDisabled');
}
},
beforeClose:function(){
if(this.list){
this.list.remove();
}
this.list=null;
this.buttons=null;
}
};
}(jQuery));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fancyBox/vendor/helpers/jquery.fancybox-media.js";
(function($){
"use strict";
var F=$.fancybox,
format=function(url,rez,params){
params=params||'';
if($.type(params)==="object"){
params=$.param(params,true);
}
$.each(rez,function(key,value){
url=url.replace('$'+key,value||'');
});
if(params.length){
url+=(url.indexOf('?')>0?'&':'?')+params;
}
return url;
};
F.helpers.media={
defaults:{
youtube:{
matcher:/(youtube\.com|youtu\.be|youtube-nocookie\.com)\/(watch\?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*)).*/i,
params:{
autoplay:1,
autohide:1,
fs:1,
rel:0,
hd:1,
wmode:'opaque',
enablejsapi:1
},
type:'iframe',
url:'//www.youtube.com/embed/$3'
},
vimeo:{
matcher:/(?:vimeo(?:pro)?.com)\/(?:[^\d]+)?(\d+)(?:.*)/,
params:{
autoplay:1,
hd:1,
show_title:1,
show_byline:1,
show_portrait:0,
fullscreen:1
},
type:'iframe',
url:'//player.vimeo.com/video/$1'
},
metacafe:{
matcher:/metacafe.com\/(?:watch|fplayer)\/([\w\-]{1,10})/,
params:{
autoPlay:'yes'
},
type:'swf',
url:function(rez,params,obj){
obj.swf.flashVars='playerVars='+$.param(params,true);
return'//www.metacafe.com/fplayer/'+rez[1]+'/.swf';
}
},
dailymotion:{
matcher:/dailymotion.com\/video\/(.*)\/?(.*)/,
params:{
additionalInfos:0,
autoStart:1
},
type:'swf',
url:'//www.dailymotion.com/swf/video/$1'
},
twitvid:{
matcher:/twitvid\.com\/([a-zA-Z0-9_\-\?\=]+)/i,
params:{
autoplay:0
},
type:'iframe',
url:'//www.twitvid.com/embed.php?guid=$1'
},
twitpic:{
matcher:/twitpic\.com\/(?!(?:place|photos|events)\/)([a-zA-Z0-9\?\=\-]+)/i,
type:'image',
url:'//twitpic.com/show/full/$1/'
},
instagram:{
matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
type:'image',
url:'//$1/p/$2/media/?size=l'
},
google_maps:{
matcher:/maps\.google\.([a-z]{2,3}(\.[a-z]{2})?)\/(\?ll=|maps\?)(.*)/i,
type:'iframe',
url:function(rez){
return'//maps.google.'+rez[1]+'/'+rez[3]+''+rez[4]+'&output='+(rez[4].indexOf('layer=c')>0?'svembed':'embed');
}
}
},
beforeLoad:function(opts,obj){
var url=obj.href||'',
type=false,
what,
item,
rez,
params;
for(what in opts){
if(opts.hasOwnProperty(what)){
item=opts[what];
rez=url.match(item.matcher);
if(rez){
type=item.type;
params=$.extend(true,{},item.params,obj[what]||($.isPlainObject(opts[what])?opts[what].params:null));
url=$.type(item.url)==="function"?item.url.call(this,rez,params,obj):format(item.url,rez,params);
break;
}
}
}
if(type){
obj.href=url;
obj.type=type;
obj.autoHeight=false;
}
}
};
}(jQuery));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fancyBox/vendor/helpers/jquery.fancybox-thumbs.js";
(function($){
var F=$.fancybox;
F.helpers.thumbs={
defaults:{
width:50,
height:50,
position:'bottom',
source:function(item){
var href;
if(item.element){
href=$(item.element).find('img').attr('src');
}
if(!href&&item.type==='image'&&item.href){
href=item.href;
}
return href;
}
},
wrap:null,
list:null,
width:0,
init:function(opts,obj){
var that=this,
list,
thumbWidth=opts.width,
thumbHeight=opts.height,
thumbSource=opts.source;
list='';
for(var n=0;n<obj.group.length;n++){
list+='<li><a style="width:'+thumbWidth+'px;height:'+thumbHeight+'px;" href="javascript:jQuery.fancybox.jumpto('+n+');"></a></li>';
}
this.wrap=$('<div id="fancybox-thumbs"></div>').addClass(opts.position).appendTo('body');
this.list=$('<ul>'+list+'</ul>').appendTo(this.wrap);
$.each(obj.group,function(i){
var href=thumbSource(obj.group[i]);
if(!href){
return;
}
$("<img />").load(function(){
var width=this.width,
height=this.height,
widthRatio,heightRatio,parent;
if(!that.list||!width||!height){
return;
}
widthRatio=width/thumbWidth;
heightRatio=height/thumbHeight;
parent=that.list.children().eq(i).find('a');
if(widthRatio>=1&&heightRatio>=1){
if(widthRatio>heightRatio){
width=Math.floor(width/heightRatio);
height=thumbHeight;
}else{
width=thumbWidth;
height=Math.floor(height/widthRatio);
}
}
$(this).css({
width:width,
height:height,
top:Math.floor(thumbHeight/2-height/2),
left:Math.floor(thumbWidth/2-width/2)
});
parent.width(thumbWidth).height(thumbHeight);
$(this).hide().appendTo(parent).fadeIn(300);
}).attr('src',href);
});
this.width=this.list.children().eq(0).outerWidth(true);
this.list.width(this.width*(obj.group.length+1)).css('left',Math.floor($(window).width()*0.5-(obj.index*this.width+this.width*0.5)));
},
beforeLoad:function(opts,obj){
if(obj.group.length<2){
obj.helpers.thumbs=false;
return;
}
obj.margin[opts.position==='top'?0:2]+=((opts.height)+15);
},
afterShow:function(opts,obj){
if(this.list){
this.onUpdate(opts,obj);
}else{
this.init(opts,obj);
}
this.list.children().removeClass('active').eq(obj.index).addClass('active');
},
onUpdate:function(opts,obj){
if(this.list){
this.list.stop(true).animate({
'left':Math.floor($(window).width()*0.5-(obj.index*this.width+this.width*0.5))
},150);
}
},
beforeClose:function(){
if(this.wrap){
this.wrap.remove();
}
this.wrap=null;
this.list=null;
this.width=0;
}
}
}(jQuery));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/lib/lightbox/:module-view.js";
jQuery(function($){
$(".i4-img-lightbox").each(function(){
var $img=$(this);
var $container=$img.closest('.i4-img-container');
function getBestTitle(){
var titleAttr=$img.attr('title');
var alternativeText=$img.attr('alt');
return titleAttr||alternativeText;
}
function getBestCaption(){
var explicitCaption=$container.find('.i4-img-caption').text();
var implicitCaption=$img.data('i4-img-caption');
return explicitCaption||implicitCaption||getBestTitle();
}
var copyright=$container.find('.i4-img-copyright').text();
var src=$img.attr('src').replace(/resize=.+(&)?/,'');
var alt=$img.attr('alt');
var title=getBestTitle();
var caption=getBestCaption();
var downloadButton=$img.data('downloadbutton');
var $link=$('<a/>')
.attr("href",src)
.attr("title",title)
.attr("rel","group")
.attr("data-downloadbutton",downloadButton)
.attr("data-copyright",copyright)
.attr("data-caption",caption)
.attr("class","i4-img-fancybox");
$img.wrap($link);
});
$(".i4-img-fancybox").fancybox({
helpers:{
overlay:{
locked:false
},
title:{type:'over'}
},
afterLoad:function(object){
var content=this.element.data("fancybox-content");
if(content){
object.content=content;
}
},
beforeShow:function(){
var $link=this.element;
var $img=$link.find('img');
var title=$link.attr('title');
var alt=$img.attr('alt');
var src=$link.prop("href")||(""+$img.attr('src')).replace(/resize=.+(&)?/,'');
var fileName=src.split('/').slice(-1)[0].split('?')[0];
var downloadButton=$link.data('downloadbutton');
var copyright=$link.data('copyright');
var caption=$link.data('caption');
this.inner.find('img').attr('title',title);
this.inner.find('img').attr('alt',alt);
var quotedCopyrightText=copyright?"("+copyright+")":undefined;
var downloadButtonHtml=downloadButton?'<a class="download" href="'+src+'" download="'+fileName+'"><i title="'+"Download"+'" class="sf sf-download-2"></i></a>':undefined;
var titleParts=[
caption,
quotedCopyrightText,
downloadButtonHtml
];
this.title=titleParts.filter(function(part){
return part;
}).join(" ");
},
afterShow:function(){
var fancyboxWrapper=$(".fancybox-wrap");
fancyboxWrapper.on('swipeleft',function(){
$.fancybox.next();
});
fancyboxWrapper.on('swiperight',function(){
$.fancybox.prev();
});
}
});
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/js/apis.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/js/pegasus.js";
(function(window){
var Pegasus=window.Pegasus=window.Pegasus||{};
Pegasus.defineNamespace=function(path){
var pathNames=path.split('.').filter(function(node){return!!node;});
var namespace=Pegasus;
while(pathNames.length>0){
var name=pathNames.shift();
namespace=namespace[name]=namespace[name]||{};
}
return namespace;
}
})(window);
(function(window){
var Default=Pegasus.defineNamespace('Common.Common.Default');
var loadingYoutubeIframeAPI;
Default.loadYoutubeIframeAPI=function(){
if(loadingYoutubeIframeAPI===undefined){
loadingYoutubeIframeAPI=new Promise(function(resolve){
var tag=document.createElement('script');
tag.src="https://www.youtube.com/iframe_api";
var firstScriptTag=document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag,firstScriptTag);
window.onYouTubeIframeAPIReady=function(){
resolve();
}
});
}
return loadingYoutubeIframeAPI;
};
var loadingVimeoAPI;
Default.loadVimeoAPI=function(){
if(loadingVimeoAPI===undefined){
loadingVimeoAPI=new Promise(function(resolve){
var tag=document.createElement('script');
var firstScriptTag=document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag,firstScriptTag);
tag.onload=function(){
resolve();
};
tag.src="https://player.vimeo.com/api/player.js";
});
}
return loadingVimeoAPI;
};
})(window);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/js/youtube.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/js/pegasus.js";
(function(window){
var Pegasus=window.Pegasus=window.Pegasus||{};
Pegasus.defineNamespace=function(path){
var pathNames=path.split('.').filter(function(node){return!!node;});
var namespace=Pegasus;
while(pathNames.length>0){
var name=pathNames.shift();
namespace=namespace[name]=namespace[name]||{};
}
return namespace;
}
})(window);
(function(window){
var Default=Pegasus.defineNamespace('Common.Common.Default');
Default.loadYoutubeVideo=function(iframe,offset){
var offset=offset||0.5;
var $iframe=iframe;
var iframeId=iframe.attr("id");
var startAutomatically=$iframe.data('startautomatically');
var muteVideo=$iframe.data('mutevideo');
var player;
function play(){
if(player.getPlayerState()===1)
return;
programPlayed=true;
player.playVideo();
}
function pause(){
if(player.getPlayerState()===YT.PlayerState.PAUSED||player.getPlayerState()===YT.PlayerState.CUED)
return;
programPaused=true;
player.pauseVideo();
}
var programPaused=false;
var programPlayed=false;
var userPaused=false;
var userPlayed=false;
function scrollControl(){
if(userPaused||userPlayed)
return;
if(canPlayVideo($iframe)){
play();
}else{
pause();
}
}
function eventHandler(){
$(window).on('scroll',function(){
scrollControl();
});
scrollControl();
}
function canPlayVideo(el){
var rect=el[0].getBoundingClientRect();
var iframeHeight=rect.bottom-rect.top;
return(
rect.top>=-(iframeHeight*offset)&&
rect.bottom<=(window.innerHeight+(iframeHeight*offset))
);
}
function onPlayerReady(e){
if(muteVideo)
player.mute();
eventHandler();
}
function onPlayerStateChange(e){
if(e.data==YT.PlayerState.PAUSED){
if(programPaused){
programPaused=false;
}else{
userPaused=true;
}
}
if(e.data==YT.PlayerState.PLAYING){
if(programPlayed){
programPlayed=false;
}else{
userPlayed=true;
}
}
}
if(!startAutomatically)
return;
player=new YT.Player(iframeId,{
events:{
'onReady':onPlayerReady,
'onStateChange':onPlayerStateChange
}
});
};
}(window));
$(function(){
$('.component-youTube iframe').each(function(i){
var $iframe=$(this);
Default.loadYoutubeIframeAPI().then(function(){
Default.loadYoutubeVideo($iframe);
});
});
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/js/video.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/default/js/pegasus.js";
(function(window){
var Pegasus=window.Pegasus=window.Pegasus||{};
Pegasus.defineNamespace=function(path){
var pathNames=path.split('.').filter(function(node){return!!node;});
var namespace=Pegasus;
while(pathNames.length>0){
var name=pathNames.shift();
namespace=namespace[name]=namespace[name]||{};
}
return namespace;
}
})(window);
(function(window){
var Default=Pegasus.defineNamespace('Common.Common.Default');
Default.video=function(el,options){
var $videoContainer=el;
var $video=el.children('[data-video-container]').children().first();
var offset=options.offset||0.5;
var startAutomatically=$videoContainer.data('startautomatically');
var muteVideo=$videoContainer.data('mutevideo');
var videoControls={
isPlaying:false,
isPaused:true
};
var programPaused=false;
var programPlayed=false;
var userPaused=false;
var userPlayed=false;
var scrollControl=function(){
if(options.openInFancybox||!startAutomatically)
return;
if(userPaused||userPlayed)
return;
if(canPlayVideo($video)){
play();
}else{
pause();
}
};
var eventHandler=function(){
$(window).on('scroll',function(){
scrollControl();
});
scrollControl();
};
function canPlayVideo(el){
var rect=el[0].getBoundingClientRect();
var iframeHeight=rect.bottom-rect.top;
return(
rect.top>=-(iframeHeight*offset)&&
rect.bottom<=(window.innerHeight+(iframeHeight*offset))
);
}
function onPlayerReady(e){
if(muteVideo&&startAutomatically)
videoControls.mute();
eventHandler();
}
function onPause(){
videoControls.isPlaying=false;
videoControls.isPaused=true;
if(programPaused){
programPaused=false;
}else{
userPaused=true;
}
}
function onPlay(){
videoControls.isPlaying=true;
videoControls.isPaused=false;
if(programPlayed){
programPlayed=false;
}else{
userPlayed=true;
}
}
function play(){
if(videoControls.isPlaying)
return;
programPlayed=true;
videoControls.play();
}
function pause(){
if(videoControls.isPaused)
return;
programPaused=true;
videoControls.pause();
}
function initVideo(){
if(options.openInFancybox){
$("[href='#"+$videoContainer.attr("id")+"']").fancybox({
beforeClose:function(){
videoControls.pause();
},
beforeShow:function(){
if($video.is("video")){
var $source=$video.children("source");
if($source.is("[data-src]")){
$source.attr("src",$source.attr("data-src"));
$source.removeAttr("data-src");
}
}
}
}
);
}
var providerName=$videoContainer.data('providername');
if(providerName=='YouTube'){
$video.attr("src",$video.attr("src")+"&enablejsapi=1");
Default.loadYoutubeIframeAPI().then(function(){
var player=new YT.Player($video.get(0),{
events:{
'onReady':function(event){
videoControls.play=function(){
player.playVideo();
};
videoControls.pause=function(){
player.pauseVideo();
};
videoControls.mute=function(){
player.mute();
};
onPlayerReady();
},
'onStateChange':function(event){
if(event.data==YT.PlayerState.PLAYING){
onPlay();
}
if(event.data==YT.PlayerState.PAUSED){
onPause();
}
}
}
});
});
}
if(providerName=='Vimeo'){
Default.loadVimeoAPI().then(function(){
var player=new Vimeo.Player($video.get(0));
videoControls.play=function(){
player.play();
};
videoControls.pause=function(){
player.pause()
};
videoControls.mute=function(){
player.setVolume(0);
};
player.on('play',function(){
onPlay();
});
player.on('pause',function(){
onPause();
});
onPlayerReady();
});
}
if(providerName=='localVideo'){
videoControls.play=function(){
$video.get(0).play();
};
videoControls.pause=function(){
$video.get(0).pause();
};
videoControls.mute=function(){
$video.get(0).muted=true;
};
$video.get(0).onpause=function(){
onPause();
};
$video.get(0).onplay=function(){
onPlay();
};
onPlayerReady();
}
}
if($('body.mode-editor').length>0)
return;
initVideo();
};
}(window));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/googleMapsApi/:module.js";
var Pegasus;
(function(Pegasus){
var GoogleMapsApi;
(function(GoogleMapsApi){
var apiKey="AIzaSyBl65aADImMBZRsNbJmZiibP3oc8115PC0";
var queue=[];
var loading=false;
var finished=false;
function require(){
if(!apiKey){
(console.error||console.log).call(console,"Google Maps API key is not configured!");
return new Promise(function(){});
}
if(finished){
return new Promise(function(resolve){
resolve();
});
}
if(!loading){
window.pegasus_googlemapsapi_ready=function(){
finished=true;
queue.forEach(function(resolve){
resolve();
});
delete window.pegasus_googlemapsapi_ready;
};
var script=document.createElement("script");
script.async=true;
script.defer=true;
//script.src="https://maps.googleapis.com/maps/api/js?callback=pegasus_googlemapsapi_ready&libraries=places&key="+apiKey;
var scripts=document.scripts;
var firstScript=scripts.item(0);
firstScript.parentNode.insertBefore(script,firstScript);
loading=true;
}
return new Promise(function(resolve){
queue.push(function(){
resolve();
});
});
}
GoogleMapsApi.require=require;
})(GoogleMapsApi=Pegasus.GoogleMapsApi||(Pegasus.GoogleMapsApi={}));
})(Pegasus||(Pegasus={}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/consentTracker/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/nouislider/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/nouislider/vendor/nouislider/distribute/nouislider.js";
(function(factory){
if(typeof define==='function'&&define.amd){
define([],factory);
}else if(typeof exports==='object'){
module.exports=factory();
}else{
window.noUiSlider=factory();
}
}(function(){
'use strict';
function addNodeTo(target,className){
var div=document.createElement('div');
addClass(div,className);
target.appendChild(div);
return div;
}
function unique(array){
return array.filter(function(a){
return!this[a]?this[a]=true:false;
},{});
}
function closest(value,to){
return Math.round(value/to)*to;
}
function offset(elem,orientation){
var rect=elem.getBoundingClientRect(),
doc=elem.ownerDocument,
docElem=doc.documentElement,
pageOffset=getPageOffset();
if(/webkit.*Chrome.*Mobile/i.test(navigator.userAgent)){
pageOffset.x=0;
}
return orientation?(rect.top+pageOffset.y-docElem.clientTop):(rect.left+pageOffset.x-docElem.clientLeft);
}
function isNumeric(a){
return typeof a==='number'&&!isNaN(a)&&isFinite(a);
}
function addClassFor(element,className,duration){
if(duration>0){
addClass(element,className);
setTimeout(function(){
removeClass(element,className);
},duration);
}
}
function limit(a){
return Math.max(Math.min(a,100),0);
}
function asArray(a){
return Array.isArray(a)?a:[a];
}
function countDecimals(numStr){
numStr=String(numStr);
var pieces=numStr.split(".");
return pieces.length>1?pieces[1].length:0;
}
function addClass(el,className){
if(el.classList){
el.classList.add(className);
}else{
el.className+=' '+className;
}
}
function removeClass(el,className){
if(el.classList){
el.classList.remove(className);
}else{
el.className=el.className.replace(new RegExp('(^|\\b)'+className.split(' ').join('|')+'(\\b|$)','gi'),' ');
}
}
function hasClass(el,className){
return el.classList?el.classList.contains(className):new RegExp('\\b'+className+'\\b').test(el.className);
}
function getPageOffset(){
var supportPageOffset=window.pageXOffset!==undefined,
isCSS1Compat=((document.compatMode||"")==="CSS1Compat"),
x=supportPageOffset?window.pageXOffset:isCSS1Compat?document.documentElement.scrollLeft:document.body.scrollLeft,
y=supportPageOffset?window.pageYOffset:isCSS1Compat?document.documentElement.scrollTop:document.body.scrollTop;
return{
x:x,
y:y
};
}
function getActions(){
return window.navigator.pointerEnabled?{
start:'pointerdown',
move:'pointermove',
end:'pointerup'
}:window.navigator.msPointerEnabled?{
start:'MSPointerDown',
move:'MSPointerMove',
end:'MSPointerUp'
}:{
start:'mousedown touchstart',
move:'mousemove touchmove',
end:'mouseup touchend'
};
}
function subRangeRatio(pa,pb){
return(100/(pb-pa));
}
function fromPercentage(range,value){
return(value*100)/(range[1]-range[0]);
}
function toPercentage(range,value){
return fromPercentage(range,range[0]<0?
value+Math.abs(range[0]):
value-range[0]);
}
function isPercentage(range,value){
return((value*(range[1]-range[0]))/100)+range[0];
}
function getJ(value,arr){
var j=1;
while(value>=arr[j]){
j+=1;
}
return j;
}
function toStepping(xVal,xPct,value){
if(value>=xVal.slice(-1)[0]){
return 100;
}
var j=getJ(value,xVal),va,vb,pa,pb;
va=xVal[j-1];
vb=xVal[j];
pa=xPct[j-1];
pb=xPct[j];
return pa+(toPercentage([va,vb],value)/subRangeRatio(pa,pb));
}
function fromStepping(xVal,xPct,value){
if(value>=100){
return xVal.slice(-1)[0];
}
var j=getJ(value,xPct),va,vb,pa,pb;
va=xVal[j-1];
vb=xVal[j];
pa=xPct[j-1];
pb=xPct[j];
return isPercentage([va,vb],(value-pa)*subRangeRatio(pa,pb));
}
function getStep(xPct,xSteps,snap,value){
if(value===100){
return value;
}
var j=getJ(value,xPct),a,b;
if(snap){
a=xPct[j-1];
b=xPct[j];
if((value-a)>((b-a)/2)){
return b;
}
return a;
}
if(!xSteps[j-1]){
return value;
}
return xPct[j-1]+closest(
value-xPct[j-1],
xSteps[j-1]
);
}
function handleEntryPoint(index,value,that){
var percentage;
if(typeof value==="number"){
value=[value];
}
if(Object.prototype.toString.call(value)!=='[object Array]'){
throw new Error("noUiSlider: 'range' contains invalid value.");
}
if(index==='min'){
percentage=0;
}else if(index==='max'){
percentage=100;
}else{
percentage=parseFloat(index);
}
if(!isNumeric(percentage)||!isNumeric(value[0])){
throw new Error("noUiSlider: 'range' value isn't numeric.");
}
that.xPct.push(percentage);
that.xVal.push(value[0]);
if(!percentage){
if(!isNaN(value[1])){
that.xSteps[0]=value[1];
}
}else{
that.xSteps.push(isNaN(value[1])?false:value[1]);
}
that.xHighestCompleteStep.push(0);
}
function handleStepPoint(i,n,that){
if(!n){
return true;
}
that.xSteps[i]=fromPercentage([
that.xVal[i]
,that.xVal[i+1]
],n)/subRangeRatio(
that.xPct[i],
that.xPct[i+1]);
var totalSteps=(that.xVal[i+1]-that.xVal[i])/that.xNumSteps[i];
var highestStep=Math.ceil(Number(totalSteps.toFixed(3))-1);
var step=that.xVal[i]+(that.xNumSteps[i]*highestStep);
that.xHighestCompleteStep[i]=step;
}
function Spectrum(entry,snap,direction,singleStep){
this.xPct=[];
this.xVal=[];
this.xSteps=[singleStep||false];
this.xNumSteps=[false];
this.xHighestCompleteStep=[];
this.snap=snap;
this.direction=direction;
var index,ordered=[];
for(index in entry){
if(entry.hasOwnProperty(index)){
ordered.push([entry[index],index]);
}
}
if(ordered.length&&typeof ordered[0][0]==="object"){
ordered.sort(function(a,b){return a[0][0]-b[0][0];});
}else{
ordered.sort(function(a,b){return a[0]-b[0];});
}
for(index=0;index<ordered.length;index++){
handleEntryPoint(ordered[index][1],ordered[index][0],this);
}
this.xNumSteps=this.xSteps.slice(0);
for(index=0;index<this.xNumSteps.length;index++){
handleStepPoint(index,this.xNumSteps[index],this);
}
}
Spectrum.prototype.getMargin=function(value){
var step=this.xNumSteps[0];
if(step&&(value%step)){
throw new Error("noUiSlider: 'limit' and 'margin' must be divisible by step.");
}
return this.xPct.length===2?fromPercentage(this.xVal,value):false;
};
Spectrum.prototype.toStepping=function(value){
value=toStepping(this.xVal,this.xPct,value);
return value;
};
Spectrum.prototype.fromStepping=function(value){
return fromStepping(this.xVal,this.xPct,value);
};
Spectrum.prototype.getStep=function(value){
value=getStep(this.xPct,this.xSteps,this.snap,value);
return value;
};
Spectrum.prototype.getNearbySteps=function(value){
var j=getJ(value,this.xPct);
return{
stepBefore:{startValue:this.xVal[j-2],step:this.xNumSteps[j-2],highestStep:this.xHighestCompleteStep[j-2]},
thisStep:{startValue:this.xVal[j-1],step:this.xNumSteps[j-1],highestStep:this.xHighestCompleteStep[j-1]},
stepAfter:{startValue:this.xVal[j-0],step:this.xNumSteps[j-0],highestStep:this.xHighestCompleteStep[j-0]}
};
};
Spectrum.prototype.countStepDecimals=function(){
var stepDecimals=this.xNumSteps.map(countDecimals);
return Math.max.apply(null,stepDecimals);
};
Spectrum.prototype.convert=function(value){
return this.getStep(this.toStepping(value));
};
var defaultFormatter={'to':function(value){
return value!==undefined&&value.toFixed(2);
},'from':Number};
function testStep(parsed,entry){
if(!isNumeric(entry)){
throw new Error("noUiSlider: 'step' is not numeric.");
}
parsed.singleStep=entry;
}
function testRange(parsed,entry){
if(typeof entry!=='object'||Array.isArray(entry)){
throw new Error("noUiSlider: 'range' is not an object.");
}
if(entry.min===undefined||entry.max===undefined){
throw new Error("noUiSlider: Missing 'min' or 'max' in 'range'.");
}
if(entry.min===entry.max){
throw new Error("noUiSlider: 'range' 'min' and 'max' cannot be equal.");
}
parsed.spectrum=new Spectrum(entry,parsed.snap,parsed.dir,parsed.singleStep);
}
function testStart(parsed,entry){
entry=asArray(entry);
if(!Array.isArray(entry)||!entry.length){
throw new Error("noUiSlider: 'start' option is incorrect.");
}
parsed.handles=entry.length;
parsed.start=entry;
}
function testSnap(parsed,entry){
parsed.snap=entry;
if(typeof entry!=='boolean'){
throw new Error("noUiSlider: 'snap' option must be a boolean.");
}
}
function testAnimate(parsed,entry){
parsed.animate=entry;
if(typeof entry!=='boolean'){
throw new Error("noUiSlider: 'animate' option must be a boolean.");
}
}
function testAnimationDuration(parsed,entry){
parsed.animationDuration=entry;
if(typeof entry!=='number'){
throw new Error("noUiSlider: 'animationDuration' option must be a number.");
}
}
function testConnect(parsed,entry){
var connect=[false];
var i;
if(entry===true||entry===false){
for(i=1;i<parsed.handles;i++){
connect.push(entry);
}
connect.push(false);
}
else if(!Array.isArray(entry)||!entry.length||entry.length!==parsed.handles+1){
throw new Error("noUiSlider: 'connect' option doesn't match handle count.");
}
else{
connect=entry;
}
parsed.connect=connect;
}
function testOrientation(parsed,entry){
switch(entry){
case'horizontal':
parsed.ort=0;
break;
case'vertical':
parsed.ort=1;
break;
default:
throw new Error("noUiSlider: 'orientation' option is invalid.");
}
}
function testMargin(parsed,entry){
if(!isNumeric(entry)){
throw new Error("noUiSlider: 'margin' option must be numeric.");
}
if(entry===0){
return;
}
parsed.margin=parsed.spectrum.getMargin(entry);
if(!parsed.margin){
throw new Error("noUiSlider: 'margin' option is only supported on linear sliders.");
}
}
function testLimit(parsed,entry){
if(!isNumeric(entry)){
throw new Error("noUiSlider: 'limit' option must be numeric.");
}
parsed.limit=parsed.spectrum.getMargin(entry);
if(!parsed.limit||parsed.handles<2){
throw new Error("noUiSlider: 'limit' option is only supported on linear sliders with 2 or more handles.");
}
}
function testDirection(parsed,entry){
switch(entry){
case'ltr':
parsed.dir=0;
break;
case'rtl':
parsed.dir=1;
break;
default:
throw new Error("noUiSlider: 'direction' option was not recognized.");
}
}
function testBehaviour(parsed,entry){
if(typeof entry!=='string'){
throw new Error("noUiSlider: 'behaviour' must be a string containing options.");
}
var tap=entry.indexOf('tap')>=0;
var drag=entry.indexOf('drag')>=0;
var fixed=entry.indexOf('fixed')>=0;
var snap=entry.indexOf('snap')>=0;
var hover=entry.indexOf('hover')>=0;
if(fixed){
if(parsed.handles!==2){
throw new Error("noUiSlider: 'fixed' behaviour must be used with 2 handles");
}
testMargin(parsed,parsed.start[1]-parsed.start[0]);
}
parsed.events={
tap:tap||snap,
drag:drag,
fixed:fixed,
snap:snap,
hover:hover
};
}
function testTooltips(parsed,entry){
if(entry===false){
return;
}
else if(entry===true){
parsed.tooltips=[];
for(var i=0;i<parsed.handles;i++){
parsed.tooltips.push(true);
}
}
else{
parsed.tooltips=asArray(entry);
if(parsed.tooltips.length!==parsed.handles){
throw new Error("noUiSlider: must pass a formatter for all handles.");
}
parsed.tooltips.forEach(function(formatter){
if(typeof formatter!=='boolean'&&(typeof formatter!=='object'||typeof formatter.to!=='function')){
throw new Error("noUiSlider: 'tooltips' must be passed a formatter or 'false'.");
}
});
}
}
function testFormat(parsed,entry){
parsed.format=entry;
if(typeof entry.to==='function'&&typeof entry.from==='function'){
return true;
}
throw new Error("noUiSlider: 'format' requires 'to' and 'from' methods.");
}
function testCssPrefix(parsed,entry){
if(entry!==undefined&&typeof entry!=='string'&&entry!==false){
throw new Error("noUiSlider: 'cssPrefix' must be a string or `false`.");
}
parsed.cssPrefix=entry;
}
function testCssClasses(parsed,entry){
if(entry!==undefined&&typeof entry!=='object'){
throw new Error("noUiSlider: 'cssClasses' must be an object.");
}
if(typeof parsed.cssPrefix==='string'){
parsed.cssClasses={};
for(var key in entry){
if(!entry.hasOwnProperty(key)){continue;}
parsed.cssClasses[key]=parsed.cssPrefix+entry[key];
}
}else{
parsed.cssClasses=entry;
}
}
function testUseRaf(parsed,entry){
if(entry===true||entry===false){
parsed.useRequestAnimationFrame=entry;
}else{
throw new Error("noUiSlider: 'useRequestAnimationFrame' option should be true (default) or false.");
}
}
function testOptions(options){
var parsed={
margin:0,
limit:0,
animate:true,
animationDuration:300,
format:defaultFormatter
},tests;
tests={
'step':{r:false,t:testStep},
'start':{r:true,t:testStart},
'connect':{r:true,t:testConnect},
'direction':{r:true,t:testDirection},
'snap':{r:false,t:testSnap},
'animate':{r:false,t:testAnimate},
'animationDuration':{r:false,t:testAnimationDuration},
'range':{r:true,t:testRange},
'orientation':{r:false,t:testOrientation},
'margin':{r:false,t:testMargin},
'limit':{r:false,t:testLimit},
'behaviour':{r:true,t:testBehaviour},
'format':{r:false,t:testFormat},
'tooltips':{r:false,t:testTooltips},
'cssPrefix':{r:false,t:testCssPrefix},
'cssClasses':{r:false,t:testCssClasses},
'useRequestAnimationFrame':{r:false,t:testUseRaf}
};
var defaults={
'connect':false,
'direction':'ltr',
'behaviour':'tap',
'orientation':'horizontal',
'cssPrefix':'noUi-',
'cssClasses':{
target:'target',
base:'base',
origin:'origin',
handle:'handle',
horizontal:'horizontal',
vertical:'vertical',
background:'background',
connect:'connect',
ltr:'ltr',
rtl:'rtl',
draggable:'draggable',
drag:'state-drag',
tap:'state-tap',
active:'active',
tooltip:'tooltip',
pips:'pips',
pipsHorizontal:'pips-horizontal',
pipsVertical:'pips-vertical',
marker:'marker',
markerHorizontal:'marker-horizontal',
markerVertical:'marker-vertical',
markerNormal:'marker-normal',
markerLarge:'marker-large',
markerSub:'marker-sub',
value:'value',
valueHorizontal:'value-horizontal',
valueVertical:'value-vertical',
valueNormal:'value-normal',
valueLarge:'value-large',
valueSub:'value-sub'
},
'useRequestAnimationFrame':true
};
Object.keys(tests).forEach(function(name){
if(options[name]===undefined&&defaults[name]===undefined){
if(tests[name].r){
throw new Error("noUiSlider: '"+name+"' is required.");
}
return true;
}
tests[name].t(parsed,options[name]===undefined?defaults[name]:options[name]);
});
parsed.pips=options.pips;
var styles=[['left','top'],['right','bottom']];
parsed.style=styles[parsed.dir][parsed.ort];
parsed.styleOposite=styles[parsed.dir?0:1][parsed.ort];
return parsed;
}
function closure(target,options,originalOptions){
var actions=getActions();
var scope_Target=target;
var scope_Locations=[];
var scope_Base;
var scope_Handles;
var scope_HandleNumbers=[];
var scope_Connects;
var scope_Spectrum=options.spectrum;
var scope_Values=[];
var scope_Events={};
var scope_Self;
function addOrigin(base,handleNumber){
var origin=addNodeTo(base,options.cssClasses.origin);
var handle=addNodeTo(origin,options.cssClasses.handle);
handle.setAttribute('data-handle',handleNumber);
return origin;
}
function addConnect(base,add){
if(!add){
return false;
}
return addNodeTo(base,options.cssClasses.connect);
}
function addElements(connectOptions,base){
scope_Handles=[];
scope_Connects=[];
scope_Connects.push(addConnect(base,connectOptions[0]));
for(var i=0;i<options.handles;i++){
scope_Handles.push(addOrigin(base,i));
scope_HandleNumbers[i]=i;
scope_Connects.push(addConnect(base,connectOptions[i+1]));
}
}
function addSlider(target){
addClass(target,options.cssClasses.target);
if(options.dir===0){
addClass(target,options.cssClasses.ltr);
}else{
addClass(target,options.cssClasses.rtl);
}
if(options.ort===0){
addClass(target,options.cssClasses.horizontal);
}else{
addClass(target,options.cssClasses.vertical);
}
scope_Base=addNodeTo(target,options.cssClasses.base);
}
function addTooltip(handle,handleNumber){
if(!options.tooltips[handleNumber]){
return false;
}
return addNodeTo(handle.firstChild,options.cssClasses.tooltip);
}
function tooltips(){
var tips=scope_Handles.map(addTooltip);
bindEvent('update',function(values,handleNumber,unencoded){
if(!tips[handleNumber]){
return;
}
var formattedValue=values[handleNumber];
if(options.tooltips[handleNumber]!==true){
formattedValue=options.tooltips[handleNumber].to(unencoded[handleNumber]);
}
tips[handleNumber].innerHTML=formattedValue;
});
}
function getGroup(mode,values,stepped){
if(mode==='range'||mode==='steps'){
return scope_Spectrum.xVal;
}
if(mode==='count'){
var spread=(100/(values-1)),v,i=0;
values=[];
while((v=i++*spread)<=100){
values.push(v);
}
mode='positions';
}
if(mode==='positions'){
return values.map(function(value){
return scope_Spectrum.fromStepping(stepped?scope_Spectrum.getStep(value):value);
});
}
if(mode==='values'){
if(stepped){
return values.map(function(value){
return scope_Spectrum.fromStepping(scope_Spectrum.getStep(scope_Spectrum.toStepping(value)));
});
}
return values;
}
}
function generateSpread(density,mode,group){
function safeIncrement(value,increment){
return(value+increment).toFixed(7)/1;
}
var indexes={},
firstInRange=scope_Spectrum.xVal[0],
lastInRange=scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],
ignoreFirst=false,
ignoreLast=false,
prevPct=0;
group=unique(group.slice().sort(function(a,b){return a-b;}));
if(group[0]!==firstInRange){
group.unshift(firstInRange);
ignoreFirst=true;
}
if(group[group.length-1]!==lastInRange){
group.push(lastInRange);
ignoreLast=true;
}
group.forEach(function(current,index){
var step,i,q,
low=current,
high=group[index+1],
newPct,pctDifference,pctPos,type,
steps,realSteps,stepsize;
if(mode==='steps'){
step=scope_Spectrum.xNumSteps[index];
}
if(!step){
step=high-low;
}
if(low===false||high===undefined){
return;
}
step=Math.max(step,0.0000001);
for(i=low;i<=high;i=safeIncrement(i,step)){
newPct=scope_Spectrum.toStepping(i);
pctDifference=newPct-prevPct;
steps=pctDifference/density;
realSteps=Math.round(steps);
stepsize=pctDifference/realSteps;
for(q=1;q<=realSteps;q+=1){
pctPos=prevPct+(q*stepsize);
indexes[pctPos.toFixed(5)]=['x',0];
}
type=(group.indexOf(i)>-1)?1:(mode==='steps'?2:0);
if(!index&&ignoreFirst){
type=0;
}
if(!(i===high&&ignoreLast)){
indexes[newPct.toFixed(5)]=[i,type];
}
prevPct=newPct;
}
});
return indexes;
}
function addMarking(spread,filterFunc,formatter){
var element=document.createElement('div'),
out='',
valueSizeClasses=[
options.cssClasses.valueNormal,
options.cssClasses.valueLarge,
options.cssClasses.valueSub
],
markerSizeClasses=[
options.cssClasses.markerNormal,
options.cssClasses.markerLarge,
options.cssClasses.markerSub
],
valueOrientationClasses=[
options.cssClasses.valueHorizontal,
options.cssClasses.valueVertical
],
markerOrientationClasses=[
options.cssClasses.markerHorizontal,
options.cssClasses.markerVertical
];
addClass(element,options.cssClasses.pips);
addClass(element,options.ort===0?options.cssClasses.pipsHorizontal:options.cssClasses.pipsVertical);
function getClasses(type,source){
var a=source===options.cssClasses.value,
orientationClasses=a?valueOrientationClasses:markerOrientationClasses,
sizeClasses=a?valueSizeClasses:markerSizeClasses;
return source+' '+orientationClasses[options.ort]+' '+sizeClasses[type];
}
function getTags(offset,source,values){
return'class="'+getClasses(values[1],source)+'" style="'+options.style+': '+offset+'%"';
}
function addSpread(offset,values){
values[1]=(values[1]&&filterFunc)?filterFunc(values[0],values[1]):values[1];
out+='<div '+getTags(offset,options.cssClasses.marker,values)+'></div>';
if(values[1]){
out+='<div '+getTags(offset,options.cssClasses.value,values)+'>'+formatter.to(values[0])+'</div>';
}
}
Object.keys(spread).forEach(function(a){
addSpread(a,spread[a]);
});
element.innerHTML=out;
return element;
}
function pips(grid){
var mode=grid.mode,
density=grid.density||1,
filter=grid.filter||false,
values=grid.values||false,
stepped=grid.stepped||false,
group=getGroup(mode,values,stepped),
spread=generateSpread(density,mode,group),
format=grid.format||{
to:Math.round
};
return scope_Target.appendChild(addMarking(
spread,
filter,
format
));
}
function baseSize(){
var rect=scope_Base.getBoundingClientRect(),alt='offset'+['Width','Height'][options.ort];
return options.ort===0?(rect.width||scope_Base[alt]):(rect.height||scope_Base[alt]);
}
function attachEvent(events,element,callback,data){
var method=function(e){
if(scope_Target.hasAttribute('disabled')){
return false;
}
if(hasClass(scope_Target,options.cssClasses.tap)){
return false;
}
e=fixEvent(e,data.pageOffset);
if(events===actions.start&&e.buttons!==undefined&&e.buttons>1){
return false;
}
if(data.hover&&e.buttons){
return false;
}
e.calcPoint=e.points[options.ort];
callback(e,data);
};
var methods=[];
events.split(' ').forEach(function(eventName){
element.addEventListener(eventName,method,false);
methods.push([eventName,method]);
});
return methods;
}
function fixEvent(e,pageOffset){
e.preventDefault();
var touch=e.type.indexOf('touch')===0,
mouse=e.type.indexOf('mouse')===0,
pointer=e.type.indexOf('pointer')===0,
x,y,event=e;
if(e.type.indexOf('MSPointer')===0){
pointer=true;
}
if(touch){
if(event.touches.length>1){
return false;
}
x=e.changedTouches[0].pageX;
y=e.changedTouches[0].pageY;
}
pageOffset=pageOffset||getPageOffset();
if(mouse||pointer){
x=e.clientX+pageOffset.x;
y=e.clientY+pageOffset.y;
}
event.pageOffset=pageOffset;
event.points=[x,y];
event.cursor=mouse||pointer;
return event;
}
function calcPointToPercentage(calcPoint){
var location=calcPoint-offset(scope_Base,options.ort);
var proposal=(location*100)/baseSize();
return options.dir?100-proposal:proposal;
}
function getClosestHandle(proposal){
var closest=100;
var handleNumber=false;
scope_Handles.forEach(function(handle,index){
if(handle.hasAttribute('disabled')){
return;
}
var pos=Math.abs(scope_Locations[index]-proposal);
if(pos<closest){
handleNumber=index;
closest=pos;
}
});
return handleNumber;
}
function moveHandles(upward,proposal,locations,handleNumbers){
var proposals=locations.slice();
var b=[!upward,upward];
var f=[upward,!upward];
handleNumbers=handleNumbers.slice();
if(upward){
handleNumbers.reverse();
}
if(handleNumbers.length>1){
handleNumbers.forEach(function(handleNumber,o){
var to=checkHandlePosition(proposals,handleNumber,proposals[handleNumber]+proposal,b[o],f[o]);
if(to===false){
proposal=0;
}else{
proposal=to-proposals[handleNumber];
proposals[handleNumber]=to;
}
});
}
else{
b=f=[true];
}
var state=false;
handleNumbers.forEach(function(handleNumber,o){
state=setHandle(handleNumber,locations[handleNumber]+proposal,b[o],f[o])||state;
});
if(state){
handleNumbers.forEach(function(handleNumber){
fireEvent('update',handleNumber);
fireEvent('slide',handleNumber);
});
}
}
function fireEvent(eventName,handleNumber,tap){
Object.keys(scope_Events).forEach(function(targetEvent){
var eventType=targetEvent.split('.')[0];
if(eventName===eventType){
scope_Events[targetEvent].forEach(function(callback){
callback.call(
scope_Self,
scope_Values.map(options.format.to),
handleNumber,
scope_Values.slice(),
tap||false,
scope_Locations.slice()
);
});
}
});
}
function documentLeave(event,data){
if(event.type==="mouseout"&&event.target.nodeName==="HTML"&&event.relatedTarget===null){
eventEnd(event,data);
}
}
function eventMove(event,data){
if(navigator.appVersion.indexOf("MSIE 9")===-1&&event.buttons===0&&data.buttonsProperty!==0){
return eventEnd(event,data);
}
var movement=(options.dir?-1:1)*(event.calcPoint-data.startCalcPoint);
var proposal=(movement*100)/data.baseSize;
moveHandles(movement>0,proposal,data.locations,data.handleNumbers);
}
function eventEnd(event,data){
var active=scope_Base.querySelector('.'+options.cssClasses.active);
if(active!==null){
removeClass(active,options.cssClasses.active);
}
if(event.cursor){
document.body.style.cursor='';
document.body.removeEventListener('selectstart',document.body.noUiListener);
}
document.documentElement.noUiListeners.forEach(function(c){
document.documentElement.removeEventListener(c[0],c[1]);
});
removeClass(scope_Target,options.cssClasses.drag);
setZindex();
data.handleNumbers.forEach(function(handleNumber){
fireEvent('set',handleNumber);
fireEvent('change',handleNumber);
fireEvent('end',handleNumber);
});
}
function eventStart(event,data){
if(data.handleNumbers.length===1){
var handle=scope_Handles[data.handleNumbers[0]];
if(handle.hasAttribute('disabled')){
return false;
}
addClass(handle.children[0],options.cssClasses.active);
}
event.preventDefault();
event.stopPropagation();
var moveEvent=attachEvent(actions.move,document.documentElement,eventMove,{
startCalcPoint:event.calcPoint,
baseSize:baseSize(),
pageOffset:event.pageOffset,
handleNumbers:data.handleNumbers,
buttonsProperty:event.buttons,
locations:scope_Locations.slice()
});
var endEvent=attachEvent(actions.end,document.documentElement,eventEnd,{
handleNumbers:data.handleNumbers
});
var outEvent=attachEvent("mouseout",document.documentElement,documentLeave,{
handleNumbers:data.handleNumbers
});
document.documentElement.noUiListeners=moveEvent.concat(endEvent,outEvent);
if(event.cursor){
document.body.style.cursor=getComputedStyle(event.target).cursor;
if(scope_Handles.length>1){
addClass(scope_Target,options.cssClasses.drag);
}
var f=function(){
return false;
};
document.body.noUiListener=f;
document.body.addEventListener('selectstart',f,false);
}
data.handleNumbers.forEach(function(handleNumber){
fireEvent('start',handleNumber);
});
}
function eventTap(event){
event.stopPropagation();
var proposal=calcPointToPercentage(event.calcPoint);
var handleNumber=getClosestHandle(proposal);
if(handleNumber===false){
return false;
}
if(!options.events.snap){
addClassFor(scope_Target,options.cssClasses.tap,options.animationDuration);
}
setHandle(handleNumber,proposal,true,true);
setZindex();
fireEvent('slide',handleNumber,true);
fireEvent('set',handleNumber,true);
fireEvent('change',handleNumber,true);
fireEvent('update',handleNumber,true);
if(options.events.snap){
eventStart(event,{handleNumbers:[handleNumber]});
}
}
function eventHover(event){
var proposal=calcPointToPercentage(event.calcPoint);
var to=scope_Spectrum.getStep(proposal);
var value=scope_Spectrum.fromStepping(to);
Object.keys(scope_Events).forEach(function(targetEvent){
if('hover'===targetEvent.split('.')[0]){
scope_Events[targetEvent].forEach(function(callback){
callback.call(scope_Self,value);
});
}
});
}
function bindSliderEvents(behaviour){
if(!behaviour.fixed){
scope_Handles.forEach(function(handle,index){
attachEvent(actions.start,handle.children[0],eventStart,{
handleNumbers:[index]
});
});
}
if(behaviour.tap){
attachEvent(actions.start,scope_Base,eventTap,{});
}
if(behaviour.hover){
attachEvent(actions.move,scope_Base,eventHover,{hover:true});
}
if(behaviour.drag){
scope_Connects.forEach(function(connect,index){
if(connect===false||index===0||index===scope_Connects.length-1){
return;
}
var handleBefore=scope_Handles[index-1];
var handleAfter=scope_Handles[index];
var eventHolders=[connect];
addClass(connect,options.cssClasses.draggable);
if(behaviour.fixed){
eventHolders.push(handleBefore.children[0]);
eventHolders.push(handleAfter.children[0]);
}
eventHolders.forEach(function(eventHolder){
attachEvent(actions.start,eventHolder,eventStart,{
handles:[handleBefore,handleAfter],
handleNumbers:[index-1,index]
});
});
});
}
}
function checkHandlePosition(reference,handleNumber,to,lookBackward,lookForward){
if(scope_Handles.length>1){
if(lookBackward&&handleNumber>0){
to=Math.max(to,reference[handleNumber-1]+options.margin);
}
if(lookForward&&handleNumber<scope_Handles.length-1){
to=Math.min(to,reference[handleNumber+1]-options.margin);
}
}
if(scope_Handles.length>1&&options.limit){
if(lookBackward&&handleNumber>0){
to=Math.min(to,reference[handleNumber-1]+options.limit);
}
if(lookForward&&handleNumber<scope_Handles.length-1){
to=Math.max(to,reference[handleNumber+1]-options.limit);
}
}
to=scope_Spectrum.getStep(to);
to=limit(to);
if(to===reference[handleNumber]){
return false;
}
return to;
}
function toPct(pct){
return pct+'%';
}
function updateHandlePosition(handleNumber,to){
scope_Locations[handleNumber]=to;
scope_Values[handleNumber]=scope_Spectrum.fromStepping(to);
var stateUpdate=function(){
scope_Handles[handleNumber].style[options.style]=toPct(to);
updateConnect(handleNumber);
updateConnect(handleNumber+1);
};
if(window.requestAnimationFrame&&options.useRequestAnimationFrame){
window.requestAnimationFrame(stateUpdate);
}else{
stateUpdate();
}
}
function setZindex(){
scope_HandleNumbers.forEach(function(handleNumber){
var dir=(scope_Locations[handleNumber]>50?-1:1);
var zIndex=3+(scope_Handles.length+(dir*handleNumber));
scope_Handles[handleNumber].childNodes[0].style.zIndex=zIndex;
});
}
function setHandle(handleNumber,to,lookBackward,lookForward){
to=checkHandlePosition(scope_Locations,handleNumber,to,lookBackward,lookForward);
if(to===false){
return false;
}
updateHandlePosition(handleNumber,to);
return true;
}
function updateConnect(index){
if(!scope_Connects[index]){
return;
}
var l=0;
var h=100;
if(index!==0){
l=scope_Locations[index-1];
}
if(index!==scope_Connects.length-1){
h=scope_Locations[index];
}
scope_Connects[index].style[options.style]=toPct(l);
scope_Connects[index].style[options.styleOposite]=toPct(100-h);
}
function setValue(to,handleNumber){
if(to===null||to===false){
return;
}
if(typeof to==='number'){
to=String(to);
}
to=options.format.from(to);
if(to!==false&&!isNaN(to)){
setHandle(handleNumber,scope_Spectrum.toStepping(to),false,false);
}
}
function valueSet(input,fireSetEvent){
var values=asArray(input);
var isInit=scope_Locations[0]===undefined;
fireSetEvent=(fireSetEvent===undefined?true:!!fireSetEvent);
values.forEach(setValue);
if(options.animate&&!isInit){
addClassFor(scope_Target,options.cssClasses.tap,options.animationDuration);
}
scope_HandleNumbers.forEach(function(handleNumber){
setHandle(handleNumber,scope_Locations[handleNumber],true,false);
});
setZindex();
scope_HandleNumbers.forEach(function(handleNumber){
fireEvent('update',handleNumber);
if(values[handleNumber]!==null&&fireSetEvent){
fireEvent('set',handleNumber);
}
});
}
function valueReset(fireSetEvent){
valueSet(options.start,fireSetEvent);
}
function valueGet(){
var values=scope_Values.map(options.format.to);
if(values.length===1){
return values[0];
}
return values;
}
function destroy(){
for(var key in options.cssClasses){
if(!options.cssClasses.hasOwnProperty(key)){continue;}
removeClass(scope_Target,options.cssClasses[key]);
}
while(scope_Target.firstChild){
scope_Target.removeChild(scope_Target.firstChild);
}
delete scope_Target.noUiSlider;
}
function getCurrentStep(){
return scope_Locations.map(function(location,index){
var nearbySteps=scope_Spectrum.getNearbySteps(location);
var value=scope_Values[index];
var increment=nearbySteps.thisStep.step;
var decrement=null;
if(increment!==false){
if(value+increment>nearbySteps.stepAfter.startValue){
increment=nearbySteps.stepAfter.startValue-value;
}
}
if(value>nearbySteps.thisStep.startValue){
decrement=nearbySteps.thisStep.step;
}
else if(nearbySteps.stepBefore.step===false){
decrement=false;
}
else{
decrement=value-nearbySteps.stepBefore.highestStep;
}
if(location===100){
increment=null;
}
else if(location===0){
decrement=null;
}
var stepDecimals=scope_Spectrum.countStepDecimals();
if(increment!==null&&increment!==false){
increment=Number(increment.toFixed(stepDecimals));
}
if(decrement!==null&&decrement!==false){
decrement=Number(decrement.toFixed(stepDecimals));
}
return[decrement,increment];
});
}
function bindEvent(namespacedEvent,callback){
scope_Events[namespacedEvent]=scope_Events[namespacedEvent]||[];
scope_Events[namespacedEvent].push(callback);
if(namespacedEvent.split('.')[0]==='update'){
scope_Handles.forEach(function(a,index){
fireEvent('update',index);
});
}
}
function removeEvent(namespacedEvent){
var event=namespacedEvent&&namespacedEvent.split('.')[0],
namespace=event&&namespacedEvent.substring(event.length);
Object.keys(scope_Events).forEach(function(bind){
var tEvent=bind.split('.')[0],
tNamespace=bind.substring(tEvent.length);
if((!event||event===tEvent)&&(!namespace||namespace===tNamespace)){
delete scope_Events[bind];
}
});
}
function updateOptions(optionsToUpdate,fireSetEvent){
var v=valueGet();
var updateAble=['margin','limit','range','animate','snap','step','format'];
updateAble.forEach(function(name){
if(optionsToUpdate[name]!==undefined){
originalOptions[name]=optionsToUpdate[name];
}
});
var newOptions=testOptions(originalOptions);
updateAble.forEach(function(name){
if(optionsToUpdate[name]!==undefined){
options[name]=newOptions[name];
}
});
newOptions.spectrum.direction=scope_Spectrum.direction;
scope_Spectrum=newOptions.spectrum;
options.margin=newOptions.margin;
options.limit=newOptions.limit;
scope_Locations=[];
valueSet(optionsToUpdate.start||v,fireSetEvent);
}
if(scope_Target.noUiSlider){
throw new Error('Slider was already initialized.');
}
addSlider(scope_Target);
addElements(options.connect,scope_Base);
scope_Self={
destroy:destroy,
steps:getCurrentStep,
on:bindEvent,
off:removeEvent,
get:valueGet,
set:valueSet,
reset:valueReset,
__moveHandles:function(a,b,c){moveHandles(a,b,scope_Locations,c);},
options:originalOptions,
updateOptions:updateOptions,
target:scope_Target,
pips:pips
};
bindSliderEvents(options.events);
valueSet(options.start);
if(options.pips){
pips(options.pips);
}
if(options.tooltips){
tooltips();
}
return scope_Self;
}
function initialize(target,originalOptions){
if(!target.nodeName){
throw new Error('noUiSlider.create requires a single element.');
}
var options=testOptions(originalOptions,target);
var api=closure(target,options,originalOptions);
target.noUiSlider=api;
return api;
}
return{
create:initialize
};
}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/slick-carousel/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/slick-carousel/vendor/slick-carousel/slick/slick.js";
(function(factory){
'use strict';
if(typeof define==='function'&&define.amd){
define(['jquery'],factory);
}else if(typeof exports!=='undefined'){
module.exports=factory(require('jquery'));
}else{
factory(jQuery);
}
}(function($){
'use strict';
var Slick=window.Slick||{};
Slick=(function(){
var instanceUid=0;
function Slick(element,settings){
var _=this,dataSettings;
_.defaults={
accessibility:true,
adaptiveHeight:false,
appendArrows:$(element),
appendDots:$(element),
arrows:true,
asNavFor:null,
prevArrow:'<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',
nextArrow:'<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',
autoplay:false,
autoplaySpeed:3000,
centerMode:false,
centerPadding:'50px',
cssEase:'ease',
customPaging:function(slider,i){
return'<button type="button" data-role="none" role="button" aria-required="false" tabindex="0">'+(i+1)+'</button>';
},
dots:false,
dotsClass:'slick-dots',
draggable:true,
easing:'linear',
edgeFriction:0.35,
fade:false,
focusOnSelect:false,
infinite:true,
initialSlide:0,
lazyLoad:'ondemand',
mobileFirst:false,
pauseOnHover:true,
pauseOnDotsHover:false,
respondTo:'window',
responsive:null,
rows:1,
rtl:false,
slide:'',
slidesPerRow:1,
slidesToShow:1,
slidesToScroll:1,
speed:500,
swipe:true,
swipeToSlide:false,
touchMove:true,
touchThreshold:5,
useCSS:true,
useTransform:false,
variableWidth:false,
vertical:false,
verticalSwiping:false,
waitForAnimate:true,
zIndex:1000
};
_.initials={
animating:false,
dragging:false,
autoPlayTimer:null,
currentDirection:0,
currentLeft:null,
currentSlide:0,
direction:1,
$dots:null,
listWidth:null,
listHeight:null,
loadIndex:0,
$nextArrow:null,
$prevArrow:null,
slideCount:null,
slideWidth:null,
$slideTrack:null,
$slides:null,
sliding:false,
slideOffset:0,
swipeLeft:null,
$list:null,
touchObject:{},
transformsEnabled:false,
unslicked:false
};
$.extend(_,_.initials);
_.activeBreakpoint=null;
_.animType=null;
_.animProp=null;
_.breakpoints=[];
_.breakpointSettings=[];
_.cssTransitions=false;
_.hidden='hidden';
_.paused=false;
_.positionProp=null;
_.respondTo=null;
_.rowCount=1;
_.shouldClick=true;
_.$slider=$(element);
_.$slidesCache=null;
_.transformType=null;
_.transitionType=null;
_.visibilityChange='visibilitychange';
_.windowWidth=0;
_.windowTimer=null;
dataSettings=$(element).data('slick')||{};
_.options=$.extend({},_.defaults,dataSettings,settings);
_.currentSlide=_.options.initialSlide;
_.originalSettings=_.options;
if(typeof document.mozHidden!=='undefined'){
_.hidden='mozHidden';
_.visibilityChange='mozvisibilitychange';
}else if(typeof document.webkitHidden!=='undefined'){
_.hidden='webkitHidden';
_.visibilityChange='webkitvisibilitychange';
}
_.autoPlay=$.proxy(_.autoPlay,_);
_.autoPlayClear=$.proxy(_.autoPlayClear,_);
_.changeSlide=$.proxy(_.changeSlide,_);
_.clickHandler=$.proxy(_.clickHandler,_);
_.selectHandler=$.proxy(_.selectHandler,_);
_.setPosition=$.proxy(_.setPosition,_);
_.swipeHandler=$.proxy(_.swipeHandler,_);
_.dragHandler=$.proxy(_.dragHandler,_);
_.keyHandler=$.proxy(_.keyHandler,_);
_.autoPlayIterator=$.proxy(_.autoPlayIterator,_);
_.instanceUid=instanceUid++;
_.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/;
_.registerBreakpoints();
_.init(true);
_.checkResponsive(true);
}
return Slick;
}());
Slick.prototype.addSlide=Slick.prototype.slickAdd=function(markup,index,addBefore){
var _=this;
if(typeof(index)==='boolean'){
addBefore=index;
index=null;
}else if(index<0||(index>=_.slideCount)){
return false;
}
_.unload();
if(typeof(index)==='number'){
if(index===0&&_.$slides.length===0){
$(markup).appendTo(_.$slideTrack);
}else if(addBefore){
$(markup).insertBefore(_.$slides.eq(index));
}else{
$(markup).insertAfter(_.$slides.eq(index));
}
}else{
if(addBefore===true){
$(markup).prependTo(_.$slideTrack);
}else{
$(markup).appendTo(_.$slideTrack);
}
}
_.$slides=_.$slideTrack.children(this.options.slide);
_.$slideTrack.children(this.options.slide).detach();
_.$slideTrack.append(_.$slides);
_.$slides.each(function(index,element){
$(element).attr('data-slick-index',index);
});
_.$slidesCache=_.$slides;
_.reinit();
};
Slick.prototype.animateHeight=function(){
var _=this;
if(_.options.slidesToShow===1&&_.options.adaptiveHeight===true&&_.options.vertical===false){
var targetHeight=_.$slides.eq(_.currentSlide).outerHeight(true);
_.$list.animate({
height:targetHeight
},_.options.speed);
}
};
Slick.prototype.animateSlide=function(targetLeft,callback){
var animProps={},
_=this;
_.animateHeight();
if(_.options.rtl===true&&_.options.vertical===false){
targetLeft=-targetLeft;
}
if(_.transformsEnabled===false){
if(_.options.vertical===false){
_.$slideTrack.animate({
left:targetLeft
},_.options.speed,_.options.easing,callback);
}else{
_.$slideTrack.animate({
top:targetLeft
},_.options.speed,_.options.easing,callback);
}
}else{
if(_.cssTransitions===false){
if(_.options.rtl===true){
_.currentLeft=-(_.currentLeft);
}
$({
animStart:_.currentLeft
}).animate({
animStart:targetLeft
},{
duration:_.options.speed,
easing:_.options.easing,
step:function(now){
now=Math.ceil(now);
if(_.options.vertical===false){
animProps[_.animType]='translate('+
now+'px, 0px)';
_.$slideTrack.css(animProps);
}else{
animProps[_.animType]='translate(0px,'+
now+'px)';
_.$slideTrack.css(animProps);
}
},
complete:function(){
if(callback){
callback.call();
}
}
});
}else{
_.applyTransition();
targetLeft=Math.ceil(targetLeft);
if(_.options.vertical===false){
animProps[_.animType]='translate3d('+targetLeft+'px, 0px, 0px)';
}else{
animProps[_.animType]='translate3d(0px,'+targetLeft+'px, 0px)';
}
_.$slideTrack.css(animProps);
if(callback){
setTimeout(function(){
_.disableTransition();
callback.call();
},_.options.speed);
}
}
}
};
Slick.prototype.asNavFor=function(index){
var _=this,
asNavFor=_.options.asNavFor;
if(asNavFor&&asNavFor!==null){
asNavFor=$(asNavFor).not(_.$slider);
}
if(asNavFor!==null&&typeof asNavFor==='object'){
asNavFor.each(function(){
var target=$(this).slick('getSlick');
if(!target.unslicked){
target.slideHandler(index,true);
}
});
}
};
Slick.prototype.applyTransition=function(slide){
var _=this,
transition={};
if(_.options.fade===false){
transition[_.transitionType]=_.transformType+' '+_.options.speed+'ms '+_.options.cssEase;
}else{
transition[_.transitionType]='opacity '+_.options.speed+'ms '+_.options.cssEase;
}
if(_.options.fade===false){
_.$slideTrack.css(transition);
}else{
_.$slides.eq(slide).css(transition);
}
};
Slick.prototype.autoPlay=function(){
var _=this;
if(_.autoPlayTimer){
clearInterval(_.autoPlayTimer);
}
if(_.slideCount>_.options.slidesToShow&&_.paused!==true){
_.autoPlayTimer=setInterval(_.autoPlayIterator,
_.options.autoplaySpeed);
}
};
Slick.prototype.autoPlayClear=function(){
var _=this;
if(_.autoPlayTimer){
clearInterval(_.autoPlayTimer);
}
};
Slick.prototype.autoPlayIterator=function(){
var _=this;
if(_.options.infinite===false){
if(_.direction===1){
if((_.currentSlide+1)===_.slideCount-
1){
_.direction=0;
}
_.slideHandler(_.currentSlide+_.options.slidesToScroll);
}else{
if((_.currentSlide-1===0)){
_.direction=1;
}
_.slideHandler(_.currentSlide-_.options.slidesToScroll);
}
}else{
_.slideHandler(_.currentSlide+_.options.slidesToScroll);
}
};
Slick.prototype.buildArrows=function(){
var _=this;
if(_.options.arrows===true){
_.$prevArrow=$(_.options.prevArrow).addClass('slick-arrow');
_.$nextArrow=$(_.options.nextArrow).addClass('slick-arrow');
if(_.slideCount>_.options.slidesToShow){
_.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
_.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
if(_.htmlExpr.test(_.options.prevArrow)){
_.$prevArrow.prependTo(_.options.appendArrows);
}
if(_.htmlExpr.test(_.options.nextArrow)){
_.$nextArrow.appendTo(_.options.appendArrows);
}
if(_.options.infinite!==true){
_.$prevArrow
.addClass('slick-disabled')
.attr('aria-disabled','true');
}
}else{
_.$prevArrow.add(_.$nextArrow)
.addClass('slick-hidden')
.attr({
'aria-disabled':'true',
'tabindex':'-1'
});
}
}
};
Slick.prototype.buildDots=function(){
var _=this,
i,dotString;
if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){
dotString='<ul class="'+_.options.dotsClass+'">';
for(i=0;i<=_.getDotCount();i+=1){
dotString+='<li>'+_.options.customPaging.call(this,_,i)+'</li>';
}
dotString+='</ul>';
_.$dots=$(dotString).appendTo(
_.options.appendDots);
_.$dots.find('li').first().addClass('slick-active').attr('aria-hidden','false');
}
};
Slick.prototype.buildOut=function(){
var _=this;
_.$slides=
_.$slider
.children(_.options.slide+':not(.slick-cloned)')
.addClass('slick-slide');
_.slideCount=_.$slides.length;
_.$slides.each(function(index,element){
$(element)
.attr('data-slick-index',index)
.data('originalStyling',$(element).attr('style')||'');
});
_.$slider.addClass('slick-slider');
_.$slideTrack=(_.slideCount===0)?
$('<div class="slick-track"/>').appendTo(_.$slider):
_.$slides.wrapAll('<div class="slick-track"/>').parent();
_.$list=_.$slideTrack.wrap(
'<div aria-live="polite" class="slick-list"/>').parent();
_.$slideTrack.css('opacity',0);
if(_.options.centerMode===true||_.options.swipeToSlide===true){
_.options.slidesToScroll=1;
}
$('img[data-lazy]',_.$slider).not('[src]').addClass('slick-loading');
_.setupInfinite();
_.buildArrows();
_.buildDots();
_.updateDots();
_.setSlideClasses(typeof _.currentSlide==='number'?_.currentSlide:0);
if(_.options.draggable===true){
_.$list.addClass('draggable');
}
};
Slick.prototype.buildRows=function(){
var _=this,a,b,c,newSlides,numOfSlides,originalSlides,slidesPerSection;
newSlides=document.createDocumentFragment();
originalSlides=_.$slider.children();
if(_.options.rows>1){
slidesPerSection=_.options.slidesPerRow*_.options.rows;
numOfSlides=Math.ceil(
originalSlides.length/slidesPerSection
);
for(a=0;a<numOfSlides;a++){
var slide=document.createElement('div');
for(b=0;b<_.options.rows;b++){
var row=document.createElement('div');
for(c=0;c<_.options.slidesPerRow;c++){
var target=(a*slidesPerSection+((b*_.options.slidesPerRow)+c));
if(originalSlides.get(target)){
row.appendChild(originalSlides.get(target));
}
}
slide.appendChild(row);
}
newSlides.appendChild(slide);
}
_.$slider.html(newSlides);
_.$slider.children().children().children()
.css({
'width':(100/_.options.slidesPerRow)+'%',
'display':'inline-block'
});
}
};
Slick.prototype.checkResponsive=function(initial,forceUpdate){
var _=this,
breakpoint,targetBreakpoint,respondToWidth,triggerBreakpoint=false;
var sliderWidth=_.$slider.width();
var windowWidth=window.innerWidth||$(window).width();
if(_.respondTo==='window'){
respondToWidth=windowWidth;
}else if(_.respondTo==='slider'){
respondToWidth=sliderWidth;
}else if(_.respondTo==='min'){
respondToWidth=Math.min(windowWidth,sliderWidth);
}
if(_.options.responsive&&
_.options.responsive.length&&
_.options.responsive!==null){
targetBreakpoint=null;
for(breakpoint in _.breakpoints){
if(_.breakpoints.hasOwnProperty(breakpoint)){
if(_.originalSettings.mobileFirst===false){
if(respondToWidth<_.breakpoints[breakpoint]){
targetBreakpoint=_.breakpoints[breakpoint];
}
}else{
if(respondToWidth>_.breakpoints[breakpoint]){
targetBreakpoint=_.breakpoints[breakpoint];
}
}
}
}
if(targetBreakpoint!==null){
if(_.activeBreakpoint!==null){
if(targetBreakpoint!==_.activeBreakpoint||forceUpdate){
_.activeBreakpoint=
targetBreakpoint;
if(_.breakpointSettings[targetBreakpoint]==='unslick'){
_.unslick(targetBreakpoint);
}else{
_.options=$.extend({},_.originalSettings,
_.breakpointSettings[
targetBreakpoint]);
if(initial===true){
_.currentSlide=_.options.initialSlide;
}
_.refresh(initial);
}
triggerBreakpoint=targetBreakpoint;
}
}else{
_.activeBreakpoint=targetBreakpoint;
if(_.breakpointSettings[targetBreakpoint]==='unslick'){
_.unslick(targetBreakpoint);
}else{
_.options=$.extend({},_.originalSettings,
_.breakpointSettings[
targetBreakpoint]);
if(initial===true){
_.currentSlide=_.options.initialSlide;
}
_.refresh(initial);
}
triggerBreakpoint=targetBreakpoint;
}
}else{
if(_.activeBreakpoint!==null){
_.activeBreakpoint=null;
_.options=_.originalSettings;
if(initial===true){
_.currentSlide=_.options.initialSlide;
}
_.refresh(initial);
triggerBreakpoint=targetBreakpoint;
}
}
if(!initial&&triggerBreakpoint!==false){
_.$slider.trigger('breakpoint',[_,triggerBreakpoint]);
}
}
};
Slick.prototype.changeSlide=function(event,dontAnimate){
var _=this,
$target=$(event.target),
indexOffset,slideOffset,unevenOffset;
if($target.is('a')){
event.preventDefault();
}
if(!$target.is('li')){
$target=$target.closest('li');
}
unevenOffset=(_.slideCount%_.options.slidesToScroll!==0);
indexOffset=unevenOffset?0:(_.slideCount-_.currentSlide)%_.options.slidesToScroll;
switch(event.data.message){
case'previous':
slideOffset=indexOffset===0?_.options.slidesToScroll:_.options.slidesToShow-indexOffset;
if(_.slideCount>_.options.slidesToShow){
_.slideHandler(_.currentSlide-slideOffset,false,dontAnimate);
}
break;
case'next':
slideOffset=indexOffset===0?_.options.slidesToScroll:indexOffset;
if(_.slideCount>_.options.slidesToShow){
_.slideHandler(_.currentSlide+slideOffset,false,dontAnimate);
}
break;
case'index':
var index=event.data.index===0?0:
event.data.index||$target.index()*_.options.slidesToScroll;
_.slideHandler(_.checkNavigable(index),false,dontAnimate);
$target.children().trigger('focus');
break;
default:
return;
}
};
Slick.prototype.checkNavigable=function(index){
var _=this,
navigables,prevNavigable;
navigables=_.getNavigableIndexes();
prevNavigable=0;
if(index>navigables[navigables.length-1]){
index=navigables[navigables.length-1];
}else{
for(var n in navigables){
if(index<navigables[n]){
index=prevNavigable;
break;
}
prevNavigable=navigables[n];
}
}
return index;
};
Slick.prototype.cleanUpEvents=function(){
var _=this;
if(_.options.dots&&_.$dots!==null){
$('li',_.$dots).off('click.slick',_.changeSlide);
if(_.options.pauseOnDotsHover===true&&_.options.autoplay===true){
$('li',_.$dots)
.off('mouseenter.slick',$.proxy(_.setPaused,_,true))
.off('mouseleave.slick',$.proxy(_.setPaused,_,false));
}
}
if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){
_.$prevArrow&&_.$prevArrow.off('click.slick',_.changeSlide);
_.$nextArrow&&_.$nextArrow.off('click.slick',_.changeSlide);
}
_.$list.off('touchstart.slick mousedown.slick',_.swipeHandler);
_.$list.off('touchmove.slick mousemove.slick',_.swipeHandler);
_.$list.off('touchend.slick mouseup.slick',_.swipeHandler);
_.$list.off('touchcancel.slick mouseleave.slick',_.swipeHandler);
_.$list.off('click.slick',_.clickHandler);
$(document).off(_.visibilityChange,_.visibility);
_.$list.off('mouseenter.slick',$.proxy(_.setPaused,_,true));
_.$list.off('mouseleave.slick',$.proxy(_.setPaused,_,false));
if(_.options.accessibility===true){
_.$list.off('keydown.slick',_.keyHandler);
}
if(_.options.focusOnSelect===true){
$(_.$slideTrack).children().off('click.slick',_.selectHandler);
}
$(window).off('orientationchange.slick.slick-'+_.instanceUid,_.orientationChange);
$(window).off('resize.slick.slick-'+_.instanceUid,_.resize);
$('[draggable!=true]',_.$slideTrack).off('dragstart',_.preventDefault);
$(window).off('load.slick.slick-'+_.instanceUid,_.setPosition);
$(document).off('ready.slick.slick-'+_.instanceUid,_.setPosition);
};
Slick.prototype.cleanUpRows=function(){
var _=this,originalSlides;
if(_.options.rows>1){
originalSlides=_.$slides.children().children();
originalSlides.removeAttr('style');
_.$slider.html(originalSlides);
}
};
Slick.prototype.clickHandler=function(event){
var _=this;
if(_.shouldClick===false){
event.stopImmediatePropagation();
event.stopPropagation();
event.preventDefault();
}
};
Slick.prototype.destroy=function(refresh){
var _=this;
_.autoPlayClear();
_.touchObject={};
_.cleanUpEvents();
$('.slick-cloned',_.$slider).detach();
if(_.$dots){
_.$dots.remove();
}
if(_.$prevArrow&&_.$prevArrow.length){
_.$prevArrow
.removeClass('slick-disabled slick-arrow slick-hidden')
.removeAttr('aria-hidden aria-disabled tabindex')
.css("display","");
if(_.htmlExpr.test(_.options.prevArrow)){
_.$prevArrow.remove();
}
}
if(_.$nextArrow&&_.$nextArrow.length){
_.$nextArrow
.removeClass('slick-disabled slick-arrow slick-hidden')
.removeAttr('aria-hidden aria-disabled tabindex')
.css("display","");
if(_.htmlExpr.test(_.options.nextArrow)){
_.$nextArrow.remove();
}
}
if(_.$slides){
_.$slides
.removeClass('slick-slide slick-active slick-center slick-visible slick-current')
.removeAttr('aria-hidden')
.removeAttr('data-slick-index')
.each(function(){
$(this).attr('style',$(this).data('originalStyling'));
});
_.$slideTrack.children(this.options.slide).detach();
_.$slideTrack.detach();
_.$list.detach();
_.$slider.append(_.$slides);
}
_.cleanUpRows();
_.$slider.removeClass('slick-slider');
_.$slider.removeClass('slick-initialized');
_.unslicked=true;
if(!refresh){
_.$slider.trigger('destroy',[_]);
}
};
Slick.prototype.disableTransition=function(slide){
var _=this,
transition={};
transition[_.transitionType]='';
if(_.options.fade===false){
_.$slideTrack.css(transition);
}else{
_.$slides.eq(slide).css(transition);
}
};
Slick.prototype.fadeSlide=function(slideIndex,callback){
var _=this;
if(_.cssTransitions===false){
_.$slides.eq(slideIndex).css({
zIndex:_.options.zIndex
});
_.$slides.eq(slideIndex).animate({
opacity:1
},_.options.speed,_.options.easing,callback);
}else{
_.applyTransition(slideIndex);
_.$slides.eq(slideIndex).css({
opacity:1,
zIndex:_.options.zIndex
});
if(callback){
setTimeout(function(){
_.disableTransition(slideIndex);
callback.call();
},_.options.speed);
}
}
};
Slick.prototype.fadeSlideOut=function(slideIndex){
var _=this;
if(_.cssTransitions===false){
_.$slides.eq(slideIndex).animate({
opacity:0,
zIndex:_.options.zIndex-2
},_.options.speed,_.options.easing);
}else{
_.applyTransition(slideIndex);
_.$slides.eq(slideIndex).css({
opacity:0,
zIndex:_.options.zIndex-2
});
}
};
Slick.prototype.filterSlides=Slick.prototype.slickFilter=function(filter){
var _=this;
if(filter!==null){
_.$slidesCache=_.$slides;
_.unload();
_.$slideTrack.children(this.options.slide).detach();
_.$slidesCache.filter(filter).appendTo(_.$slideTrack);
_.reinit();
}
};
Slick.prototype.getCurrent=Slick.prototype.slickCurrentSlide=function(){
var _=this;
return _.currentSlide;
};
Slick.prototype.getDotCount=function(){
var _=this;
var breakPoint=0;
var counter=0;
var pagerQty=0;
if(_.options.infinite===true){
while(breakPoint<_.slideCount){
++pagerQty;
breakPoint=counter+_.options.slidesToScroll;
counter+=_.options.slidesToScroll<=_.options.slidesToShow?_.options.slidesToScroll:_.options.slidesToShow;
}
}else if(_.options.centerMode===true){
pagerQty=_.slideCount;
}else{
while(breakPoint<_.slideCount){
++pagerQty;
breakPoint=counter+_.options.slidesToScroll;
counter+=_.options.slidesToScroll<=_.options.slidesToShow?_.options.slidesToScroll:_.options.slidesToShow;
}
}
return pagerQty-1;
};
Slick.prototype.getLeft=function(slideIndex){
var _=this,
targetLeft,
verticalHeight,
verticalOffset=0,
targetSlide;
_.slideOffset=0;
verticalHeight=_.$slides.first().outerHeight(true);
if(_.options.infinite===true){
if(_.slideCount>_.options.slidesToShow){
_.slideOffset=(_.slideWidth*_.options.slidesToShow)*-1;
verticalOffset=(verticalHeight*_.options.slidesToShow)*-1;
}
if(_.slideCount%_.options.slidesToScroll!==0){
if(slideIndex+_.options.slidesToScroll>_.slideCount&&_.slideCount>_.options.slidesToShow){
if(slideIndex>_.slideCount){
_.slideOffset=((_.options.slidesToShow-(slideIndex-_.slideCount))*_.slideWidth)*-1;
verticalOffset=((_.options.slidesToShow-(slideIndex-_.slideCount))*verticalHeight)*-1;
}else{
_.slideOffset=((_.slideCount%_.options.slidesToScroll)*_.slideWidth)*-1;
verticalOffset=((_.slideCount%_.options.slidesToScroll)*verticalHeight)*-1;
}
}
}
}else{
if(slideIndex+_.options.slidesToShow>_.slideCount){
_.slideOffset=((slideIndex+_.options.slidesToShow)-_.slideCount)*_.slideWidth;
verticalOffset=((slideIndex+_.options.slidesToShow)-_.slideCount)*verticalHeight;
}
}
if(_.slideCount<=_.options.slidesToShow){
_.slideOffset=0;
verticalOffset=0;
}
if(_.options.centerMode===true&&_.options.infinite===true){
_.slideOffset+=_.slideWidth*Math.floor(_.options.slidesToShow/2)-_.slideWidth;
}else if(_.options.centerMode===true){
_.slideOffset=0;
_.slideOffset+=_.slideWidth*Math.floor(_.options.slidesToShow/2);
}
if(_.options.vertical===false){
targetLeft=((slideIndex*_.slideWidth)*-1)+_.slideOffset;
}else{
targetLeft=((slideIndex*verticalHeight)*-1)+verticalOffset;
}
if(_.options.variableWidth===true){
if(_.slideCount<=_.options.slidesToShow||_.options.infinite===false){
targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex);
}else{
targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex+_.options.slidesToShow);
}
if(_.options.rtl===true){
if(targetSlide[0]){
targetLeft=(_.$slideTrack.width()-targetSlide[0].offsetLeft-targetSlide.width())*-1;
}else{
targetLeft=0;
}
}else{
targetLeft=targetSlide[0]?targetSlide[0].offsetLeft*-1:0;
}
if(_.options.centerMode===true){
if(_.slideCount<=_.options.slidesToShow||_.options.infinite===false){
targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex);
}else{
targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex+_.options.slidesToShow+1);
}
if(_.options.rtl===true){
if(targetSlide[0]){
targetLeft=(_.$slideTrack.width()-targetSlide[0].offsetLeft-targetSlide.width())*-1;
}else{
targetLeft=0;
}
}else{
targetLeft=targetSlide[0]?targetSlide[0].offsetLeft*-1:0;
}
targetLeft+=(_.$list.width()-targetSlide.outerWidth())/2;
}
}
return targetLeft;
};
Slick.prototype.getOption=Slick.prototype.slickGetOption=function(option){
var _=this;
return _.options[option];
};
Slick.prototype.getNavigableIndexes=function(){
var _=this,
breakPoint=0,
counter=0,
indexes=[],
max;
if(_.options.infinite===false){
max=_.slideCount;
}else{
breakPoint=_.options.slidesToScroll*-1;
counter=_.options.slidesToScroll*-1;
max=_.slideCount*2;
}
while(breakPoint<max){
indexes.push(breakPoint);
breakPoint=counter+_.options.slidesToScroll;
counter+=_.options.slidesToScroll<=_.options.slidesToShow?_.options.slidesToScroll:_.options.slidesToShow;
}
return indexes;
};
Slick.prototype.getSlick=function(){
return this;
};
Slick.prototype.getSlideCount=function(){
var _=this,
slidesTraversed,swipedSlide,centerOffset;
centerOffset=_.options.centerMode===true?_.slideWidth*Math.floor(_.options.slidesToShow/2):0;
if(_.options.swipeToSlide===true){
_.$slideTrack.find('.slick-slide').each(function(index,slide){
if(slide.offsetLeft-centerOffset+($(slide).outerWidth()/2)>(_.swipeLeft*-1)){
swipedSlide=slide;
return false;
}
});
slidesTraversed=Math.abs($(swipedSlide).attr('data-slick-index')-_.currentSlide)||1;
return slidesTraversed;
}else{
return _.options.slidesToScroll;
}
};
Slick.prototype.goTo=Slick.prototype.slickGoTo=function(slide,dontAnimate){
var _=this;
_.changeSlide({
data:{
message:'index',
index:parseInt(slide)
}
},dontAnimate);
};
Slick.prototype.init=function(creation){
var _=this;
if(!$(_.$slider).hasClass('slick-initialized')){
$(_.$slider).addClass('slick-initialized');
_.buildRows();
_.buildOut();
_.setProps();
_.startLoad();
_.loadSlider();
_.initializeEvents();
_.updateArrows();
_.updateDots();
}
if(creation){
_.$slider.trigger('init',[_]);
}
if(_.options.accessibility===true){
_.initADA();
}
};
Slick.prototype.initArrowEvents=function(){
var _=this;
if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){
_.$prevArrow.on('click.slick',{
message:'previous'
},_.changeSlide);
_.$nextArrow.on('click.slick',{
message:'next'
},_.changeSlide);
}
};
Slick.prototype.initDotEvents=function(){
var _=this;
if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){
$('li',_.$dots).on('click.slick',{
message:'index'
},_.changeSlide);
}
if(_.options.dots===true&&_.options.pauseOnDotsHover===true&&_.options.autoplay===true){
$('li',_.$dots)
.on('mouseenter.slick',$.proxy(_.setPaused,_,true))
.on('mouseleave.slick',$.proxy(_.setPaused,_,false));
}
};
Slick.prototype.initializeEvents=function(){
var _=this;
_.initArrowEvents();
_.initDotEvents();
_.$list.on('touchstart.slick mousedown.slick',{
action:'start'
},_.swipeHandler);
_.$list.on('touchmove.slick mousemove.slick',{
action:'move'
},_.swipeHandler);
_.$list.on('touchend.slick mouseup.slick',{
action:'end'
},_.swipeHandler);
_.$list.on('touchcancel.slick mouseleave.slick',{
action:'end'
},_.swipeHandler);
_.$list.on('click.slick',_.clickHandler);
$(document).on(_.visibilityChange,$.proxy(_.visibility,_));
_.$list.on('mouseenter.slick',$.proxy(_.setPaused,_,true));
_.$list.on('mouseleave.slick',$.proxy(_.setPaused,_,false));
if(_.options.accessibility===true){
_.$list.on('keydown.slick',_.keyHandler);
}
if(_.options.focusOnSelect===true){
$(_.$slideTrack).children().on('click.slick',_.selectHandler);
}
$(window).on('orientationchange.slick.slick-'+_.instanceUid,$.proxy(_.orientationChange,_));
$(window).on('resize.slick.slick-'+_.instanceUid,$.proxy(_.resize,_));
$('[draggable!=true]',_.$slideTrack).on('dragstart',_.preventDefault);
$(window).on('load.slick.slick-'+_.instanceUid,_.setPosition);
$(document).on('ready.slick.slick-'+_.instanceUid,_.setPosition);
};
Slick.prototype.initUI=function(){
var _=this;
if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){
_.$prevArrow.show();
_.$nextArrow.show();
}
if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){
_.$dots.show();
}
if(_.options.autoplay===true){
_.autoPlay();
}
};
Slick.prototype.keyHandler=function(event){
var _=this;
if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')){
if(event.keyCode===37&&_.options.accessibility===true){
_.changeSlide({
data:{
message:'previous'
}
});
}else if(event.keyCode===39&&_.options.accessibility===true){
_.changeSlide({
data:{
message:'next'
}
});
}
}
};
Slick.prototype.lazyLoad=function(){
var _=this,
loadRange,cloneRange,rangeStart,rangeEnd;
function loadImages(imagesScope){
$('img[data-lazy]',imagesScope).each(function(){
var image=$(this),
imageSource=$(this).attr('data-lazy'),
imageToLoad=document.createElement('img');
imageToLoad.onload=function(){
image
.animate({opacity:0},100,function(){
image
.attr('src',imageSource)
.animate({opacity:1},200,function(){
image
.removeAttr('data-lazy')
.removeClass('slick-loading');
});
});
};
imageToLoad.src=imageSource;
});
}
if(_.options.centerMode===true){
if(_.options.infinite===true){
rangeStart=_.currentSlide+(_.options.slidesToShow/2+1);
rangeEnd=rangeStart+_.options.slidesToShow+2;
}else{
rangeStart=Math.max(0,_.currentSlide-(_.options.slidesToShow/2+1));
rangeEnd=2+(_.options.slidesToShow/2+1)+_.currentSlide;
}
}else{
rangeStart=_.options.infinite?_.options.slidesToShow+_.currentSlide:_.currentSlide;
rangeEnd=rangeStart+_.options.slidesToShow;
if(_.options.fade===true){
if(rangeStart>0)rangeStart--;
if(rangeEnd<=_.slideCount)rangeEnd++;
}
}
loadRange=_.$slider.find('.slick-slide').slice(rangeStart,rangeEnd);
loadImages(loadRange);
if(_.slideCount<=_.options.slidesToShow){
cloneRange=_.$slider.find('.slick-slide');
loadImages(cloneRange);
}else
if(_.currentSlide>=_.slideCount-_.options.slidesToShow){
cloneRange=_.$slider.find('.slick-cloned').slice(0,_.options.slidesToShow);
loadImages(cloneRange);
}else if(_.currentSlide===0){
cloneRange=_.$slider.find('.slick-cloned').slice(_.options.slidesToShow*-1);
loadImages(cloneRange);
}
};
Slick.prototype.loadSlider=function(){
var _=this;
_.setPosition();
_.$slideTrack.css({
opacity:1
});
_.$slider.removeClass('slick-loading');
_.initUI();
if(_.options.lazyLoad==='progressive'){
_.progressiveLazyLoad();
}
};
Slick.prototype.next=Slick.prototype.slickNext=function(){
var _=this;
_.changeSlide({
data:{
message:'next'
}
});
};
Slick.prototype.orientationChange=function(){
var _=this;
_.checkResponsive();
_.setPosition();
};
Slick.prototype.pause=Slick.prototype.slickPause=function(){
var _=this;
_.autoPlayClear();
_.paused=true;
};
Slick.prototype.play=Slick.prototype.slickPlay=function(){
var _=this;
_.paused=false;
_.autoPlay();
};
Slick.prototype.postSlide=function(index){
var _=this;
_.$slider.trigger('afterChange',[_,index]);
_.animating=false;
_.setPosition();
_.swipeLeft=null;
if(_.options.autoplay===true&&_.paused===false){
_.autoPlay();
}
if(_.options.accessibility===true){
_.initADA();
}
};
Slick.prototype.prev=Slick.prototype.slickPrev=function(){
var _=this;
_.changeSlide({
data:{
message:'previous'
}
});
};
Slick.prototype.preventDefault=function(event){
event.preventDefault();
};
Slick.prototype.progressiveLazyLoad=function(){
var _=this,
imgCount,targetImage;
imgCount=$('img[data-lazy]',_.$slider).length;
if(imgCount>0){
targetImage=$('img[data-lazy]',_.$slider).first();
targetImage.attr('src',null);
targetImage.attr('src',targetImage.attr('data-lazy')).removeClass('slick-loading').load(function(){
targetImage.removeAttr('data-lazy');
_.progressiveLazyLoad();
if(_.options.adaptiveHeight===true){
_.setPosition();
}
})
.error(function(){
targetImage.removeAttr('data-lazy');
_.progressiveLazyLoad();
});
}
};
Slick.prototype.refresh=function(initializing){
var _=this,currentSlide,firstVisible;
firstVisible=_.slideCount-_.options.slidesToShow;
if(!_.options.infinite){
if(_.slideCount<=_.options.slidesToShow){
_.currentSlide=0;
}else if(_.currentSlide>firstVisible){
_.currentSlide=firstVisible;
}
}
currentSlide=_.currentSlide;
_.destroy(true);
$.extend(_,_.initials,{currentSlide:currentSlide});
_.init();
if(!initializing){
_.changeSlide({
data:{
message:'index',
index:currentSlide
}
},false);
}
};
Slick.prototype.registerBreakpoints=function(){
var _=this,breakpoint,currentBreakpoint,l,
responsiveSettings=_.options.responsive||null;
if($.type(responsiveSettings)==="array"&&responsiveSettings.length){
_.respondTo=_.options.respondTo||'window';
for(breakpoint in responsiveSettings){
l=_.breakpoints.length-1;
currentBreakpoint=responsiveSettings[breakpoint].breakpoint;
if(responsiveSettings.hasOwnProperty(breakpoint)){
while(l>=0){
if(_.breakpoints[l]&&_.breakpoints[l]===currentBreakpoint){
_.breakpoints.splice(l,1);
}
l--;
}
_.breakpoints.push(currentBreakpoint);
_.breakpointSettings[currentBreakpoint]=responsiveSettings[breakpoint].settings;
}
}
_.breakpoints.sort(function(a,b){
return(_.options.mobileFirst)?a-b:b-a;
});
}
};
Slick.prototype.reinit=function(){
var _=this;
_.$slides=
_.$slideTrack
.children(_.options.slide)
.addClass('slick-slide');
_.slideCount=_.$slides.length;
if(_.currentSlide>=_.slideCount&&_.currentSlide!==0){
_.currentSlide=_.currentSlide-_.options.slidesToScroll;
}
if(_.slideCount<=_.options.slidesToShow){
_.currentSlide=0;
}
_.registerBreakpoints();
_.setProps();
_.setupInfinite();
_.buildArrows();
_.updateArrows();
_.initArrowEvents();
_.buildDots();
_.updateDots();
_.initDotEvents();
_.checkResponsive(false,true);
if(_.options.focusOnSelect===true){
$(_.$slideTrack).children().on('click.slick',_.selectHandler);
}
_.setSlideClasses(0);
_.setPosition();
_.$slider.trigger('reInit',[_]);
if(_.options.autoplay===true){
_.focusHandler();
}
};
Slick.prototype.resize=function(){
var _=this;
if($(window).width()!==_.windowWidth){
clearTimeout(_.windowDelay);
_.windowDelay=window.setTimeout(function(){
_.windowWidth=$(window).width();
_.checkResponsive();
if(!_.unslicked){_.setPosition();}
},50);
}
};
Slick.prototype.removeSlide=Slick.prototype.slickRemove=function(index,removeBefore,removeAll){
var _=this;
if(typeof(index)==='boolean'){
removeBefore=index;
index=removeBefore===true?0:_.slideCount-1;
}else{
index=removeBefore===true?--index:index;
}
if(_.slideCount<1||index<0||index>_.slideCount-1){
return false;
}
_.unload();
if(removeAll===true){
_.$slideTrack.children().remove();
}else{
_.$slideTrack.children(this.options.slide).eq(index).remove();
}
_.$slides=_.$slideTrack.children(this.options.slide);
_.$slideTrack.children(this.options.slide).detach();
_.$slideTrack.append(_.$slides);
_.$slidesCache=_.$slides;
_.reinit();
};
Slick.prototype.setCSS=function(position){
var _=this,
positionProps={},
x,y;
if(_.options.rtl===true){
position=-position;
}
x=_.positionProp=='left'?Math.ceil(position)+'px':'0px';
y=_.positionProp=='top'?Math.ceil(position)+'px':'0px';
positionProps[_.positionProp]=position;
if(_.transformsEnabled===false){
_.$slideTrack.css(positionProps);
}else{
positionProps={};
if(_.cssTransitions===false){
positionProps[_.animType]='translate('+x+', '+y+')';
_.$slideTrack.css(positionProps);
}else{
positionProps[_.animType]='translate3d('+x+', '+y+', 0px)';
_.$slideTrack.css(positionProps);
}
}
};
Slick.prototype.setDimensions=function(){
var _=this;
if(_.options.vertical===false){
if(_.options.centerMode===true){
_.$list.css({
padding:('0px '+_.options.centerPadding)
});
}
}else{
_.$list.height(_.$slides.first().outerHeight(true)*_.options.slidesToShow);
if(_.options.centerMode===true){
_.$list.css({
padding:(_.options.centerPadding+' 0px')
});
}
}
_.listWidth=_.$list.width();
_.listHeight=_.$list.height();
if(_.options.vertical===false&&_.options.variableWidth===false){
_.slideWidth=Math.ceil(_.listWidth/_.options.slidesToShow);
_.$slideTrack.width(Math.ceil((_.slideWidth*_.$slideTrack.children('.slick-slide').length)));
}else if(_.options.variableWidth===true){
_.$slideTrack.width(5000*_.slideCount);
}else{
_.slideWidth=Math.ceil(_.listWidth);
_.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true)*_.$slideTrack.children('.slick-slide').length)));
}
var offset=_.$slides.first().outerWidth(true)-_.$slides.first().width();
if(_.options.variableWidth===false)_.$slideTrack.children('.slick-slide').width(_.slideWidth-offset);
};
Slick.prototype.setFade=function(){
var _=this,
targetLeft;
_.$slides.each(function(index,element){
targetLeft=(_.slideWidth*index)*-1;
if(_.options.rtl===true){
$(element).css({
position:'relative',
right:targetLeft,
top:0,
zIndex:_.options.zIndex-2,
opacity:0
});
}else{
$(element).css({
position:'relative',
left:targetLeft,
top:0,
zIndex:_.options.zIndex-2,
opacity:0
});
}
});
_.$slides.eq(_.currentSlide).css({
zIndex:_.options.zIndex-1,
opacity:1
});
};
Slick.prototype.setHeight=function(){
var _=this;
if(_.options.slidesToShow===1&&_.options.adaptiveHeight===true&&_.options.vertical===false){
var targetHeight=_.$slides.eq(_.currentSlide).outerHeight(true);
_.$list.css('height',targetHeight);
}
};
Slick.prototype.setOption=Slick.prototype.slickSetOption=function(option,value,refresh){
var _=this,l,item;
if(option==="responsive"&&$.type(value)==="array"){
for(item in value){
if($.type(_.options.responsive)!=="array"){
_.options.responsive=[value[item]];
}else{
l=_.options.responsive.length-1;
while(l>=0){
if(_.options.responsive[l].breakpoint===value[item].breakpoint){
_.options.responsive.splice(l,1);
}
l--;
}
_.options.responsive.push(value[item]);
}
}
}else{
_.options[option]=value;
}
if(refresh===true){
_.unload();
_.reinit();
}
};
Slick.prototype.setPosition=function(){
var _=this;
_.setDimensions();
_.setHeight();
if(_.options.fade===false){
_.setCSS(_.getLeft(_.currentSlide));
}else{
_.setFade();
}
_.$slider.trigger('setPosition',[_]);
};
Slick.prototype.setProps=function(){
var _=this,
bodyStyle=document.body.style;
_.positionProp=_.options.vertical===true?'top':'left';
if(_.positionProp==='top'){
_.$slider.addClass('slick-vertical');
}else{
_.$slider.removeClass('slick-vertical');
}
if(bodyStyle.WebkitTransition!==undefined||
bodyStyle.MozTransition!==undefined||
bodyStyle.msTransition!==undefined){
if(_.options.useCSS===true){
_.cssTransitions=true;
}
}
if(_.options.fade){
if(typeof _.options.zIndex==='number'){
if(_.options.zIndex<3){
_.options.zIndex=3;
}
}else{
_.options.zIndex=_.defaults.zIndex;
}
}
if(bodyStyle.OTransform!==undefined){
_.animType='OTransform';
_.transformType='-o-transform';
_.transitionType='OTransition';
if(bodyStyle.perspectiveProperty===undefined&&bodyStyle.webkitPerspective===undefined)_.animType=false;
}
if(bodyStyle.MozTransform!==undefined){
_.animType='MozTransform';
_.transformType='-moz-transform';
_.transitionType='MozTransition';
if(bodyStyle.perspectiveProperty===undefined&&bodyStyle.MozPerspective===undefined)_.animType=false;
}
if(bodyStyle.webkitTransform!==undefined){
_.animType='webkitTransform';
_.transformType='-webkit-transform';
_.transitionType='webkitTransition';
if(bodyStyle.perspectiveProperty===undefined&&bodyStyle.webkitPerspective===undefined)_.animType=false;
}
if(bodyStyle.msTransform!==undefined){
_.animType='msTransform';
_.transformType='-ms-transform';
_.transitionType='msTransition';
if(bodyStyle.msTransform===undefined)_.animType=false;
}
if(bodyStyle.transform!==undefined&&_.animType!==false){
_.animType='transform';
_.transformType='transform';
_.transitionType='transition';
}
_.transformsEnabled=_.options.useTransform&&(_.animType!==null&&_.animType!==false);
};
Slick.prototype.setSlideClasses=function(index){
var _=this,
centerOffset,allSlides,indexOffset,remainder;
allSlides=_.$slider
.find('.slick-slide')
.removeClass('slick-active slick-center slick-current')
.attr('aria-hidden','true');
_.$slides
.eq(index)
.addClass('slick-current');
if(_.options.centerMode===true){
centerOffset=Math.floor(_.options.slidesToShow/2);
if(_.options.infinite===true){
if(index>=centerOffset&&index<=(_.slideCount-1)-centerOffset){
_.$slides
.slice(index-centerOffset,index+centerOffset+1)
.addClass('slick-active')
.attr('aria-hidden','false');
}else{
indexOffset=_.options.slidesToShow+index;
allSlides
.slice(indexOffset-centerOffset+1,indexOffset+centerOffset+2)
.addClass('slick-active')
.attr('aria-hidden','false');
}
if(index===0){
allSlides
.eq(allSlides.length-1-_.options.slidesToShow)
.addClass('slick-center');
}else if(index===_.slideCount-1){
allSlides
.eq(_.options.slidesToShow)
.addClass('slick-center');
}
}
_.$slides
.eq(index)
.addClass('slick-center');
}else{
if(index>=0&&index<=(_.slideCount-_.options.slidesToShow)){
_.$slides
.slice(index,index+_.options.slidesToShow)
.addClass('slick-active')
.attr('aria-hidden','false');
}else if(allSlides.length<=_.options.slidesToShow){
allSlides
.addClass('slick-active')
.attr('aria-hidden','false');
}else{
remainder=_.slideCount%_.options.slidesToShow;
indexOffset=_.options.infinite===true?_.options.slidesToShow+index:index;
if(_.options.slidesToShow==_.options.slidesToScroll&&(_.slideCount-index)<_.options.slidesToShow){
allSlides
.slice(indexOffset-(_.options.slidesToShow-remainder),indexOffset+remainder)
.addClass('slick-active')
.attr('aria-hidden','false');
}else{
allSlides
.slice(indexOffset,indexOffset+_.options.slidesToShow)
.addClass('slick-active')
.attr('aria-hidden','false');
}
}
}
if(_.options.lazyLoad==='ondemand'){
_.lazyLoad();
}
};
Slick.prototype.setupInfinite=function(){
var _=this,
i,slideIndex,infiniteCount;
if(_.options.fade===true){
_.options.centerMode=false;
}
if(_.options.infinite===true&&_.options.fade===false){
slideIndex=null;
if(_.slideCount>_.options.slidesToShow){
if(_.options.centerMode===true){
infiniteCount=_.options.slidesToShow+1;
}else{
infiniteCount=_.options.slidesToShow;
}
for(i=_.slideCount;i>(_.slideCount-
infiniteCount);i-=1){
slideIndex=i-1;
$(_.$slides[slideIndex]).clone(true).attr('id','')
.attr('data-slick-index',slideIndex-_.slideCount)
.prependTo(_.$slideTrack).addClass('slick-cloned');
}
for(i=0;i<infiniteCount;i+=1){
slideIndex=i;
$(_.$slides[slideIndex]).clone(true).attr('id','')
.attr('data-slick-index',slideIndex+_.slideCount)
.appendTo(_.$slideTrack).addClass('slick-cloned');
}
_.$slideTrack.find('.slick-cloned').find('[id]').each(function(){
$(this).attr('id','');
});
}
}
};
Slick.prototype.setPaused=function(paused){
var _=this;
if(_.options.autoplay===true&&_.options.pauseOnHover===true){
_.paused=paused;
if(!paused){
_.autoPlay();
}else{
_.autoPlayClear();
}
}
};
Slick.prototype.selectHandler=function(event){
var _=this;
var targetElement=
$(event.target).is('.slick-slide')?
$(event.target):
$(event.target).parents('.slick-slide');
var index=parseInt(targetElement.attr('data-slick-index'));
if(!index)index=0;
if(_.slideCount<=_.options.slidesToShow){
_.setSlideClasses(index);
_.asNavFor(index);
return;
}
_.slideHandler(index);
};
Slick.prototype.slideHandler=function(index,sync,dontAnimate){
var targetSlide,animSlide,oldSlide,slideLeft,targetLeft=null,
_=this;
sync=sync||false;
if(_.animating===true&&_.options.waitForAnimate===true){
return;
}
if(_.options.fade===true&&_.currentSlide===index){
return;
}
if(_.slideCount<=_.options.slidesToShow){
return;
}
if(sync===false){
_.asNavFor(index);
}
targetSlide=index;
targetLeft=_.getLeft(targetSlide);
slideLeft=_.getLeft(_.currentSlide);
_.currentLeft=_.swipeLeft===null?slideLeft:_.swipeLeft;
if(_.options.infinite===false&&_.options.centerMode===false&&(index<0||index>_.getDotCount()*_.options.slidesToScroll)){
if(_.options.fade===false){
targetSlide=_.currentSlide;
if(dontAnimate!==true){
_.animateSlide(slideLeft,function(){
_.postSlide(targetSlide);
});
}else{
_.postSlide(targetSlide);
}
}
return;
}else if(_.options.infinite===false&&_.options.centerMode===true&&(index<0||index>(_.slideCount-_.options.slidesToScroll))){
if(_.options.fade===false){
targetSlide=_.currentSlide;
if(dontAnimate!==true){
_.animateSlide(slideLeft,function(){
_.postSlide(targetSlide);
});
}else{
_.postSlide(targetSlide);
}
}
return;
}
if(_.options.autoplay===true){
clearInterval(_.autoPlayTimer);
}
if(targetSlide<0){
if(_.slideCount%_.options.slidesToScroll!==0){
animSlide=_.slideCount-(_.slideCount%_.options.slidesToScroll);
}else{
animSlide=_.slideCount+targetSlide;
}
}else if(targetSlide>=_.slideCount){
if(_.slideCount%_.options.slidesToScroll!==0){
animSlide=0;
}else{
animSlide=targetSlide-_.slideCount;
}
}else{
animSlide=targetSlide;
}
_.animating=true;
_.$slider.trigger('beforeChange',[_,_.currentSlide,animSlide]);
oldSlide=_.currentSlide;
_.currentSlide=animSlide;
_.setSlideClasses(_.currentSlide);
_.updateDots();
_.updateArrows();
if(_.options.fade===true){
if(dontAnimate!==true){
_.fadeSlideOut(oldSlide);
_.fadeSlide(animSlide,function(){
_.postSlide(animSlide);
});
}else{
_.postSlide(animSlide);
}
_.animateHeight();
return;
}
if(dontAnimate!==true){
_.animateSlide(targetLeft,function(){
_.postSlide(animSlide);
});
}else{
_.postSlide(animSlide);
}
};
Slick.prototype.startLoad=function(){
var _=this;
if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){
_.$prevArrow.hide();
_.$nextArrow.hide();
}
if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){
_.$dots.hide();
}
_.$slider.addClass('slick-loading');
};
Slick.prototype.swipeDirection=function(){
var xDist,yDist,r,swipeAngle,_=this;
xDist=_.touchObject.startX-_.touchObject.curX;
yDist=_.touchObject.startY-_.touchObject.curY;
r=Math.atan2(yDist,xDist);
swipeAngle=Math.round(r*180/Math.PI);
if(swipeAngle<0){
swipeAngle=360-Math.abs(swipeAngle);
}
if((swipeAngle<=45)&&(swipeAngle>=0)){
return(_.options.rtl===false?'left':'right');
}
if((swipeAngle<=360)&&(swipeAngle>=315)){
return(_.options.rtl===false?'left':'right');
}
if((swipeAngle>=135)&&(swipeAngle<=225)){
return(_.options.rtl===false?'right':'left');
}
if(_.options.verticalSwiping===true){
if((swipeAngle>=35)&&(swipeAngle<=135)){
return'left';
}else{
return'right';
}
}
return'vertical';
};
Slick.prototype.swipeEnd=function(event){
var _=this,
slideCount;
_.dragging=false;
_.shouldClick=(_.touchObject.swipeLength>10)?false:true;
if(_.touchObject.curX===undefined){
return false;
}
if(_.touchObject.edgeHit===true){
_.$slider.trigger('edge',[_,_.swipeDirection()]);
}
if(_.touchObject.swipeLength>=_.touchObject.minSwipe){
switch(_.swipeDirection()){
case'left':
slideCount=_.options.swipeToSlide?_.checkNavigable(_.currentSlide+_.getSlideCount()):_.currentSlide+_.getSlideCount();
_.slideHandler(slideCount);
_.currentDirection=0;
_.touchObject={};
_.$slider.trigger('swipe',[_,'left']);
break;
case'right':
slideCount=_.options.swipeToSlide?_.checkNavigable(_.currentSlide-_.getSlideCount()):_.currentSlide-_.getSlideCount();
_.slideHandler(slideCount);
_.currentDirection=1;
_.touchObject={};
_.$slider.trigger('swipe',[_,'right']);
break;
}
}else{
if(_.touchObject.startX!==_.touchObject.curX){
_.slideHandler(_.currentSlide);
_.touchObject={};
}
}
};
Slick.prototype.swipeHandler=function(event){
var _=this;
if((_.options.swipe===false)||('ontouchend'in document&&_.options.swipe===false)){
return;
}else if(_.options.draggable===false&&event.type.indexOf('mouse')!==-1){
return;
}
_.touchObject.fingerCount=event.originalEvent&&event.originalEvent.touches!==undefined?
event.originalEvent.touches.length:1;
_.touchObject.minSwipe=_.listWidth/_.options
.touchThreshold;
if(_.options.verticalSwiping===true){
_.touchObject.minSwipe=_.listHeight/_.options
.touchThreshold;
}
switch(event.data.action){
case'start':
_.swipeStart(event);
break;
case'move':
_.swipeMove(event);
break;
case'end':
_.swipeEnd(event);
break;
}
};
Slick.prototype.swipeMove=function(event){
var _=this,
edgeWasHit=false,
curLeft,swipeDirection,swipeLength,positionOffset,touches;
touches=event.originalEvent!==undefined?event.originalEvent.touches:null;
if(!_.dragging||touches&&touches.length!==1){
return false;
}
curLeft=_.getLeft(_.currentSlide);
_.touchObject.curX=touches!==undefined?touches[0].pageX:event.clientX;
_.touchObject.curY=touches!==undefined?touches[0].pageY:event.clientY;
_.touchObject.swipeLength=Math.round(Math.sqrt(
Math.pow(_.touchObject.curX-_.touchObject.startX,2)));
if(_.options.verticalSwiping===true){
_.touchObject.swipeLength=Math.round(Math.sqrt(
Math.pow(_.touchObject.curY-_.touchObject.startY,2)));
}
swipeDirection=_.swipeDirection();
if(swipeDirection==='vertical'){
return;
}
if(event.originalEvent!==undefined&&_.touchObject.swipeLength>4){
event.preventDefault();
}
positionOffset=(_.options.rtl===false?1:-1)*(_.touchObject.curX>_.touchObject.startX?1:-1);
if(_.options.verticalSwiping===true){
positionOffset=_.touchObject.curY>_.touchObject.startY?1:-1;
}
swipeLength=_.touchObject.swipeLength;
_.touchObject.edgeHit=false;
if(_.options.infinite===false){
if((_.currentSlide===0&&swipeDirection==='right')||(_.currentSlide>=_.getDotCount()&&swipeDirection==='left')){
swipeLength=_.touchObject.swipeLength*_.options.edgeFriction;
_.touchObject.edgeHit=true;
}
}
if(_.options.vertical===false){
_.swipeLeft=curLeft+swipeLength*positionOffset;
}else{
_.swipeLeft=curLeft+(swipeLength*(_.$list.height()/_.listWidth))*positionOffset;
}
if(_.options.verticalSwiping===true){
_.swipeLeft=curLeft+swipeLength*positionOffset;
}
if(_.options.fade===true||_.options.touchMove===false){
return false;
}
if(_.animating===true){
_.swipeLeft=null;
return false;
}
_.setCSS(_.swipeLeft);
};
Slick.prototype.swipeStart=function(event){
var _=this,
touches;
if(_.touchObject.fingerCount!==1||_.slideCount<=_.options.slidesToShow){
_.touchObject={};
return false;
}
if(event.originalEvent!==undefined&&event.originalEvent.touches!==undefined){
touches=event.originalEvent.touches[0];
}
_.touchObject.startX=_.touchObject.curX=touches!==undefined?touches.pageX:event.clientX;
_.touchObject.startY=_.touchObject.curY=touches!==undefined?touches.pageY:event.clientY;
_.dragging=true;
};
Slick.prototype.unfilterSlides=Slick.prototype.slickUnfilter=function(){
var _=this;
if(_.$slidesCache!==null){
_.unload();
_.$slideTrack.children(this.options.slide).detach();
_.$slidesCache.appendTo(_.$slideTrack);
_.reinit();
}
};
Slick.prototype.unload=function(){
var _=this;
$('.slick-cloned',_.$slider).remove();
if(_.$dots){
_.$dots.remove();
}
if(_.$prevArrow&&_.htmlExpr.test(_.options.prevArrow)){
_.$prevArrow.remove();
}
if(_.$nextArrow&&_.htmlExpr.test(_.options.nextArrow)){
_.$nextArrow.remove();
}
_.$slides
.removeClass('slick-slide slick-active slick-visible slick-current')
.attr('aria-hidden','true')
.css('width','');
};
Slick.prototype.unslick=function(fromBreakpoint){
var _=this;
_.$slider.trigger('unslick',[_,fromBreakpoint]);
_.destroy();
};
Slick.prototype.updateArrows=function(){
var _=this,
centerOffset;
centerOffset=Math.floor(_.options.slidesToShow/2);
if(_.options.arrows===true&&
_.slideCount>_.options.slidesToShow&&
!_.options.infinite){
_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled','false');
_.$nextArrow.removeClass('slick-disabled').attr('aria-disabled','false');
if(_.currentSlide===0){
_.$prevArrow.addClass('slick-disabled').attr('aria-disabled','true');
_.$nextArrow.removeClass('slick-disabled').attr('aria-disabled','false');
}else if(_.currentSlide>=_.slideCount-_.options.slidesToShow&&_.options.centerMode===false){
_.$nextArrow.addClass('slick-disabled').attr('aria-disabled','true');
_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled','false');
}else if(_.currentSlide>=_.slideCount-1&&_.options.centerMode===true){
_.$nextArrow.addClass('slick-disabled').attr('aria-disabled','true');
_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled','false');
}
}
};
Slick.prototype.updateDots=function(){
var _=this;
if(_.$dots!==null){
_.$dots
.find('li')
.removeClass('slick-active')
.attr('aria-hidden','true');
_.$dots
.find('li')
.eq(Math.floor(_.currentSlide/_.options.slidesToScroll))
.addClass('slick-active')
.attr('aria-hidden','false');
}
};
Slick.prototype.visibility=function(){
var _=this;
if(document[_.hidden]){
_.paused=true;
_.autoPlayClear();
}else{
if(_.options.autoplay===true){
_.paused=false;
_.autoPlay();
}
}
};
Slick.prototype.initADA=function(){
var _=this;
_.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
'aria-hidden':'true',
'tabindex':'-1'
}).find('a, input, button, select').attr({
'tabindex':'-1'
});
_.$slideTrack.attr('role','listbox');
_.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i){
$(this).attr({
'role':'option',
'aria-describedby':'slick-slide'+_.instanceUid+i+''
});
});
if(_.$dots!==null){
_.$dots.attr('role','tablist').find('li').each(function(i){
$(this).attr({
'role':'presentation',
'aria-selected':'false',
'aria-controls':'navigation'+_.instanceUid+i+'',
'id':'slick-slide'+_.instanceUid+i+''
});
})
.first().attr('aria-selected','true').end()
.find('button').attr('role','button').end()
.closest('div').attr('role','toolbar');
}
_.activateADA();
};
Slick.prototype.activateADA=function(){
var _=this;
_.$slideTrack.find('.slick-active').attr({
'aria-hidden':'false'
}).find('a, input, button, select').attr({
'tabindex':'0'
});
};
Slick.prototype.focusHandler=function(){
var _=this;
_.$slider.on('focus.slick blur.slick','*',function(event){
event.stopImmediatePropagation();
var sf=$(this);
setTimeout(function(){
if(_.isPlay){
if(sf.is(':focus')){
_.autoPlayClear();
_.paused=true;
}else{
_.paused=false;
_.autoPlay();
}
}
},0);
});
};
$.fn.slick=function(){
var _=this,
opt=arguments[0],
args=Array.prototype.slice.call(arguments,1),
l=_.length,
i,
ret;
for(i=0;i<l;i++){
if(typeof opt=='object'||typeof opt=='undefined')
_[i].slick=new Slick(_[i],opt);
else
ret=_[i].slick[opt].apply(_[i].slick,args);
if(typeof ret!='undefined')return ret;
}
return _;
};
}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/components/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/components/js/fullsizeBackgroundImage.js";
var FullsizeBackgroundImage=(function(){
var public={};
public.OpacityDragger=function(opacityDragger){
var rangeSlider=$(opacityDragger.draggerCssSelector).get(0);
var $component=$(opacityDragger.componentCssSelector);
var $opacityHelper=$(opacityDragger.opacityHelperCssSelector);
var minOpacity=opacityDragger.minOpacity;
var maxOpacity=opacityDragger.maxOpacity;
var backgroundColorRgb=opacityDragger.backgroundColorRgb;
noUiSlider.create(rangeSlider,{
start:parseInt($opacityHelper.text()),
step:0.5,
range:{
'min':minOpacity,
'max':maxOpacity
},
});
rangeSlider.noUiSlider.on('update',function(values,handle){
var opacity=parseInt(values[0]);
$component.css('background-color','rgba('+backgroundColorRgb+','+(opacity/100));
if($("body.mode-editor").length){
$opacityHelper.text(parseInt(values[0]));
}
});
}
return public;
})();
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/media/slider/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/media/slider/js/manualSlider.js";
var ManualSlider=(function(){
var Default=Pegasus.defineNamespace('Common.Common.Default');
var $slider;
var $caption;
var slickSliderProperties;
function onPause(slide){
$slider.removeClass('stage-slider--video-is-playing');
slide.parent().parent().focus();
$('.header').removeClass('stage-slider--video-is-playing');
}
function onPlay(slide){
$slider.addClass('stage-slider--video-is-playing');
$('.header').addClass('stage-slider--video-is-playing');
}
function initVideos(){
$slider.find('.stage-slider__media.video').each(function(i,slide){
var $this=$(this);
var providerName=$this.data('providername');
if(providerName=='YouTube'){
var $iframe=$(slide).children('iframe');
$(slide).children('iframe').attr("src",$iframe.attr("src")+"&enablejsapi=1");
Default.loadYoutubeIframeAPI().then(function(){
var player;
var videoControls={};
var player=new YT.Player($iframe.get(0),{
events:{
'onReady':function(event){
videoControls={
play:function(){player.playVideo()},
pause:function(){player.pauseVideo()}
};
$(slide).data('videoControls',videoControls);
},
'onStateChange':function(event){
if(event.data==YT.PlayerState.PLAYING){
onPlay($(slide));
}
if(event.data==YT.PlayerState.PAUSED){
onPause($(slide));
}
}
}
});
});
}
if(providerName=='Vimeo'){
Default.loadVimeoAPI().then(function(){
var iframe=$this.children('iframe').get(0);
var player=new Vimeo.Player(iframe);
var videoControls={
play:function(){
player.play()
},
pause:function(){
player.pause()
}
};
player.on('play',function(){
onPlay($(slide));
});
player.on('pause',function(){
onPause($(slide));
});
$(slide).data('videoControls',videoControls);
});
}
});
}
return function(slider,_slickSliderProperties){
$slider=slider;
$caption=$slider.find('.stage-slider__caption-inner');
slickSliderProperties=_slickSliderProperties;
slickSliderProperties.cssEase='ease-out';
slickSliderProperties.useTransform=true;
initVideos();
$slider.on('beforeChange',function(event,slick,currentSlide,nextSlide){
var $currentSlide=$slider.find('[data-slick-index="'+currentSlide+'"]');
var $nextSlide=$slider.find('[data-slick-index="'+nextSlide+'"]');
$nextSlide.addClass("is-animating");
var $media=$currentSlide.find('.stage-slider__media');
var videoControls=$media.data('videoControls');
if(videoControls!==undefined){
videoControls.pause();
}
});
$slider.on('afterChange',function(event,slick,currentSlide){
var $currentSlide=$slider.find('[data-slick-index="'+currentSlide+'"]');
$currentSlide.removeClass('is-animating');
});
$slider.slick(slickSliderProperties);
}
})();
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/lib/pagination/:module.js";
jQuery(function($){
var numberOfPaginatorsInMainContent=0;
$('[data-paged-block-id]').each(function(){
var $turboPaginatable=$(this);
var pagedBlockID=$turboPaginatable.data('paged-block-id');
var isFirstMainContentPagination=false;
var $aside=$turboPaginatable.closest('aside');
if($aside.length==0){
isFirstMainContentPagination=numberOfPaginatorsInMainContent==0;
numberOfPaginatorsInMainContent++;
}
$turboPaginatable.on('click','.pagination a',function(event){
var $link=$(this);
var href=$link.prop('href');
var hash=$link.prop('hash');
$.get(href,function(data){
if(isFirstMainContentPagination&&window.history){
window.history.pushState(null,'',href);
}
var $newData=$(data).find('[data-paged-block-id="'+pagedBlockID+'"]');
$turboPaginatable.empty().append($newData.contents());
$turboPaginatable.trigger('contentChanged');
var $scroll=$('a[name="'+hash.substring(1)+'"');
if($scroll.length>0){
$('body').scrollTop($scroll.offset().top);
}
if(typeof initLightboxes!=="undefined"){
initLightboxes();
}
});
event.stopPropagation();
event.preventDefault();
});
});
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/content/news/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/momentjs/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/momentjs/vendor/moment-with-locales.js";
;(function(global,factory){
typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():
typeof define==='function'&&define.amd?define(factory):
global.moment=factory()
}(this,(function(){'use strict';
var hookCallback;
function hooks(){
return hookCallback.apply(null,arguments);
}
function setHookCallback(callback){
hookCallback=callback;
}
function isArray(input){
return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';
}
function isObject(input){
return input!=null&&Object.prototype.toString.call(input)==='[object Object]';
}
function isObjectEmpty(obj){
if(Object.getOwnPropertyNames){
return(Object.getOwnPropertyNames(obj).length===0);
}else{
var k;
for(k in obj){
if(obj.hasOwnProperty(k)){
return false;
}
}
return true;
}
}
function isUndefined(input){
return input===void 0;
}
function isNumber(input){
return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';
}
function isDate(input){
return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';
}
function map(arr,fn){
var res=[],i;
for(i=0;i<arr.length;++i){
res.push(fn(arr[i],i));
}
return res;
}
function hasOwnProp(a,b){
return Object.prototype.hasOwnProperty.call(a,b);
}
function extend(a,b){
for(var i in b){
if(hasOwnProp(b,i)){
a[i]=b[i];
}
}
if(hasOwnProp(b,'toString')){
a.toString=b.toString;
}
if(hasOwnProp(b,'valueOf')){
a.valueOf=b.valueOf;
}
return a;
}
function createUTC(input,format,locale,strict){
return createLocalOrUTC(input,format,locale,strict,true).utc();
}
function defaultParsingFlags(){
return{
empty:false,
unusedTokens:[],
unusedInput:[],
overflow:-2,
charsLeftOver:0,
nullInput:false,
invalidMonth:null,
invalidFormat:false,
userInvalidated:false,
iso:false,
parsedDateParts:[],
meridiem:null,
rfc2822:false,
weekdayMismatch:false
};
}
function getParsingFlags(m){
if(m._pf==null){
m._pf=defaultParsingFlags();
}
return m._pf;
}
var some;
if(Array.prototype.some){
some=Array.prototype.some;
}else{
some=function(fun){
var t=Object(this);
var len=t.length>>>0;
for(var i=0;i<len;i++){
if(i in t&&fun.call(this,t[i],i,t)){
return true;
}
}
return false;
};
}
function isValid(m){
if(m._isValid==null){
var flags=getParsingFlags(m);
var parsedParts=some.call(flags.parsedDateParts,function(i){
return i!=null;
});
var isNowValid=!isNaN(m._d.getTime())&&
flags.overflow<0&&
!flags.empty&&
!flags.invalidMonth&&
!flags.invalidWeekday&&
!flags.weekdayMismatch&&
!flags.nullInput&&
!flags.invalidFormat&&
!flags.userInvalidated&&
(!flags.meridiem||(flags.meridiem&&parsedParts));
if(m._strict){
isNowValid=isNowValid&&
flags.charsLeftOver===0&&
flags.unusedTokens.length===0&&
flags.bigHour===undefined;
}
if(Object.isFrozen==null||!Object.isFrozen(m)){
m._isValid=isNowValid;
}
else{
return isNowValid;
}
}
return m._isValid;
}
function createInvalid(flags){
var m=createUTC(NaN);
if(flags!=null){
extend(getParsingFlags(m),flags);
}
else{
getParsingFlags(m).userInvalidated=true;
}
return m;
}
var momentProperties=hooks.momentProperties=[];
function copyConfig(to,from){
var i,prop,val;
if(!isUndefined(from._isAMomentObject)){
to._isAMomentObject=from._isAMomentObject;
}
if(!isUndefined(from._i)){
to._i=from._i;
}
if(!isUndefined(from._f)){
to._f=from._f;
}
if(!isUndefined(from._l)){
to._l=from._l;
}
if(!isUndefined(from._strict)){
to._strict=from._strict;
}
if(!isUndefined(from._tzm)){
to._tzm=from._tzm;
}
if(!isUndefined(from._isUTC)){
to._isUTC=from._isUTC;
}
if(!isUndefined(from._offset)){
to._offset=from._offset;
}
if(!isUndefined(from._pf)){
to._pf=getParsingFlags(from);
}
if(!isUndefined(from._locale)){
to._locale=from._locale;
}
if(momentProperties.length>0){
for(i=0;i<momentProperties.length;i++){
prop=momentProperties[i];
val=from[prop];
if(!isUndefined(val)){
to[prop]=val;
}
}
}
return to;
}
var updateInProgress=false;
function Moment(config){
copyConfig(this,config);
this._d=new Date(config._d!=null?config._d.getTime():NaN);
if(!this.isValid()){
this._d=new Date(NaN);
}
if(updateInProgress===false){
updateInProgress=true;
hooks.updateOffset(this);
updateInProgress=false;
}
}
function isMoment(obj){
return obj instanceof Moment||(obj!=null&&obj._isAMomentObject!=null);
}
function absFloor(number){
if(number<0){
return Math.ceil(number)||0;
}else{
return Math.floor(number);
}
}
function toInt(argumentForCoercion){
var coercedNumber=+argumentForCoercion,
value=0;
if(coercedNumber!==0&&isFinite(coercedNumber)){
value=absFloor(coercedNumber);
}
return value;
}
function compareArrays(array1,array2,dontConvert){
var len=Math.min(array1.length,array2.length),
lengthDiff=Math.abs(array1.length-array2.length),
diffs=0,
i;
for(i=0;i<len;i++){
if((dontConvert&&array1[i]!==array2[i])||
(!dontConvert&&toInt(array1[i])!==toInt(array2[i]))){
diffs++;
}
}
return diffs+lengthDiff;
}
function warn(msg){
if(hooks.suppressDeprecationWarnings===false&&
(typeof console!=='undefined')&&console.warn){
console.warn('Deprecation warning: '+msg);
}
}
function deprecate(msg,fn){
var firstTime=true;
return extend(function(){
if(hooks.deprecationHandler!=null){
hooks.deprecationHandler(null,msg);
}
if(firstTime){
var args=[];
var arg;
for(var i=0;i<arguments.length;i++){
arg='';
if(typeof arguments[i]==='object'){
arg+='\n['+i+'] ';
for(var key in arguments[0]){
arg+=key+': '+arguments[0][key]+', ';
}
arg=arg.slice(0,-2);
}else{
arg=arguments[i];
}
args.push(arg);
}
warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+(new Error()).stack);
firstTime=false;
}
return fn.apply(this,arguments);
},fn);
}
var deprecations={};
function deprecateSimple(name,msg){
if(hooks.deprecationHandler!=null){
hooks.deprecationHandler(name,msg);
}
if(!deprecations[name]){
warn(msg);
deprecations[name]=true;
}
}
hooks.suppressDeprecationWarnings=false;
hooks.deprecationHandler=null;
function isFunction(input){
return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';
}
function set(config){
var prop,i;
for(i in config){
prop=config[i];
if(isFunction(prop)){
this[i]=prop;
}else{
this['_'+i]=prop;
}
}
this._config=config;
this._dayOfMonthOrdinalParseLenient=new RegExp(
(this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+
'|'+(/\d{1,2}/).source);
}
function mergeConfigs(parentConfig,childConfig){
var res=extend({},parentConfig),prop;
for(prop in childConfig){
if(hasOwnProp(childConfig,prop)){
if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){
res[prop]={};
extend(res[prop],parentConfig[prop]);
extend(res[prop],childConfig[prop]);
}else if(childConfig[prop]!=null){
res[prop]=childConfig[prop];
}else{
delete res[prop];
}
}
}
for(prop in parentConfig){
if(hasOwnProp(parentConfig,prop)&&
!hasOwnProp(childConfig,prop)&&
isObject(parentConfig[prop])){
res[prop]=extend({},res[prop]);
}
}
return res;
}
function Locale(config){
if(config!=null){
this.set(config);
}
}
var keys;
if(Object.keys){
keys=Object.keys;
}else{
keys=function(obj){
var i,res=[];
for(i in obj){
if(hasOwnProp(obj,i)){
res.push(i);
}
}
return res;
};
}
var defaultCalendar={
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'
};
function calendar(key,mom,now){
var output=this._calendar[key]||this._calendar['sameElse'];
return isFunction(output)?output.call(mom,now):output;
}
var defaultLongDateFormat={
LTS:'h:mm:ss A',
LT:'h:mm A',
L:'MM/DD/YYYY',
LL:'MMMM D, YYYY',
LLL:'MMMM D, YYYY h:mm A',
LLLL:'dddd, MMMM D, YYYY h:mm A'
};
function longDateFormat(key){
var format=this._longDateFormat[key],
formatUpper=this._longDateFormat[key.toUpperCase()];
if(format||!formatUpper){
return format;
}
this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){
return val.slice(1);
});
return this._longDateFormat[key];
}
var defaultInvalidDate='Invalid date';
function invalidDate(){
return this._invalidDate;
}
var defaultOrdinal='%d';
var defaultDayOfMonthOrdinalParse=/\d{1,2}/;
function ordinal(number){
return this._ordinal.replace('%d',number);
}
var defaultRelativeTime={
future:'in %s',
past:'%s ago',
s:'a few seconds',
ss:'%d seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'
};
function relativeTime(number,withoutSuffix,string,isFuture){
var output=this._relativeTime[string];
return(isFunction(output))?
output(number,withoutSuffix,string,isFuture):
output.replace(/%d/i,number);
}
function pastFuture(diff,output){
var format=this._relativeTime[diff>0?'future':'past'];
return isFunction(format)?format(output):format.replace(/%s/i,output);
}
var aliases={};
function addUnitAlias(unit,shorthand){
var lowerCase=unit.toLowerCase();
aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;
}
function normalizeUnits(units){
return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;
}
function normalizeObjectUnits(inputObject){
var normalizedInput={},
normalizedProp,
prop;
for(prop in inputObject){
if(hasOwnProp(inputObject,prop)){
normalizedProp=normalizeUnits(prop);
if(normalizedProp){
normalizedInput[normalizedProp]=inputObject[prop];
}
}
}
return normalizedInput;
}
var priorities={};
function addUnitPriority(unit,priority){
priorities[unit]=priority;
}
function getPrioritizedUnits(unitsObj){
var units=[];
for(var u in unitsObj){
units.push({unit:u,priority:priorities[u]});
}
units.sort(function(a,b){
return a.priority-b.priority;
});
return units;
}
function zeroFill(number,targetLength,forceSign){
var absNumber=''+Math.abs(number),
zerosToFill=targetLength-absNumber.length,
sign=number>=0;
return(sign?(forceSign?'+':''):'-')+
Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;
}
var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
var formatFunctions={};
var formatTokenFunctions={};
function addFormatToken(token,padded,ordinal,callback){
var func=callback;
if(typeof callback==='string'){
func=function(){
return this[callback]();
};
}
if(token){
formatTokenFunctions[token]=func;
}
if(padded){
formatTokenFunctions[padded[0]]=function(){
return zeroFill(func.apply(this,arguments),padded[1],padded[2]);
};
}
if(ordinal){
formatTokenFunctions[ordinal]=function(){
return this.localeData().ordinal(func.apply(this,arguments),token);
};
}
}
function removeFormattingTokens(input){
if(input.match(/\[[\s\S]/)){
return input.replace(/^\[|\]$/g,'');
}
return input.replace(/\\/g,'');
}
function makeFormatFunction(format){
var array=format.match(formattingTokens),i,length;
for(i=0,length=array.length;i<length;i++){
if(formatTokenFunctions[array[i]]){
array[i]=formatTokenFunctions[array[i]];
}else{
array[i]=removeFormattingTokens(array[i]);
}
}
return function(mom){
var output='',i;
for(i=0;i<length;i++){
output+=isFunction(array[i])?array[i].call(mom,format):array[i];
}
return output;
};
}
function formatMoment(m,format){
if(!m.isValid()){
return m.localeData().invalidDate();
}
format=expandFormat(format,m.localeData());
formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);
return formatFunctions[format](m);
}
function expandFormat(format,locale){
var i=5;
function replaceLongDateFormatTokens(input){
return locale.longDateFormat(input)||input;
}
localFormattingTokens.lastIndex=0;
while(i>=0&&localFormattingTokens.test(format)){
format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);
localFormattingTokens.lastIndex=0;
i-=1;
}
return format;
}
var match1=/\d/;
var match2=/\d\d/;
var match3=/\d{3}/;
var match4=/\d{4}/;
var match6=/[+-]?\d{6}/;
var match1to2=/\d\d?/;
var match3to4=/\d\d\d\d?/;
var match5to6=/\d\d\d\d\d\d?/;
var match1to3=/\d{1,3}/;
var match1to4=/\d{1,4}/;
var match1to6=/[+-]?\d{1,6}/;
var matchUnsigned=/\d+/;
var matchSigned=/[+-]?\d+/;
var matchOffset=/Z|[+-]\d\d:?\d\d/gi;
var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;
var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;
var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
var regexes={};
function addRegexToken(token,regex,strictRegex){
regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){
return(isStrict&&strictRegex)?strictRegex:regex;
};
}
function getParseRegexForToken(token,config){
if(!hasOwnProp(regexes,token)){
return new RegExp(unescapeFormat(token));
}
return regexes[token](config._strict,config._locale);
}
function unescapeFormat(s){
return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){
return p1||p2||p3||p4;
}));
}
function regexEscape(s){
return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');
}
var tokens={};
function addParseToken(token,callback){
var i,func=callback;
if(typeof token==='string'){
token=[token];
}
if(isNumber(callback)){
func=function(input,array){
array[callback]=toInt(input);
};
}
for(i=0;i<token.length;i++){
tokens[token[i]]=func;
}
}
function addWeekParseToken(token,callback){
addParseToken(token,function(input,array,config,token){
config._w=config._w||{};
callback(input,config._w,config,token);
});
}
function addTimeToArrayFromToken(token,input,config){
if(input!=null&&hasOwnProp(tokens,token)){
tokens[token](input,config._a,config,token);
}
}
var YEAR=0;
var MONTH=1;
var DATE=2;
var HOUR=3;
var MINUTE=4;
var SECOND=5;
var MILLISECOND=6;
var WEEK=7;
var WEEKDAY=8;
addFormatToken('Y',0,0,function(){
var y=this.year();
return y<=9999?''+y:'+'+y;
});
addFormatToken(0,['YY',2],0,function(){
return this.year()%100;
});
addFormatToken(0,['YYYY',4],0,'year');
addFormatToken(0,['YYYYY',5],0,'year');
addFormatToken(0,['YYYYYY',6,true],0,'year');
addUnitAlias('year','y');
addUnitPriority('year',1);
addRegexToken('Y',matchSigned);
addRegexToken('YY',match1to2,match2);
addRegexToken('YYYY',match1to4,match4);
addRegexToken('YYYYY',match1to6,match6);
addRegexToken('YYYYYY',match1to6,match6);
addParseToken(['YYYYY','YYYYYY'],YEAR);
addParseToken('YYYY',function(input,array){
array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);
});
addParseToken('YY',function(input,array){
array[YEAR]=hooks.parseTwoDigitYear(input);
});
addParseToken('Y',function(input,array){
array[YEAR]=parseInt(input,10);
});
function daysInYear(year){
return isLeapYear(year)?366:365;
}
function isLeapYear(year){
return(year%4===0&&year%100!==0)||year%400===0;
}
hooks.parseTwoDigitYear=function(input){
return toInt(input)+(toInt(input)>68?1900:2000);
};
var getSetYear=makeGetSet('FullYear',true);
function getIsLeapYear(){
return isLeapYear(this.year());
}
function makeGetSet(unit,keepTime){
return function(value){
if(value!=null){
set$1(this,unit,value);
hooks.updateOffset(this,keepTime);
return this;
}else{
return get(this,unit);
}
};
}
function get(mom,unit){
return mom.isValid()?
mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;
}
function set$1(mom,unit,value){
if(mom.isValid()&&!isNaN(value)){
if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){
mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));
}
else{
mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);
}
}
}
function stringGet(units){
units=normalizeUnits(units);
if(isFunction(this[units])){
return this[units]();
}
return this;
}
function stringSet(units,value){
if(typeof units==='object'){
units=normalizeObjectUnits(units);
var prioritized=getPrioritizedUnits(units);
for(var i=0;i<prioritized.length;i++){
this[prioritized[i].unit](units[prioritized[i].unit]);
}
}else{
units=normalizeUnits(units);
if(isFunction(this[units])){
return this[units](value);
}
}
return this;
}
function mod(n,x){
return((n%x)+x)%x;
}
var indexOf;
if(Array.prototype.indexOf){
indexOf=Array.prototype.indexOf;
}else{
indexOf=function(o){
var i;
for(i=0;i<this.length;++i){
if(this[i]===o){
return i;
}
}
return-1;
};
}
function daysInMonth(year,month){
if(isNaN(year)||isNaN(month)){
return NaN;
}
var modMonth=mod(month,12);
year+=(month-modMonth)/12;
return modMonth===1?(isLeapYear(year)?29:28):(31-modMonth%7%2);
}
addFormatToken('M',['MM',2],'Mo',function(){
return this.month()+1;
});
addFormatToken('MMM',0,0,function(format){
return this.localeData().monthsShort(this,format);
});
addFormatToken('MMMM',0,0,function(format){
return this.localeData().months(this,format);
});
addUnitAlias('month','M');
addUnitPriority('month',8);
addRegexToken('M',match1to2);
addRegexToken('MM',match1to2,match2);
addRegexToken('MMM',function(isStrict,locale){
return locale.monthsShortRegex(isStrict);
});
addRegexToken('MMMM',function(isStrict,locale){
return locale.monthsRegex(isStrict);
});
addParseToken(['M','MM'],function(input,array){
array[MONTH]=toInt(input)-1;
});
addParseToken(['MMM','MMMM'],function(input,array,config,token){
var month=config._locale.monthsParse(input,token,config._strict);
if(month!=null){
array[MONTH]=month;
}else{
getParsingFlags(config).invalidMonth=input;
}
});
var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths(m,format){
if(!m){
return isArray(this._months)?this._months:
this._months['standalone'];
}
return isArray(this._months)?this._months[m.month()]:
this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];
}
var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort(m,format){
if(!m){
return isArray(this._monthsShort)?this._monthsShort:
this._monthsShort['standalone'];
}
return isArray(this._monthsShort)?this._monthsShort[m.month()]:
this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];
}
function handleStrictParse(monthName,format,strict){
var i,ii,mom,llc=monthName.toLocaleLowerCase();
if(!this._monthsParse){
this._monthsParse=[];
this._longMonthsParse=[];
this._shortMonthsParse=[];
for(i=0;i<12;++i){
mom=createUTC([2000,i]);
this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();
this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();
}
}
if(strict){
if(format==='MMM'){
ii=indexOf.call(this._shortMonthsParse,llc);
return ii!==-1?ii:null;
}else{
ii=indexOf.call(this._longMonthsParse,llc);
return ii!==-1?ii:null;
}
}else{
if(format==='MMM'){
ii=indexOf.call(this._shortMonthsParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._longMonthsParse,llc);
return ii!==-1?ii:null;
}else{
ii=indexOf.call(this._longMonthsParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._shortMonthsParse,llc);
return ii!==-1?ii:null;
}
}
}
function localeMonthsParse(monthName,format,strict){
var i,mom,regex;
if(this._monthsParseExact){
return handleStrictParse.call(this,monthName,format,strict);
}
if(!this._monthsParse){
this._monthsParse=[];
this._longMonthsParse=[];
this._shortMonthsParse=[];
}
for(i=0;i<12;i++){
mom=createUTC([2000,i]);
if(strict&&!this._longMonthsParse[i]){
this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');
this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');
}
if(!strict&&!this._monthsParse[i]){
regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');
this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');
}
if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){
return i;
}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){
return i;
}else if(!strict&&this._monthsParse[i].test(monthName)){
return i;
}
}
}
function setMonth(mom,value){
var dayOfMonth;
if(!mom.isValid()){
return mom;
}
if(typeof value==='string'){
if(/^\d+$/.test(value)){
value=toInt(value);
}else{
value=mom.localeData().monthsParse(value);
if(!isNumber(value)){
return mom;
}
}
}
dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));
mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);
return mom;
}
function getSetMonth(value){
if(value!=null){
setMonth(this,value);
hooks.updateOffset(this,true);
return this;
}else{
return get(this,'Month');
}
}
function getDaysInMonth(){
return daysInMonth(this.year(),this.month());
}
var defaultMonthsShortRegex=matchWord;
function monthsShortRegex(isStrict){
if(this._monthsParseExact){
if(!hasOwnProp(this,'_monthsRegex')){
computeMonthsParse.call(this);
}
if(isStrict){
return this._monthsShortStrictRegex;
}else{
return this._monthsShortRegex;
}
}else{
if(!hasOwnProp(this,'_monthsShortRegex')){
this._monthsShortRegex=defaultMonthsShortRegex;
}
return this._monthsShortStrictRegex&&isStrict?
this._monthsShortStrictRegex:this._monthsShortRegex;
}
}
var defaultMonthsRegex=matchWord;
function monthsRegex(isStrict){
if(this._monthsParseExact){
if(!hasOwnProp(this,'_monthsRegex')){
computeMonthsParse.call(this);
}
if(isStrict){
return this._monthsStrictRegex;
}else{
return this._monthsRegex;
}
}else{
if(!hasOwnProp(this,'_monthsRegex')){
this._monthsRegex=defaultMonthsRegex;
}
return this._monthsStrictRegex&&isStrict?
this._monthsStrictRegex:this._monthsRegex;
}
}
function computeMonthsParse(){
function cmpLenRev(a,b){
return b.length-a.length;
}
var shortPieces=[],longPieces=[],mixedPieces=[],
i,mom;
for(i=0;i<12;i++){
mom=createUTC([2000,i]);
shortPieces.push(this.monthsShort(mom,''));
longPieces.push(this.months(mom,''));
mixedPieces.push(this.months(mom,''));
mixedPieces.push(this.monthsShort(mom,''));
}
shortPieces.sort(cmpLenRev);
longPieces.sort(cmpLenRev);
mixedPieces.sort(cmpLenRev);
for(i=0;i<12;i++){
shortPieces[i]=regexEscape(shortPieces[i]);
longPieces[i]=regexEscape(longPieces[i]);
}
for(i=0;i<24;i++){
mixedPieces[i]=regexEscape(mixedPieces[i]);
}
this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');
this._monthsShortRegex=this._monthsRegex;
this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');
this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');
}
function createDate(y,m,d,h,M,s,ms){
var date=new Date(y,m,d,h,M,s,ms);
if(y<100&&y>=0&&isFinite(date.getFullYear())){
date.setFullYear(y);
}
return date;
}
function createUTCDate(y){
var date=new Date(Date.UTC.apply(null,arguments));
if(y<100&&y>=0&&isFinite(date.getUTCFullYear())){
date.setUTCFullYear(y);
}
return date;
}
function firstWeekOffset(year,dow,doy){
var
fwd=7+dow-doy,
fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;
return-fwdlw+fwd-1;
}
function dayOfYearFromWeeks(year,week,weekday,dow,doy){
var localWeekday=(7+weekday-dow)%7,
weekOffset=firstWeekOffset(year,dow,doy),
dayOfYear=1+7*(week-1)+localWeekday+weekOffset,
resYear,resDayOfYear;
if(dayOfYear<=0){
resYear=year-1;
resDayOfYear=daysInYear(resYear)+dayOfYear;
}else if(dayOfYear>daysInYear(year)){
resYear=year+1;
resDayOfYear=dayOfYear-daysInYear(year);
}else{
resYear=year;
resDayOfYear=dayOfYear;
}
return{
year:resYear,
dayOfYear:resDayOfYear
};
}
function weekOfYear(mom,dow,doy){
var weekOffset=firstWeekOffset(mom.year(),dow,doy),
week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,
resWeek,resYear;
if(week<1){
resYear=mom.year()-1;
resWeek=week+weeksInYear(resYear,dow,doy);
}else if(week>weeksInYear(mom.year(),dow,doy)){
resWeek=week-weeksInYear(mom.year(),dow,doy);
resYear=mom.year()+1;
}else{
resYear=mom.year();
resWeek=week;
}
return{
week:resWeek,
year:resYear
};
}
function weeksInYear(year,dow,doy){
var weekOffset=firstWeekOffset(year,dow,doy),
weekOffsetNext=firstWeekOffset(year+1,dow,doy);
return(daysInYear(year)-weekOffset+weekOffsetNext)/7;
}
addFormatToken('w',['ww',2],'wo','week');
addFormatToken('W',['WW',2],'Wo','isoWeek');
addUnitAlias('week','w');
addUnitAlias('isoWeek','W');
addUnitPriority('week',5);
addUnitPriority('isoWeek',5);
addRegexToken('w',match1to2);
addRegexToken('ww',match1to2,match2);
addRegexToken('W',match1to2);
addRegexToken('WW',match1to2,match2);
addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){
week[token.substr(0,1)]=toInt(input);
});
function localeWeek(mom){
return weekOfYear(mom,this._week.dow,this._week.doy).week;
}
var defaultLocaleWeek={
dow:0,
doy:6
};
function localeFirstDayOfWeek(){
return this._week.dow;
}
function localeFirstDayOfYear(){
return this._week.doy;
}
function getSetWeek(input){
var week=this.localeData().week(this);
return input==null?week:this.add((input-week)*7,'d');
}
function getSetISOWeek(input){
var week=weekOfYear(this,1,4).week;
return input==null?week:this.add((input-week)*7,'d');
}
addFormatToken('d',0,'do','day');
addFormatToken('dd',0,0,function(format){
return this.localeData().weekdaysMin(this,format);
});
addFormatToken('ddd',0,0,function(format){
return this.localeData().weekdaysShort(this,format);
});
addFormatToken('dddd',0,0,function(format){
return this.localeData().weekdays(this,format);
});
addFormatToken('e',0,0,'weekday');
addFormatToken('E',0,0,'isoWeekday');
addUnitAlias('day','d');
addUnitAlias('weekday','e');
addUnitAlias('isoWeekday','E');
addUnitPriority('day',11);
addUnitPriority('weekday',11);
addUnitPriority('isoWeekday',11);
addRegexToken('d',match1to2);
addRegexToken('e',match1to2);
addRegexToken('E',match1to2);
addRegexToken('dd',function(isStrict,locale){
return locale.weekdaysMinRegex(isStrict);
});
addRegexToken('ddd',function(isStrict,locale){
return locale.weekdaysShortRegex(isStrict);
});
addRegexToken('dddd',function(isStrict,locale){
return locale.weekdaysRegex(isStrict);
});
addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){
var weekday=config._locale.weekdaysParse(input,token,config._strict);
if(weekday!=null){
week.d=weekday;
}else{
getParsingFlags(config).invalidWeekday=input;
}
});
addWeekParseToken(['d','e','E'],function(input,week,config,token){
week[token]=toInt(input);
});
function parseWeekday(input,locale){
if(typeof input!=='string'){
return input;
}
if(!isNaN(input)){
return parseInt(input,10);
}
input=locale.weekdaysParse(input);
if(typeof input==='number'){
return input;
}
return null;
}
function parseIsoWeekday(input,locale){
if(typeof input==='string'){
return locale.weekdaysParse(input)%7||7;
}
return isNaN(input)?null:input;
}
var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays(m,format){
if(!m){
return isArray(this._weekdays)?this._weekdays:
this._weekdays['standalone'];
}
return isArray(this._weekdays)?this._weekdays[m.day()]:
this._weekdays[this._weekdays.isFormat.test(format)?'format':'standalone'][m.day()];
}
var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort(m){
return(m)?this._weekdaysShort[m.day()]:this._weekdaysShort;
}
var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin(m){
return(m)?this._weekdaysMin[m.day()]:this._weekdaysMin;
}
function handleStrictParse$1(weekdayName,format,strict){
var i,ii,mom,llc=weekdayName.toLocaleLowerCase();
if(!this._weekdaysParse){
this._weekdaysParse=[];
this._shortWeekdaysParse=[];
this._minWeekdaysParse=[];
for(i=0;i<7;++i){
mom=createUTC([2000,1]).day(i);
this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();
this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();
this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();
}
}
if(strict){
if(format==='dddd'){
ii=indexOf.call(this._weekdaysParse,llc);
return ii!==-1?ii:null;
}else if(format==='ddd'){
ii=indexOf.call(this._shortWeekdaysParse,llc);
return ii!==-1?ii:null;
}else{
ii=indexOf.call(this._minWeekdaysParse,llc);
return ii!==-1?ii:null;
}
}else{
if(format==='dddd'){
ii=indexOf.call(this._weekdaysParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._shortWeekdaysParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._minWeekdaysParse,llc);
return ii!==-1?ii:null;
}else if(format==='ddd'){
ii=indexOf.call(this._shortWeekdaysParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._weekdaysParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._minWeekdaysParse,llc);
return ii!==-1?ii:null;
}else{
ii=indexOf.call(this._minWeekdaysParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._weekdaysParse,llc);
if(ii!==-1){
return ii;
}
ii=indexOf.call(this._shortWeekdaysParse,llc);
return ii!==-1?ii:null;
}
}
}
function localeWeekdaysParse(weekdayName,format,strict){
var i,mom,regex;
if(this._weekdaysParseExact){
return handleStrictParse$1.call(this,weekdayName,format,strict);
}
if(!this._weekdaysParse){
this._weekdaysParse=[];
this._minWeekdaysParse=[];
this._shortWeekdaysParse=[];
this._fullWeekdaysParse=[];
}
for(i=0;i<7;i++){
mom=createUTC([2000,1]).day(i);
if(strict&&!this._fullWeekdaysParse[i]){
this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\.?')+'$','i');
this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\.?')+'$','i');
this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\.?')+'$','i');
}
if(!this._weekdaysParse[i]){
regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');
this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');
}
if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){
return i;
}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){
return i;
}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){
return i;
}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){
return i;
}
}
}
function getSetDayOfWeek(input){
if(!this.isValid()){
return input!=null?this:NaN;
}
var day=this._isUTC?this._d.getUTCDay():this._d.getDay();
if(input!=null){
input=parseWeekday(input,this.localeData());
return this.add(input-day,'d');
}else{
return day;
}
}
function getSetLocaleDayOfWeek(input){
if(!this.isValid()){
return input!=null?this:NaN;
}
var weekday=(this.day()+7-this.localeData()._week.dow)%7;
return input==null?weekday:this.add(input-weekday,'d');
}
function getSetISODayOfWeek(input){
if(!this.isValid()){
return input!=null?this:NaN;
}
if(input!=null){
var weekday=parseIsoWeekday(input,this.localeData());
return this.day(this.day()%7?weekday:weekday-7);
}else{
return this.day()||7;
}
}
var defaultWeekdaysRegex=matchWord;
function weekdaysRegex(isStrict){
if(this._weekdaysParseExact){
if(!hasOwnProp(this,'_weekdaysRegex')){
computeWeekdaysParse.call(this);
}
if(isStrict){
return this._weekdaysStrictRegex;
}else{
return this._weekdaysRegex;
}
}else{
if(!hasOwnProp(this,'_weekdaysRegex')){
this._weekdaysRegex=defaultWeekdaysRegex;
}
return this._weekdaysStrictRegex&&isStrict?
this._weekdaysStrictRegex:this._weekdaysRegex;
}
}
var defaultWeekdaysShortRegex=matchWord;
function weekdaysShortRegex(isStrict){
if(this._weekdaysParseExact){
if(!hasOwnProp(this,'_weekdaysRegex')){
computeWeekdaysParse.call(this);
}
if(isStrict){
return this._weekdaysShortStrictRegex;
}else{
return this._weekdaysShortRegex;
}
}else{
if(!hasOwnProp(this,'_weekdaysShortRegex')){
this._weekdaysShortRegex=defaultWeekdaysShortRegex;
}
return this._weekdaysShortStrictRegex&&isStrict?
this._weekdaysShortStrictRegex:this._weekdaysShortRegex;
}
}
var defaultWeekdaysMinRegex=matchWord;
function weekdaysMinRegex(isStrict){
if(this._weekdaysParseExact){
if(!hasOwnProp(this,'_weekdaysRegex')){
computeWeekdaysParse.call(this);
}
if(isStrict){
return this._weekdaysMinStrictRegex;
}else{
return this._weekdaysMinRegex;
}
}else{
if(!hasOwnProp(this,'_weekdaysMinRegex')){
this._weekdaysMinRegex=defaultWeekdaysMinRegex;
}
return this._weekdaysMinStrictRegex&&isStrict?
this._weekdaysMinStrictRegex:this._weekdaysMinRegex;
}
}
function computeWeekdaysParse(){
function cmpLenRev(a,b){
return b.length-a.length;
}
var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],
i,mom,minp,shortp,longp;
for(i=0;i<7;i++){
mom=createUTC([2000,1]).day(i);
minp=this.weekdaysMin(mom,'');
shortp=this.weekdaysShort(mom,'');
longp=this.weekdays(mom,'');
minPieces.push(minp);
shortPieces.push(shortp);
longPieces.push(longp);
mixedPieces.push(minp);
mixedPieces.push(shortp);
mixedPieces.push(longp);
}
minPieces.sort(cmpLenRev);
shortPieces.sort(cmpLenRev);
longPieces.sort(cmpLenRev);
mixedPieces.sort(cmpLenRev);
for(i=0;i<7;i++){
shortPieces[i]=regexEscape(shortPieces[i]);
longPieces[i]=regexEscape(longPieces[i]);
mixedPieces[i]=regexEscape(mixedPieces[i]);
}
this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');
this._weekdaysShortRegex=this._weekdaysRegex;
this._weekdaysMinRegex=this._weekdaysRegex;
this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');
this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');
this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');
}
function hFormat(){
return this.hours()%12||12;
}
function kFormat(){
return this.hours()||24;
}
addFormatToken('H',['HH',2],0,'hour');
addFormatToken('h',['hh',2],0,hFormat);
addFormatToken('k',['kk',2],0,kFormat);
addFormatToken('hmm',0,0,function(){
return''+hFormat.apply(this)+zeroFill(this.minutes(),2);
});
addFormatToken('hmmss',0,0,function(){
return''+hFormat.apply(this)+zeroFill(this.minutes(),2)+
zeroFill(this.seconds(),2);
});
addFormatToken('Hmm',0,0,function(){
return''+this.hours()+zeroFill(this.minutes(),2);
});
addFormatToken('Hmmss',0,0,function(){
return''+this.hours()+zeroFill(this.minutes(),2)+
zeroFill(this.seconds(),2);
});
function meridiem(token,lowercase){
addFormatToken(token,0,0,function(){
return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);
});
}
meridiem('a',true);
meridiem('A',false);
addUnitAlias('hour','h');
addUnitPriority('hour',13);
function matchMeridiem(isStrict,locale){
return locale._meridiemParse;
}
addRegexToken('a',matchMeridiem);
addRegexToken('A',matchMeridiem);
addRegexToken('H',match1to2);
addRegexToken('h',match1to2);
addRegexToken('k',match1to2);
addRegexToken('HH',match1to2,match2);
addRegexToken('hh',match1to2,match2);
addRegexToken('kk',match1to2,match2);
addRegexToken('hmm',match3to4);
addRegexToken('hmmss',match5to6);
addRegexToken('Hmm',match3to4);
addRegexToken('Hmmss',match5to6);
addParseToken(['H','HH'],HOUR);
addParseToken(['k','kk'],function(input,array,config){
var kInput=toInt(input);
array[HOUR]=kInput===24?0:kInput;
});
addParseToken(['a','A'],function(input,array,config){
config._isPm=config._locale.isPM(input);
config._meridiem=input;
});
addParseToken(['h','hh'],function(input,array,config){
array[HOUR]=toInt(input);
getParsingFlags(config).bigHour=true;
});
addParseToken('hmm',function(input,array,config){
var pos=input.length-2;
array[HOUR]=toInt(input.substr(0,pos));
array[MINUTE]=toInt(input.substr(pos));
getParsingFlags(config).bigHour=true;
});
addParseToken('hmmss',function(input,array,config){
var pos1=input.length-4;
var pos2=input.length-2;
array[HOUR]=toInt(input.substr(0,pos1));
array[MINUTE]=toInt(input.substr(pos1,2));
array[SECOND]=toInt(input.substr(pos2));
getParsingFlags(config).bigHour=true;
});
addParseToken('Hmm',function(input,array,config){
var pos=input.length-2;
array[HOUR]=toInt(input.substr(0,pos));
array[MINUTE]=toInt(input.substr(pos));
});
addParseToken('Hmmss',function(input,array,config){
var pos1=input.length-4;
var pos2=input.length-2;
array[HOUR]=toInt(input.substr(0,pos1));
array[MINUTE]=toInt(input.substr(pos1,2));
array[SECOND]=toInt(input.substr(pos2));
});
function localeIsPM(input){
return((input+'').toLowerCase().charAt(0)==='p');
}
var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;
function localeMeridiem(hours,minutes,isLower){
if(hours>11){
return isLower?'pm':'PM';
}else{
return isLower?'am':'AM';
}
}
var getSetHour=makeGetSet('Hours',true);
var baseConfig={
calendar:defaultCalendar,
longDateFormat:defaultLongDateFormat,
invalidDate:defaultInvalidDate,
ordinal:defaultOrdinal,
dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,
relativeTime:defaultRelativeTime,
months:defaultLocaleMonths,
monthsShort:defaultLocaleMonthsShort,
week:defaultLocaleWeek,
weekdays:defaultLocaleWeekdays,
weekdaysMin:defaultLocaleWeekdaysMin,
weekdaysShort:defaultLocaleWeekdaysShort,
meridiemParse:defaultLocaleMeridiemParse
};
var locales={};
var localeFamilies={};
var globalLocale;
function normalizeLocale(key){
return key?key.toLowerCase().replace('_','-'):key;
}
function chooseLocale(names){
var i=0,j,next,locale,split;
while(i<names.length){
split=normalizeLocale(names[i]).split('-');
j=split.length;
next=normalizeLocale(names[i+1]);
next=next?next.split('-'):null;
while(j>0){
locale=loadLocale(split.slice(0,j).join('-'));
if(locale){
return locale;
}
if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){
break;
}
j--;
}
i++;
}
return null;
}
function loadLocale(name){
var oldLocale=null;
if(!locales[name]&&(typeof module!=='undefined')&&
module&&module.exports){
try{
oldLocale=globalLocale._abbr;
var aliasedRequire=require;
aliasedRequire('./locale/'+name);
getSetGlobalLocale(oldLocale);
}catch(e){}
}
return locales[name];
}
function getSetGlobalLocale(key,values){
var data;
if(key){
if(isUndefined(values)){
data=getLocale(key);
}
else{
data=defineLocale(key,values);
}
if(data){
globalLocale=data;
}
}
return globalLocale._abbr;
}
function defineLocale(name,config){
if(config!==null){
var parentConfig=baseConfig;
config.abbr=name;
if(locales[name]!=null){
deprecateSimple('defineLocaleOverride',
'use moment.updateLocale(localeName, config) to change '+
'an existing locale. moment.defineLocale(localeName, '+
'config) should only be used for creating a new locale '+
'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
parentConfig=locales[name]._config;
}else if(config.parentLocale!=null){
if(locales[config.parentLocale]!=null){
parentConfig=locales[config.parentLocale]._config;
}else{
if(!localeFamilies[config.parentLocale]){
localeFamilies[config.parentLocale]=[];
}
localeFamilies[config.parentLocale].push({
name:name,
config:config
});
return null;
}
}
locales[name]=new Locale(mergeConfigs(parentConfig,config));
if(localeFamilies[name]){
localeFamilies[name].forEach(function(x){
defineLocale(x.name,x.config);
});
}
getSetGlobalLocale(name);
return locales[name];
}else{
delete locales[name];
return null;
}
}
function updateLocale(name,config){
if(config!=null){
var locale,tmpLocale,parentConfig=baseConfig;
tmpLocale=loadLocale(name);
if(tmpLocale!=null){
parentConfig=tmpLocale._config;
}
config=mergeConfigs(parentConfig,config);
locale=new Locale(config);
locale.parentLocale=locales[name];
locales[name]=locale;
getSetGlobalLocale(name);
}else{
if(locales[name]!=null){
if(locales[name].parentLocale!=null){
locales[name]=locales[name].parentLocale;
}else if(locales[name]!=null){
delete locales[name];
}
}
}
return locales[name];
}
function getLocale(key){
var locale;
if(key&&key._locale&&key._locale._abbr){
key=key._locale._abbr;
}
if(!key){
return globalLocale;
}
if(!isArray(key)){
locale=loadLocale(key);
if(locale){
return locale;
}
key=[key];
}
return chooseLocale(key);
}
function listLocales(){
return keys(locales);
}
function checkOverflow(m){
var overflow;
var a=m._a;
if(a&&getParsingFlags(m).overflow===-2){
overflow=
a[MONTH]<0||a[MONTH]>11?MONTH:
a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:
a[HOUR]<0||a[HOUR]>24||(a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0))?HOUR:
a[MINUTE]<0||a[MINUTE]>59?MINUTE:
a[SECOND]<0||a[SECOND]>59?SECOND:
a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:
-1;
if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){
overflow=DATE;
}
if(getParsingFlags(m)._overflowWeeks&&overflow===-1){
overflow=WEEK;
}
if(getParsingFlags(m)._overflowWeekday&&overflow===-1){
overflow=WEEKDAY;
}
getParsingFlags(m).overflow=overflow;
}
return m;
}
function defaults(a,b,c){
if(a!=null){
return a;
}
if(b!=null){
return b;
}
return c;
}
function currentDateArray(config){
var nowValue=new Date(hooks.now());
if(config._useUTC){
return[nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];
}
return[nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];
}
function configFromArray(config){
var i,date,input=[],currentDate,expectedWeekday,yearToUse;
if(config._d){
return;
}
currentDate=currentDateArray(config);
if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){
dayOfYearFromWeekInfo(config);
}
if(config._dayOfYear!=null){
yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);
if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){
getParsingFlags(config)._overflowDayOfYear=true;
}
date=createUTCDate(yearToUse,0,config._dayOfYear);
config._a[MONTH]=date.getUTCMonth();
config._a[DATE]=date.getUTCDate();
}
for(i=0;i<3&&config._a[i]==null;++i){
config._a[i]=input[i]=currentDate[i];
}
for(;i<7;i++){
config._a[i]=input[i]=(config._a[i]==null)?(i===2?1:0):config._a[i];
}
if(config._a[HOUR]===24&&
config._a[MINUTE]===0&&
config._a[SECOND]===0&&
config._a[MILLISECOND]===0){
config._nextDay=true;
config._a[HOUR]=0;
}
config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);
expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();
if(config._tzm!=null){
config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);
}
if(config._nextDay){
config._a[HOUR]=24;
}
if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){
getParsingFlags(config).weekdayMismatch=true;
}
}
function dayOfYearFromWeekInfo(config){
var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;
w=config._w;
if(w.GG!=null||w.W!=null||w.E!=null){
dow=1;
doy=4;
weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);
week=defaults(w.W,1);
weekday=defaults(w.E,1);
if(weekday<1||weekday>7){
weekdayOverflow=true;
}
}else{
dow=config._locale._week.dow;
doy=config._locale._week.doy;
var curWeek=weekOfYear(createLocal(),dow,doy);
weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);
week=defaults(w.w,curWeek.week);
if(w.d!=null){
weekday=w.d;
if(weekday<0||weekday>6){
weekdayOverflow=true;
}
}else if(w.e!=null){
weekday=w.e+dow;
if(w.e<0||w.e>6){
weekdayOverflow=true;
}
}else{
weekday=dow;
}
}
if(week<1||week>weeksInYear(weekYear,dow,doy)){
getParsingFlags(config)._overflowWeeks=true;
}else if(weekdayOverflow!=null){
getParsingFlags(config)._overflowWeekday=true;
}else{
temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);
config._a[YEAR]=temp.year;
config._dayOfYear=temp.dayOfYear;
}
}
var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;
var isoDates=[
['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],
['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],
['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],
['GGGG-[W]WW',/\d{4}-W\d\d/,false],
['YYYY-DDD',/\d{4}-\d{3}/],
['YYYY-MM',/\d{4}-\d\d/,false],
['YYYYYYMMDD',/[+-]\d{10}/],
['YYYYMMDD',/\d{8}/],
['GGGG[W]WWE',/\d{4}W\d{3}/],
['GGGG[W]WW',/\d{4}W\d{2}/,false],
['YYYYDDD',/\d{7}/]
];
var isoTimes=[
['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],
['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],
['HH:mm:ss',/\d\d:\d\d:\d\d/],
['HH:mm',/\d\d:\d\d/],
['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],
['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],
['HHmmss',/\d\d\d\d\d\d/],
['HHmm',/\d\d\d\d/],
['HH',/\d\d/]
];
var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;
function configFromISO(config){
var i,l,
string=config._i,
match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),
allowTime,dateFormat,timeFormat,tzFormat;
if(match){
getParsingFlags(config).iso=true;
for(i=0,l=isoDates.length;i<l;i++){
if(isoDates[i][1].exec(match[1])){
dateFormat=isoDates[i][0];
allowTime=isoDates[i][2]!==false;
break;
}
}
if(dateFormat==null){
config._isValid=false;
return;
}
if(match[3]){
for(i=0,l=isoTimes.length;i<l;i++){
if(isoTimes[i][1].exec(match[3])){
timeFormat=(match[2]||' ')+isoTimes[i][0];
break;
}
}
if(timeFormat==null){
config._isValid=false;
return;
}
}
if(!allowTime&&timeFormat!=null){
config._isValid=false;
return;
}
if(match[4]){
if(tzRegex.exec(match[4])){
tzFormat='Z';
}else{
config._isValid=false;
return;
}
}
config._f=dateFormat+(timeFormat||'')+(tzFormat||'');
configFromStringAndFormat(config);
}else{
config._isValid=false;
}
}
var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){
var result=[
untruncateYear(yearStr),
defaultLocaleMonthsShort.indexOf(monthStr),
parseInt(dayStr,10),
parseInt(hourStr,10),
parseInt(minuteStr,10)
];
if(secondStr){
result.push(parseInt(secondStr,10));
}
return result;
}
function untruncateYear(yearStr){
var year=parseInt(yearStr,10);
if(year<=49){
return 2000+year;
}else if(year<=999){
return 1900+year;
}
return year;
}
function preprocessRFC2822(s){
return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').trim();
}
function checkWeekday(weekdayStr,parsedInput,config){
if(weekdayStr){
var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),
weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();
if(weekdayProvided!==weekdayActual){
getParsingFlags(config).weekdayMismatch=true;
config._isValid=false;
return false;
}
}
return true;
}
var obsOffsets={
UT:0,
GMT:0,
EDT:-4*60,
EST:-5*60,
CDT:-5*60,
CST:-6*60,
MDT:-6*60,
MST:-7*60,
PDT:-7*60,
PST:-8*60
};
function calculateOffset(obsOffset,militaryOffset,numOffset){
if(obsOffset){
return obsOffsets[obsOffset];
}else if(militaryOffset){
return 0;
}else{
var hm=parseInt(numOffset,10);
var m=hm%100,h=(hm-m)/100;
return h*60+m;
}
}
function configFromRFC2822(config){
var match=rfc2822.exec(preprocessRFC2822(config._i));
if(match){
var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);
if(!checkWeekday(match[1],parsedArray,config)){
return;
}
config._a=parsedArray;
config._tzm=calculateOffset(match[8],match[9],match[10]);
config._d=createUTCDate.apply(null,config._a);
config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);
getParsingFlags(config).rfc2822=true;
}else{
config._isValid=false;
}
}
function configFromString(config){
var matched=aspNetJsonRegex.exec(config._i);
if(matched!==null){
config._d=new Date(+matched[1]);
return;
}
configFromISO(config);
if(config._isValid===false){
delete config._isValid;
}else{
return;
}
configFromRFC2822(config);
if(config._isValid===false){
delete config._isValid;
}else{
return;
}
hooks.createFromInputFallback(config);
}
hooks.createFromInputFallback=deprecate(
'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+
'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+
'discouraged and will be removed in an upcoming major release. Please refer to '+
'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
function(config){
config._d=new Date(config._i+(config._useUTC?' UTC':''));
}
);
hooks.ISO_8601=function(){};
hooks.RFC_2822=function(){};
function configFromStringAndFormat(config){
if(config._f===hooks.ISO_8601){
configFromISO(config);
return;
}
if(config._f===hooks.RFC_2822){
configFromRFC2822(config);
return;
}
config._a=[];
getParsingFlags(config).empty=true;
var string=''+config._i,
i,parsedInput,tokens,token,skipped,
stringLength=string.length,
totalParsedInputLength=0;
tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];
for(i=0;i<tokens.length;i++){
token=tokens[i];
parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];
if(parsedInput){
skipped=string.substr(0,string.indexOf(parsedInput));
if(skipped.length>0){
getParsingFlags(config).unusedInput.push(skipped);
}
string=string.slice(string.indexOf(parsedInput)+parsedInput.length);
totalParsedInputLength+=parsedInput.length;
}
if(formatTokenFunctions[token]){
if(parsedInput){
getParsingFlags(config).empty=false;
}
else{
getParsingFlags(config).unusedTokens.push(token);
}
addTimeToArrayFromToken(token,parsedInput,config);
}
else if(config._strict&&!parsedInput){
getParsingFlags(config).unusedTokens.push(token);
}
}
getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;
if(string.length>0){
getParsingFlags(config).unusedInput.push(string);
}
if(config._a[HOUR]<=12&&
getParsingFlags(config).bigHour===true&&
config._a[HOUR]>0){
getParsingFlags(config).bigHour=undefined;
}
getParsingFlags(config).parsedDateParts=config._a.slice(0);
getParsingFlags(config).meridiem=config._meridiem;
config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);
configFromArray(config);
checkOverflow(config);
}
function meridiemFixWrap(locale,hour,meridiem){
var isPm;
if(meridiem==null){
return hour;
}
if(locale.meridiemHour!=null){
return locale.meridiemHour(hour,meridiem);
}else if(locale.isPM!=null){
isPm=locale.isPM(meridiem);
if(isPm&&hour<12){
hour+=12;
}
if(!isPm&&hour===12){
hour=0;
}
return hour;
}else{
return hour;
}
}
function configFromStringAndArray(config){
var tempConfig,
bestMoment,
scoreToBeat,
i,
currentScore;
if(config._f.length===0){
getParsingFlags(config).invalidFormat=true;
config._d=new Date(NaN);
return;
}
for(i=0;i<config._f.length;i++){
currentScore=0;
tempConfig=copyConfig({},config);
if(config._useUTC!=null){
tempConfig._useUTC=config._useUTC;
}
tempConfig._f=config._f[i];
configFromStringAndFormat(tempConfig);
if(!isValid(tempConfig)){
continue;
}
currentScore+=getParsingFlags(tempConfig).charsLeftOver;
currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;
getParsingFlags(tempConfig).score=currentScore;
if(scoreToBeat==null||currentScore<scoreToBeat){
scoreToBeat=currentScore;
bestMoment=tempConfig;
}
}
extend(config,bestMoment||tempConfig);
}
function configFromObject(config){
if(config._d){
return;
}
var i=normalizeObjectUnits(config._i);
config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){
return obj&&parseInt(obj,10);
});
configFromArray(config);
}
function createFromConfig(config){
var res=new Moment(checkOverflow(prepareConfig(config)));
if(res._nextDay){
res.add(1,'d');
res._nextDay=undefined;
}
return res;
}
function prepareConfig(config){
var input=config._i,
format=config._f;
config._locale=config._locale||getLocale(config._l);
if(input===null||(format===undefined&&input==='')){
return createInvalid({nullInput:true});
}
if(typeof input==='string'){
config._i=input=config._locale.preparse(input);
}
if(isMoment(input)){
return new Moment(checkOverflow(input));
}else if(isDate(input)){
config._d=input;
}else if(isArray(format)){
configFromStringAndArray(config);
}else if(format){
configFromStringAndFormat(config);
}else{
configFromInput(config);
}
if(!isValid(config)){
config._d=null;
}
return config;
}
function configFromInput(config){
var input=config._i;
if(isUndefined(input)){
config._d=new Date(hooks.now());
}else if(isDate(input)){
config._d=new Date(input.valueOf());
}else if(typeof input==='string'){
configFromString(config);
}else if(isArray(input)){
config._a=map(input.slice(0),function(obj){
return parseInt(obj,10);
});
configFromArray(config);
}else if(isObject(input)){
configFromObject(config);
}else if(isNumber(input)){
config._d=new Date(input);
}else{
hooks.createFromInputFallback(config);
}
}
function createLocalOrUTC(input,format,locale,strict,isUTC){
var c={};
if(locale===true||locale===false){
strict=locale;
locale=undefined;
}
if((isObject(input)&&isObjectEmpty(input))||
(isArray(input)&&input.length===0)){
input=undefined;
}
c._isAMomentObject=true;
c._useUTC=c._isUTC=isUTC;
c._l=locale;
c._i=input;
c._f=format;
c._strict=strict;
return createFromConfig(c);
}
function createLocal(input,format,locale,strict){
return createLocalOrUTC(input,format,locale,strict,false);
}
var prototypeMin=deprecate(
'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
function(){
var other=createLocal.apply(null,arguments);
if(this.isValid()&&other.isValid()){
return other<this?this:other;
}else{
return createInvalid();
}
}
);
var prototypeMax=deprecate(
'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
function(){
var other=createLocal.apply(null,arguments);
if(this.isValid()&&other.isValid()){
return other>this?this:other;
}else{
return createInvalid();
}
}
);
function pickBy(fn,moments){
var res,i;
if(moments.length===1&&isArray(moments[0])){
moments=moments[0];
}
if(!moments.length){
return createLocal();
}
res=moments[0];
for(i=1;i<moments.length;++i){
if(!moments[i].isValid()||moments[i][fn](res)){
res=moments[i];
}
}
return res;
}
function min(){
var args=[].slice.call(arguments,0);
return pickBy('isBefore',args);
}
function max(){
var args=[].slice.call(arguments,0);
return pickBy('isAfter',args);
}
var now=function(){
return Date.now?Date.now():+(new Date());
};
var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];
function isDurationValid(m){
for(var key in m){
if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){
return false;
}
}
var unitHasDecimal=false;
for(var i=0;i<ordering.length;++i){
if(m[ordering[i]]){
if(unitHasDecimal){
return false;
}
if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){
unitHasDecimal=true;
}
}
}
return true;
}
function isValid$1(){
return this._isValid;
}
function createInvalid$1(){
return createDuration(NaN);
}
function Duration(duration){
var normalizedInput=normalizeObjectUnits(duration),
years=normalizedInput.year||0,
quarters=normalizedInput.quarter||0,
months=normalizedInput.month||0,
weeks=normalizedInput.week||0,
days=normalizedInput.day||0,
hours=normalizedInput.hour||0,
minutes=normalizedInput.minute||0,
seconds=normalizedInput.second||0,
milliseconds=normalizedInput.millisecond||0;
this._isValid=isDurationValid(normalizedInput);
this._milliseconds=+milliseconds+
seconds*1e3+
minutes*6e4+
hours*1000*60*60;
this._days=+days+
weeks*7;
this._months=+months+
quarters*3+
years*12;
this._data={};
this._locale=getLocale();
this._bubble();
}
function isDuration(obj){
return obj instanceof Duration;
}
function absRound(number){
if(number<0){
return Math.round(-1*number)*-1;
}else{
return Math.round(number);
}
}
function offset(token,separator){
addFormatToken(token,0,0,function(){
var offset=this.utcOffset();
var sign='+';
if(offset<0){
offset=-offset;
sign='-';
}
return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~(offset)%60,2);
});
}
offset('Z',':');
offset('ZZ','');
addRegexToken('Z',matchShortOffset);
addRegexToken('ZZ',matchShortOffset);
addParseToken(['Z','ZZ'],function(input,array,config){
config._useUTC=true;
config._tzm=offsetFromString(matchShortOffset,input);
});
var chunkOffset=/([\+\-]|\d\d)/gi;
function offsetFromString(matcher,string){
var matches=(string||'').match(matcher);
if(matches===null){
return null;
}
var chunk=matches[matches.length-1]||[];
var parts=(chunk+'').match(chunkOffset)||['-',0,0];
var minutes=+(parts[1]*60)+toInt(parts[2]);
return minutes===0?
0:
parts[0]==='+'?minutes:-minutes;
}
function cloneWithOffset(input,model){
var res,diff;
if(model._isUTC){
res=model.clone();
diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();
res._d.setTime(res._d.valueOf()+diff);
hooks.updateOffset(res,false);
return res;
}else{
return createLocal(input).local();
}
}
function getDateOffset(m){
return-Math.round(m._d.getTimezoneOffset()/15)*15;
}
hooks.updateOffset=function(){};
function getSetOffset(input,keepLocalTime,keepMinutes){
var offset=this._offset||0,
localAdjust;
if(!this.isValid()){
return input!=null?this:NaN;
}
if(input!=null){
if(typeof input==='string'){
input=offsetFromString(matchShortOffset,input);
if(input===null){
return this;
}
}else if(Math.abs(input)<16&&!keepMinutes){
input=input*60;
}
if(!this._isUTC&&keepLocalTime){
localAdjust=getDateOffset(this);
}
this._offset=input;
this._isUTC=true;
if(localAdjust!=null){
this.add(localAdjust,'m');
}
if(offset!==input){
if(!keepLocalTime||this._changeInProgress){
addSubtract(this,createDuration(input-offset,'m'),1,false);
}else if(!this._changeInProgress){
this._changeInProgress=true;
hooks.updateOffset(this,true);
this._changeInProgress=null;
}
}
return this;
}else{
return this._isUTC?offset:getDateOffset(this);
}
}
function getSetZone(input,keepLocalTime){
if(input!=null){
if(typeof input!=='string'){
input=-input;
}
this.utcOffset(input,keepLocalTime);
return this;
}else{
return-this.utcOffset();
}
}
function setOffsetToUTC(keepLocalTime){
return this.utcOffset(0,keepLocalTime);
}
function setOffsetToLocal(keepLocalTime){
if(this._isUTC){
this.utcOffset(0,keepLocalTime);
this._isUTC=false;
if(keepLocalTime){
this.subtract(getDateOffset(this),'m');
}
}
return this;
}
function setOffsetToParsedOffset(){
if(this._tzm!=null){
this.utcOffset(this._tzm,false,true);
}else if(typeof this._i==='string'){
var tZone=offsetFromString(matchOffset,this._i);
if(tZone!=null){
this.utcOffset(tZone);
}
else{
this.utcOffset(0,true);
}
}
return this;
}
function hasAlignedHourOffset(input){
if(!this.isValid()){
return false;
}
input=input?createLocal(input).utcOffset():0;
return(this.utcOffset()-input)%60===0;
}
function isDaylightSavingTime(){
return(
this.utcOffset()>this.clone().month(0).utcOffset()||
this.utcOffset()>this.clone().month(5).utcOffset()
);
}
function isDaylightSavingTimeShifted(){
if(!isUndefined(this._isDSTShifted)){
return this._isDSTShifted;
}
var c={};
copyConfig(c,this);
c=prepareConfig(c);
if(c._a){
var other=c._isUTC?createUTC(c._a):createLocal(c._a);
this._isDSTShifted=this.isValid()&&
compareArrays(c._a,other.toArray())>0;
}else{
this._isDSTShifted=false;
}
return this._isDSTShifted;
}
function isLocal(){
return this.isValid()?!this._isUTC:false;
}
function isUtcOffset(){
return this.isValid()?this._isUTC:false;
}
function isUtc(){
return this.isValid()?this._isUTC&&this._offset===0:false;
}
var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration(input,key){
var duration=input,
match=null,
sign,
ret,
diffRes;
if(isDuration(input)){
duration={
ms:input._milliseconds,
d:input._days,
M:input._months
};
}else if(isNumber(input)){
duration={};
if(key){
duration[key]=input;
}else{
duration.milliseconds=input;
}
}else if(!!(match=aspNetRegex.exec(input))){
sign=(match[1]==='-')?-1:1;
duration={
y:0,
d:toInt(match[DATE])*sign,
h:toInt(match[HOUR])*sign,
m:toInt(match[MINUTE])*sign,
s:toInt(match[SECOND])*sign,
ms:toInt(absRound(match[MILLISECOND]*1000))*sign
};
}else if(!!(match=isoRegex.exec(input))){
sign=(match[1]==='-')?-1:(match[1]==='+')?1:1;
duration={
y:parseIso(match[2],sign),
M:parseIso(match[3],sign),
w:parseIso(match[4],sign),
d:parseIso(match[5],sign),
h:parseIso(match[6],sign),
m:parseIso(match[7],sign),
s:parseIso(match[8],sign)
};
}else if(duration==null){
duration={};
}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){
diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));
duration={};
duration.ms=diffRes.milliseconds;
duration.M=diffRes.months;
}
ret=new Duration(duration);
if(isDuration(input)&&hasOwnProp(input,'_locale')){
ret._locale=input._locale;
}
return ret;
}
createDuration.fn=Duration.prototype;
createDuration.invalid=createInvalid$1;
function parseIso(inp,sign){
var res=inp&&parseFloat(inp.replace(',','.'));
return(isNaN(res)?0:res)*sign;
}
function positiveMomentsDifference(base,other){
var res={milliseconds:0,months:0};
res.months=other.month()-base.month()+
(other.year()-base.year())*12;
if(base.clone().add(res.months,'M').isAfter(other)){
--res.months;
}
res.milliseconds=+other-+(base.clone().add(res.months,'M'));
return res;
}
function momentsDifference(base,other){
var res;
if(!(base.isValid()&&other.isValid())){
return{milliseconds:0,months:0};
}
other=cloneWithOffset(other,base);
if(base.isBefore(other)){
res=positiveMomentsDifference(base,other);
}else{
res=positiveMomentsDifference(other,base);
res.milliseconds=-res.milliseconds;
res.months=-res.months;
}
return res;
}
function createAdder(direction,name){
return function(val,period){
var dur,tmp;
if(period!==null&&!isNaN(+period)){
deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+
'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
tmp=val;val=period;period=tmp;
}
val=typeof val==='string'?+val:val;
dur=createDuration(val,period);
addSubtract(this,dur,direction);
return this;
};
}
function addSubtract(mom,duration,isAdding,updateOffset){
var milliseconds=duration._milliseconds,
days=absRound(duration._days),
months=absRound(duration._months);
if(!mom.isValid()){
return;
}
updateOffset=updateOffset==null?true:updateOffset;
if(months){
setMonth(mom,get(mom,'Month')+months*isAdding);
}
if(days){
set$1(mom,'Date',get(mom,'Date')+days*isAdding);
}
if(milliseconds){
mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);
}
if(updateOffset){
hooks.updateOffset(mom,days||months);
}
}
var add=createAdder(1,'add');
var subtract=createAdder(-1,'subtract');
function getCalendarFormat(myMoment,now){
var diff=myMoment.diff(now,'days',true);
return diff<-6?'sameElse':
diff<-1?'lastWeek':
diff<0?'lastDay':
diff<1?'sameDay':
diff<2?'nextDay':
diff<7?'nextWeek':'sameElse';
}
function calendar$1(time,formats){
var now=time||createLocal(),
sod=cloneWithOffset(now,this).startOf('day'),
format=hooks.calendarFormat(this,sod)||'sameElse';
var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);
return this.format(output||this.localeData().calendar(format,this,createLocal(now)));
}
function clone(){
return new Moment(this);
}
function isAfter(input,units){
var localInput=isMoment(input)?input:createLocal(input);
if(!(this.isValid()&&localInput.isValid())){
return false;
}
units=normalizeUnits(!isUndefined(units)?units:'millisecond');
if(units==='millisecond'){
return this.valueOf()>localInput.valueOf();
}else{
return localInput.valueOf()<this.clone().startOf(units).valueOf();
}
}
function isBefore(input,units){
var localInput=isMoment(input)?input:createLocal(input);
if(!(this.isValid()&&localInput.isValid())){
return false;
}
units=normalizeUnits(!isUndefined(units)?units:'millisecond');
if(units==='millisecond'){
return this.valueOf()<localInput.valueOf();
}else{
return this.clone().endOf(units).valueOf()<localInput.valueOf();
}
}
function isBetween(from,to,units,inclusivity){
inclusivity=inclusivity||'()';
return(inclusivity[0]==='('?this.isAfter(from,units):!this.isBefore(from,units))&&
(inclusivity[1]===')'?this.isBefore(to,units):!this.isAfter(to,units));
}
function isSame(input,units){
var localInput=isMoment(input)?input:createLocal(input),
inputMs;
if(!(this.isValid()&&localInput.isValid())){
return false;
}
units=normalizeUnits(units||'millisecond');
if(units==='millisecond'){
return this.valueOf()===localInput.valueOf();
}else{
inputMs=localInput.valueOf();
return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();
}
}
function isSameOrAfter(input,units){
return this.isSame(input,units)||this.isAfter(input,units);
}
function isSameOrBefore(input,units){
return this.isSame(input,units)||this.isBefore(input,units);
}
function diff(input,units,asFloat){
var that,
zoneDelta,
delta,output;
if(!this.isValid()){
return NaN;
}
that=cloneWithOffset(input,this);
if(!that.isValid()){
return NaN;
}
zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;
units=normalizeUnits(units);
switch(units){
case'year':output=monthDiff(this,that)/12;break;
case'month':output=monthDiff(this,that);break;
case'quarter':output=monthDiff(this,that)/3;break;
case'second':output=(this-that)/1e3;break;
case'minute':output=(this-that)/6e4;break;
case'hour':output=(this-that)/36e5;break;
case'day':output=(this-that-zoneDelta)/864e5;break;
case'week':output=(this-that-zoneDelta)/6048e5;break;
default:output=this-that;
}
return asFloat?output:absFloor(output);
}
function monthDiff(a,b){
var wholeMonthDiff=((b.year()-a.year())*12)+(b.month()-a.month()),
anchor=a.clone().add(wholeMonthDiff,'months'),
anchor2,adjust;
if(b-anchor<0){
anchor2=a.clone().add(wholeMonthDiff-1,'months');
adjust=(b-anchor)/(anchor-anchor2);
}else{
anchor2=a.clone().add(wholeMonthDiff+1,'months');
adjust=(b-anchor)/(anchor2-anchor);
}
return-(wholeMonthDiff+adjust)||0;
}
hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';
hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';
function toString(){
return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
}
function toISOString(keepOffset){
if(!this.isValid()){
return null;
}
var utc=keepOffset!==true;
var m=utc?this.clone().utc():this;
if(m.year()<0||m.year()>9999){
return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
}
if(isFunction(Date.prototype.toISOString)){
if(utc){
return this.toDate().toISOString();
}else{
return new Date(this._d.valueOf()).toISOString().replace('Z',formatMoment(m,'Z'));
}
}
return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
}
function inspect(){
if(!this.isValid()){
return'moment.invalid(/* '+this._i+' */)';
}
var func='moment';
var zone='';
if(!this.isLocal()){
func=this.utcOffset()===0?'moment.utc':'moment.parseZone';
zone='Z';
}
var prefix='['+func+'("]';
var year=(0<=this.year()&&this.year()<=9999)?'YYYY':'YYYYYY';
var datetime='-MM-DD[T]HH:mm:ss.SSS';
var suffix=zone+'[")]';
return this.format(prefix+year+datetime+suffix);
}
function format(inputString){
if(!inputString){
inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;
}
var output=formatMoment(this,inputString);
return this.localeData().postformat(output);
}
function from(time,withoutSuffix){
if(this.isValid()&&
((isMoment(time)&&time.isValid())||
createLocal(time).isValid())){
return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);
}else{
return this.localeData().invalidDate();
}
}
function fromNow(withoutSuffix){
return this.from(createLocal(),withoutSuffix);
}
function to(time,withoutSuffix){
if(this.isValid()&&
((isMoment(time)&&time.isValid())||
createLocal(time).isValid())){
return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);
}else{
return this.localeData().invalidDate();
}
}
function toNow(withoutSuffix){
return this.to(createLocal(),withoutSuffix);
}
function locale(key){
var newLocaleData;
if(key===undefined){
return this._locale._abbr;
}else{
newLocaleData=getLocale(key);
if(newLocaleData!=null){
this._locale=newLocaleData;
}
return this;
}
}
var lang=deprecate(
'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
function(key){
if(key===undefined){
return this.localeData();
}else{
return this.locale(key);
}
}
);
function localeData(){
return this._locale;
}
function startOf(units){
units=normalizeUnits(units);
switch(units){
case'year':
this.month(0);
case'quarter':
case'month':
this.date(1);
case'week':
case'isoWeek':
case'day':
case'date':
this.hours(0);
case'hour':
this.minutes(0);
case'minute':
this.seconds(0);
case'second':
this.milliseconds(0);
}
if(units==='week'){
this.weekday(0);
}
if(units==='isoWeek'){
this.isoWeekday(1);
}
if(units==='quarter'){
this.month(Math.floor(this.month()/3)*3);
}
return this;
}
function endOf(units){
units=normalizeUnits(units);
if(units===undefined||units==='millisecond'){
return this;
}
if(units==='date'){
units='day';
}
return this.startOf(units).add(1,(units==='isoWeek'?'week':units)).subtract(1,'ms');
}
function valueOf(){
return this._d.valueOf()-((this._offset||0)*60000);
}
function unix(){
return Math.floor(this.valueOf()/1000);
}
function toDate(){
return new Date(this.valueOf());
}
function toArray(){
var m=this;
return[m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];
}
function toObject(){
var m=this;
return{
years:m.year(),
months:m.month(),
date:m.date(),
hours:m.hours(),
minutes:m.minutes(),
seconds:m.seconds(),
milliseconds:m.milliseconds()
};
}
function toJSON(){
return this.isValid()?this.toISOString():null;
}
function isValid$2(){
return isValid(this);
}
function parsingFlags(){
return extend({},getParsingFlags(this));
}
function invalidAt(){
return getParsingFlags(this).overflow;
}
function creationData(){
return{
input:this._i,
format:this._f,
locale:this._locale,
isUTC:this._isUTC,
strict:this._strict
};
}
addFormatToken(0,['gg',2],0,function(){
return this.weekYear()%100;
});
addFormatToken(0,['GG',2],0,function(){
return this.isoWeekYear()%100;
});
function addWeekYearFormatToken(token,getter){
addFormatToken(0,[token,token.length],0,getter);
}
addWeekYearFormatToken('gggg','weekYear');
addWeekYearFormatToken('ggggg','weekYear');
addWeekYearFormatToken('GGGG','isoWeekYear');
addWeekYearFormatToken('GGGGG','isoWeekYear');
addUnitAlias('weekYear','gg');
addUnitAlias('isoWeekYear','GG');
addUnitPriority('weekYear',1);
addUnitPriority('isoWeekYear',1);
addRegexToken('G',matchSigned);
addRegexToken('g',matchSigned);
addRegexToken('GG',match1to2,match2);
addRegexToken('gg',match1to2,match2);
addRegexToken('GGGG',match1to4,match4);
addRegexToken('gggg',match1to4,match4);
addRegexToken('GGGGG',match1to6,match6);
addRegexToken('ggggg',match1to6,match6);
addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){
week[token.substr(0,2)]=toInt(input);
});
addWeekParseToken(['gg','GG'],function(input,week,config,token){
week[token]=hooks.parseTwoDigitYear(input);
});
function getSetWeekYear(input){
return getSetWeekYearHelper.call(this,
input,
this.week(),
this.weekday(),
this.localeData()._week.dow,
this.localeData()._week.doy);
}
function getSetISOWeekYear(input){
return getSetWeekYearHelper.call(this,
input,this.isoWeek(),this.isoWeekday(),1,4);
}
function getISOWeeksInYear(){
return weeksInYear(this.year(),1,4);
}
function getWeeksInYear(){
var weekInfo=this.localeData()._week;
return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);
}
function getSetWeekYearHelper(input,week,weekday,dow,doy){
var weeksTarget;
if(input==null){
return weekOfYear(this,dow,doy).year;
}else{
weeksTarget=weeksInYear(input,dow,doy);
if(week>weeksTarget){
week=weeksTarget;
}
return setWeekAll.call(this,input,week,weekday,dow,doy);
}
}
function setWeekAll(weekYear,week,weekday,dow,doy){
var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),
date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);
this.year(date.getUTCFullYear());
this.month(date.getUTCMonth());
this.date(date.getUTCDate());
return this;
}
addFormatToken('Q',0,'Qo','quarter');
addUnitAlias('quarter','Q');
addUnitPriority('quarter',7);
addRegexToken('Q',match1);
addParseToken('Q',function(input,array){
array[MONTH]=(toInt(input)-1)*3;
});
function getSetQuarter(input){
return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);
}
addFormatToken('D',['DD',2],'Do','date');
addUnitAlias('date','D');
addUnitPriority('date',9);
addRegexToken('D',match1to2);
addRegexToken('DD',match1to2,match2);
addRegexToken('Do',function(isStrict,locale){
return isStrict?
(locale._dayOfMonthOrdinalParse||locale._ordinalParse):
locale._dayOfMonthOrdinalParseLenient;
});
addParseToken(['D','DD'],DATE);
addParseToken('Do',function(input,array){
array[DATE]=toInt(input.match(match1to2)[0]);
});
var getSetDayOfMonth=makeGetSet('Date',true);
addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');
addUnitAlias('dayOfYear','DDD');
addUnitPriority('dayOfYear',4);
addRegexToken('DDD',match1to3);
addRegexToken('DDDD',match3);
addParseToken(['DDD','DDDD'],function(input,array,config){
config._dayOfYear=toInt(input);
});
function getSetDayOfYear(input){
var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;
return input==null?dayOfYear:this.add((input-dayOfYear),'d');
}
addFormatToken('m',['mm',2],0,'minute');
addUnitAlias('minute','m');
addUnitPriority('minute',14);
addRegexToken('m',match1to2);
addRegexToken('mm',match1to2,match2);
addParseToken(['m','mm'],MINUTE);
var getSetMinute=makeGetSet('Minutes',false);
addFormatToken('s',['ss',2],0,'second');
addUnitAlias('second','s');
addUnitPriority('second',15);
addRegexToken('s',match1to2);
addRegexToken('ss',match1to2,match2);
addParseToken(['s','ss'],SECOND);
var getSetSecond=makeGetSet('Seconds',false);
addFormatToken('S',0,0,function(){
return~~(this.millisecond()/100);
});
addFormatToken(0,['SS',2],0,function(){
return~~(this.millisecond()/10);
});
addFormatToken(0,['SSS',3],0,'millisecond');
addFormatToken(0,['SSSS',4],0,function(){
return this.millisecond()*10;
});
addFormatToken(0,['SSSSS',5],0,function(){
return this.millisecond()*100;
});
addFormatToken(0,['SSSSSS',6],0,function(){
return this.millisecond()*1000;
});
addFormatToken(0,['SSSSSSS',7],0,function(){
return this.millisecond()*10000;
});
addFormatToken(0,['SSSSSSSS',8],0,function(){
return this.millisecond()*100000;
});
addFormatToken(0,['SSSSSSSSS',9],0,function(){
return this.millisecond()*1000000;
});
addUnitAlias('millisecond','ms');
addUnitPriority('millisecond',16);
addRegexToken('S',match1to3,match1);
addRegexToken('SS',match1to3,match2);
addRegexToken('SSS',match1to3,match3);
var token;
for(token='SSSS';token.length<=9;token+='S'){
addRegexToken(token,matchUnsigned);
}
function parseMs(input,array){
array[MILLISECOND]=toInt(('0.'+input)*1000);
}
for(token='S';token.length<=9;token+='S'){
addParseToken(token,parseMs);
}
var getSetMillisecond=makeGetSet('Milliseconds',false);
addFormatToken('z',0,0,'zoneAbbr');
addFormatToken('zz',0,0,'zoneName');
function getZoneAbbr(){
return this._isUTC?'UTC':'';
}
function getZoneName(){
return this._isUTC?'Coordinated Universal Time':'';
}
var proto=Moment.prototype;
proto.add=add;
proto.calendar=calendar$1;
proto.clone=clone;
proto.diff=diff;
proto.endOf=endOf;
proto.format=format;
proto.from=from;
proto.fromNow=fromNow;
proto.to=to;
proto.toNow=toNow;
proto.get=stringGet;
proto.invalidAt=invalidAt;
proto.isAfter=isAfter;
proto.isBefore=isBefore;
proto.isBetween=isBetween;
proto.isSame=isSame;
proto.isSameOrAfter=isSameOrAfter;
proto.isSameOrBefore=isSameOrBefore;
proto.isValid=isValid$2;
proto.lang=lang;
proto.locale=locale;
proto.localeData=localeData;
proto.max=prototypeMax;
proto.min=prototypeMin;
proto.parsingFlags=parsingFlags;
proto.set=stringSet;
proto.startOf=startOf;
proto.subtract=subtract;
proto.toArray=toArray;
proto.toObject=toObject;
proto.toDate=toDate;
proto.toISOString=toISOString;
proto.inspect=inspect;
proto.toJSON=toJSON;
proto.toString=toString;
proto.unix=unix;
proto.valueOf=valueOf;
proto.creationData=creationData;
proto.year=getSetYear;
proto.isLeapYear=getIsLeapYear;
proto.weekYear=getSetWeekYear;
proto.isoWeekYear=getSetISOWeekYear;
proto.quarter=proto.quarters=getSetQuarter;
proto.month=getSetMonth;
proto.daysInMonth=getDaysInMonth;
proto.week=proto.weeks=getSetWeek;
proto.isoWeek=proto.isoWeeks=getSetISOWeek;
proto.weeksInYear=getWeeksInYear;
proto.isoWeeksInYear=getISOWeeksInYear;
proto.date=getSetDayOfMonth;
proto.day=proto.days=getSetDayOfWeek;
proto.weekday=getSetLocaleDayOfWeek;
proto.isoWeekday=getSetISODayOfWeek;
proto.dayOfYear=getSetDayOfYear;
proto.hour=proto.hours=getSetHour;
proto.minute=proto.minutes=getSetMinute;
proto.second=proto.seconds=getSetSecond;
proto.millisecond=proto.milliseconds=getSetMillisecond;
proto.utcOffset=getSetOffset;
proto.utc=setOffsetToUTC;
proto.local=setOffsetToLocal;
proto.parseZone=setOffsetToParsedOffset;
proto.hasAlignedHourOffset=hasAlignedHourOffset;
proto.isDST=isDaylightSavingTime;
proto.isLocal=isLocal;
proto.isUtcOffset=isUtcOffset;
proto.isUtc=isUtc;
proto.isUTC=isUtc;
proto.zoneAbbr=getZoneAbbr;
proto.zoneName=getZoneName;
proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);
proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);
proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);
proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);
proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);
function createUnix(input){
return createLocal(input*1000);
}
function createInZone(){
return createLocal.apply(null,arguments).parseZone();
}
function preParsePostFormat(string){
return string;
}
var proto$1=Locale.prototype;
proto$1.calendar=calendar;
proto$1.longDateFormat=longDateFormat;
proto$1.invalidDate=invalidDate;
proto$1.ordinal=ordinal;
proto$1.preparse=preParsePostFormat;
proto$1.postformat=preParsePostFormat;
proto$1.relativeTime=relativeTime;
proto$1.pastFuture=pastFuture;
proto$1.set=set;
proto$1.months=localeMonths;
proto$1.monthsShort=localeMonthsShort;
proto$1.monthsParse=localeMonthsParse;
proto$1.monthsRegex=monthsRegex;
proto$1.monthsShortRegex=monthsShortRegex;
proto$1.week=localeWeek;
proto$1.firstDayOfYear=localeFirstDayOfYear;
proto$1.firstDayOfWeek=localeFirstDayOfWeek;
proto$1.weekdays=localeWeekdays;
proto$1.weekdaysMin=localeWeekdaysMin;
proto$1.weekdaysShort=localeWeekdaysShort;
proto$1.weekdaysParse=localeWeekdaysParse;
proto$1.weekdaysRegex=weekdaysRegex;
proto$1.weekdaysShortRegex=weekdaysShortRegex;
proto$1.weekdaysMinRegex=weekdaysMinRegex;
proto$1.isPM=localeIsPM;
proto$1.meridiem=localeMeridiem;
function get$1(format,index,field,setter){
var locale=getLocale();
var utc=createUTC().set(setter,index);
return locale[field](utc,format);
}
function listMonthsImpl(format,index,field){
if(isNumber(format)){
index=format;
format=undefined;
}
format=format||'';
if(index!=null){
return get$1(format,index,field,'month');
}
var i;
var out=[];
for(i=0;i<12;i++){
out[i]=get$1(format,i,field,'month');
}
return out;
}
function listWeekdaysImpl(localeSorted,format,index,field){
if(typeof localeSorted==='boolean'){
if(isNumber(format)){
index=format;
format=undefined;
}
format=format||'';
}else{
format=localeSorted;
index=format;
localeSorted=false;
if(isNumber(format)){
index=format;
format=undefined;
}
format=format||'';
}
var locale=getLocale(),
shift=localeSorted?locale._week.dow:0;
if(index!=null){
return get$1(format,(index+shift)%7,field,'day');
}
var i;
var out=[];
for(i=0;i<7;i++){
out[i]=get$1(format,(i+shift)%7,field,'day');
}
return out;
}
function listMonths(format,index){
return listMonthsImpl(format,index,'months');
}
function listMonthsShort(format,index){
return listMonthsImpl(format,index,'monthsShort');
}
function listWeekdays(localeSorted,format,index){
return listWeekdaysImpl(localeSorted,format,index,'weekdays');
}
function listWeekdaysShort(localeSorted,format,index){
return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');
}
function listWeekdaysMin(localeSorted,format,index){
return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');
}
getSetGlobalLocale('en',{
dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,
ordinal:function(number){
var b=number%10,
output=(toInt(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
}
});
hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);
hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);
var mathAbs=Math.abs;
function abs(){
var data=this._data;
this._milliseconds=mathAbs(this._milliseconds);
this._days=mathAbs(this._days);
this._months=mathAbs(this._months);
data.milliseconds=mathAbs(data.milliseconds);
data.seconds=mathAbs(data.seconds);
data.minutes=mathAbs(data.minutes);
data.hours=mathAbs(data.hours);
data.months=mathAbs(data.months);
data.years=mathAbs(data.years);
return this;
}
function addSubtract$1(duration,input,value,direction){
var other=createDuration(input,value);
duration._milliseconds+=direction*other._milliseconds;
duration._days+=direction*other._days;
duration._months+=direction*other._months;
return duration._bubble();
}
function add$1(input,value){
return addSubtract$1(this,input,value,1);
}
function subtract$1(input,value){
return addSubtract$1(this,input,value,-1);
}
function absCeil(number){
if(number<0){
return Math.floor(number);
}else{
return Math.ceil(number);
}
}
function bubble(){
var milliseconds=this._milliseconds;
var days=this._days;
var months=this._months;
var data=this._data;
var seconds,minutes,hours,years,monthsFromDays;
if(!((milliseconds>=0&&days>=0&&months>=0)||
(milliseconds<=0&&days<=0&&months<=0))){
milliseconds+=absCeil(monthsToDays(months)+days)*864e5;
days=0;
months=0;
}
data.milliseconds=milliseconds%1000;
seconds=absFloor(milliseconds/1000);
data.seconds=seconds%60;
minutes=absFloor(seconds/60);
data.minutes=minutes%60;
hours=absFloor(minutes/60);
data.hours=hours%24;
days+=absFloor(hours/24);
monthsFromDays=absFloor(daysToMonths(days));
months+=monthsFromDays;
days-=absCeil(monthsToDays(monthsFromDays));
years=absFloor(months/12);
months%=12;
data.days=days;
data.months=months;
data.years=years;
return this;
}
function daysToMonths(days){
return days*4800/146097;
}
function monthsToDays(months){
return months*146097/4800;
}
function as(units){
if(!this.isValid()){
return NaN;
}
var days;
var months;
var milliseconds=this._milliseconds;
units=normalizeUnits(units);
if(units==='month'||units==='year'){
days=this._days+milliseconds/864e5;
months=this._months+daysToMonths(days);
return units==='month'?months:months/12;
}else{
days=this._days+Math.round(monthsToDays(this._months));
switch(units){
case'week':return days/7+milliseconds/6048e5;
case'day':return days+milliseconds/864e5;
case'hour':return days*24+milliseconds/36e5;
case'minute':return days*1440+milliseconds/6e4;
case'second':return days*86400+milliseconds/1000;
case'millisecond':return Math.floor(days*864e5)+milliseconds;
default:throw new Error('Unknown unit '+units);
}
}
}
function valueOf$1(){
if(!this.isValid()){
return NaN;
}
return(
this._milliseconds+
this._days*864e5+
(this._months%12)*2592e6+
toInt(this._months/12)*31536e6
);
}
function makeAs(alias){
return function(){
return this.as(alias);
};
}
var asMilliseconds=makeAs('ms');
var asSeconds=makeAs('s');
var asMinutes=makeAs('m');
var asHours=makeAs('h');
var asDays=makeAs('d');
var asWeeks=makeAs('w');
var asMonths=makeAs('M');
var asYears=makeAs('y');
function clone$1(){
return createDuration(this);
}
function get$2(units){
units=normalizeUnits(units);
return this.isValid()?this[units+'s']():NaN;
}
function makeGetter(name){
return function(){
return this.isValid()?this._data[name]:NaN;
};
}
var milliseconds=makeGetter('milliseconds');
var seconds=makeGetter('seconds');
var minutes=makeGetter('minutes');
var hours=makeGetter('hours');
var days=makeGetter('days');
var months=makeGetter('months');
var years=makeGetter('years');
function weeks(){
return absFloor(this.days()/7);
}
var round=Math.round;
var thresholds={
ss:44,
s:45,
m:45,
h:22,
d:26,
M:11
};
function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){
return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);
}
function relativeTime$1(posNegDuration,withoutSuffix,locale){
var duration=createDuration(posNegDuration).abs();
var seconds=round(duration.as('s'));
var minutes=round(duration.as('m'));
var hours=round(duration.as('h'));
var days=round(duration.as('d'));
var months=round(duration.as('M'));
var years=round(duration.as('y'));
var a=seconds<=thresholds.ss&&['s',seconds]||
seconds<thresholds.s&&['ss',seconds]||
minutes<=1&&['m']||
minutes<thresholds.m&&['mm',minutes]||
hours<=1&&['h']||
hours<thresholds.h&&['hh',hours]||
days<=1&&['d']||
days<thresholds.d&&['dd',days]||
months<=1&&['M']||
months<thresholds.M&&['MM',months]||
years<=1&&['y']||['yy',years];
a[2]=withoutSuffix;
a[3]=+posNegDuration>0;
a[4]=locale;
return substituteTimeAgo.apply(null,a);
}
function getSetRelativeTimeRounding(roundingFunction){
if(roundingFunction===undefined){
return round;
}
if(typeof(roundingFunction)==='function'){
round=roundingFunction;
return true;
}
return false;
}
function getSetRelativeTimeThreshold(threshold,limit){
if(thresholds[threshold]===undefined){
return false;
}
if(limit===undefined){
return thresholds[threshold];
}
thresholds[threshold]=limit;
if(threshold==='s'){
thresholds.ss=limit-1;
}
return true;
}
function humanize(withSuffix){
if(!this.isValid()){
return this.localeData().invalidDate();
}
var locale=this.localeData();
var output=relativeTime$1(this,!withSuffix,locale);
if(withSuffix){
output=locale.pastFuture(+this,output);
}
return locale.postformat(output);
}
var abs$1=Math.abs;
function sign(x){
return((x>0)-(x<0))||+x;
}
function toISOString$1(){
if(!this.isValid()){
return this.localeData().invalidDate();
}
var seconds=abs$1(this._milliseconds)/1000;
var days=abs$1(this._days);
var months=abs$1(this._months);
var minutes,hours,years;
minutes=absFloor(seconds/60);
hours=absFloor(minutes/60);
seconds%=60;
minutes%=60;
years=absFloor(months/12);
months%=12;
var Y=years;
var M=months;
var D=days;
var h=hours;
var m=minutes;
var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';
var total=this.asSeconds();
if(!total){
return'P0D';
}
var totalSign=total<0?'-':'';
var ymSign=sign(this._months)!==sign(total)?'-':'';
var daysSign=sign(this._days)!==sign(total)?'-':'';
var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';
return totalSign+'P'+
(Y?ymSign+Y+'Y':'')+
(M?ymSign+M+'M':'')+
(D?daysSign+D+'D':'')+
((h||m||s)?'T':'')+
(h?hmsSign+h+'H':'')+
(m?hmsSign+m+'M':'')+
(s?hmsSign+s+'S':'');
}
var proto$2=Duration.prototype;
proto$2.isValid=isValid$1;
proto$2.abs=abs;
proto$2.add=add$1;
proto$2.subtract=subtract$1;
proto$2.as=as;
proto$2.asMilliseconds=asMilliseconds;
proto$2.asSeconds=asSeconds;
proto$2.asMinutes=asMinutes;
proto$2.asHours=asHours;
proto$2.asDays=asDays;
proto$2.asWeeks=asWeeks;
proto$2.asMonths=asMonths;
proto$2.asYears=asYears;
proto$2.valueOf=valueOf$1;
proto$2._bubble=bubble;
proto$2.clone=clone$1;
proto$2.get=get$2;
proto$2.milliseconds=milliseconds;
proto$2.seconds=seconds;
proto$2.minutes=minutes;
proto$2.hours=hours;
proto$2.days=days;
proto$2.weeks=weeks;
proto$2.months=months;
proto$2.years=years;
proto$2.humanize=humanize;
proto$2.toISOString=toISOString$1;
proto$2.toString=toISOString$1;
proto$2.toJSON=toISOString$1;
proto$2.locale=locale;
proto$2.localeData=localeData;
proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);
proto$2.lang=lang;
addFormatToken('X',0,0,'unix');
addFormatToken('x',0,0,'valueOf');
addRegexToken('x',matchSigned);
addRegexToken('X',matchTimestamp);
addParseToken('X',function(input,array,config){
config._d=new Date(parseFloat(input,10)*1000);
});
addParseToken('x',function(input,array,config){
config._d=new Date(toInt(input));
});
hooks.version='2.20.1';
setHookCallback(createLocal);
hooks.fn=proto;
hooks.min=min;
hooks.max=max;
hooks.now=now;
hooks.utc=createUTC;
hooks.unix=createUnix;
hooks.months=listMonths;
hooks.isDate=isDate;
hooks.locale=getSetGlobalLocale;
hooks.invalid=createInvalid;
hooks.duration=createDuration;
hooks.isMoment=isMoment;
hooks.weekdays=listWeekdays;
hooks.parseZone=createInZone;
hooks.localeData=getLocale;
hooks.isDuration=isDuration;
hooks.monthsShort=listMonthsShort;
hooks.weekdaysMin=listWeekdaysMin;
hooks.defineLocale=defineLocale;
hooks.updateLocale=updateLocale;
hooks.locales=listLocales;
hooks.weekdaysShort=listWeekdaysShort;
hooks.normalizeUnits=normalizeUnits;
hooks.relativeTimeRounding=getSetRelativeTimeRounding;
hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;
hooks.calendarFormat=getCalendarFormat;
hooks.prototype=proto;
hooks.HTML5_FMT={
DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',
DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',
DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',
DATE:'YYYY-MM-DD',
TIME:'HH:mm',
TIME_SECONDS:'HH:mm:ss',
TIME_MS:'HH:mm:ss.SSS',
WEEK:'YYYY-[W]WW',
MONTH:'YYYY-MM'
};
hooks.defineLocale('af',{
months:'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
monthsShort:'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
weekdays:'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
weekdaysShort:'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
weekdaysMin:'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
meridiemParse:/vm|nm/i,
isPM:function(input){
return/^nm$/i.test(input);
},
meridiem:function(hours,minutes,isLower){
if(hours<12){
return isLower?'vm':'VM';
}else{
return isLower?'nm':'NM';
}
},
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Vandag om] LT',
nextDay:'[Môre om] LT',
nextWeek:'dddd [om] LT',
lastDay:'[Gister om] LT',
lastWeek:'[Laas] dddd [om] LT',
sameElse:'L'
},
relativeTime:{
future:'oor %s',
past:'%s gelede',
s:'\'n paar sekondes',
ss:'%d sekondes',
m:'\'n minuut',
mm:'%d minute',
h:'\'n uur',
hh:'%d ure',
d:'\'n dag',
dd:'%d dae',
M:'\'n maand',
MM:'%d maande',
y:'\'n jaar',
yy:'%d jaar'
},
dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,
ordinal:function(number){
return number+((number===1||number===8||number>=20)?'ste':'de');
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('ar-dz',{
months:'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
monthsShort:'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
weekdays:'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[اليوم على الساعة] LT',
nextDay:'[غدا على الساعة] LT',
nextWeek:'dddd [على الساعة] LT',
lastDay:'[أمس على الساعة] LT',
lastWeek:'dddd [على الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'في %s',
past:'منذ %s',
s:'ثوان',
ss:'%d ثانية',
m:'دقيقة',
mm:'%d دقائق',
h:'ساعة',
hh:'%d ساعات',
d:'يوم',
dd:'%d أيام',
M:'شهر',
MM:'%d أشهر',
y:'سنة',
yy:'%d سنوات'
},
week:{
dow:0,
doy:4
}
});
hooks.defineLocale('ar-kw',{
months:'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
monthsShort:'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
weekdays:'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'ح_ن_ث_ر_خ_ج_س'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[اليوم على الساعة] LT',
nextDay:'[غدا على الساعة] LT',
nextWeek:'dddd [على الساعة] LT',
lastDay:'[أمس على الساعة] LT',
lastWeek:'dddd [على الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'في %s',
past:'منذ %s',
s:'ثوان',
ss:'%d ثانية',
m:'دقيقة',
mm:'%d دقائق',
h:'ساعة',
hh:'%d ساعات',
d:'يوم',
dd:'%d أيام',
M:'شهر',
MM:'%d أشهر',
y:'سنة',
yy:'%d سنوات'
},
week:{
dow:0,
doy:12
}
});
var symbolMap={
'1':'1',
'2':'2',
'3':'3',
'4':'4',
'5':'5',
'6':'6',
'7':'7',
'8':'8',
'9':'9',
'0':'0'
};
var pluralForm=function(n){
return n===0?0:n===1?1:n===2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5;
};
var plurals={
s:['أقل من ثانية','ثانية واحدة',['ثانيتان','ثانيتين'],'%d ثوان','%d ثانية','%d ثانية'],
m:['أقل من دقيقة','دقيقة واحدة',['دقيقتان','دقيقتين'],'%d دقائق','%d دقيقة','%d دقيقة'],
h:['أقل من ساعة','ساعة واحدة',['ساعتان','ساعتين'],'%d ساعات','%d ساعة','%d ساعة'],
d:['أقل من يوم','يوم واحد',['يومان','يومين'],'%d أيام','%d يومًا','%d يوم'],
M:['أقل من شهر','شهر واحد',['شهران','شهرين'],'%d أشهر','%d شهرا','%d شهر'],
y:['أقل من عام','عام واحد',['عامان','عامين'],'%d أعوام','%d عامًا','%d عام']
};
var pluralize=function(u){
return function(number,withoutSuffix,string,isFuture){
var f=pluralForm(number),
str=plurals[u][pluralForm(number)];
if(f===2){
str=str[withoutSuffix?0:1];
}
return str.replace(/%d/i,number);
};
};
var months$1=[
'يناير',
'فبراير',
'مارس',
'أبريل',
'مايو',
'يونيو',
'يوليو',
'أغسطس',
'سبتمبر',
'أكتوبر',
'نوفمبر',
'ديسمبر'
];
hooks.defineLocale('ar-ly',{
months:months$1,
monthsShort:months$1,
weekdays:'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'ح_ن_ث_ر_خ_ج_س'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'D/\u200FM/\u200FYYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
meridiemParse:/ص|م/,
isPM:function(input){
return'م'===input;
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'ص';
}else{
return'م';
}
},
calendar:{
sameDay:'[اليوم عند الساعة] LT',
nextDay:'[غدًا عند الساعة] LT',
nextWeek:'dddd [عند الساعة] LT',
lastDay:'[أمس عند الساعة] LT',
lastWeek:'dddd [عند الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'بعد %s',
past:'منذ %s',
s:pluralize('s'),
ss:pluralize('s'),
m:pluralize('m'),
mm:pluralize('m'),
h:pluralize('h'),
hh:pluralize('h'),
d:pluralize('d'),
dd:pluralize('d'),
M:pluralize('M'),
MM:pluralize('M'),
y:pluralize('y'),
yy:pluralize('y')
},
preparse:function(string){
return string.replace(/،/g,',');
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap[match];
}).replace(/,/g,'،');
},
week:{
dow:6,
doy:12
}
});
hooks.defineLocale('ar-ma',{
months:'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
monthsShort:'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
weekdays:'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'ح_ن_ث_ر_خ_ج_س'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[اليوم على الساعة] LT',
nextDay:'[غدا على الساعة] LT',
nextWeek:'dddd [على الساعة] LT',
lastDay:'[أمس على الساعة] LT',
lastWeek:'dddd [على الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'في %s',
past:'منذ %s',
s:'ثوان',
ss:'%d ثانية',
m:'دقيقة',
mm:'%d دقائق',
h:'ساعة',
hh:'%d ساعات',
d:'يوم',
dd:'%d أيام',
M:'شهر',
MM:'%d أشهر',
y:'سنة',
yy:'%d سنوات'
},
week:{
dow:6,
doy:12
}
});
var symbolMap$1={
'1':'١',
'2':'٢',
'3':'٣',
'4':'٤',
'5':'٥',
'6':'٦',
'7':'٧',
'8':'٨',
'9':'٩',
'0':'٠'
};
var numberMap={
'١':'1',
'٢':'2',
'٣':'3',
'٤':'4',
'٥':'5',
'٦':'6',
'٧':'7',
'٨':'8',
'٩':'9',
'٠':'0'
};
hooks.defineLocale('ar-sa',{
months:'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
monthsShort:'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
weekdays:'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'ح_ن_ث_ر_خ_ج_س'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
meridiemParse:/ص|م/,
isPM:function(input){
return'م'===input;
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'ص';
}else{
return'م';
}
},
calendar:{
sameDay:'[اليوم على الساعة] LT',
nextDay:'[غدا على الساعة] LT',
nextWeek:'dddd [على الساعة] LT',
lastDay:'[أمس على الساعة] LT',
lastWeek:'dddd [على الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'في %s',
past:'منذ %s',
s:'ثوان',
ss:'%d ثانية',
m:'دقيقة',
mm:'%d دقائق',
h:'ساعة',
hh:'%d ساعات',
d:'يوم',
dd:'%d أيام',
M:'شهر',
MM:'%d أشهر',
y:'سنة',
yy:'%d سنوات'
},
preparse:function(string){
return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(match){
return numberMap[match];
}).replace(/،/g,',');
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$1[match];
}).replace(/,/g,'،');
},
week:{
dow:0,
doy:6
}
});
hooks.defineLocale('ar-tn',{
months:'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
monthsShort:'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
weekdays:'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'ح_ن_ث_ر_خ_ج_س'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[اليوم على الساعة] LT',
nextDay:'[غدا على الساعة] LT',
nextWeek:'dddd [على الساعة] LT',
lastDay:'[أمس على الساعة] LT',
lastWeek:'dddd [على الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'في %s',
past:'منذ %s',
s:'ثوان',
ss:'%d ثانية',
m:'دقيقة',
mm:'%d دقائق',
h:'ساعة',
hh:'%d ساعات',
d:'يوم',
dd:'%d أيام',
M:'شهر',
MM:'%d أشهر',
y:'سنة',
yy:'%d سنوات'
},
week:{
dow:1,
doy:4
}
});
var symbolMap$2={
'1':'١',
'2':'٢',
'3':'٣',
'4':'٤',
'5':'٥',
'6':'٦',
'7':'٧',
'8':'٨',
'9':'٩',
'0':'٠'
};
var numberMap$1={
'١':'1',
'٢':'2',
'٣':'3',
'٤':'4',
'٥':'5',
'٦':'6',
'٧':'7',
'٨':'8',
'٩':'9',
'٠':'0'
};
var pluralForm$1=function(n){
return n===0?0:n===1?1:n===2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5;
};
var plurals$1={
s:['أقل من ثانية','ثانية واحدة',['ثانيتان','ثانيتين'],'%d ثوان','%d ثانية','%d ثانية'],
m:['أقل من دقيقة','دقيقة واحدة',['دقيقتان','دقيقتين'],'%d دقائق','%d دقيقة','%d دقيقة'],
h:['أقل من ساعة','ساعة واحدة',['ساعتان','ساعتين'],'%d ساعات','%d ساعة','%d ساعة'],
d:['أقل من يوم','يوم واحد',['يومان','يومين'],'%d أيام','%d يومًا','%d يوم'],
M:['أقل من شهر','شهر واحد',['شهران','شهرين'],'%d أشهر','%d شهرا','%d شهر'],
y:['أقل من عام','عام واحد',['عامان','عامين'],'%d أعوام','%d عامًا','%d عام']
};
var pluralize$1=function(u){
return function(number,withoutSuffix,string,isFuture){
var f=pluralForm$1(number),
str=plurals$1[u][pluralForm$1(number)];
if(f===2){
str=str[withoutSuffix?0:1];
}
return str.replace(/%d/i,number);
};
};
var months$2=[
'يناير',
'فبراير',
'مارس',
'أبريل',
'مايو',
'يونيو',
'يوليو',
'أغسطس',
'سبتمبر',
'أكتوبر',
'نوفمبر',
'ديسمبر'
];
hooks.defineLocale('ar',{
months:months$2,
monthsShort:months$2,
weekdays:'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
weekdaysShort:'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
weekdaysMin:'ح_ن_ث_ر_خ_ج_س'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'D/\u200FM/\u200FYYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
meridiemParse:/ص|م/,
isPM:function(input){
return'م'===input;
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'ص';
}else{
return'م';
}
},
calendar:{
sameDay:'[اليوم عند الساعة] LT',
nextDay:'[غدًا عند الساعة] LT',
nextWeek:'dddd [عند الساعة] LT',
lastDay:'[أمس عند الساعة] LT',
lastWeek:'dddd [عند الساعة] LT',
sameElse:'L'
},
relativeTime:{
future:'بعد %s',
past:'منذ %s',
s:pluralize$1('s'),
ss:pluralize$1('s'),
m:pluralize$1('m'),
mm:pluralize$1('m'),
h:pluralize$1('h'),
hh:pluralize$1('h'),
d:pluralize$1('d'),
dd:pluralize$1('d'),
M:pluralize$1('M'),
MM:pluralize$1('M'),
y:pluralize$1('y'),
yy:pluralize$1('y')
},
preparse:function(string){
return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(match){
return numberMap$1[match];
}).replace(/،/g,',');
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$2[match];
}).replace(/,/g,'،');
},
week:{
dow:6,
doy:12
}
});
var suffixes={
1:'-inci',
5:'-inci',
8:'-inci',
70:'-inci',
80:'-inci',
2:'-nci',
7:'-nci',
20:'-nci',
50:'-nci',
3:'-üncü',
4:'-üncü',
100:'-üncü',
6:'-ncı',
9:'-uncu',
10:'-uncu',
30:'-uncu',
60:'-ıncı',
90:'-ıncı'
};
hooks.defineLocale('az',{
months:'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
monthsShort:'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
weekdays:'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
weekdaysShort:'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
weekdaysMin:'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[bugün saat] LT',
nextDay:'[sabah saat] LT',
nextWeek:'[gələn həftə] dddd [saat] LT',
lastDay:'[dünən] LT',
lastWeek:'[keçən həftə] dddd [saat] LT',
sameElse:'L'
},
relativeTime:{
future:'%s sonra',
past:'%s əvvəl',
s:'birneçə saniyyə',
ss:'%d saniyə',
m:'bir dəqiqə',
mm:'%d dəqiqə',
h:'bir saat',
hh:'%d saat',
d:'bir gün',
dd:'%d gün',
M:'bir ay',
MM:'%d ay',
y:'bir il',
yy:'%d il'
},
meridiemParse:/gecə|səhər|gündüz|axşam/,
isPM:function(input){
return/^(gündüz|axşam)$/.test(input);
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'gecə';
}else if(hour<12){
return'səhər';
}else if(hour<17){
return'gündüz';
}else{
return'axşam';
}
},
dayOfMonthOrdinalParse:/\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
ordinal:function(number){
if(number===0){
return number+'-ıncı';
}
var a=number%10,
b=number%100-a,
c=number>=100?100:null;
return number+(suffixes[a]||suffixes[b]||suffixes[c]);
},
week:{
dow:1,
doy:7
}
});
function plural(word,num){
var forms=word.split('_');
return num%10===1&&num%100!==11?forms[0]:(num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2]);
}
function relativeTimeWithPlural(number,withoutSuffix,key){
var format={
'ss':withoutSuffix?'секунда_секунды_секунд':'секунду_секунды_секунд',
'mm':withoutSuffix?'хвіліна_хвіліны_хвілін':'хвіліну_хвіліны_хвілін',
'hh':withoutSuffix?'гадзіна_гадзіны_гадзін':'гадзіну_гадзіны_гадзін',
'dd':'дзень_дні_дзён',
'MM':'месяц_месяцы_месяцаў',
'yy':'год_гады_гадоў'
};
if(key==='m'){
return withoutSuffix?'хвіліна':'хвіліну';
}
else if(key==='h'){
return withoutSuffix?'гадзіна':'гадзіну';
}
else{
return number+' '+plural(format[key],+number);
}
}
hooks.defineLocale('be',{
months:{
format:'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
standalone:'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
},
monthsShort:'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
weekdays:{
format:'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
standalone:'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
isFormat:/\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
},
weekdaysShort:'нд_пн_ат_ср_чц_пт_сб'.split('_'),
weekdaysMin:'нд_пн_ат_ср_чц_пт_сб'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY г.',
LLL:'D MMMM YYYY г., HH:mm',
LLLL:'dddd, D MMMM YYYY г., HH:mm'
},
calendar:{
sameDay:'[Сёння ў] LT',
nextDay:'[Заўтра ў] LT',
lastDay:'[Учора ў] LT',
nextWeek:function(){
return'[У] dddd [ў] LT';
},
lastWeek:function(){
switch(this.day()){
case 0:
case 3:
case 5:
case 6:
return'[У мінулую] dddd [ў] LT';
case 1:
case 2:
case 4:
return'[У мінулы] dddd [ў] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'праз %s',
past:'%s таму',
s:'некалькі секунд',
m:relativeTimeWithPlural,
mm:relativeTimeWithPlural,
h:relativeTimeWithPlural,
hh:relativeTimeWithPlural,
d:'дзень',
dd:relativeTimeWithPlural,
M:'месяц',
MM:relativeTimeWithPlural,
y:'год',
yy:relativeTimeWithPlural
},
meridiemParse:/ночы|раніцы|дня|вечара/,
isPM:function(input){
return/^(дня|вечара)$/.test(input);
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'ночы';
}else if(hour<12){
return'раніцы';
}else if(hour<17){
return'дня';
}else{
return'вечара';
}
},
dayOfMonthOrdinalParse:/\d{1,2}-(і|ы|га)/,
ordinal:function(number,period){
switch(period){
case'M':
case'd':
case'DDD':
case'w':
case'W':
return(number%10===2||number%10===3)&&(number%100!==12&&number%100!==13)?number+'-і':number+'-ы';
case'D':
return number+'-га';
default:
return number;
}
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('bg',{
months:'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
monthsShort:'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
weekdays:'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
weekdaysShort:'нед_пон_вто_сря_чет_пет_съб'.split('_'),
weekdaysMin:'нд_пн_вт_ср_чт_пт_сб'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'D.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY H:mm',
LLLL:'dddd, D MMMM YYYY H:mm'
},
calendar:{
sameDay:'[Днес в] LT',
nextDay:'[Утре в] LT',
nextWeek:'dddd [в] LT',
lastDay:'[Вчера в] LT',
lastWeek:function(){
switch(this.day()){
case 0:
case 3:
case 6:
return'[В изминалата] dddd [в] LT';
case 1:
case 2:
case 4:
case 5:
return'[В изминалия] dddd [в] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'след %s',
past:'преди %s',
s:'няколко секунди',
ss:'%d секунди',
m:'минута',
mm:'%d минути',
h:'час',
hh:'%d часа',
d:'ден',
dd:'%d дни',
M:'месец',
MM:'%d месеца',
y:'година',
yy:'%d години'
},
dayOfMonthOrdinalParse:/\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
ordinal:function(number){
var lastDigit=number%10,
last2Digits=number%100;
if(number===0){
return number+'-ев';
}else if(last2Digits===0){
return number+'-ен';
}else if(last2Digits>10&&last2Digits<20){
return number+'-ти';
}else if(lastDigit===1){
return number+'-ви';
}else if(lastDigit===2){
return number+'-ри';
}else if(lastDigit===7||lastDigit===8){
return number+'-ми';
}else{
return number+'-ти';
}
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('bm',{
months:'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
monthsShort:'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
weekdays:'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
weekdaysShort:'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
weekdaysMin:'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'MMMM [tile] D [san] YYYY',
LLL:'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
LLLL:'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
},
calendar:{
sameDay:'[Bi lɛrɛ] LT',
nextDay:'[Sini lɛrɛ] LT',
nextWeek:'dddd [don lɛrɛ] LT',
lastDay:'[Kunu lɛrɛ] LT',
lastWeek:'dddd [tɛmɛnen lɛrɛ] LT',
sameElse:'L'
},
relativeTime:{
future:'%s kɔnɔ',
past:'a bɛ %s bɔ',
s:'sanga dama dama',
ss:'sekondi %d',
m:'miniti kelen',
mm:'miniti %d',
h:'lɛrɛ kelen',
hh:'lɛrɛ %d',
d:'tile kelen',
dd:'tile %d',
M:'kalo kelen',
MM:'kalo %d',
y:'san kelen',
yy:'san %d'
},
week:{
dow:1,
doy:4
}
});
var symbolMap$3={
'1':'১',
'2':'২',
'3':'৩',
'4':'৪',
'5':'৫',
'6':'৬',
'7':'৭',
'8':'৮',
'9':'৯',
'0':'০'
};
var numberMap$2={
'১':'1',
'২':'2',
'৩':'3',
'৪':'4',
'৫':'5',
'৬':'6',
'৭':'7',
'৮':'8',
'৯':'9',
'০':'0'
};
hooks.defineLocale('bn',{
months:'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
monthsShort:'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
weekdays:'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
weekdaysShort:'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
weekdaysMin:'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
longDateFormat:{
LT:'A h:mm সময়',
LTS:'A h:mm:ss সময়',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm সময়',
LLLL:'dddd, D MMMM YYYY, A h:mm সময়'
},
calendar:{
sameDay:'[আজ] LT',
nextDay:'[আগামীকাল] LT',
nextWeek:'dddd, LT',
lastDay:'[গতকাল] LT',
lastWeek:'[গত] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s পরে',
past:'%s আগে',
s:'কয়েক সেকেন্ড',
ss:'%d সেকেন্ড',
m:'এক মিনিট',
mm:'%d মিনিট',
h:'এক ঘন্টা',
hh:'%d ঘন্টা',
d:'এক দিন',
dd:'%d দিন',
M:'এক মাস',
MM:'%d মাস',
y:'এক বছর',
yy:'%d বছর'
},
preparse:function(string){
return string.replace(/[১২৩৪৫৬৭৮৯০]/g,function(match){
return numberMap$2[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$3[match];
});
},
meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if((meridiem==='রাত'&&hour>=4)||
(meridiem==='দুপুর'&&hour<5)||
meridiem==='বিকাল'){
return hour+12;
}else{
return hour;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'রাত';
}else if(hour<10){
return'সকাল';
}else if(hour<17){
return'দুপুর';
}else if(hour<20){
return'বিকাল';
}else{
return'রাত';
}
},
week:{
dow:0,
doy:6
}
});
var symbolMap$4={
'1':'༡',
'2':'༢',
'3':'༣',
'4':'༤',
'5':'༥',
'6':'༦',
'7':'༧',
'8':'༨',
'9':'༩',
'0':'༠'
};
var numberMap$3={
'༡':'1',
'༢':'2',
'༣':'3',
'༤':'4',
'༥':'5',
'༦':'6',
'༧':'7',
'༨':'8',
'༩':'9',
'༠':'0'
};
hooks.defineLocale('bo',{
months:'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
monthsShort:'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
weekdays:'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
weekdaysShort:'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
weekdaysMin:'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
longDateFormat:{
LT:'A h:mm',
LTS:'A h:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm',
LLLL:'dddd, D MMMM YYYY, A h:mm'
},
calendar:{
sameDay:'[དི་རིང] LT',
nextDay:'[སང་ཉིན] LT',
nextWeek:'[བདུན་ཕྲག་རྗེས་མ], LT',
lastDay:'[ཁ་སང] LT',
lastWeek:'[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s ལ་',
past:'%s སྔན་ལ',
s:'ལམ་སང',
ss:'%d སྐར་ཆ།',
m:'སྐར་མ་གཅིག',
mm:'%d སྐར་མ',
h:'ཆུ་ཚོད་གཅིག',
hh:'%d ཆུ་ཚོད',
d:'ཉིན་གཅིག',
dd:'%d ཉིན་',
M:'ཟླ་བ་གཅིག',
MM:'%d ཟླ་བ',
y:'ལོ་གཅིག',
yy:'%d ལོ'
},
preparse:function(string){
return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,function(match){
return numberMap$3[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$4[match];
});
},
meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if((meridiem==='མཚན་མོ'&&hour>=4)||
(meridiem==='ཉིན་གུང'&&hour<5)||
meridiem==='དགོང་དག'){
return hour+12;
}else{
return hour;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'མཚན་མོ';
}else if(hour<10){
return'ཞོགས་ཀས';
}else if(hour<17){
return'ཉིན་གུང';
}else if(hour<20){
return'དགོང་དག';
}else{
return'མཚན་མོ';
}
},
week:{
dow:0,
doy:6
}
});
function relativeTimeWithMutation(number,withoutSuffix,key){
var format={
'mm':'munutenn',
'MM':'miz',
'dd':'devezh'
};
return number+' '+mutation(format[key],number);
}
function specialMutationForYears(number){
switch(lastNumber(number)){
case 1:
case 3:
case 4:
case 5:
case 9:
return number+' bloaz';
default:
return number+' vloaz';
}
}
function lastNumber(number){
if(number>9){
return lastNumber(number%10);
}
return number;
}
function mutation(text,number){
if(number===2){
return softMutation(text);
}
return text;
}
function softMutation(text){
var mutationTable={
'm':'v',
'b':'v',
'd':'z'
};
if(mutationTable[text.charAt(0)]===undefined){
return text;
}
return mutationTable[text.charAt(0)]+text.substring(1);
}
hooks.defineLocale('br',{
months:'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
monthsShort:'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
weekdays:'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
weekdaysShort:'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
weekdaysMin:'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'h[e]mm A',
LTS:'h[e]mm:ss A',
L:'DD/MM/YYYY',
LL:'D [a viz] MMMM YYYY',
LLL:'D [a viz] MMMM YYYY h[e]mm A',
LLLL:'dddd, D [a viz] MMMM YYYY h[e]mm A'
},
calendar:{
sameDay:'[Hiziv da] LT',
nextDay:'[Warc\'hoazh da] LT',
nextWeek:'dddd [da] LT',
lastDay:'[Dec\'h da] LT',
lastWeek:'dddd [paset da] LT',
sameElse:'L'
},
relativeTime:{
future:'a-benn %s',
past:'%s \'zo',
s:'un nebeud segondennoù',
ss:'%d eilenn',
m:'ur vunutenn',
mm:relativeTimeWithMutation,
h:'un eur',
hh:'%d eur',
d:'un devezh',
dd:relativeTimeWithMutation,
M:'ur miz',
MM:relativeTimeWithMutation,
y:'ur bloaz',
yy:specialMutationForYears
},
dayOfMonthOrdinalParse:/\d{1,2}(añ|vet)/,
ordinal:function(number){
var output=(number===1)?'añ':'vet';
return number+output;
},
week:{
dow:1,
doy:4
}
});
function translate(number,withoutSuffix,key){
var result=number+' ';
switch(key){
case'ss':
if(number===1){
result+='sekunda';
}else if(number===2||number===3||number===4){
result+='sekunde';
}else{
result+='sekundi';
}
return result;
case'm':
return withoutSuffix?'jedna minuta':'jedne minute';
case'mm':
if(number===1){
result+='minuta';
}else if(number===2||number===3||number===4){
result+='minute';
}else{
result+='minuta';
}
return result;
case'h':
return withoutSuffix?'jedan sat':'jednog sata';
case'hh':
if(number===1){
result+='sat';
}else if(number===2||number===3||number===4){
result+='sata';
}else{
result+='sati';
}
return result;
case'dd':
if(number===1){
result+='dan';
}else{
result+='dana';
}
return result;
case'MM':
if(number===1){
result+='mjesec';
}else if(number===2||number===3||number===4){
result+='mjeseca';
}else{
result+='mjeseci';
}
return result;
case'yy':
if(number===1){
result+='godina';
}else if(number===2||number===3||number===4){
result+='godine';
}else{
result+='godina';
}
return result;
}
}
hooks.defineLocale('bs',{
months:'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
monthsShort:'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
monthsParseExact:true,
weekdays:'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
weekdaysShort:'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
weekdaysMin:'ne_po_ut_sr_če_pe_su'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[danas u] LT',
nextDay:'[sutra u] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[u] [nedjelju] [u] LT';
case 3:
return'[u] [srijedu] [u] LT';
case 6:
return'[u] [subotu] [u] LT';
case 1:
case 2:
case 4:
case 5:
return'[u] dddd [u] LT';
}
},
lastDay:'[jučer u] LT',
lastWeek:function(){
switch(this.day()){
case 0:
case 3:
return'[prošlu] dddd [u] LT';
case 6:
return'[prošle] [subote] [u] LT';
case 1:
case 2:
case 4:
case 5:
return'[prošli] dddd [u] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'prije %s',
s:'par sekundi',
ss:translate,
m:translate,
mm:translate,
h:translate,
hh:translate,
d:'dan',
dd:translate,
M:'mjesec',
MM:translate,
y:'godinu',
yy:translate
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('ca',{
months:{
standalone:'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
format:'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
isFormat:/D[oD]?(\s)+MMMM/
},
monthsShort:'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
monthsParseExact:true,
weekdays:'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
weekdaysShort:'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
weekdaysMin:'dg_dl_dt_dc_dj_dv_ds'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM [de] YYYY',
ll:'D MMM YYYY',
LLL:'D MMMM [de] YYYY [a les] H:mm',
lll:'D MMM YYYY, H:mm',
LLLL:'dddd D MMMM [de] YYYY [a les] H:mm',
llll:'ddd D MMM YYYY, H:mm'
},
calendar:{
sameDay:function(){
return'[avui a '+((this.hours()!==1)?'les':'la')+'] LT';
},
nextDay:function(){
return'[demà a '+((this.hours()!==1)?'les':'la')+'] LT';
},
nextWeek:function(){
return'dddd [a '+((this.hours()!==1)?'les':'la')+'] LT';
},
lastDay:function(){
return'[ahir a '+((this.hours()!==1)?'les':'la')+'] LT';
},
lastWeek:function(){
return'[el] dddd [passat a '+((this.hours()!==1)?'les':'la')+'] LT';
},
sameElse:'L'
},
relativeTime:{
future:'d\'aquí %s',
past:'fa %s',
s:'uns segons',
ss:'%d segons',
m:'un minut',
mm:'%d minuts',
h:'una hora',
hh:'%d hores',
d:'un dia',
dd:'%d dies',
M:'un mes',
MM:'%d mesos',
y:'un any',
yy:'%d anys'
},
dayOfMonthOrdinalParse:/\d{1,2}(r|n|t|è|a)/,
ordinal:function(number,period){
var output=(number===1)?'r':
(number===2)?'n':
(number===3)?'r':
(number===4)?'t':'è';
if(period==='w'||period==='W'){
output='a';
}
return number+output;
},
week:{
dow:1,
doy:4
}
});
var months$3='leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
var monthsShort='led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
function plural$1(n){
return(n>1)&&(n<5)&&(~~(n/10)!==1);
}
function translate$1(number,withoutSuffix,key,isFuture){
var result=number+' ';
switch(key){
case's':
return(withoutSuffix||isFuture)?'pár sekund':'pár sekundami';
case'ss':
if(withoutSuffix||isFuture){
return result+(plural$1(number)?'sekundy':'sekund');
}else{
return result+'sekundami';
}
break;
case'm':
return withoutSuffix?'minuta':(isFuture?'minutu':'minutou');
case'mm':
if(withoutSuffix||isFuture){
return result+(plural$1(number)?'minuty':'minut');
}else{
return result+'minutami';
}
break;
case'h':
return withoutSuffix?'hodina':(isFuture?'hodinu':'hodinou');
case'hh':
if(withoutSuffix||isFuture){
return result+(plural$1(number)?'hodiny':'hodin');
}else{
return result+'hodinami';
}
break;
case'd':
return(withoutSuffix||isFuture)?'den':'dnem';
case'dd':
if(withoutSuffix||isFuture){
return result+(plural$1(number)?'dny':'dní');
}else{
return result+'dny';
}
break;
case'M':
return(withoutSuffix||isFuture)?'měsíc':'měsícem';
case'MM':
if(withoutSuffix||isFuture){
return result+(plural$1(number)?'měsíce':'měsíců');
}else{
return result+'měsíci';
}
break;
case'y':
return(withoutSuffix||isFuture)?'rok':'rokem';
case'yy':
if(withoutSuffix||isFuture){
return result+(plural$1(number)?'roky':'let');
}else{
return result+'lety';
}
break;
}
}
hooks.defineLocale('cs',{
months:months$3,
monthsShort:monthsShort,
monthsParse:(function(months,monthsShort){
var i,_monthsParse=[];
for(i=0;i<12;i++){
_monthsParse[i]=new RegExp('^'+months[i]+'$|^'+monthsShort[i]+'$','i');
}
return _monthsParse;
}(months$3,monthsShort)),
shortMonthsParse:(function(monthsShort){
var i,_shortMonthsParse=[];
for(i=0;i<12;i++){
_shortMonthsParse[i]=new RegExp('^'+monthsShort[i]+'$','i');
}
return _shortMonthsParse;
}(monthsShort)),
longMonthsParse:(function(months){
var i,_longMonthsParse=[];
for(i=0;i<12;i++){
_longMonthsParse[i]=new RegExp('^'+months[i]+'$','i');
}
return _longMonthsParse;
}(months$3)),
weekdays:'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
weekdaysShort:'ne_po_út_st_čt_pá_so'.split('_'),
weekdaysMin:'ne_po_út_st_čt_pá_so'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd D. MMMM YYYY H:mm',
l:'D. M. YYYY'
},
calendar:{
sameDay:'[dnes v] LT',
nextDay:'[zítra v] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[v neděli v] LT';
case 1:
case 2:
return'[v] dddd [v] LT';
case 3:
return'[ve středu v] LT';
case 4:
return'[ve čtvrtek v] LT';
case 5:
return'[v pátek v] LT';
case 6:
return'[v sobotu v] LT';
}
},
lastDay:'[včera v] LT',
lastWeek:function(){
switch(this.day()){
case 0:
return'[minulou neděli v] LT';
case 1:
case 2:
return'[minulé] dddd [v] LT';
case 3:
return'[minulou středu v] LT';
case 4:
case 5:
return'[minulý] dddd [v] LT';
case 6:
return'[minulou sobotu v] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'před %s',
s:translate$1,
ss:translate$1,
m:translate$1,
mm:translate$1,
h:translate$1,
hh:translate$1,
d:translate$1,
dd:translate$1,
M:translate$1,
MM:translate$1,
y:translate$1,
yy:translate$1
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('cv',{
months:'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
monthsShort:'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
weekdays:'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
weekdaysShort:'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
weekdaysMin:'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD-MM-YYYY',
LL:'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
LLL:'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
LLLL:'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
},
calendar:{
sameDay:'[Паян] LT [сехетре]',
nextDay:'[Ыран] LT [сехетре]',
lastDay:'[Ӗнер] LT [сехетре]',
nextWeek:'[Ҫитес] dddd LT [сехетре]',
lastWeek:'[Иртнӗ] dddd LT [сехетре]',
sameElse:'L'
},
relativeTime:{
future:function(output){
var affix=/сехет$/i.exec(output)?'рен':/ҫул$/i.exec(output)?'тан':'ран';
return output+affix;
},
past:'%s каялла',
s:'пӗр-ик ҫеккунт',
ss:'%d ҫеккунт',
m:'пӗр минут',
mm:'%d минут',
h:'пӗр сехет',
hh:'%d сехет',
d:'пӗр кун',
dd:'%d кун',
M:'пӗр уйӑх',
MM:'%d уйӑх',
y:'пӗр ҫул',
yy:'%d ҫул'
},
dayOfMonthOrdinalParse:/\d{1,2}-мӗш/,
ordinal:'%d-мӗш',
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('cy',{
months:'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
monthsShort:'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
weekdays:'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
weekdaysShort:'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
weekdaysMin:'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Heddiw am] LT',
nextDay:'[Yfory am] LT',
nextWeek:'dddd [am] LT',
lastDay:'[Ddoe am] LT',
lastWeek:'dddd [diwethaf am] LT',
sameElse:'L'
},
relativeTime:{
future:'mewn %s',
past:'%s yn ôl',
s:'ychydig eiliadau',
ss:'%d eiliad',
m:'munud',
mm:'%d munud',
h:'awr',
hh:'%d awr',
d:'diwrnod',
dd:'%d diwrnod',
M:'mis',
MM:'%d mis',
y:'blwyddyn',
yy:'%d flynedd'
},
dayOfMonthOrdinalParse:/\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
ordinal:function(number){
var b=number,
output='',
lookup=[
'','af','il','ydd','ydd','ed','ed','ed','fed','fed','fed',
'eg','fed','eg','eg','fed','eg','eg','fed','eg','fed'
];
if(b>20){
if(b===40||b===50||b===60||b===80||b===100){
output='fed';
}else{
output='ain';
}
}else if(b>0){
output=lookup[b];
}
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('da',{
months:'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
monthsShort:'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
weekdays:'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
weekdaysShort:'søn_man_tir_ons_tor_fre_lør'.split('_'),
weekdaysMin:'sø_ma_ti_on_to_fr_lø'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY HH:mm',
LLLL:'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
},
calendar:{
sameDay:'[i dag kl.] LT',
nextDay:'[i morgen kl.] LT',
nextWeek:'på dddd [kl.] LT',
lastDay:'[i går kl.] LT',
lastWeek:'[i] dddd[s kl.] LT',
sameElse:'L'
},
relativeTime:{
future:'om %s',
past:'%s siden',
s:'få sekunder',
ss:'%d sekunder',
m:'et minut',
mm:'%d minutter',
h:'en time',
hh:'%d timer',
d:'en dag',
dd:'%d dage',
M:'en måned',
MM:'%d måneder',
y:'et år',
yy:'%d år'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
function processRelativeTime(number,withoutSuffix,key,isFuture){
var format={
'm':['eine Minute','einer Minute'],
'h':['eine Stunde','einer Stunde'],
'd':['ein Tag','einem Tag'],
'dd':[number+' Tage',number+' Tagen'],
'M':['ein Monat','einem Monat'],
'MM':[number+' Monate',number+' Monaten'],
'y':['ein Jahr','einem Jahr'],
'yy':[number+' Jahre',number+' Jahren']
};
return withoutSuffix?format[key][0]:format[key][1];
}
hooks.defineLocale('de-at',{
months:'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
monthsShort:'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
monthsParseExact:true,
weekdays:'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
weekdaysShort:'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
weekdaysMin:'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY HH:mm',
LLLL:'dddd, D. MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[heute um] LT [Uhr]',
sameElse:'L',
nextDay:'[morgen um] LT [Uhr]',
nextWeek:'dddd [um] LT [Uhr]',
lastDay:'[gestern um] LT [Uhr]',
lastWeek:'[letzten] dddd [um] LT [Uhr]'
},
relativeTime:{
future:'in %s',
past:'vor %s',
s:'ein paar Sekunden',
ss:'%d Sekunden',
m:processRelativeTime,
mm:'%d Minuten',
h:processRelativeTime,
hh:'%d Stunden',
d:processRelativeTime,
dd:processRelativeTime,
M:processRelativeTime,
MM:processRelativeTime,
y:processRelativeTime,
yy:processRelativeTime
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
function processRelativeTime$1(number,withoutSuffix,key,isFuture){
var format={
'm':['eine Minute','einer Minute'],
'h':['eine Stunde','einer Stunde'],
'd':['ein Tag','einem Tag'],
'dd':[number+' Tage',number+' Tagen'],
'M':['ein Monat','einem Monat'],
'MM':[number+' Monate',number+' Monaten'],
'y':['ein Jahr','einem Jahr'],
'yy':[number+' Jahre',number+' Jahren']
};
return withoutSuffix?format[key][0]:format[key][1];
}
hooks.defineLocale('de-ch',{
months:'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
monthsShort:'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
monthsParseExact:true,
weekdays:'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
weekdaysShort:'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
weekdaysMin:'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY HH:mm',
LLLL:'dddd, D. MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[heute um] LT [Uhr]',
sameElse:'L',
nextDay:'[morgen um] LT [Uhr]',
nextWeek:'dddd [um] LT [Uhr]',
lastDay:'[gestern um] LT [Uhr]',
lastWeek:'[letzten] dddd [um] LT [Uhr]'
},
relativeTime:{
future:'in %s',
past:'vor %s',
s:'ein paar Sekunden',
ss:'%d Sekunden',
m:processRelativeTime$1,
mm:'%d Minuten',
h:processRelativeTime$1,
hh:'%d Stunden',
d:processRelativeTime$1,
dd:processRelativeTime$1,
M:processRelativeTime$1,
MM:processRelativeTime$1,
y:processRelativeTime$1,
yy:processRelativeTime$1
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
function processRelativeTime$2(number,withoutSuffix,key,isFuture){
var format={
'm':['eine Minute','einer Minute'],
'h':['eine Stunde','einer Stunde'],
'd':['ein Tag','einem Tag'],
'dd':[number+' Tage',number+' Tagen'],
'M':['ein Monat','einem Monat'],
'MM':[number+' Monate',number+' Monaten'],
'y':['ein Jahr','einem Jahr'],
'yy':[number+' Jahre',number+' Jahren']
};
return withoutSuffix?format[key][0]:format[key][1];
}
hooks.defineLocale('de',{
months:'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
monthsShort:'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
monthsParseExact:true,
weekdays:'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
weekdaysShort:'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
weekdaysMin:'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY HH:mm',
LLLL:'dddd, D. MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[heute um] LT [Uhr]',
sameElse:'L',
nextDay:'[morgen um] LT [Uhr]',
nextWeek:'dddd [um] LT [Uhr]',
lastDay:'[gestern um] LT [Uhr]',
lastWeek:'[letzten] dddd [um] LT [Uhr]'
},
relativeTime:{
future:'in %s',
past:'vor %s',
s:'ein paar Sekunden',
ss:'%d Sekunden',
m:processRelativeTime$2,
mm:'%d Minuten',
h:processRelativeTime$2,
hh:'%d Stunden',
d:processRelativeTime$2,
dd:processRelativeTime$2,
M:processRelativeTime$2,
MM:processRelativeTime$2,
y:processRelativeTime$2,
yy:processRelativeTime$2
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
var months$4=[
'ޖެނުއަރީ',
'ފެބްރުއަރީ',
'މާރިޗު',
'އޭޕްރީލު',
'މޭ',
'ޖޫން',
'ޖުލައި',
'އޯގަސްޓު',
'ސެޕްޓެމްބަރު',
'އޮކްޓޯބަރު',
'ނޮވެމްބަރު',
'ޑިސެމްބަރު'
];
var weekdays=[
'އާދިއްތަ',
'ހޯމަ',
'އަންގާރަ',
'ބުދަ',
'ބުރާސްފަތި',
'ހުކުރު',
'ހޮނިހިރު'
];
hooks.defineLocale('dv',{
months:months$4,
monthsShort:months$4,
weekdays:weekdays,
weekdaysShort:weekdays,
weekdaysMin:'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'D/M/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
meridiemParse:/މކ|މފ/,
isPM:function(input){
return'މފ'===input;
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'މކ';
}else{
return'މފ';
}
},
calendar:{
sameDay:'[މިއަދު] LT',
nextDay:'[މާދަމާ] LT',
nextWeek:'dddd LT',
lastDay:'[އިއްޔެ] LT',
lastWeek:'[ފާއިތުވި] dddd LT',
sameElse:'L'
},
relativeTime:{
future:'ތެރޭގައި %s',
past:'ކުރިން %s',
s:'ސިކުންތުކޮޅެއް',
ss:'d% ސިކުންތު',
m:'މިނިޓެއް',
mm:'މިނިޓު %d',
h:'ގަޑިއިރެއް',
hh:'ގަޑިއިރު %d',
d:'ދުވަހެއް',
dd:'ދުވަސް %d',
M:'މަހެއް',
MM:'މަސް %d',
y:'އަހަރެއް',
yy:'އަހަރު %d'
},
preparse:function(string){
return string.replace(/،/g,',');
},
postformat:function(string){
return string.replace(/,/g,'،');
},
week:{
dow:7,
doy:12
}
});
hooks.defineLocale('el',{
monthsNominativeEl:'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
monthsGenitiveEl:'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
months:function(momentToFormat,format){
if(!momentToFormat){
return this._monthsNominativeEl;
}else if(typeof format==='string'&&/D/.test(format.substring(0,format.indexOf('MMMM')))){
return this._monthsGenitiveEl[momentToFormat.month()];
}else{
return this._monthsNominativeEl[momentToFormat.month()];
}
},
monthsShort:'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
weekdays:'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
weekdaysShort:'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
weekdaysMin:'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
meridiem:function(hours,minutes,isLower){
if(hours>11){
return isLower?'μμ':'ΜΜ';
}else{
return isLower?'πμ':'ΠΜ';
}
},
isPM:function(input){
return((input+'').toLowerCase()[0]==='μ');
},
meridiemParse:/[ΠΜ]\.?Μ?\.?/i,
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY h:mm A',
LLLL:'dddd, D MMMM YYYY h:mm A'
},
calendarEl:{
sameDay:'[Σήμερα {}] LT',
nextDay:'[Αύριο {}] LT',
nextWeek:'dddd [{}] LT',
lastDay:'[Χθες {}] LT',
lastWeek:function(){
switch(this.day()){
case 6:
return'[το προηγούμενο] dddd [{}] LT';
default:
return'[την προηγούμενη] dddd [{}] LT';
}
},
sameElse:'L'
},
calendar:function(key,mom){
var output=this._calendarEl[key],
hours=mom&&mom.hours();
if(isFunction(output)){
output=output.apply(mom);
}
return output.replace('{}',(hours%12===1?'στη':'στις'));
},
relativeTime:{
future:'σε %s',
past:'%s πριν',
s:'λίγα δευτερόλεπτα',
ss:'%d δευτερόλεπτα',
m:'ένα λεπτό',
mm:'%d λεπτά',
h:'μία ώρα',
hh:'%d ώρες',
d:'μία μέρα',
dd:'%d μέρες',
M:'ένας μήνας',
MM:'%d μήνες',
y:'ένας χρόνος',
yy:'%d χρόνια'
},
dayOfMonthOrdinalParse:/\d{1,2}η/,
ordinal:'%dη',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('en-au',{
months:'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
weekdays:'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
weekdaysShort:'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
weekdaysMin:'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY h:mm A',
LLLL:'dddd, D MMMM YYYY h:mm A'
},
calendar:{
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'
},
relativeTime:{
future:'in %s',
past:'%s ago',
s:'a few seconds',
ss:'%d seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'
},
dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('en-ca',{
months:'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
weekdays:'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
weekdaysShort:'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
weekdaysMin:'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'YYYY-MM-DD',
LL:'MMMM D, YYYY',
LLL:'MMMM D, YYYY h:mm A',
LLLL:'dddd, MMMM D, YYYY h:mm A'
},
calendar:{
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'
},
relativeTime:{
future:'in %s',
past:'%s ago',
s:'a few seconds',
ss:'%d seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'
},
dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
}
});
hooks.defineLocale('en-gb',{
months:'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
weekdays:'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
weekdaysShort:'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
weekdaysMin:'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'
},
relativeTime:{
future:'in %s',
past:'%s ago',
s:'a few seconds',
ss:'%d seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'
},
dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('en-ie',{
months:'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
weekdays:'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
weekdaysShort:'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
weekdaysMin:'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD-MM-YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'
},
relativeTime:{
future:'in %s',
past:'%s ago',
s:'a few seconds',
ss:'%d seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'
},
dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('en-nz',{
months:'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
weekdays:'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
weekdaysShort:'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
weekdaysMin:'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY h:mm A',
LLLL:'dddd, D MMMM YYYY h:mm A'
},
calendar:{
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'
},
relativeTime:{
future:'in %s',
past:'%s ago',
s:'a few seconds',
ss:'%d seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'
},
dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('eo',{
months:'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
monthsShort:'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
weekdays:'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
weekdaysShort:'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
weekdaysMin:'di_lu_ma_me_ĵa_ve_sa'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY-MM-DD',
LL:'D[-a de] MMMM, YYYY',
LLL:'D[-a de] MMMM, YYYY HH:mm',
LLLL:'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
},
meridiemParse:/[ap]\.t\.m/i,
isPM:function(input){
return input.charAt(0).toLowerCase()==='p';
},
meridiem:function(hours,minutes,isLower){
if(hours>11){
return isLower?'p.t.m.':'P.T.M.';
}else{
return isLower?'a.t.m.':'A.T.M.';
}
},
calendar:{
sameDay:'[Hodiaŭ je] LT',
nextDay:'[Morgaŭ je] LT',
nextWeek:'dddd [je] LT',
lastDay:'[Hieraŭ je] LT',
lastWeek:'[pasinta] dddd [je] LT',
sameElse:'L'
},
relativeTime:{
future:'post %s',
past:'antaŭ %s',
s:'sekundoj',
ss:'%d sekundoj',
m:'minuto',
mm:'%d minutoj',
h:'horo',
hh:'%d horoj',
d:'tago',
dd:'%d tagoj',
M:'monato',
MM:'%d monatoj',
y:'jaro',
yy:'%d jaroj'
},
dayOfMonthOrdinalParse:/\d{1,2}a/,
ordinal:'%da',
week:{
dow:1,
doy:7
}
});
var monthsShortDot='ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort$1='ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
var monthsParse=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i];
var monthsRegex$1=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
hooks.defineLocale('es-do',{
months:'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
monthsShort:function(m,format){
if(!m){
return monthsShortDot;
}else if(/-MMM-/.test(format)){
return monthsShort$1[m.month()];
}else{
return monthsShortDot[m.month()];
}
},
monthsRegex:monthsRegex$1,
monthsShortRegex:monthsRegex$1,
monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
monthsParse:monthsParse,
longMonthsParse:monthsParse,
shortMonthsParse:monthsParse,
weekdays:'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
weekdaysShort:'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
weekdaysMin:'do_lu_ma_mi_ju_vi_sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D [de] MMMM [de] YYYY',
LLL:'D [de] MMMM [de] YYYY h:mm A',
LLLL:'dddd, D [de] MMMM [de] YYYY h:mm A'
},
calendar:{
sameDay:function(){
return'[hoy a la'+((this.hours()!==1)?'s':'')+'] LT';
},
nextDay:function(){
return'[mañana a la'+((this.hours()!==1)?'s':'')+'] LT';
},
nextWeek:function(){
return'dddd [a la'+((this.hours()!==1)?'s':'')+'] LT';
},
lastDay:function(){
return'[ayer a la'+((this.hours()!==1)?'s':'')+'] LT';
},
lastWeek:function(){
return'[el] dddd [pasado a la'+((this.hours()!==1)?'s':'')+'] LT';
},
sameElse:'L'
},
relativeTime:{
future:'en %s',
past:'hace %s',
s:'unos segundos',
ss:'%d segundos',
m:'un minuto',
mm:'%d minutos',
h:'una hora',
hh:'%d horas',
d:'un día',
dd:'%d días',
M:'un mes',
MM:'%d meses',
y:'un año',
yy:'%d años'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
var monthsShortDot$1='ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort$2='ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
hooks.defineLocale('es-us',{
months:'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
monthsShort:function(m,format){
if(!m){
return monthsShortDot$1;
}else if(/-MMM-/.test(format)){
return monthsShort$2[m.month()];
}else{
return monthsShortDot$1[m.month()];
}
},
monthsParseExact:true,
weekdays:'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
weekdaysShort:'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
weekdaysMin:'do_lu_ma_mi_ju_vi_sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'MM/DD/YYYY',
LL:'MMMM [de] D [de] YYYY',
LLL:'MMMM [de] D [de] YYYY h:mm A',
LLLL:'dddd, MMMM [de] D [de] YYYY h:mm A'
},
calendar:{
sameDay:function(){
return'[hoy a la'+((this.hours()!==1)?'s':'')+'] LT';
},
nextDay:function(){
return'[mañana a la'+((this.hours()!==1)?'s':'')+'] LT';
},
nextWeek:function(){
return'dddd [a la'+((this.hours()!==1)?'s':'')+'] LT';
},
lastDay:function(){
return'[ayer a la'+((this.hours()!==1)?'s':'')+'] LT';
},
lastWeek:function(){
return'[el] dddd [pasado a la'+((this.hours()!==1)?'s':'')+'] LT';
},
sameElse:'L'
},
relativeTime:{
future:'en %s',
past:'hace %s',
s:'unos segundos',
ss:'%d segundos',
m:'un minuto',
mm:'%d minutos',
h:'una hora',
hh:'%d horas',
d:'un día',
dd:'%d días',
M:'un mes',
MM:'%d meses',
y:'un año',
yy:'%d años'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:0,
doy:6
}
});
var monthsShortDot$2='ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort$3='ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
var monthsParse$1=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i];
var monthsRegex$2=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
hooks.defineLocale('es',{
months:'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
monthsShort:function(m,format){
if(!m){
return monthsShortDot$2;
}else if(/-MMM-/.test(format)){
return monthsShort$3[m.month()];
}else{
return monthsShortDot$2[m.month()];
}
},
monthsRegex:monthsRegex$2,
monthsShortRegex:monthsRegex$2,
monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
monthsParse:monthsParse$1,
longMonthsParse:monthsParse$1,
shortMonthsParse:monthsParse$1,
weekdays:'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
weekdaysShort:'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
weekdaysMin:'do_lu_ma_mi_ju_vi_sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD/MM/YYYY',
LL:'D [de] MMMM [de] YYYY',
LLL:'D [de] MMMM [de] YYYY H:mm',
LLLL:'dddd, D [de] MMMM [de] YYYY H:mm'
},
calendar:{
sameDay:function(){
return'[hoy a la'+((this.hours()!==1)?'s':'')+'] LT';
},
nextDay:function(){
return'[mañana a la'+((this.hours()!==1)?'s':'')+'] LT';
},
nextWeek:function(){
return'dddd [a la'+((this.hours()!==1)?'s':'')+'] LT';
},
lastDay:function(){
return'[ayer a la'+((this.hours()!==1)?'s':'')+'] LT';
},
lastWeek:function(){
return'[el] dddd [pasado a la'+((this.hours()!==1)?'s':'')+'] LT';
},
sameElse:'L'
},
relativeTime:{
future:'en %s',
past:'hace %s',
s:'unos segundos',
ss:'%d segundos',
m:'un minuto',
mm:'%d minutos',
h:'una hora',
hh:'%d horas',
d:'un día',
dd:'%d días',
M:'un mes',
MM:'%d meses',
y:'un año',
yy:'%d años'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
function processRelativeTime$3(number,withoutSuffix,key,isFuture){
var format={
's':['mõne sekundi','mõni sekund','paar sekundit'],
'ss':[number+'sekundi',number+'sekundit'],
'm':['ühe minuti','üks minut'],
'mm':[number+' minuti',number+' minutit'],
'h':['ühe tunni','tund aega','üks tund'],
'hh':[number+' tunni',number+' tundi'],
'd':['ühe päeva','üks päev'],
'M':['kuu aja','kuu aega','üks kuu'],
'MM':[number+' kuu',number+' kuud'],
'y':['ühe aasta','aasta','üks aasta'],
'yy':[number+' aasta',number+' aastat']
};
if(withoutSuffix){
return format[key][2]?format[key][2]:format[key][1];
}
return isFuture?format[key][0]:format[key][1];
}
hooks.defineLocale('et',{
months:'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
monthsShort:'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
weekdays:'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
weekdaysShort:'P_E_T_K_N_R_L'.split('_'),
weekdaysMin:'P_E_T_K_N_R_L'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[Täna,] LT',
nextDay:'[Homme,] LT',
nextWeek:'[Järgmine] dddd LT',
lastDay:'[Eile,] LT',
lastWeek:'[Eelmine] dddd LT',
sameElse:'L'
},
relativeTime:{
future:'%s pärast',
past:'%s tagasi',
s:processRelativeTime$3,
ss:processRelativeTime$3,
m:processRelativeTime$3,
mm:processRelativeTime$3,
h:processRelativeTime$3,
hh:processRelativeTime$3,
d:processRelativeTime$3,
dd:'%d päeva',
M:processRelativeTime$3,
MM:processRelativeTime$3,
y:processRelativeTime$3,
yy:processRelativeTime$3
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('eu',{
months:'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
monthsShort:'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
monthsParseExact:true,
weekdays:'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
weekdaysShort:'ig._al._ar._az._og._ol._lr.'.split('_'),
weekdaysMin:'ig_al_ar_az_og_ol_lr'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY-MM-DD',
LL:'YYYY[ko] MMMM[ren] D[a]',
LLL:'YYYY[ko] MMMM[ren] D[a] HH:mm',
LLLL:'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
l:'YYYY-M-D',
ll:'YYYY[ko] MMM D[a]',
lll:'YYYY[ko] MMM D[a] HH:mm',
llll:'ddd, YYYY[ko] MMM D[a] HH:mm'
},
calendar:{
sameDay:'[gaur] LT[etan]',
nextDay:'[bihar] LT[etan]',
nextWeek:'dddd LT[etan]',
lastDay:'[atzo] LT[etan]',
lastWeek:'[aurreko] dddd LT[etan]',
sameElse:'L'
},
relativeTime:{
future:'%s barru',
past:'duela %s',
s:'segundo batzuk',
ss:'%d segundo',
m:'minutu bat',
mm:'%d minutu',
h:'ordu bat',
hh:'%d ordu',
d:'egun bat',
dd:'%d egun',
M:'hilabete bat',
MM:'%d hilabete',
y:'urte bat',
yy:'%d urte'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
var symbolMap$5={
'1':'۱',
'2':'۲',
'3':'۳',
'4':'۴',
'5':'۵',
'6':'۶',
'7':'۷',
'8':'۸',
'9':'۹',
'0':'۰'
};
var numberMap$4={
'۱':'1',
'۲':'2',
'۳':'3',
'۴':'4',
'۵':'5',
'۶':'6',
'۷':'7',
'۸':'8',
'۹':'9',
'۰':'0'
};
hooks.defineLocale('fa',{
months:'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
monthsShort:'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
weekdays:'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
weekdaysShort:'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
weekdaysMin:'ی_د_س_چ_پ_ج_ش'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
meridiemParse:/قبل از ظهر|بعد از ظهر/,
isPM:function(input){
return/بعد از ظهر/.test(input);
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'قبل از ظهر';
}else{
return'بعد از ظهر';
}
},
calendar:{
sameDay:'[امروز ساعت] LT',
nextDay:'[فردا ساعت] LT',
nextWeek:'dddd [ساعت] LT',
lastDay:'[دیروز ساعت] LT',
lastWeek:'dddd [پیش] [ساعت] LT',
sameElse:'L'
},
relativeTime:{
future:'در %s',
past:'%s پیش',
s:'چند ثانیه',
ss:'ثانیه d%',
m:'یک دقیقه',
mm:'%d دقیقه',
h:'یک ساعت',
hh:'%d ساعت',
d:'یک روز',
dd:'%d روز',
M:'یک ماه',
MM:'%d ماه',
y:'یک سال',
yy:'%d سال'
},
preparse:function(string){
return string.replace(/[۰-۹]/g,function(match){
return numberMap$4[match];
}).replace(/،/g,',');
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$5[match];
}).replace(/,/g,'،');
},
dayOfMonthOrdinalParse:/\d{1,2}م/,
ordinal:'%dم',
week:{
dow:6,
doy:12
}
});
var numbersPast='nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
var numbersFuture=[
'nolla','yhden','kahden','kolmen','neljän','viiden','kuuden',
numbersPast[7],numbersPast[8],numbersPast[9]
];
function translate$2(number,withoutSuffix,key,isFuture){
var result='';
switch(key){
case's':
return isFuture?'muutaman sekunnin':'muutama sekunti';
case'ss':
return isFuture?'sekunnin':'sekuntia';
case'm':
return isFuture?'minuutin':'minuutti';
case'mm':
result=isFuture?'minuutin':'minuuttia';
break;
case'h':
return isFuture?'tunnin':'tunti';
case'hh':
result=isFuture?'tunnin':'tuntia';
break;
case'd':
return isFuture?'päivän':'päivä';
case'dd':
result=isFuture?'päivän':'päivää';
break;
case'M':
return isFuture?'kuukauden':'kuukausi';
case'MM':
result=isFuture?'kuukauden':'kuukautta';
break;
case'y':
return isFuture?'vuoden':'vuosi';
case'yy':
result=isFuture?'vuoden':'vuotta';
break;
}
result=verbalNumber(number,isFuture)+' '+result;
return result;
}
function verbalNumber(number,isFuture){
return number<10?(isFuture?numbersFuture[number]:numbersPast[number]):number;
}
hooks.defineLocale('fi',{
months:'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
monthsShort:'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
weekdays:'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
weekdaysShort:'su_ma_ti_ke_to_pe_la'.split('_'),
weekdaysMin:'su_ma_ti_ke_to_pe_la'.split('_'),
longDateFormat:{
LT:'HH.mm',
LTS:'HH.mm.ss',
L:'DD.MM.YYYY',
LL:'Do MMMM[ta] YYYY',
LLL:'Do MMMM[ta] YYYY, [klo] HH.mm',
LLLL:'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
l:'D.M.YYYY',
ll:'Do MMM YYYY',
lll:'Do MMM YYYY, [klo] HH.mm',
llll:'ddd, Do MMM YYYY, [klo] HH.mm'
},
calendar:{
sameDay:'[tänään] [klo] LT',
nextDay:'[huomenna] [klo] LT',
nextWeek:'dddd [klo] LT',
lastDay:'[eilen] [klo] LT',
lastWeek:'[viime] dddd[na] [klo] LT',
sameElse:'L'
},
relativeTime:{
future:'%s päästä',
past:'%s sitten',
s:translate$2,
ss:translate$2,
m:translate$2,
mm:translate$2,
h:translate$2,
hh:translate$2,
d:translate$2,
dd:translate$2,
M:translate$2,
MM:translate$2,
y:translate$2,
yy:translate$2
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('fo',{
months:'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
monthsShort:'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
weekdays:'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
weekdaysShort:'sun_mán_týs_mik_hós_frí_ley'.split('_'),
weekdaysMin:'su_má_tý_mi_hó_fr_le'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D. MMMM, YYYY HH:mm'
},
calendar:{
sameDay:'[Í dag kl.] LT',
nextDay:'[Í morgin kl.] LT',
nextWeek:'dddd [kl.] LT',
lastDay:'[Í gjár kl.] LT',
lastWeek:'[síðstu] dddd [kl] LT',
sameElse:'L'
},
relativeTime:{
future:'um %s',
past:'%s síðani',
s:'fá sekund',
ss:'%d sekundir',
m:'ein minutt',
mm:'%d minuttir',
h:'ein tími',
hh:'%d tímar',
d:'ein dagur',
dd:'%d dagar',
M:'ein mánaði',
MM:'%d mánaðir',
y:'eitt ár',
yy:'%d ár'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('fr-ca',{
months:'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
monthsShort:'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
monthsParseExact:true,
weekdays:'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
weekdaysShort:'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
weekdaysMin:'di_lu_ma_me_je_ve_sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY-MM-DD',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Aujourd’hui à] LT',
nextDay:'[Demain à] LT',
nextWeek:'dddd [à] LT',
lastDay:'[Hier à] LT',
lastWeek:'dddd [dernier à] LT',
sameElse:'L'
},
relativeTime:{
future:'dans %s',
past:'il y a %s',
s:'quelques secondes',
ss:'%d secondes',
m:'une minute',
mm:'%d minutes',
h:'une heure',
hh:'%d heures',
d:'un jour',
dd:'%d jours',
M:'un mois',
MM:'%d mois',
y:'un an',
yy:'%d ans'
},
dayOfMonthOrdinalParse:/\d{1,2}(er|e)/,
ordinal:function(number,period){
switch(period){
default:
case'M':
case'Q':
case'D':
case'DDD':
case'd':
return number+(number===1?'er':'e');
case'w':
case'W':
return number+(number===1?'re':'e');
}
}
});
hooks.defineLocale('fr-ch',{
months:'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
monthsShort:'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
monthsParseExact:true,
weekdays:'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
weekdaysShort:'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
weekdaysMin:'di_lu_ma_me_je_ve_sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Aujourd’hui à] LT',
nextDay:'[Demain à] LT',
nextWeek:'dddd [à] LT',
lastDay:'[Hier à] LT',
lastWeek:'dddd [dernier à] LT',
sameElse:'L'
},
relativeTime:{
future:'dans %s',
past:'il y a %s',
s:'quelques secondes',
ss:'%d secondes',
m:'une minute',
mm:'%d minutes',
h:'une heure',
hh:'%d heures',
d:'un jour',
dd:'%d jours',
M:'un mois',
MM:'%d mois',
y:'un an',
yy:'%d ans'
},
dayOfMonthOrdinalParse:/\d{1,2}(er|e)/,
ordinal:function(number,period){
switch(period){
default:
case'M':
case'Q':
case'D':
case'DDD':
case'd':
return number+(number===1?'er':'e');
case'w':
case'W':
return number+(number===1?'re':'e');
}
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('fr',{
months:'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
monthsShort:'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
monthsParseExact:true,
weekdays:'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
weekdaysShort:'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
weekdaysMin:'di_lu_ma_me_je_ve_sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Aujourd’hui à] LT',
nextDay:'[Demain à] LT',
nextWeek:'dddd [à] LT',
lastDay:'[Hier à] LT',
lastWeek:'dddd [dernier à] LT',
sameElse:'L'
},
relativeTime:{
future:'dans %s',
past:'il y a %s',
s:'quelques secondes',
ss:'%d secondes',
m:'une minute',
mm:'%d minutes',
h:'une heure',
hh:'%d heures',
d:'un jour',
dd:'%d jours',
M:'un mois',
MM:'%d mois',
y:'un an',
yy:'%d ans'
},
dayOfMonthOrdinalParse:/\d{1,2}(er|)/,
ordinal:function(number,period){
switch(period){
case'D':
return number+(number===1?'er':'');
default:
case'M':
case'Q':
case'DDD':
case'd':
return number+(number===1?'er':'e');
case'w':
case'W':
return number+(number===1?'re':'e');
}
},
week:{
dow:1,
doy:4
}
});
var monthsShortWithDots='jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
var monthsShortWithoutDots='jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
hooks.defineLocale('fy',{
months:'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
monthsShort:function(m,format){
if(!m){
return monthsShortWithDots;
}else if(/-MMM-/.test(format)){
return monthsShortWithoutDots[m.month()];
}else{
return monthsShortWithDots[m.month()];
}
},
monthsParseExact:true,
weekdays:'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
weekdaysShort:'si._mo._ti._wo._to._fr._so.'.split('_'),
weekdaysMin:'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD-MM-YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[hjoed om] LT',
nextDay:'[moarn om] LT',
nextWeek:'dddd [om] LT',
lastDay:'[juster om] LT',
lastWeek:'[ôfrûne] dddd [om] LT',
sameElse:'L'
},
relativeTime:{
future:'oer %s',
past:'%s lyn',
s:'in pear sekonden',
ss:'%d sekonden',
m:'ien minút',
mm:'%d minuten',
h:'ien oere',
hh:'%d oeren',
d:'ien dei',
dd:'%d dagen',
M:'ien moanne',
MM:'%d moannen',
y:'ien jier',
yy:'%d jierren'
},
dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,
ordinal:function(number){
return number+((number===1||number===8||number>=20)?'ste':'de');
},
week:{
dow:1,
doy:4
}
});
var months$5=[
'Am Faoilleach','An Gearran','Am Màrt','An Giblean','An Cèitean','An t-Ògmhios','An t-Iuchar','An Lùnastal','An t-Sultain','An Dàmhair','An t-Samhain','An Dùbhlachd'
];
var monthsShort$4=['Faoi','Gear','Màrt','Gibl','Cèit','Ògmh','Iuch','Lùn','Sult','Dàmh','Samh','Dùbh'];
var weekdays$1=['Didòmhnaich','Diluain','Dimàirt','Diciadain','Diardaoin','Dihaoine','Disathairne'];
var weekdaysShort=['Did','Dil','Dim','Dic','Dia','Dih','Dis'];
var weekdaysMin=['Dò','Lu','Mà','Ci','Ar','Ha','Sa'];
hooks.defineLocale('gd',{
months:months$5,
monthsShort:monthsShort$4,
monthsParseExact:true,
weekdays:weekdays$1,
weekdaysShort:weekdaysShort,
weekdaysMin:weekdaysMin,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[An-diugh aig] LT',
nextDay:'[A-màireach aig] LT',
nextWeek:'dddd [aig] LT',
lastDay:'[An-dè aig] LT',
lastWeek:'dddd [seo chaidh] [aig] LT',
sameElse:'L'
},
relativeTime:{
future:'ann an %s',
past:'bho chionn %s',
s:'beagan diogan',
ss:'%d diogan',
m:'mionaid',
mm:'%d mionaidean',
h:'uair',
hh:'%d uairean',
d:'latha',
dd:'%d latha',
M:'mìos',
MM:'%d mìosan',
y:'bliadhna',
yy:'%d bliadhna'
},
dayOfMonthOrdinalParse:/\d{1,2}(d|na|mh)/,
ordinal:function(number){
var output=number===1?'d':number%10===2?'na':'mh';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('gl',{
months:'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
monthsShort:'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
monthsParseExact:true,
weekdays:'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
weekdaysShort:'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
weekdaysMin:'do_lu_ma_mé_xo_ve_sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD/MM/YYYY',
LL:'D [de] MMMM [de] YYYY',
LLL:'D [de] MMMM [de] YYYY H:mm',
LLLL:'dddd, D [de] MMMM [de] YYYY H:mm'
},
calendar:{
sameDay:function(){
return'[hoxe '+((this.hours()!==1)?'ás':'á')+'] LT';
},
nextDay:function(){
return'[mañá '+((this.hours()!==1)?'ás':'á')+'] LT';
},
nextWeek:function(){
return'dddd ['+((this.hours()!==1)?'ás':'a')+'] LT';
},
lastDay:function(){
return'[onte '+((this.hours()!==1)?'á':'a')+'] LT';
},
lastWeek:function(){
return'[o] dddd [pasado '+((this.hours()!==1)?'ás':'a')+'] LT';
},
sameElse:'L'
},
relativeTime:{
future:function(str){
if(str.indexOf('un')===0){
return'n'+str;
}
return'en '+str;
},
past:'hai %s',
s:'uns segundos',
ss:'%d segundos',
m:'un minuto',
mm:'%d minutos',
h:'unha hora',
hh:'%d horas',
d:'un día',
dd:'%d días',
M:'un mes',
MM:'%d meses',
y:'un ano',
yy:'%d anos'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
function processRelativeTime$4(number,withoutSuffix,key,isFuture){
var format={
's':['thodde secondanim','thodde second'],
'ss':[number+' secondanim',number+' second'],
'm':['eka mintan','ek minute'],
'mm':[number+' mintanim',number+' mintam'],
'h':['eka horan','ek hor'],
'hh':[number+' horanim',number+' hor'],
'd':['eka disan','ek dis'],
'dd':[number+' disanim',number+' dis'],
'M':['eka mhoinean','ek mhoino'],
'MM':[number+' mhoineanim',number+' mhoine'],
'y':['eka vorsan','ek voros'],
'yy':[number+' vorsanim',number+' vorsam']
};
return withoutSuffix?format[key][0]:format[key][1];
}
hooks.defineLocale('gom-latn',{
months:'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
monthsShort:'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
monthsParseExact:true,
weekdays:'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
weekdaysShort:'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
weekdaysMin:'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'A h:mm [vazta]',
LTS:'A h:mm:ss [vazta]',
L:'DD-MM-YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY A h:mm [vazta]',
LLLL:'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
llll:'ddd, D MMM YYYY, A h:mm [vazta]'
},
calendar:{
sameDay:'[Aiz] LT',
nextDay:'[Faleam] LT',
nextWeek:'[Ieta to] dddd[,] LT',
lastDay:'[Kal] LT',
lastWeek:'[Fatlo] dddd[,] LT',
sameElse:'L'
},
relativeTime:{
future:'%s',
past:'%s adim',
s:processRelativeTime$4,
ss:processRelativeTime$4,
m:processRelativeTime$4,
mm:processRelativeTime$4,
h:processRelativeTime$4,
hh:processRelativeTime$4,
d:processRelativeTime$4,
dd:processRelativeTime$4,
M:processRelativeTime$4,
MM:processRelativeTime$4,
y:processRelativeTime$4,
yy:processRelativeTime$4
},
dayOfMonthOrdinalParse:/\d{1,2}(er)/,
ordinal:function(number,period){
switch(period){
case'D':
return number+'er';
default:
case'M':
case'Q':
case'DDD':
case'd':
case'w':
case'W':
return number;
}
},
week:{
dow:1,
doy:4
},
meridiemParse:/rati|sokalli|donparam|sanje/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='rati'){
return hour<4?hour:hour+12;
}else if(meridiem==='sokalli'){
return hour;
}else if(meridiem==='donparam'){
return hour>12?hour:hour+12;
}else if(meridiem==='sanje'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'rati';
}else if(hour<12){
return'sokalli';
}else if(hour<16){
return'donparam';
}else if(hour<20){
return'sanje';
}else{
return'rati';
}
}
});
var symbolMap$6={
'1':'૧',
'2':'૨',
'3':'૩',
'4':'૪',
'5':'૫',
'6':'૬',
'7':'૭',
'8':'૮',
'9':'૯',
'0':'૦'
};
var numberMap$5={
'૧':'1',
'૨':'2',
'૩':'3',
'૪':'4',
'૫':'5',
'૬':'6',
'૭':'7',
'૮':'8',
'૯':'9',
'૦':'0'
};
hooks.defineLocale('gu',{
months:'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
monthsShort:'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
monthsParseExact:true,
weekdays:'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
weekdaysShort:'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
weekdaysMin:'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
longDateFormat:{
LT:'A h:mm વાગ્યે',
LTS:'A h:mm:ss વાગ્યે',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm વાગ્યે',
LLLL:'dddd, D MMMM YYYY, A h:mm વાગ્યે'
},
calendar:{
sameDay:'[આજ] LT',
nextDay:'[કાલે] LT',
nextWeek:'dddd, LT',
lastDay:'[ગઇકાલે] LT',
lastWeek:'[પાછલા] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s મા',
past:'%s પેહલા',
s:'અમુક પળો',
ss:'%d સેકંડ',
m:'એક મિનિટ',
mm:'%d મિનિટ',
h:'એક કલાક',
hh:'%d કલાક',
d:'એક દિવસ',
dd:'%d દિવસ',
M:'એક મહિનો',
MM:'%d મહિનો',
y:'એક વર્ષ',
yy:'%d વર્ષ'
},
preparse:function(string){
return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g,function(match){
return numberMap$5[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$6[match];
});
},
meridiemParse:/રાત|બપોર|સવાર|સાંજ/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='રાત'){
return hour<4?hour:hour+12;
}else if(meridiem==='સવાર'){
return hour;
}else if(meridiem==='બપોર'){
return hour>=10?hour:hour+12;
}else if(meridiem==='સાંજ'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'રાત';
}else if(hour<10){
return'સવાર';
}else if(hour<17){
return'બપોર';
}else if(hour<20){
return'સાંજ';
}else{
return'રાત';
}
},
week:{
dow:0,
doy:6
}
});
hooks.defineLocale('he',{
months:'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
monthsShort:'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
weekdays:'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
weekdaysShort:'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
weekdaysMin:'א_ב_ג_ד_ה_ו_ש'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D [ב]MMMM YYYY',
LLL:'D [ב]MMMM YYYY HH:mm',
LLLL:'dddd, D [ב]MMMM YYYY HH:mm',
l:'D/M/YYYY',
ll:'D MMM YYYY',
lll:'D MMM YYYY HH:mm',
llll:'ddd, D MMM YYYY HH:mm'
},
calendar:{
sameDay:'[היום ב־]LT',
nextDay:'[מחר ב־]LT',
nextWeek:'dddd [בשעה] LT',
lastDay:'[אתמול ב־]LT',
lastWeek:'[ביום] dddd [האחרון בשעה] LT',
sameElse:'L'
},
relativeTime:{
future:'בעוד %s',
past:'לפני %s',
s:'מספר שניות',
ss:'%d שניות',
m:'דקה',
mm:'%d דקות',
h:'שעה',
hh:function(number){
if(number===2){
return'שעתיים';
}
return number+' שעות';
},
d:'יום',
dd:function(number){
if(number===2){
return'יומיים';
}
return number+' ימים';
},
M:'חודש',
MM:function(number){
if(number===2){
return'חודשיים';
}
return number+' חודשים';
},
y:'שנה',
yy:function(number){
if(number===2){
return'שנתיים';
}else if(number%10===0&&number!==10){
return number+' שנה';
}
return number+' שנים';
}
},
meridiemParse:/אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
isPM:function(input){
return/^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
},
meridiem:function(hour,minute,isLower){
if(hour<5){
return'לפנות בוקר';
}else if(hour<10){
return'בבוקר';
}else if(hour<12){
return isLower?'לפנה"צ':'לפני הצהריים';
}else if(hour<18){
return isLower?'אחה"צ':'אחרי הצהריים';
}else{
return'בערב';
}
}
});
var symbolMap$7={
'1':'१',
'2':'२',
'3':'३',
'4':'४',
'5':'५',
'6':'६',
'7':'७',
'8':'८',
'9':'९',
'0':'०'
};
var numberMap$6={
'१':'1',
'२':'2',
'३':'3',
'४':'4',
'५':'5',
'६':'6',
'७':'7',
'८':'8',
'९':'9',
'०':'0'
};
hooks.defineLocale('hi',{
months:'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
monthsShort:'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
monthsParseExact:true,
weekdays:'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
weekdaysShort:'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
weekdaysMin:'र_सो_मं_बु_गु_शु_श'.split('_'),
longDateFormat:{
LT:'A h:mm बजे',
LTS:'A h:mm:ss बजे',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm बजे',
LLLL:'dddd, D MMMM YYYY, A h:mm बजे'
},
calendar:{
sameDay:'[आज] LT',
nextDay:'[कल] LT',
nextWeek:'dddd, LT',
lastDay:'[कल] LT',
lastWeek:'[पिछले] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s में',
past:'%s पहले',
s:'कुछ ही क्षण',
ss:'%d सेकंड',
m:'एक मिनट',
mm:'%d मिनट',
h:'एक घंटा',
hh:'%d घंटे',
d:'एक दिन',
dd:'%d दिन',
M:'एक महीने',
MM:'%d महीने',
y:'एक वर्ष',
yy:'%d वर्ष'
},
preparse:function(string){
return string.replace(/[१२३४५६७८९०]/g,function(match){
return numberMap$6[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$7[match];
});
},
meridiemParse:/रात|सुबह|दोपहर|शाम/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='रात'){
return hour<4?hour:hour+12;
}else if(meridiem==='सुबह'){
return hour;
}else if(meridiem==='दोपहर'){
return hour>=10?hour:hour+12;
}else if(meridiem==='शाम'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'रात';
}else if(hour<10){
return'सुबह';
}else if(hour<17){
return'दोपहर';
}else if(hour<20){
return'शाम';
}else{
return'रात';
}
},
week:{
dow:0,
doy:6
}
});
function translate$3(number,withoutSuffix,key){
var result=number+' ';
switch(key){
case'ss':
if(number===1){
result+='sekunda';
}else if(number===2||number===3||number===4){
result+='sekunde';
}else{
result+='sekundi';
}
return result;
case'm':
return withoutSuffix?'jedna minuta':'jedne minute';
case'mm':
if(number===1){
result+='minuta';
}else if(number===2||number===3||number===4){
result+='minute';
}else{
result+='minuta';
}
return result;
case'h':
return withoutSuffix?'jedan sat':'jednog sata';
case'hh':
if(number===1){
result+='sat';
}else if(number===2||number===3||number===4){
result+='sata';
}else{
result+='sati';
}
return result;
case'dd':
if(number===1){
result+='dan';
}else{
result+='dana';
}
return result;
case'MM':
if(number===1){
result+='mjesec';
}else if(number===2||number===3||number===4){
result+='mjeseca';
}else{
result+='mjeseci';
}
return result;
case'yy':
if(number===1){
result+='godina';
}else if(number===2||number===3||number===4){
result+='godine';
}else{
result+='godina';
}
return result;
}
}
hooks.defineLocale('hr',{
months:{
format:'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
standalone:'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
},
monthsShort:'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
monthsParseExact:true,
weekdays:'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
weekdaysShort:'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
weekdaysMin:'ne_po_ut_sr_če_pe_su'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[danas u] LT',
nextDay:'[sutra u] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[u] [nedjelju] [u] LT';
case 3:
return'[u] [srijedu] [u] LT';
case 6:
return'[u] [subotu] [u] LT';
case 1:
case 2:
case 4:
case 5:
return'[u] dddd [u] LT';
}
},
lastDay:'[jučer u] LT',
lastWeek:function(){
switch(this.day()){
case 0:
case 3:
return'[prošlu] dddd [u] LT';
case 6:
return'[prošle] [subote] [u] LT';
case 1:
case 2:
case 4:
case 5:
return'[prošli] dddd [u] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'prije %s',
s:'par sekundi',
ss:translate$3,
m:translate$3,
mm:translate$3,
h:translate$3,
hh:translate$3,
d:'dan',
dd:translate$3,
M:'mjesec',
MM:translate$3,
y:'godinu',
yy:translate$3
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
var weekEndings='vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
function translate$4(number,withoutSuffix,key,isFuture){
var num=number;
switch(key){
case's':
return(isFuture||withoutSuffix)?'néhány másodperc':'néhány másodperce';
case'ss':
return num+(isFuture||withoutSuffix)?' másodperc':' másodperce';
case'm':
return'egy'+(isFuture||withoutSuffix?' perc':' perce');
case'mm':
return num+(isFuture||withoutSuffix?' perc':' perce');
case'h':
return'egy'+(isFuture||withoutSuffix?' óra':' órája');
case'hh':
return num+(isFuture||withoutSuffix?' óra':' órája');
case'd':
return'egy'+(isFuture||withoutSuffix?' nap':' napja');
case'dd':
return num+(isFuture||withoutSuffix?' nap':' napja');
case'M':
return'egy'+(isFuture||withoutSuffix?' hónap':' hónapja');
case'MM':
return num+(isFuture||withoutSuffix?' hónap':' hónapja');
case'y':
return'egy'+(isFuture||withoutSuffix?' év':' éve');
case'yy':
return num+(isFuture||withoutSuffix?' év':' éve');
}
return'';
}
function week(isFuture){
return(isFuture?'':'[múlt] ')+'['+weekEndings[this.day()]+'] LT[-kor]';
}
hooks.defineLocale('hu',{
months:'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
monthsShort:'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
weekdays:'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
weekdaysShort:'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
weekdaysMin:'v_h_k_sze_cs_p_szo'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'YYYY.MM.DD.',
LL:'YYYY. MMMM D.',
LLL:'YYYY. MMMM D. H:mm',
LLLL:'YYYY. MMMM D., dddd H:mm'
},
meridiemParse:/de|du/i,
isPM:function(input){
return input.charAt(1).toLowerCase()==='u';
},
meridiem:function(hours,minutes,isLower){
if(hours<12){
return isLower===true?'de':'DE';
}else{
return isLower===true?'du':'DU';
}
},
calendar:{
sameDay:'[ma] LT[-kor]',
nextDay:'[holnap] LT[-kor]',
nextWeek:function(){
return week.call(this,true);
},
lastDay:'[tegnap] LT[-kor]',
lastWeek:function(){
return week.call(this,false);
},
sameElse:'L'
},
relativeTime:{
future:'%s múlva',
past:'%s',
s:translate$4,
ss:translate$4,
m:translate$4,
mm:translate$4,
h:translate$4,
hh:translate$4,
d:translate$4,
dd:translate$4,
M:translate$4,
MM:translate$4,
y:translate$4,
yy:translate$4
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('hy-am',{
months:{
format:'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
standalone:'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
},
monthsShort:'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
weekdays:'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
weekdaysShort:'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
weekdaysMin:'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY թ.',
LLL:'D MMMM YYYY թ., HH:mm',
LLLL:'dddd, D MMMM YYYY թ., HH:mm'
},
calendar:{
sameDay:'[այսօր] LT',
nextDay:'[վաղը] LT',
lastDay:'[երեկ] LT',
nextWeek:function(){
return'dddd [օրը ժամը] LT';
},
lastWeek:function(){
return'[անցած] dddd [օրը ժամը] LT';
},
sameElse:'L'
},
relativeTime:{
future:'%s հետո',
past:'%s առաջ',
s:'մի քանի վայրկյան',
ss:'%d վայրկյան',
m:'րոպե',
mm:'%d րոպե',
h:'ժամ',
hh:'%d ժամ',
d:'օր',
dd:'%d օր',
M:'ամիս',
MM:'%d ամիս',
y:'տարի',
yy:'%d տարի'
},
meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
isPM:function(input){
return/^(ցերեկվա|երեկոյան)$/.test(input);
},
meridiem:function(hour){
if(hour<4){
return'գիշերվա';
}else if(hour<12){
return'առավոտվա';
}else if(hour<17){
return'ցերեկվա';
}else{
return'երեկոյան';
}
},
dayOfMonthOrdinalParse:/\d{1,2}|\d{1,2}-(ին|րդ)/,
ordinal:function(number,period){
switch(period){
case'DDD':
case'w':
case'W':
case'DDDo':
if(number===1){
return number+'-ին';
}
return number+'-րդ';
default:
return number;
}
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('id',{
months:'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
weekdays:'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
weekdaysShort:'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
weekdaysMin:'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
longDateFormat:{
LT:'HH.mm',
LTS:'HH.mm.ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY [pukul] HH.mm',
LLLL:'dddd, D MMMM YYYY [pukul] HH.mm'
},
meridiemParse:/pagi|siang|sore|malam/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='pagi'){
return hour;
}else if(meridiem==='siang'){
return hour>=11?hour:hour+12;
}else if(meridiem==='sore'||meridiem==='malam'){
return hour+12;
}
},
meridiem:function(hours,minutes,isLower){
if(hours<11){
return'pagi';
}else if(hours<15){
return'siang';
}else if(hours<19){
return'sore';
}else{
return'malam';
}
},
calendar:{
sameDay:'[Hari ini pukul] LT',
nextDay:'[Besok pukul] LT',
nextWeek:'dddd [pukul] LT',
lastDay:'[Kemarin pukul] LT',
lastWeek:'dddd [lalu pukul] LT',
sameElse:'L'
},
relativeTime:{
future:'dalam %s',
past:'%s yang lalu',
s:'beberapa detik',
ss:'%d detik',
m:'semenit',
mm:'%d menit',
h:'sejam',
hh:'%d jam',
d:'sehari',
dd:'%d hari',
M:'sebulan',
MM:'%d bulan',
y:'setahun',
yy:'%d tahun'
},
week:{
dow:1,
doy:7
}
});
function plural$2(n){
if(n%100===11){
return true;
}else if(n%10===1){
return false;
}
return true;
}
function translate$5(number,withoutSuffix,key,isFuture){
var result=number+' ';
switch(key){
case's':
return withoutSuffix||isFuture?'nokkrar sekúndur':'nokkrum sekúndum';
case'ss':
if(plural$2(number)){
return result+(withoutSuffix||isFuture?'sekúndur':'sekúndum');
}
return result+'sekúnda';
case'm':
return withoutSuffix?'mínúta':'mínútu';
case'mm':
if(plural$2(number)){
return result+(withoutSuffix||isFuture?'mínútur':'mínútum');
}else if(withoutSuffix){
return result+'mínúta';
}
return result+'mínútu';
case'hh':
if(plural$2(number)){
return result+(withoutSuffix||isFuture?'klukkustundir':'klukkustundum');
}
return result+'klukkustund';
case'd':
if(withoutSuffix){
return'dagur';
}
return isFuture?'dag':'degi';
case'dd':
if(plural$2(number)){
if(withoutSuffix){
return result+'dagar';
}
return result+(isFuture?'daga':'dögum');
}else if(withoutSuffix){
return result+'dagur';
}
return result+(isFuture?'dag':'degi');
case'M':
if(withoutSuffix){
return'mánuður';
}
return isFuture?'mánuð':'mánuði';
case'MM':
if(plural$2(number)){
if(withoutSuffix){
return result+'mánuðir';
}
return result+(isFuture?'mánuði':'mánuðum');
}else if(withoutSuffix){
return result+'mánuður';
}
return result+(isFuture?'mánuð':'mánuði');
case'y':
return withoutSuffix||isFuture?'ár':'ári';
case'yy':
if(plural$2(number)){
return result+(withoutSuffix||isFuture?'ár':'árum');
}
return result+(withoutSuffix||isFuture?'ár':'ári');
}
}
hooks.defineLocale('is',{
months:'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
monthsShort:'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
weekdays:'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
weekdaysShort:'sun_mán_þri_mið_fim_fös_lau'.split('_'),
weekdaysMin:'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY [kl.] H:mm',
LLLL:'dddd, D. MMMM YYYY [kl.] H:mm'
},
calendar:{
sameDay:'[í dag kl.] LT',
nextDay:'[á morgun kl.] LT',
nextWeek:'dddd [kl.] LT',
lastDay:'[í gær kl.] LT',
lastWeek:'[síðasta] dddd [kl.] LT',
sameElse:'L'
},
relativeTime:{
future:'eftir %s',
past:'fyrir %s síðan',
s:translate$5,
ss:translate$5,
m:translate$5,
mm:translate$5,
h:'klukkustund',
hh:translate$5,
d:translate$5,
dd:translate$5,
M:translate$5,
MM:translate$5,
y:translate$5,
yy:translate$5
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('it',{
months:'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
monthsShort:'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
weekdays:'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
weekdaysShort:'dom_lun_mar_mer_gio_ven_sab'.split('_'),
weekdaysMin:'do_lu_ma_me_gi_ve_sa'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Oggi alle] LT',
nextDay:'[Domani alle] LT',
nextWeek:'dddd [alle] LT',
lastDay:'[Ieri alle] LT',
lastWeek:function(){
switch(this.day()){
case 0:
return'[la scorsa] dddd [alle] LT';
default:
return'[lo scorso] dddd [alle] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:function(s){
return((/^[0-9].+$/).test(s)?'tra':'in')+' '+s;
},
past:'%s fa',
s:'alcuni secondi',
ss:'%d secondi',
m:'un minuto',
mm:'%d minuti',
h:'un\'ora',
hh:'%d ore',
d:'un giorno',
dd:'%d giorni',
M:'un mese',
MM:'%d mesi',
y:'un anno',
yy:'%d anni'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('ja',{
months:'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
monthsShort:'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
weekdays:'日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
weekdaysShort:'日_月_火_水_木_金_土'.split('_'),
weekdaysMin:'日_月_火_水_木_金_土'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY/MM/DD',
LL:'YYYY年M月D日',
LLL:'YYYY年M月D日 HH:mm',
LLLL:'YYYY年M月D日 HH:mm dddd',
l:'YYYY/MM/DD',
ll:'YYYY年M月D日',
lll:'YYYY年M月D日 HH:mm',
llll:'YYYY年M月D日 HH:mm dddd'
},
meridiemParse:/午前|午後/i,
isPM:function(input){
return input==='午後';
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'午前';
}else{
return'午後';
}
},
calendar:{
sameDay:'[今日] LT',
nextDay:'[明日] LT',
nextWeek:'[来週]dddd LT',
lastDay:'[昨日] LT',
lastWeek:'[前週]dddd LT',
sameElse:'L'
},
dayOfMonthOrdinalParse:/\d{1,2}日/,
ordinal:function(number,period){
switch(period){
case'd':
case'D':
case'DDD':
return number+'日';
default:
return number;
}
},
relativeTime:{
future:'%s後',
past:'%s前',
s:'数秒',
ss:'%d秒',
m:'1分',
mm:'%d分',
h:'1時間',
hh:'%d時間',
d:'1日',
dd:'%d日',
M:'1ヶ月',
MM:'%dヶ月',
y:'1年',
yy:'%d年'
}
});
hooks.defineLocale('jv',{
months:'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
monthsShort:'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
weekdays:'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
weekdaysShort:'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
weekdaysMin:'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
longDateFormat:{
LT:'HH.mm',
LTS:'HH.mm.ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY [pukul] HH.mm',
LLLL:'dddd, D MMMM YYYY [pukul] HH.mm'
},
meridiemParse:/enjing|siyang|sonten|ndalu/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='enjing'){
return hour;
}else if(meridiem==='siyang'){
return hour>=11?hour:hour+12;
}else if(meridiem==='sonten'||meridiem==='ndalu'){
return hour+12;
}
},
meridiem:function(hours,minutes,isLower){
if(hours<11){
return'enjing';
}else if(hours<15){
return'siyang';
}else if(hours<19){
return'sonten';
}else{
return'ndalu';
}
},
calendar:{
sameDay:'[Dinten puniko pukul] LT',
nextDay:'[Mbenjang pukul] LT',
nextWeek:'dddd [pukul] LT',
lastDay:'[Kala wingi pukul] LT',
lastWeek:'dddd [kepengker pukul] LT',
sameElse:'L'
},
relativeTime:{
future:'wonten ing %s',
past:'%s ingkang kepengker',
s:'sawetawis detik',
ss:'%d detik',
m:'setunggal menit',
mm:'%d menit',
h:'setunggal jam',
hh:'%d jam',
d:'sedinten',
dd:'%d dinten',
M:'sewulan',
MM:'%d wulan',
y:'setaun',
yy:'%d taun'
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('ka',{
months:{
standalone:'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
format:'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
},
monthsShort:'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
weekdays:{
standalone:'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
format:'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
isFormat:/(წინა|შემდეგ)/
},
weekdaysShort:'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
weekdaysMin:'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY h:mm A',
LLLL:'dddd, D MMMM YYYY h:mm A'
},
calendar:{
sameDay:'[დღეს] LT[-ზე]',
nextDay:'[ხვალ] LT[-ზე]',
lastDay:'[გუშინ] LT[-ზე]',
nextWeek:'[შემდეგ] dddd LT[-ზე]',
lastWeek:'[წინა] dddd LT-ზე',
sameElse:'L'
},
relativeTime:{
future:function(s){
return(/(წამი|წუთი|საათი|წელი)/).test(s)?
s.replace(/ი$/,'ში'):
s+'ში';
},
past:function(s){
if((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)){
return s.replace(/(ი|ე)$/,'ის უკან');
}
if((/წელი/).test(s)){
return s.replace(/წელი$/,'წლის უკან');
}
},
s:'რამდენიმე წამი',
ss:'%d წამი',
m:'წუთი',
mm:'%d წუთი',
h:'საათი',
hh:'%d საათი',
d:'დღე',
dd:'%d დღე',
M:'თვე',
MM:'%d თვე',
y:'წელი',
yy:'%d წელი'
},
dayOfMonthOrdinalParse:/0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
ordinal:function(number){
if(number===0){
return number;
}
if(number===1){
return number+'-ლი';
}
if((number<20)||(number<=100&&(number%20===0))||(number%100===0)){
return'მე-'+number;
}
return number+'-ე';
},
week:{
dow:1,
doy:7
}
});
var suffixes$1={
0:'-ші',
1:'-ші',
2:'-ші',
3:'-ші',
4:'-ші',
5:'-ші',
6:'-шы',
7:'-ші',
8:'-ші',
9:'-шы',
10:'-шы',
20:'-шы',
30:'-шы',
40:'-шы',
50:'-ші',
60:'-шы',
70:'-ші',
80:'-ші',
90:'-шы',
100:'-ші'
};
hooks.defineLocale('kk',{
months:'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
monthsShort:'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
weekdays:'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
weekdaysShort:'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
weekdaysMin:'жк_дй_сй_ср_бй_жм_сн'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Бүгін сағат] LT',
nextDay:'[Ертең сағат] LT',
nextWeek:'dddd [сағат] LT',
lastDay:'[Кеше сағат] LT',
lastWeek:'[Өткен аптаның] dddd [сағат] LT',
sameElse:'L'
},
relativeTime:{
future:'%s ішінде',
past:'%s бұрын',
s:'бірнеше секунд',
ss:'%d секунд',
m:'бір минут',
mm:'%d минут',
h:'бір сағат',
hh:'%d сағат',
d:'бір күн',
dd:'%d күн',
M:'бір ай',
MM:'%d ай',
y:'бір жыл',
yy:'%d жыл'
},
dayOfMonthOrdinalParse:/\d{1,2}-(ші|шы)/,
ordinal:function(number){
var a=number%10,
b=number>=100?100:null;
return number+(suffixes$1[number]||suffixes$1[a]||suffixes$1[b]);
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('km',{
months:'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
monthsShort:'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
weekdays:'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
weekdaysShort:'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
weekdaysMin:'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[ថ្ងៃនេះ ម៉ោង] LT',
nextDay:'[ស្អែក ម៉ោង] LT',
nextWeek:'dddd [ម៉ោង] LT',
lastDay:'[ម្សិលមិញ ម៉ោង] LT',
lastWeek:'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
sameElse:'L'
},
relativeTime:{
future:'%sទៀត',
past:'%sមុន',
s:'ប៉ុន្មានវិនាទី',
ss:'%d វិនាទី',
m:'មួយនាទី',
mm:'%d នាទី',
h:'មួយម៉ោង',
hh:'%d ម៉ោង',
d:'មួយថ្ងៃ',
dd:'%d ថ្ងៃ',
M:'មួយខែ',
MM:'%d ខែ',
y:'មួយឆ្នាំ',
yy:'%d ឆ្នាំ'
},
week:{
dow:1,
doy:4
}
});
var symbolMap$8={
'1':'೧',
'2':'೨',
'3':'೩',
'4':'೪',
'5':'೫',
'6':'೬',
'7':'೭',
'8':'೮',
'9':'೯',
'0':'೦'
};
var numberMap$7={
'೧':'1',
'೨':'2',
'೩':'3',
'೪':'4',
'೫':'5',
'೬':'6',
'೭':'7',
'೮':'8',
'೯':'9',
'೦':'0'
};
hooks.defineLocale('kn',{
months:'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
monthsShort:'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),
monthsParseExact:true,
weekdays:'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
weekdaysShort:'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
weekdaysMin:'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
longDateFormat:{
LT:'A h:mm',
LTS:'A h:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm',
LLLL:'dddd, D MMMM YYYY, A h:mm'
},
calendar:{
sameDay:'[ಇಂದು] LT',
nextDay:'[ನಾಳೆ] LT',
nextWeek:'dddd, LT',
lastDay:'[ನಿನ್ನೆ] LT',
lastWeek:'[ಕೊನೆಯ] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s ನಂತರ',
past:'%s ಹಿಂದೆ',
s:'ಕೆಲವು ಕ್ಷಣಗಳು',
ss:'%d ಸೆಕೆಂಡುಗಳು',
m:'ಒಂದು ನಿಮಿಷ',
mm:'%d ನಿಮಿಷ',
h:'ಒಂದು ಗಂಟೆ',
hh:'%d ಗಂಟೆ',
d:'ಒಂದು ದಿನ',
dd:'%d ದಿನ',
M:'ಒಂದು ತಿಂಗಳು',
MM:'%d ತಿಂಗಳು',
y:'ಒಂದು ವರ್ಷ',
yy:'%d ವರ್ಷ'
},
preparse:function(string){
return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g,function(match){
return numberMap$7[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$8[match];
});
},
meridiemParse:/ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='ರಾತ್ರಿ'){
return hour<4?hour:hour+12;
}else if(meridiem==='ಬೆಳಿಗ್ಗೆ'){
return hour;
}else if(meridiem==='ಮಧ್ಯಾಹ್ನ'){
return hour>=10?hour:hour+12;
}else if(meridiem==='ಸಂಜೆ'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'ರಾತ್ರಿ';
}else if(hour<10){
return'ಬೆಳಿಗ್ಗೆ';
}else if(hour<17){
return'ಮಧ್ಯಾಹ್ನ';
}else if(hour<20){
return'ಸಂಜೆ';
}else{
return'ರಾತ್ರಿ';
}
},
dayOfMonthOrdinalParse:/\d{1,2}(ನೇ)/,
ordinal:function(number){
return number+'ನೇ';
},
week:{
dow:0,
doy:6
}
});
hooks.defineLocale('ko',{
months:'1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
monthsShort:'1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
weekdays:'일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
weekdaysShort:'일_월_화_수_목_금_토'.split('_'),
weekdaysMin:'일_월_화_수_목_금_토'.split('_'),
longDateFormat:{
LT:'A h:mm',
LTS:'A h:mm:ss',
L:'YYYY.MM.DD',
LL:'YYYY년 MMMM D일',
LLL:'YYYY년 MMMM D일 A h:mm',
LLLL:'YYYY년 MMMM D일 dddd A h:mm',
l:'YYYY.MM.DD',
ll:'YYYY년 MMMM D일',
lll:'YYYY년 MMMM D일 A h:mm',
llll:'YYYY년 MMMM D일 dddd A h:mm'
},
calendar:{
sameDay:'오늘 LT',
nextDay:'내일 LT',
nextWeek:'dddd LT',
lastDay:'어제 LT',
lastWeek:'지난주 dddd LT',
sameElse:'L'
},
relativeTime:{
future:'%s 후',
past:'%s 전',
s:'몇 초',
ss:'%d초',
m:'1분',
mm:'%d분',
h:'한 시간',
hh:'%d시간',
d:'하루',
dd:'%d일',
M:'한 달',
MM:'%d달',
y:'일 년',
yy:'%d년'
},
dayOfMonthOrdinalParse:/\d{1,2}(일|월|주)/,
ordinal:function(number,period){
switch(period){
case'd':
case'D':
case'DDD':
return number+'일';
case'M':
return number+'월';
case'w':
case'W':
return number+'주';
default:
return number;
}
},
meridiemParse:/오전|오후/,
isPM:function(token){
return token==='오후';
},
meridiem:function(hour,minute,isUpper){
return hour<12?'오전':'오후';
}
});
var suffixes$2={
0:'-чү',
1:'-чи',
2:'-чи',
3:'-чү',
4:'-чү',
5:'-чи',
6:'-чы',
7:'-чи',
8:'-чи',
9:'-чу',
10:'-чу',
20:'-чы',
30:'-чу',
40:'-чы',
50:'-чү',
60:'-чы',
70:'-чи',
80:'-чи',
90:'-чу',
100:'-чү'
};
hooks.defineLocale('ky',{
months:'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
monthsShort:'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
weekdays:'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
weekdaysShort:'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
weekdaysMin:'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Бүгүн саат] LT',
nextDay:'[Эртең саат] LT',
nextWeek:'dddd [саат] LT',
lastDay:'[Кече саат] LT',
lastWeek:'[Өткен аптанын] dddd [күнү] [саат] LT',
sameElse:'L'
},
relativeTime:{
future:'%s ичинде',
past:'%s мурун',
s:'бирнече секунд',
ss:'%d секунд',
m:'бир мүнөт',
mm:'%d мүнөт',
h:'бир саат',
hh:'%d саат',
d:'бир күн',
dd:'%d күн',
M:'бир ай',
MM:'%d ай',
y:'бир жыл',
yy:'%d жыл'
},
dayOfMonthOrdinalParse:/\d{1,2}-(чи|чы|чү|чу)/,
ordinal:function(number){
var a=number%10,
b=number>=100?100:null;
return number+(suffixes$2[number]||suffixes$2[a]||suffixes$2[b]);
},
week:{
dow:1,
doy:7
}
});
function processRelativeTime$5(number,withoutSuffix,key,isFuture){
var format={
'm':['eng Minutt','enger Minutt'],
'h':['eng Stonn','enger Stonn'],
'd':['een Dag','engem Dag'],
'M':['ee Mount','engem Mount'],
'y':['ee Joer','engem Joer']
};
return withoutSuffix?format[key][0]:format[key][1];
}
function processFutureTime(string){
var number=string.substr(0,string.indexOf(' '));
if(eifelerRegelAppliesToNumber(number)){
return'a '+string;
}
return'an '+string;
}
function processPastTime(string){
var number=string.substr(0,string.indexOf(' '));
if(eifelerRegelAppliesToNumber(number)){
return'viru '+string;
}
return'virun '+string;
}
function eifelerRegelAppliesToNumber(number){
number=parseInt(number,10);
if(isNaN(number)){
return false;
}
if(number<0){
return true;
}else if(number<10){
if(4<=number&&number<=7){
return true;
}
return false;
}else if(number<100){
var lastDigit=number%10,firstDigit=number/10;
if(lastDigit===0){
return eifelerRegelAppliesToNumber(firstDigit);
}
return eifelerRegelAppliesToNumber(lastDigit);
}else if(number<10000){
while(number>=10){
number=number/10;
}
return eifelerRegelAppliesToNumber(number);
}else{
number=number/1000;
return eifelerRegelAppliesToNumber(number);
}
}
hooks.defineLocale('lb',{
months:'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
monthsShort:'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
monthsParseExact:true,
weekdays:'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
weekdaysShort:'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
weekdaysMin:'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm [Auer]',
LTS:'H:mm:ss [Auer]',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm [Auer]',
LLLL:'dddd, D. MMMM YYYY H:mm [Auer]'
},
calendar:{
sameDay:'[Haut um] LT',
sameElse:'L',
nextDay:'[Muer um] LT',
nextWeek:'dddd [um] LT',
lastDay:'[Gëschter um] LT',
lastWeek:function(){
switch(this.day()){
case 2:
case 4:
return'[Leschten] dddd [um] LT';
default:
return'[Leschte] dddd [um] LT';
}
}
},
relativeTime:{
future:processFutureTime,
past:processPastTime,
s:'e puer Sekonnen',
ss:'%d Sekonnen',
m:processRelativeTime$5,
mm:'%d Minutten',
h:processRelativeTime$5,
hh:'%d Stonnen',
d:processRelativeTime$5,
dd:'%d Deeg',
M:processRelativeTime$5,
MM:'%d Méint',
y:processRelativeTime$5,
yy:'%d Joer'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('lo',{
months:'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
monthsShort:'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
weekdays:'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
weekdaysShort:'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
weekdaysMin:'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'ວັນdddd D MMMM YYYY HH:mm'
},
meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,
isPM:function(input){
return input==='ຕອນແລງ';
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'ຕອນເຊົ້າ';
}else{
return'ຕອນແລງ';
}
},
calendar:{
sameDay:'[ມື້ນີ້ເວລາ] LT',
nextDay:'[ມື້ອື່ນເວລາ] LT',
nextWeek:'[ວັນ]dddd[ໜ້າເວລາ] LT',
lastDay:'[ມື້ວານນີ້ເວລາ] LT',
lastWeek:'[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
sameElse:'L'
},
relativeTime:{
future:'ອີກ %s',
past:'%sຜ່ານມາ',
s:'ບໍ່ເທົ່າໃດວິນາທີ',
ss:'%d ວິນາທີ',
m:'1 ນາທີ',
mm:'%d ນາທີ',
h:'1 ຊົ່ວໂມງ',
hh:'%d ຊົ່ວໂມງ',
d:'1 ມື້',
dd:'%d ມື້',
M:'1 ເດືອນ',
MM:'%d ເດືອນ',
y:'1 ປີ',
yy:'%d ປີ'
},
dayOfMonthOrdinalParse:/(ທີ່)\d{1,2}/,
ordinal:function(number){
return'ທີ່'+number;
}
});
var units={
'ss':'sekundė_sekundžių_sekundes',
'm':'minutė_minutės_minutę',
'mm':'minutės_minučių_minutes',
'h':'valanda_valandos_valandą',
'hh':'valandos_valandų_valandas',
'd':'diena_dienos_dieną',
'dd':'dienos_dienų_dienas',
'M':'mėnuo_mėnesio_mėnesį',
'MM':'mėnesiai_mėnesių_mėnesius',
'y':'metai_metų_metus',
'yy':'metai_metų_metus'
};
function translateSeconds(number,withoutSuffix,key,isFuture){
if(withoutSuffix){
return'kelios sekundės';
}else{
return isFuture?'kelių sekundžių':'kelias sekundes';
}
}
function translateSingular(number,withoutSuffix,key,isFuture){
return withoutSuffix?forms(key)[0]:(isFuture?forms(key)[1]:forms(key)[2]);
}
function special(number){
return number%10===0||(number>10&&number<20);
}
function forms(key){
return units[key].split('_');
}
function translate$6(number,withoutSuffix,key,isFuture){
var result=number+' ';
if(number===1){
return result+translateSingular(number,withoutSuffix,key[0],isFuture);
}else if(withoutSuffix){
return result+(special(number)?forms(key)[1]:forms(key)[0]);
}else{
if(isFuture){
return result+forms(key)[1];
}else{
return result+(special(number)?forms(key)[1]:forms(key)[2]);
}
}
}
hooks.defineLocale('lt',{
months:{
format:'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
standalone:'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
isFormat:/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
},
monthsShort:'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
weekdays:{
format:'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
standalone:'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
isFormat:/dddd HH:mm/
},
weekdaysShort:'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
weekdaysMin:'S_P_A_T_K_Pn_Š'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY-MM-DD',
LL:'YYYY [m.] MMMM D [d.]',
LLL:'YYYY [m.] MMMM D [d.], HH:mm [val.]',
LLLL:'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
l:'YYYY-MM-DD',
ll:'YYYY [m.] MMMM D [d.]',
lll:'YYYY [m.] MMMM D [d.], HH:mm [val.]',
llll:'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
},
calendar:{
sameDay:'[Šiandien] LT',
nextDay:'[Rytoj] LT',
nextWeek:'dddd LT',
lastDay:'[Vakar] LT',
lastWeek:'[Praėjusį] dddd LT',
sameElse:'L'
},
relativeTime:{
future:'po %s',
past:'prieš %s',
s:translateSeconds,
ss:translate$6,
m:translateSingular,
mm:translate$6,
h:translateSingular,
hh:translate$6,
d:translateSingular,
dd:translate$6,
M:translateSingular,
MM:translate$6,
y:translateSingular,
yy:translate$6
},
dayOfMonthOrdinalParse:/\d{1,2}-oji/,
ordinal:function(number){
return number+'-oji';
},
week:{
dow:1,
doy:4
}
});
var units$1={
'ss':'sekundes_sekundēm_sekunde_sekundes'.split('_'),
'm':'minūtes_minūtēm_minūte_minūtes'.split('_'),
'mm':'minūtes_minūtēm_minūte_minūtes'.split('_'),
'h':'stundas_stundām_stunda_stundas'.split('_'),
'hh':'stundas_stundām_stunda_stundas'.split('_'),
'd':'dienas_dienām_diena_dienas'.split('_'),
'dd':'dienas_dienām_diena_dienas'.split('_'),
'M':'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
'MM':'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
'y':'gada_gadiem_gads_gadi'.split('_'),
'yy':'gada_gadiem_gads_gadi'.split('_')
};
function format$1(forms,number,withoutSuffix){
if(withoutSuffix){
return number%10===1&&number%100!==11?forms[2]:forms[3];
}else{
return number%10===1&&number%100!==11?forms[0]:forms[1];
}
}
function relativeTimeWithPlural$1(number,withoutSuffix,key){
return number+' '+format$1(units$1[key],number,withoutSuffix);
}
function relativeTimeWithSingular(number,withoutSuffix,key){
return format$1(units$1[key],number,withoutSuffix);
}
function relativeSeconds(number,withoutSuffix){
return withoutSuffix?'dažas sekundes':'dažām sekundēm';
}
hooks.defineLocale('lv',{
months:'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
monthsShort:'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
weekdays:'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
weekdaysShort:'Sv_P_O_T_C_Pk_S'.split('_'),
weekdaysMin:'Sv_P_O_T_C_Pk_S'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY.',
LL:'YYYY. [gada] D. MMMM',
LLL:'YYYY. [gada] D. MMMM, HH:mm',
LLLL:'YYYY. [gada] D. MMMM, dddd, HH:mm'
},
calendar:{
sameDay:'[Šodien pulksten] LT',
nextDay:'[Rīt pulksten] LT',
nextWeek:'dddd [pulksten] LT',
lastDay:'[Vakar pulksten] LT',
lastWeek:'[Pagājušā] dddd [pulksten] LT',
sameElse:'L'
},
relativeTime:{
future:'pēc %s',
past:'pirms %s',
s:relativeSeconds,
ss:relativeTimeWithPlural$1,
m:relativeTimeWithSingular,
mm:relativeTimeWithPlural$1,
h:relativeTimeWithSingular,
hh:relativeTimeWithPlural$1,
d:relativeTimeWithSingular,
dd:relativeTimeWithPlural$1,
M:relativeTimeWithSingular,
MM:relativeTimeWithPlural$1,
y:relativeTimeWithSingular,
yy:relativeTimeWithPlural$1
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
var translator={
words:{
ss:['sekund','sekunda','sekundi'],
m:['jedan minut','jednog minuta'],
mm:['minut','minuta','minuta'],
h:['jedan sat','jednog sata'],
hh:['sat','sata','sati'],
dd:['dan','dana','dana'],
MM:['mjesec','mjeseca','mjeseci'],
yy:['godina','godine','godina']
},
correctGrammaticalCase:function(number,wordKey){
return number===1?wordKey[0]:(number>=2&&number<=4?wordKey[1]:wordKey[2]);
},
translate:function(number,withoutSuffix,key){
var wordKey=translator.words[key];
if(key.length===1){
return withoutSuffix?wordKey[0]:wordKey[1];
}else{
return number+' '+translator.correctGrammaticalCase(number,wordKey);
}
}
};
hooks.defineLocale('me',{
months:'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
monthsShort:'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
monthsParseExact:true,
weekdays:'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
weekdaysShort:'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
weekdaysMin:'ne_po_ut_sr_če_pe_su'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[danas u] LT',
nextDay:'[sjutra u] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[u] [nedjelju] [u] LT';
case 3:
return'[u] [srijedu] [u] LT';
case 6:
return'[u] [subotu] [u] LT';
case 1:
case 2:
case 4:
case 5:
return'[u] dddd [u] LT';
}
},
lastDay:'[juče u] LT',
lastWeek:function(){
var lastWeekDays=[
'[prošle] [nedjelje] [u] LT',
'[prošlog] [ponedjeljka] [u] LT',
'[prošlog] [utorka] [u] LT',
'[prošle] [srijede] [u] LT',
'[prošlog] [četvrtka] [u] LT',
'[prošlog] [petka] [u] LT',
'[prošle] [subote] [u] LT'
];
return lastWeekDays[this.day()];
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'prije %s',
s:'nekoliko sekundi',
ss:translator.translate,
m:translator.translate,
mm:translator.translate,
h:translator.translate,
hh:translator.translate,
d:'dan',
dd:translator.translate,
M:'mjesec',
MM:translator.translate,
y:'godinu',
yy:translator.translate
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('mi',{
months:'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
monthsShort:'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
monthsRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
monthsStrictRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
monthsShortRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
monthsShortStrictRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
weekdays:'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
weekdaysShort:'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
weekdaysMin:'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY [i] HH:mm',
LLLL:'dddd, D MMMM YYYY [i] HH:mm'
},
calendar:{
sameDay:'[i teie mahana, i] LT',
nextDay:'[apopo i] LT',
nextWeek:'dddd [i] LT',
lastDay:'[inanahi i] LT',
lastWeek:'dddd [whakamutunga i] LT',
sameElse:'L'
},
relativeTime:{
future:'i roto i %s',
past:'%s i mua',
s:'te hēkona ruarua',
ss:'%d hēkona',
m:'he meneti',
mm:'%d meneti',
h:'te haora',
hh:'%d haora',
d:'he ra',
dd:'%d ra',
M:'he marama',
MM:'%d marama',
y:'he tau',
yy:'%d tau'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('mk',{
months:'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
monthsShort:'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
weekdays:'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
weekdaysShort:'нед_пон_вто_сре_чет_пет_саб'.split('_'),
weekdaysMin:'нe_пo_вт_ср_че_пе_сa'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'D.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY H:mm',
LLLL:'dddd, D MMMM YYYY H:mm'
},
calendar:{
sameDay:'[Денес во] LT',
nextDay:'[Утре во] LT',
nextWeek:'[Во] dddd [во] LT',
lastDay:'[Вчера во] LT',
lastWeek:function(){
switch(this.day()){
case 0:
case 3:
case 6:
return'[Изминатата] dddd [во] LT';
case 1:
case 2:
case 4:
case 5:
return'[Изминатиот] dddd [во] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'после %s',
past:'пред %s',
s:'неколку секунди',
ss:'%d секунди',
m:'минута',
mm:'%d минути',
h:'час',
hh:'%d часа',
d:'ден',
dd:'%d дена',
M:'месец',
MM:'%d месеци',
y:'година',
yy:'%d години'
},
dayOfMonthOrdinalParse:/\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
ordinal:function(number){
var lastDigit=number%10,
last2Digits=number%100;
if(number===0){
return number+'-ев';
}else if(last2Digits===0){
return number+'-ен';
}else if(last2Digits>10&&last2Digits<20){
return number+'-ти';
}else if(lastDigit===1){
return number+'-ви';
}else if(lastDigit===2){
return number+'-ри';
}else if(lastDigit===7||lastDigit===8){
return number+'-ми';
}else{
return number+'-ти';
}
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('ml',{
months:'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
monthsShort:'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
monthsParseExact:true,
weekdays:'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
weekdaysShort:'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
weekdaysMin:'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
longDateFormat:{
LT:'A h:mm -നു',
LTS:'A h:mm:ss -നു',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm -നു',
LLLL:'dddd, D MMMM YYYY, A h:mm -നു'
},
calendar:{
sameDay:'[ഇന്ന്] LT',
nextDay:'[നാളെ] LT',
nextWeek:'dddd, LT',
lastDay:'[ഇന്നലെ] LT',
lastWeek:'[കഴിഞ്ഞ] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s കഴിഞ്ഞ്',
past:'%s മുൻപ്',
s:'അൽപ നിമിഷങ്ങൾ',
ss:'%d സെക്കൻഡ്',
m:'ഒരു മിനിറ്റ്',
mm:'%d മിനിറ്റ്',
h:'ഒരു മണിക്കൂർ',
hh:'%d മണിക്കൂർ',
d:'ഒരു ദിവസം',
dd:'%d ദിവസം',
M:'ഒരു മാസം',
MM:'%d മാസം',
y:'ഒരു വർഷം',
yy:'%d വർഷം'
},
meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if((meridiem==='രാത്രി'&&hour>=4)||
meridiem==='ഉച്ച കഴിഞ്ഞ്'||
meridiem==='വൈകുന്നേരം'){
return hour+12;
}else{
return hour;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'രാത്രി';
}else if(hour<12){
return'രാവിലെ';
}else if(hour<17){
return'ഉച്ച കഴിഞ്ഞ്';
}else if(hour<20){
return'വൈകുന്നേരം';
}else{
return'രാത്രി';
}
}
});
var symbolMap$9={
'1':'१',
'2':'२',
'3':'३',
'4':'४',
'5':'५',
'6':'६',
'7':'७',
'8':'८',
'9':'९',
'0':'०'
};
var numberMap$8={
'१':'1',
'२':'2',
'३':'3',
'४':'4',
'५':'5',
'६':'6',
'७':'7',
'८':'8',
'९':'9',
'०':'0'
};
function relativeTimeMr(number,withoutSuffix,string,isFuture)
{
var output='';
if(withoutSuffix){
switch(string){
case's':output='काही सेकंद';break;
case'ss':output='%d सेकंद';break;
case'm':output='एक मिनिट';break;
case'mm':output='%d मिनिटे';break;
case'h':output='एक तास';break;
case'hh':output='%d तास';break;
case'd':output='एक दिवस';break;
case'dd':output='%d दिवस';break;
case'M':output='एक महिना';break;
case'MM':output='%d महिने';break;
case'y':output='एक वर्ष';break;
case'yy':output='%d वर्षे';break;
}
}
else{
switch(string){
case's':output='काही सेकंदां';break;
case'ss':output='%d सेकंदां';break;
case'm':output='एका मिनिटा';break;
case'mm':output='%d मिनिटां';break;
case'h':output='एका तासा';break;
case'hh':output='%d तासां';break;
case'd':output='एका दिवसा';break;
case'dd':output='%d दिवसां';break;
case'M':output='एका महिन्या';break;
case'MM':output='%d महिन्यां';break;
case'y':output='एका वर्षा';break;
case'yy':output='%d वर्षां';break;
}
}
return output.replace(/%d/i,number);
}
hooks.defineLocale('mr',{
months:'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
monthsShort:'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
monthsParseExact:true,
weekdays:'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
weekdaysShort:'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
weekdaysMin:'र_सो_मं_बु_गु_शु_श'.split('_'),
longDateFormat:{
LT:'A h:mm वाजता',
LTS:'A h:mm:ss वाजता',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm वाजता',
LLLL:'dddd, D MMMM YYYY, A h:mm वाजता'
},
calendar:{
sameDay:'[आज] LT',
nextDay:'[उद्या] LT',
nextWeek:'dddd, LT',
lastDay:'[काल] LT',
lastWeek:'[मागील] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%sमध्ये',
past:'%sपूर्वी',
s:relativeTimeMr,
ss:relativeTimeMr,
m:relativeTimeMr,
mm:relativeTimeMr,
h:relativeTimeMr,
hh:relativeTimeMr,
d:relativeTimeMr,
dd:relativeTimeMr,
M:relativeTimeMr,
MM:relativeTimeMr,
y:relativeTimeMr,
yy:relativeTimeMr
},
preparse:function(string){
return string.replace(/[१२३४५६७८९०]/g,function(match){
return numberMap$8[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$9[match];
});
},
meridiemParse:/रात्री|सकाळी|दुपारी|सायंकाळी/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='रात्री'){
return hour<4?hour:hour+12;
}else if(meridiem==='सकाळी'){
return hour;
}else if(meridiem==='दुपारी'){
return hour>=10?hour:hour+12;
}else if(meridiem==='सायंकाळी'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'रात्री';
}else if(hour<10){
return'सकाळी';
}else if(hour<17){
return'दुपारी';
}else if(hour<20){
return'सायंकाळी';
}else{
return'रात्री';
}
},
week:{
dow:0,
doy:6
}
});
hooks.defineLocale('ms-my',{
months:'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
monthsShort:'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
weekdays:'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
weekdaysShort:'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
weekdaysMin:'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
longDateFormat:{
LT:'HH.mm',
LTS:'HH.mm.ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY [pukul] HH.mm',
LLLL:'dddd, D MMMM YYYY [pukul] HH.mm'
},
meridiemParse:/pagi|tengahari|petang|malam/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='pagi'){
return hour;
}else if(meridiem==='tengahari'){
return hour>=11?hour:hour+12;
}else if(meridiem==='petang'||meridiem==='malam'){
return hour+12;
}
},
meridiem:function(hours,minutes,isLower){
if(hours<11){
return'pagi';
}else if(hours<15){
return'tengahari';
}else if(hours<19){
return'petang';
}else{
return'malam';
}
},
calendar:{
sameDay:'[Hari ini pukul] LT',
nextDay:'[Esok pukul] LT',
nextWeek:'dddd [pukul] LT',
lastDay:'[Kelmarin pukul] LT',
lastWeek:'dddd [lepas pukul] LT',
sameElse:'L'
},
relativeTime:{
future:'dalam %s',
past:'%s yang lepas',
s:'beberapa saat',
ss:'%d saat',
m:'seminit',
mm:'%d minit',
h:'sejam',
hh:'%d jam',
d:'sehari',
dd:'%d hari',
M:'sebulan',
MM:'%d bulan',
y:'setahun',
yy:'%d tahun'
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('ms',{
months:'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
monthsShort:'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
weekdays:'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
weekdaysShort:'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
weekdaysMin:'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
longDateFormat:{
LT:'HH.mm',
LTS:'HH.mm.ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY [pukul] HH.mm',
LLLL:'dddd, D MMMM YYYY [pukul] HH.mm'
},
meridiemParse:/pagi|tengahari|petang|malam/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='pagi'){
return hour;
}else if(meridiem==='tengahari'){
return hour>=11?hour:hour+12;
}else if(meridiem==='petang'||meridiem==='malam'){
return hour+12;
}
},
meridiem:function(hours,minutes,isLower){
if(hours<11){
return'pagi';
}else if(hours<15){
return'tengahari';
}else if(hours<19){
return'petang';
}else{
return'malam';
}
},
calendar:{
sameDay:'[Hari ini pukul] LT',
nextDay:'[Esok pukul] LT',
nextWeek:'dddd [pukul] LT',
lastDay:'[Kelmarin pukul] LT',
lastWeek:'dddd [lepas pukul] LT',
sameElse:'L'
},
relativeTime:{
future:'dalam %s',
past:'%s yang lepas',
s:'beberapa saat',
ss:'%d saat',
m:'seminit',
mm:'%d minit',
h:'sejam',
hh:'%d jam',
d:'sehari',
dd:'%d hari',
M:'sebulan',
MM:'%d bulan',
y:'setahun',
yy:'%d tahun'
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('mt',{
months:'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
monthsShort:'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
weekdays:'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
weekdaysShort:'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
weekdaysMin:'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Illum fil-]LT',
nextDay:'[Għada fil-]LT',
nextWeek:'dddd [fil-]LT',
lastDay:'[Il-bieraħ fil-]LT',
lastWeek:'dddd [li għadda] [fil-]LT',
sameElse:'L'
},
relativeTime:{
future:'f’ %s',
past:'%s ilu',
s:'ftit sekondi',
ss:'%d sekondi',
m:'minuta',
mm:'%d minuti',
h:'siegħa',
hh:'%d siegħat',
d:'ġurnata',
dd:'%d ġranet',
M:'xahar',
MM:'%d xhur',
y:'sena',
yy:'%d sni'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
var symbolMap$10={
'1':'၁',
'2':'၂',
'3':'၃',
'4':'၄',
'5':'၅',
'6':'၆',
'7':'၇',
'8':'၈',
'9':'၉',
'0':'၀'
};
var numberMap$9={
'၁':'1',
'၂':'2',
'၃':'3',
'၄':'4',
'၅':'5',
'၆':'6',
'၇':'7',
'၈':'8',
'၉':'9',
'၀':'0'
};
hooks.defineLocale('my',{
months:'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
monthsShort:'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
weekdays:'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
weekdaysShort:'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
weekdaysMin:'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[ယနေ.] LT [မှာ]',
nextDay:'[မနက်ဖြန်] LT [မှာ]',
nextWeek:'dddd LT [မှာ]',
lastDay:'[မနေ.က] LT [မှာ]',
lastWeek:'[ပြီးခဲ့သော] dddd LT [မှာ]',
sameElse:'L'
},
relativeTime:{
future:'လာမည့် %s မှာ',
past:'လွန်ခဲ့သော %s က',
s:'စက္ကန်.အနည်းငယ်',
ss:'%d စက္ကန့်',
m:'တစ်မိနစ်',
mm:'%d မိနစ်',
h:'တစ်နာရီ',
hh:'%d နာရီ',
d:'တစ်ရက်',
dd:'%d ရက်',
M:'တစ်လ',
MM:'%d လ',
y:'တစ်နှစ်',
yy:'%d နှစ်'
},
preparse:function(string){
return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,function(match){
return numberMap$9[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$10[match];
});
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('nb',{
months:'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
monthsShort:'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
monthsParseExact:true,
weekdays:'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
weekdaysShort:'sø._ma._ti._on._to._fr._lø.'.split('_'),
weekdaysMin:'sø_ma_ti_on_to_fr_lø'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY [kl.] HH:mm',
LLLL:'dddd D. MMMM YYYY [kl.] HH:mm'
},
calendar:{
sameDay:'[i dag kl.] LT',
nextDay:'[i morgen kl.] LT',
nextWeek:'dddd [kl.] LT',
lastDay:'[i går kl.] LT',
lastWeek:'[forrige] dddd [kl.] LT',
sameElse:'L'
},
relativeTime:{
future:'om %s',
past:'%s siden',
s:'noen sekunder',
ss:'%d sekunder',
m:'ett minutt',
mm:'%d minutter',
h:'en time',
hh:'%d timer',
d:'en dag',
dd:'%d dager',
M:'en måned',
MM:'%d måneder',
y:'ett år',
yy:'%d år'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
var symbolMap$11={
'1':'१',
'2':'२',
'3':'३',
'4':'४',
'5':'५',
'6':'६',
'7':'७',
'8':'८',
'9':'९',
'0':'०'
};
var numberMap$10={
'१':'1',
'२':'2',
'३':'3',
'४':'4',
'५':'5',
'६':'6',
'७':'7',
'८':'8',
'९':'9',
'०':'0'
};
hooks.defineLocale('ne',{
months:'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
monthsShort:'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
monthsParseExact:true,
weekdays:'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
weekdaysShort:'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
weekdaysMin:'आ._सो._मं._बु._बि._शु._श.'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'Aको h:mm बजे',
LTS:'Aको h:mm:ss बजे',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, Aको h:mm बजे',
LLLL:'dddd, D MMMM YYYY, Aको h:mm बजे'
},
preparse:function(string){
return string.replace(/[१२३४५६७८९०]/g,function(match){
return numberMap$10[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$11[match];
});
},
meridiemParse:/राति|बिहान|दिउँसो|साँझ/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='राति'){
return hour<4?hour:hour+12;
}else if(meridiem==='बिहान'){
return hour;
}else if(meridiem==='दिउँसो'){
return hour>=10?hour:hour+12;
}else if(meridiem==='साँझ'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<3){
return'राति';
}else if(hour<12){
return'बिहान';
}else if(hour<16){
return'दिउँसो';
}else if(hour<20){
return'साँझ';
}else{
return'राति';
}
},
calendar:{
sameDay:'[आज] LT',
nextDay:'[भोलि] LT',
nextWeek:'[आउँदो] dddd[,] LT',
lastDay:'[हिजो] LT',
lastWeek:'[गएको] dddd[,] LT',
sameElse:'L'
},
relativeTime:{
future:'%sमा',
past:'%s अगाडि',
s:'केही क्षण',
ss:'%d सेकेण्ड',
m:'एक मिनेट',
mm:'%d मिनेट',
h:'एक घण्टा',
hh:'%d घण्टा',
d:'एक दिन',
dd:'%d दिन',
M:'एक महिना',
MM:'%d महिना',
y:'एक बर्ष',
yy:'%d बर्ष'
},
week:{
dow:0,
doy:6
}
});
var monthsShortWithDots$1='jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots$1='jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
var monthsParse$2=[/^jan/i,/^feb/i,/^maart|mrt.?$/i,/^apr/i,/^mei$/i,/^jun[i.]?$/i,/^jul[i.]?$/i,/^aug/i,/^sep/i,/^okt/i,/^nov/i,/^dec/i];
var monthsRegex$3=/^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
hooks.defineLocale('nl-be',{
months:'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
monthsShort:function(m,format){
if(!m){
return monthsShortWithDots$1;
}else if(/-MMM-/.test(format)){
return monthsShortWithoutDots$1[m.month()];
}else{
return monthsShortWithDots$1[m.month()];
}
},
monthsRegex:monthsRegex$3,
monthsShortRegex:monthsRegex$3,
monthsStrictRegex:/^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
monthsShortStrictRegex:/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
monthsParse:monthsParse$2,
longMonthsParse:monthsParse$2,
shortMonthsParse:monthsParse$2,
weekdays:'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
weekdaysShort:'zo._ma._di._wo._do._vr._za.'.split('_'),
weekdaysMin:'zo_ma_di_wo_do_vr_za'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[vandaag om] LT',
nextDay:'[morgen om] LT',
nextWeek:'dddd [om] LT',
lastDay:'[gisteren om] LT',
lastWeek:'[afgelopen] dddd [om] LT',
sameElse:'L'
},
relativeTime:{
future:'over %s',
past:'%s geleden',
s:'een paar seconden',
ss:'%d seconden',
m:'één minuut',
mm:'%d minuten',
h:'één uur',
hh:'%d uur',
d:'één dag',
dd:'%d dagen',
M:'één maand',
MM:'%d maanden',
y:'één jaar',
yy:'%d jaar'
},
dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,
ordinal:function(number){
return number+((number===1||number===8||number>=20)?'ste':'de');
},
week:{
dow:1,
doy:4
}
});
var monthsShortWithDots$2='jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots$2='jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
var monthsParse$3=[/^jan/i,/^feb/i,/^maart|mrt.?$/i,/^apr/i,/^mei$/i,/^jun[i.]?$/i,/^jul[i.]?$/i,/^aug/i,/^sep/i,/^okt/i,/^nov/i,/^dec/i];
var monthsRegex$4=/^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
hooks.defineLocale('nl',{
months:'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
monthsShort:function(m,format){
if(!m){
return monthsShortWithDots$2;
}else if(/-MMM-/.test(format)){
return monthsShortWithoutDots$2[m.month()];
}else{
return monthsShortWithDots$2[m.month()];
}
},
monthsRegex:monthsRegex$4,
monthsShortRegex:monthsRegex$4,
monthsStrictRegex:/^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
monthsShortStrictRegex:/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
monthsParse:monthsParse$3,
longMonthsParse:monthsParse$3,
shortMonthsParse:monthsParse$3,
weekdays:'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
weekdaysShort:'zo._ma._di._wo._do._vr._za.'.split('_'),
weekdaysMin:'zo_ma_di_wo_do_vr_za'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD-MM-YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[vandaag om] LT',
nextDay:'[morgen om] LT',
nextWeek:'dddd [om] LT',
lastDay:'[gisteren om] LT',
lastWeek:'[afgelopen] dddd [om] LT',
sameElse:'L'
},
relativeTime:{
future:'over %s',
past:'%s geleden',
s:'een paar seconden',
ss:'%d seconden',
m:'één minuut',
mm:'%d minuten',
h:'één uur',
hh:'%d uur',
d:'één dag',
dd:'%d dagen',
M:'één maand',
MM:'%d maanden',
y:'één jaar',
yy:'%d jaar'
},
dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,
ordinal:function(number){
return number+((number===1||number===8||number>=20)?'ste':'de');
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('nn',{
months:'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
monthsShort:'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
weekdays:'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
weekdaysShort:'sun_mån_tys_ons_tor_fre_lau'.split('_'),
weekdaysMin:'su_må_ty_on_to_fr_lø'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY [kl.] H:mm',
LLLL:'dddd D. MMMM YYYY [kl.] HH:mm'
},
calendar:{
sameDay:'[I dag klokka] LT',
nextDay:'[I morgon klokka] LT',
nextWeek:'dddd [klokka] LT',
lastDay:'[I går klokka] LT',
lastWeek:'[Føregåande] dddd [klokka] LT',
sameElse:'L'
},
relativeTime:{
future:'om %s',
past:'%s sidan',
s:'nokre sekund',
ss:'%d sekund',
m:'eit minutt',
mm:'%d minutt',
h:'ein time',
hh:'%d timar',
d:'ein dag',
dd:'%d dagar',
M:'ein månad',
MM:'%d månader',
y:'eit år',
yy:'%d år'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
var symbolMap$12={
'1':'੧',
'2':'੨',
'3':'੩',
'4':'੪',
'5':'੫',
'6':'੬',
'7':'੭',
'8':'੮',
'9':'੯',
'0':'੦'
};
var numberMap$11={
'੧':'1',
'੨':'2',
'੩':'3',
'੪':'4',
'੫':'5',
'੬':'6',
'੭':'7',
'੮':'8',
'੯':'9',
'੦':'0'
};
hooks.defineLocale('pa-in',{
months:'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
monthsShort:'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
weekdays:'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
weekdaysShort:'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
weekdaysMin:'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
longDateFormat:{
LT:'A h:mm ਵਜੇ',
LTS:'A h:mm:ss ਵਜੇ',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm ਵਜੇ',
LLLL:'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
},
calendar:{
sameDay:'[ਅਜ] LT',
nextDay:'[ਕਲ] LT',
nextWeek:'dddd, LT',
lastDay:'[ਕਲ] LT',
lastWeek:'[ਪਿਛਲੇ] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s ਵਿੱਚ',
past:'%s ਪਿਛਲੇ',
s:'ਕੁਝ ਸਕਿੰਟ',
ss:'%d ਸਕਿੰਟ',
m:'ਇਕ ਮਿੰਟ',
mm:'%d ਮਿੰਟ',
h:'ਇੱਕ ਘੰਟਾ',
hh:'%d ਘੰਟੇ',
d:'ਇੱਕ ਦਿਨ',
dd:'%d ਦਿਨ',
M:'ਇੱਕ ਮਹੀਨਾ',
MM:'%d ਮਹੀਨੇ',
y:'ਇੱਕ ਸਾਲ',
yy:'%d ਸਾਲ'
},
preparse:function(string){
return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,function(match){
return numberMap$11[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$12[match];
});
},
meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='ਰਾਤ'){
return hour<4?hour:hour+12;
}else if(meridiem==='ਸਵੇਰ'){
return hour;
}else if(meridiem==='ਦੁਪਹਿਰ'){
return hour>=10?hour:hour+12;
}else if(meridiem==='ਸ਼ਾਮ'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'ਰਾਤ';
}else if(hour<10){
return'ਸਵੇਰ';
}else if(hour<17){
return'ਦੁਪਹਿਰ';
}else if(hour<20){
return'ਸ਼ਾਮ';
}else{
return'ਰਾਤ';
}
},
week:{
dow:0,
doy:6
}
});
var monthsNominative='styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
var monthsSubjective='stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
function plural$3(n){
return(n%10<5)&&(n%10>1)&&((~~(n/10)%10)!==1);
}
function translate$7(number,withoutSuffix,key){
var result=number+' ';
switch(key){
case'ss':
return result+(plural$3(number)?'sekundy':'sekund');
case'm':
return withoutSuffix?'minuta':'minutę';
case'mm':
return result+(plural$3(number)?'minuty':'minut');
case'h':
return withoutSuffix?'godzina':'godzinę';
case'hh':
return result+(plural$3(number)?'godziny':'godzin');
case'MM':
return result+(plural$3(number)?'miesiące':'miesięcy');
case'yy':
return result+(plural$3(number)?'lata':'lat');
}
}
hooks.defineLocale('pl',{
months:function(momentToFormat,format){
if(!momentToFormat){
return monthsNominative;
}else if(format===''){
return'('+monthsSubjective[momentToFormat.month()]+'|'+monthsNominative[momentToFormat.month()]+')';
}else if(/D MMMM/.test(format)){
return monthsSubjective[momentToFormat.month()];
}else{
return monthsNominative[momentToFormat.month()];
}
},
monthsShort:'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
weekdays:'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
weekdaysShort:'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
weekdaysMin:'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Dziś o] LT',
nextDay:'[Jutro o] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[W niedzielę o] LT';
case 2:
return'[We wtorek o] LT';
case 3:
return'[W środę o] LT';
case 6:
return'[W sobotę o] LT';
default:
return'[W] dddd [o] LT';
}
},
lastDay:'[Wczoraj o] LT',
lastWeek:function(){
switch(this.day()){
case 0:
return'[W zeszłą niedzielę o] LT';
case 3:
return'[W zeszłą środę o] LT';
case 6:
return'[W zeszłą sobotę o] LT';
default:
return'[W zeszły] dddd [o] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'%s temu',
s:'kilka sekund',
ss:translate$7,
m:translate$7,
mm:translate$7,
h:translate$7,
hh:translate$7,
d:'1 dzień',
dd:'%d dni',
M:'miesiąc',
MM:translate$7,
y:'rok',
yy:translate$7
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('pt-br',{
months:'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
monthsShort:'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
weekdays:'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
weekdaysShort:'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
weekdaysMin:'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D [de] MMMM [de] YYYY',
LLL:'D [de] MMMM [de] YYYY [às] HH:mm',
LLLL:'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
},
calendar:{
sameDay:'[Hoje às] LT',
nextDay:'[Amanhã às] LT',
nextWeek:'dddd [às] LT',
lastDay:'[Ontem às] LT',
lastWeek:function(){
return(this.day()===0||this.day()===6)?
'[Último] dddd [às] LT':
'[Última] dddd [às] LT';
},
sameElse:'L'
},
relativeTime:{
future:'em %s',
past:'%s atrás',
s:'poucos segundos',
ss:'%d segundos',
m:'um minuto',
mm:'%d minutos',
h:'uma hora',
hh:'%d horas',
d:'um dia',
dd:'%d dias',
M:'um mês',
MM:'%d meses',
y:'um ano',
yy:'%d anos'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº'
});
hooks.defineLocale('pt',{
months:'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
monthsShort:'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
weekdays:'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
weekdaysShort:'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
weekdaysMin:'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D [de] MMMM [de] YYYY',
LLL:'D [de] MMMM [de] YYYY HH:mm',
LLLL:'dddd, D [de] MMMM [de] YYYY HH:mm'
},
calendar:{
sameDay:'[Hoje às] LT',
nextDay:'[Amanhã às] LT',
nextWeek:'dddd [às] LT',
lastDay:'[Ontem às] LT',
lastWeek:function(){
return(this.day()===0||this.day()===6)?
'[Último] dddd [às] LT':
'[Última] dddd [às] LT';
},
sameElse:'L'
},
relativeTime:{
future:'em %s',
past:'há %s',
s:'segundos',
ss:'%d segundos',
m:'um minuto',
mm:'%d minutos',
h:'uma hora',
hh:'%d horas',
d:'um dia',
dd:'%d dias',
M:'um mês',
MM:'%d meses',
y:'um ano',
yy:'%d anos'
},
dayOfMonthOrdinalParse:/\d{1,2}º/,
ordinal:'%dº',
week:{
dow:1,
doy:4
}
});
function relativeTimeWithPlural$2(number,withoutSuffix,key){
var format={
'ss':'secunde',
'mm':'minute',
'hh':'ore',
'dd':'zile',
'MM':'luni',
'yy':'ani'
},
separator=' ';
if(number%100>=20||(number>=100&&number%100===0)){
separator=' de ';
}
return number+separator+format[key];
}
hooks.defineLocale('ro',{
months:'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
monthsShort:'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
monthsParseExact:true,
weekdays:'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
weekdaysShort:'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
weekdaysMin:'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY H:mm',
LLLL:'dddd, D MMMM YYYY H:mm'
},
calendar:{
sameDay:'[azi la] LT',
nextDay:'[mâine la] LT',
nextWeek:'dddd [la] LT',
lastDay:'[ieri la] LT',
lastWeek:'[fosta] dddd [la] LT',
sameElse:'L'
},
relativeTime:{
future:'peste %s',
past:'%s în urmă',
s:'câteva secunde',
ss:relativeTimeWithPlural$2,
m:'un minut',
mm:relativeTimeWithPlural$2,
h:'o oră',
hh:relativeTimeWithPlural$2,
d:'o zi',
dd:relativeTimeWithPlural$2,
M:'o lună',
MM:relativeTimeWithPlural$2,
y:'un an',
yy:relativeTimeWithPlural$2
},
week:{
dow:1,
doy:7
}
});
function plural$4(word,num){
var forms=word.split('_');
return num%10===1&&num%100!==11?forms[0]:(num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2]);
}
function relativeTimeWithPlural$3(number,withoutSuffix,key){
var format={
'ss':withoutSuffix?'секунда_секунды_секунд':'секунду_секунды_секунд',
'mm':withoutSuffix?'минута_минуты_минут':'минуту_минуты_минут',
'hh':'час_часа_часов',
'dd':'день_дня_дней',
'MM':'месяц_месяца_месяцев',
'yy':'год_года_лет'
};
if(key==='m'){
return withoutSuffix?'минута':'минуту';
}
else{
return number+' '+plural$4(format[key],+number);
}
}
var monthsParse$4=[/^янв/i,/^фев/i,/^мар/i,/^апр/i,/^ма[йя]/i,/^июн/i,/^июл/i,/^авг/i,/^сен/i,/^окт/i,/^ноя/i,/^дек/i];
hooks.defineLocale('ru',{
months:{
format:'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
standalone:'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
},
monthsShort:{
format:'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
standalone:'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
},
weekdays:{
standalone:'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
format:'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
isFormat:/\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
},
weekdaysShort:'вс_пн_вт_ср_чт_пт_сб'.split('_'),
weekdaysMin:'вс_пн_вт_ср_чт_пт_сб'.split('_'),
monthsParse:monthsParse$4,
longMonthsParse:monthsParse$4,
shortMonthsParse:monthsParse$4,
monthsRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
monthsShortRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
monthsStrictRegex:/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
monthsShortStrictRegex:/^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY г.',
LLL:'D MMMM YYYY г., H:mm',
LLLL:'dddd, D MMMM YYYY г., H:mm'
},
calendar:{
sameDay:'[Сегодня в] LT',
nextDay:'[Завтра в] LT',
lastDay:'[Вчера в] LT',
nextWeek:function(now){
if(now.week()!==this.week()){
switch(this.day()){
case 0:
return'[В следующее] dddd [в] LT';
case 1:
case 2:
case 4:
return'[В следующий] dddd [в] LT';
case 3:
case 5:
case 6:
return'[В следующую] dddd [в] LT';
}
}else{
if(this.day()===2){
return'[Во] dddd [в] LT';
}else{
return'[В] dddd [в] LT';
}
}
},
lastWeek:function(now){
if(now.week()!==this.week()){
switch(this.day()){
case 0:
return'[В прошлое] dddd [в] LT';
case 1:
case 2:
case 4:
return'[В прошлый] dddd [в] LT';
case 3:
case 5:
case 6:
return'[В прошлую] dddd [в] LT';
}
}else{
if(this.day()===2){
return'[Во] dddd [в] LT';
}else{
return'[В] dddd [в] LT';
}
}
},
sameElse:'L'
},
relativeTime:{
future:'через %s',
past:'%s назад',
s:'несколько секунд',
ss:relativeTimeWithPlural$3,
m:relativeTimeWithPlural$3,
mm:relativeTimeWithPlural$3,
h:'час',
hh:relativeTimeWithPlural$3,
d:'день',
dd:relativeTimeWithPlural$3,
M:'месяц',
MM:relativeTimeWithPlural$3,
y:'год',
yy:relativeTimeWithPlural$3
},
meridiemParse:/ночи|утра|дня|вечера/i,
isPM:function(input){
return/^(дня|вечера)$/.test(input);
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'ночи';
}else if(hour<12){
return'утра';
}else if(hour<17){
return'дня';
}else{
return'вечера';
}
},
dayOfMonthOrdinalParse:/\d{1,2}-(й|го|я)/,
ordinal:function(number,period){
switch(period){
case'M':
case'd':
case'DDD':
return number+'-й';
case'D':
return number+'-го';
case'w':
case'W':
return number+'-я';
default:
return number;
}
},
week:{
dow:1,
doy:4
}
});
var months$6=[
'جنوري',
'فيبروري',
'مارچ',
'اپريل',
'مئي',
'جون',
'جولاءِ',
'آگسٽ',
'سيپٽمبر',
'آڪٽوبر',
'نومبر',
'ڊسمبر'
];
var days$1=[
'آچر',
'سومر',
'اڱارو',
'اربع',
'خميس',
'جمع',
'ڇنڇر'
];
hooks.defineLocale('sd',{
months:months$6,
monthsShort:months$6,
weekdays:days$1,
weekdaysShort:days$1,
weekdaysMin:days$1,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd، D MMMM YYYY HH:mm'
},
meridiemParse:/صبح|شام/,
isPM:function(input){
return'شام'===input;
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'صبح';
}
return'شام';
},
calendar:{
sameDay:'[اڄ] LT',
nextDay:'[سڀاڻي] LT',
nextWeek:'dddd [اڳين هفتي تي] LT',
lastDay:'[ڪالهه] LT',
lastWeek:'[گزريل هفتي] dddd [تي] LT',
sameElse:'L'
},
relativeTime:{
future:'%s پوء',
past:'%s اڳ',
s:'چند سيڪنڊ',
ss:'%d سيڪنڊ',
m:'هڪ منٽ',
mm:'%d منٽ',
h:'هڪ ڪلاڪ',
hh:'%d ڪلاڪ',
d:'هڪ ڏينهن',
dd:'%d ڏينهن',
M:'هڪ مهينو',
MM:'%d مهينا',
y:'هڪ سال',
yy:'%d سال'
},
preparse:function(string){
return string.replace(/،/g,',');
},
postformat:function(string){
return string.replace(/,/g,'،');
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('se',{
months:'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
monthsShort:'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
weekdays:'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
weekdaysShort:'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
weekdaysMin:'s_v_m_g_d_b_L'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'MMMM D. [b.] YYYY',
LLL:'MMMM D. [b.] YYYY [ti.] HH:mm',
LLLL:'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
},
calendar:{
sameDay:'[otne ti] LT',
nextDay:'[ihttin ti] LT',
nextWeek:'dddd [ti] LT',
lastDay:'[ikte ti] LT',
lastWeek:'[ovddit] dddd [ti] LT',
sameElse:'L'
},
relativeTime:{
future:'%s geažes',
past:'maŋit %s',
s:'moadde sekunddat',
ss:'%d sekunddat',
m:'okta minuhta',
mm:'%d minuhtat',
h:'okta diimmu',
hh:'%d diimmut',
d:'okta beaivi',
dd:'%d beaivvit',
M:'okta mánnu',
MM:'%d mánut',
y:'okta jahki',
yy:'%d jagit'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('si',{
months:'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
monthsShort:'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
weekdays:'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
weekdaysShort:'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
weekdaysMin:'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'a h:mm',
LTS:'a h:mm:ss',
L:'YYYY/MM/DD',
LL:'YYYY MMMM D',
LLL:'YYYY MMMM D, a h:mm',
LLLL:'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
},
calendar:{
sameDay:'[අද] LT[ට]',
nextDay:'[හෙට] LT[ට]',
nextWeek:'dddd LT[ට]',
lastDay:'[ඊයේ] LT[ට]',
lastWeek:'[පසුගිය] dddd LT[ට]',
sameElse:'L'
},
relativeTime:{
future:'%sකින්',
past:'%sකට පෙර',
s:'තත්පර කිහිපය',
ss:'තත්පර %d',
m:'මිනිත්තුව',
mm:'මිනිත්තු %d',
h:'පැය',
hh:'පැය %d',
d:'දිනය',
dd:'දින %d',
M:'මාසය',
MM:'මාස %d',
y:'වසර',
yy:'වසර %d'
},
dayOfMonthOrdinalParse:/\d{1,2} වැනි/,
ordinal:function(number){
return number+' වැනි';
},
meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
isPM:function(input){
return input==='ප.ව.'||input==='පස් වරු';
},
meridiem:function(hours,minutes,isLower){
if(hours>11){
return isLower?'ප.ව.':'පස් වරු';
}else{
return isLower?'පෙ.ව.':'පෙර වරු';
}
}
});
var months$7='január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
var monthsShort$5='jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
function plural$5(n){
return(n>1)&&(n<5);
}
function translate$8(number,withoutSuffix,key,isFuture){
var result=number+' ';
switch(key){
case's':
return(withoutSuffix||isFuture)?'pár sekúnd':'pár sekundami';
case'ss':
if(withoutSuffix||isFuture){
return result+(plural$5(number)?'sekundy':'sekúnd');
}else{
return result+'sekundami';
}
break;
case'm':
return withoutSuffix?'minúta':(isFuture?'minútu':'minútou');
case'mm':
if(withoutSuffix||isFuture){
return result+(plural$5(number)?'minúty':'minút');
}else{
return result+'minútami';
}
break;
case'h':
return withoutSuffix?'hodina':(isFuture?'hodinu':'hodinou');
case'hh':
if(withoutSuffix||isFuture){
return result+(plural$5(number)?'hodiny':'hodín');
}else{
return result+'hodinami';
}
break;
case'd':
return(withoutSuffix||isFuture)?'deň':'dňom';
case'dd':
if(withoutSuffix||isFuture){
return result+(plural$5(number)?'dni':'dní');
}else{
return result+'dňami';
}
break;
case'M':
return(withoutSuffix||isFuture)?'mesiac':'mesiacom';
case'MM':
if(withoutSuffix||isFuture){
return result+(plural$5(number)?'mesiace':'mesiacov');
}else{
return result+'mesiacmi';
}
break;
case'y':
return(withoutSuffix||isFuture)?'rok':'rokom';
case'yy':
if(withoutSuffix||isFuture){
return result+(plural$5(number)?'roky':'rokov');
}else{
return result+'rokmi';
}
break;
}
}
hooks.defineLocale('sk',{
months:months$7,
monthsShort:monthsShort$5,
weekdays:'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
weekdaysShort:'ne_po_ut_st_št_pi_so'.split('_'),
weekdaysMin:'ne_po_ut_st_št_pi_so'.split('_'),
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[dnes o] LT',
nextDay:'[zajtra o] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[v nedeľu o] LT';
case 1:
case 2:
return'[v] dddd [o] LT';
case 3:
return'[v stredu o] LT';
case 4:
return'[vo štvrtok o] LT';
case 5:
return'[v piatok o] LT';
case 6:
return'[v sobotu o] LT';
}
},
lastDay:'[včera o] LT',
lastWeek:function(){
switch(this.day()){
case 0:
return'[minulú nedeľu o] LT';
case 1:
case 2:
return'[minulý] dddd [o] LT';
case 3:
return'[minulú stredu o] LT';
case 4:
case 5:
return'[minulý] dddd [o] LT';
case 6:
return'[minulú sobotu o] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'pred %s',
s:translate$8,
ss:translate$8,
m:translate$8,
mm:translate$8,
h:translate$8,
hh:translate$8,
d:translate$8,
dd:translate$8,
M:translate$8,
MM:translate$8,
y:translate$8,
yy:translate$8
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
function processRelativeTime$6(number,withoutSuffix,key,isFuture){
var result=number+' ';
switch(key){
case's':
return withoutSuffix||isFuture?'nekaj sekund':'nekaj sekundami';
case'ss':
if(number===1){
result+=withoutSuffix?'sekundo':'sekundi';
}else if(number===2){
result+=withoutSuffix||isFuture?'sekundi':'sekundah';
}else if(number<5){
result+=withoutSuffix||isFuture?'sekunde':'sekundah';
}else{
result+=withoutSuffix||isFuture?'sekund':'sekund';
}
return result;
case'm':
return withoutSuffix?'ena minuta':'eno minuto';
case'mm':
if(number===1){
result+=withoutSuffix?'minuta':'minuto';
}else if(number===2){
result+=withoutSuffix||isFuture?'minuti':'minutama';
}else if(number<5){
result+=withoutSuffix||isFuture?'minute':'minutami';
}else{
result+=withoutSuffix||isFuture?'minut':'minutami';
}
return result;
case'h':
return withoutSuffix?'ena ura':'eno uro';
case'hh':
if(number===1){
result+=withoutSuffix?'ura':'uro';
}else if(number===2){
result+=withoutSuffix||isFuture?'uri':'urama';
}else if(number<5){
result+=withoutSuffix||isFuture?'ure':'urami';
}else{
result+=withoutSuffix||isFuture?'ur':'urami';
}
return result;
case'd':
return withoutSuffix||isFuture?'en dan':'enim dnem';
case'dd':
if(number===1){
result+=withoutSuffix||isFuture?'dan':'dnem';
}else if(number===2){
result+=withoutSuffix||isFuture?'dni':'dnevoma';
}else{
result+=withoutSuffix||isFuture?'dni':'dnevi';
}
return result;
case'M':
return withoutSuffix||isFuture?'en mesec':'enim mesecem';
case'MM':
if(number===1){
result+=withoutSuffix||isFuture?'mesec':'mesecem';
}else if(number===2){
result+=withoutSuffix||isFuture?'meseca':'mesecema';
}else if(number<5){
result+=withoutSuffix||isFuture?'mesece':'meseci';
}else{
result+=withoutSuffix||isFuture?'mesecev':'meseci';
}
return result;
case'y':
return withoutSuffix||isFuture?'eno leto':'enim letom';
case'yy':
if(number===1){
result+=withoutSuffix||isFuture?'leto':'letom';
}else if(number===2){
result+=withoutSuffix||isFuture?'leti':'letoma';
}else if(number<5){
result+=withoutSuffix||isFuture?'leta':'leti';
}else{
result+=withoutSuffix||isFuture?'let':'leti';
}
return result;
}
}
hooks.defineLocale('sl',{
months:'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
monthsShort:'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
monthsParseExact:true,
weekdays:'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
weekdaysShort:'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
weekdaysMin:'ne_po_to_sr_če_pe_so'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[danes ob] LT',
nextDay:'[jutri ob] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[v] [nedeljo] [ob] LT';
case 3:
return'[v] [sredo] [ob] LT';
case 6:
return'[v] [soboto] [ob] LT';
case 1:
case 2:
case 4:
case 5:
return'[v] dddd [ob] LT';
}
},
lastDay:'[včeraj ob] LT',
lastWeek:function(){
switch(this.day()){
case 0:
return'[prejšnjo] [nedeljo] [ob] LT';
case 3:
return'[prejšnjo] [sredo] [ob] LT';
case 6:
return'[prejšnjo] [soboto] [ob] LT';
case 1:
case 2:
case 4:
case 5:
return'[prejšnji] dddd [ob] LT';
}
},
sameElse:'L'
},
relativeTime:{
future:'čez %s',
past:'pred %s',
s:processRelativeTime$6,
ss:processRelativeTime$6,
m:processRelativeTime$6,
mm:processRelativeTime$6,
h:processRelativeTime$6,
hh:processRelativeTime$6,
d:processRelativeTime$6,
dd:processRelativeTime$6,
M:processRelativeTime$6,
MM:processRelativeTime$6,
y:processRelativeTime$6,
yy:processRelativeTime$6
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('sq',{
months:'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
monthsShort:'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
weekdays:'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
weekdaysShort:'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
weekdaysMin:'D_H_Ma_Më_E_P_Sh'.split('_'),
weekdaysParseExact:true,
meridiemParse:/PD|MD/,
isPM:function(input){
return input.charAt(0)==='M';
},
meridiem:function(hours,minutes,isLower){
return hours<12?'PD':'MD';
},
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Sot në] LT',
nextDay:'[Nesër në] LT',
nextWeek:'dddd [në] LT',
lastDay:'[Dje në] LT',
lastWeek:'dddd [e kaluar në] LT',
sameElse:'L'
},
relativeTime:{
future:'në %s',
past:'%s më parë',
s:'disa sekonda',
ss:'%d sekonda',
m:'një minutë',
mm:'%d minuta',
h:'një orë',
hh:'%d orë',
d:'një ditë',
dd:'%d ditë',
M:'një muaj',
MM:'%d muaj',
y:'një vit',
yy:'%d vite'
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
var translator$1={
words:{
ss:['секунда','секунде','секунди'],
m:['један минут','једне минуте'],
mm:['минут','минуте','минута'],
h:['један сат','једног сата'],
hh:['сат','сата','сати'],
dd:['дан','дана','дана'],
MM:['месец','месеца','месеци'],
yy:['година','године','година']
},
correctGrammaticalCase:function(number,wordKey){
return number===1?wordKey[0]:(number>=2&&number<=4?wordKey[1]:wordKey[2]);
},
translate:function(number,withoutSuffix,key){
var wordKey=translator$1.words[key];
if(key.length===1){
return withoutSuffix?wordKey[0]:wordKey[1];
}else{
return number+' '+translator$1.correctGrammaticalCase(number,wordKey);
}
}
};
hooks.defineLocale('sr-cyrl',{
months:'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
monthsShort:'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
monthsParseExact:true,
weekdays:'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
weekdaysShort:'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
weekdaysMin:'не_по_ут_ср_че_пе_су'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[данас у] LT',
nextDay:'[сутра у] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[у] [недељу] [у] LT';
case 3:
return'[у] [среду] [у] LT';
case 6:
return'[у] [суботу] [у] LT';
case 1:
case 2:
case 4:
case 5:
return'[у] dddd [у] LT';
}
},
lastDay:'[јуче у] LT',
lastWeek:function(){
var lastWeekDays=[
'[прошле] [недеље] [у] LT',
'[прошлог] [понедељка] [у] LT',
'[прошлог] [уторка] [у] LT',
'[прошле] [среде] [у] LT',
'[прошлог] [четвртка] [у] LT',
'[прошлог] [петка] [у] LT',
'[прошле] [суботе] [у] LT'
];
return lastWeekDays[this.day()];
},
sameElse:'L'
},
relativeTime:{
future:'за %s',
past:'пре %s',
s:'неколико секунди',
ss:translator$1.translate,
m:translator$1.translate,
mm:translator$1.translate,
h:translator$1.translate,
hh:translator$1.translate,
d:'дан',
dd:translator$1.translate,
M:'месец',
MM:translator$1.translate,
y:'годину',
yy:translator$1.translate
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
var translator$2={
words:{
ss:['sekunda','sekunde','sekundi'],
m:['jedan minut','jedne minute'],
mm:['minut','minute','minuta'],
h:['jedan sat','jednog sata'],
hh:['sat','sata','sati'],
dd:['dan','dana','dana'],
MM:['mesec','meseca','meseci'],
yy:['godina','godine','godina']
},
correctGrammaticalCase:function(number,wordKey){
return number===1?wordKey[0]:(number>=2&&number<=4?wordKey[1]:wordKey[2]);
},
translate:function(number,withoutSuffix,key){
var wordKey=translator$2.words[key];
if(key.length===1){
return withoutSuffix?wordKey[0]:wordKey[1];
}else{
return number+' '+translator$2.correctGrammaticalCase(number,wordKey);
}
}
};
hooks.defineLocale('sr',{
months:'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
monthsShort:'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
monthsParseExact:true,
weekdays:'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
weekdaysShort:'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
weekdaysMin:'ne_po_ut_sr_če_pe_su'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD.MM.YYYY',
LL:'D. MMMM YYYY',
LLL:'D. MMMM YYYY H:mm',
LLLL:'dddd, D. MMMM YYYY H:mm'
},
calendar:{
sameDay:'[danas u] LT',
nextDay:'[sutra u] LT',
nextWeek:function(){
switch(this.day()){
case 0:
return'[u] [nedelju] [u] LT';
case 3:
return'[u] [sredu] [u] LT';
case 6:
return'[u] [subotu] [u] LT';
case 1:
case 2:
case 4:
case 5:
return'[u] dddd [u] LT';
}
},
lastDay:'[juče u] LT',
lastWeek:function(){
var lastWeekDays=[
'[prošle] [nedelje] [u] LT',
'[prošlog] [ponedeljka] [u] LT',
'[prošlog] [utorka] [u] LT',
'[prošle] [srede] [u] LT',
'[prošlog] [četvrtka] [u] LT',
'[prošlog] [petka] [u] LT',
'[prošle] [subote] [u] LT'
];
return lastWeekDays[this.day()];
},
sameElse:'L'
},
relativeTime:{
future:'za %s',
past:'pre %s',
s:'nekoliko sekundi',
ss:translator$2.translate,
m:translator$2.translate,
mm:translator$2.translate,
h:translator$2.translate,
hh:translator$2.translate,
d:'dan',
dd:translator$2.translate,
M:'mesec',
MM:translator$2.translate,
y:'godinu',
yy:translator$2.translate
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('ss',{
months:"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
monthsShort:'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
weekdays:'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
weekdaysShort:'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
weekdaysMin:'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY h:mm A',
LLLL:'dddd, D MMMM YYYY h:mm A'
},
calendar:{
sameDay:'[Namuhla nga] LT',
nextDay:'[Kusasa nga] LT',
nextWeek:'dddd [nga] LT',
lastDay:'[Itolo nga] LT',
lastWeek:'dddd [leliphelile] [nga] LT',
sameElse:'L'
},
relativeTime:{
future:'nga %s',
past:'wenteka nga %s',
s:'emizuzwana lomcane',
ss:'%d mzuzwana',
m:'umzuzu',
mm:'%d emizuzu',
h:'lihora',
hh:'%d emahora',
d:'lilanga',
dd:'%d emalanga',
M:'inyanga',
MM:'%d tinyanga',
y:'umnyaka',
yy:'%d iminyaka'
},
meridiemParse:/ekuseni|emini|entsambama|ebusuku/,
meridiem:function(hours,minutes,isLower){
if(hours<11){
return'ekuseni';
}else if(hours<15){
return'emini';
}else if(hours<19){
return'entsambama';
}else{
return'ebusuku';
}
},
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='ekuseni'){
return hour;
}else if(meridiem==='emini'){
return hour>=11?hour:hour+12;
}else if(meridiem==='entsambama'||meridiem==='ebusuku'){
if(hour===0){
return 0;
}
return hour+12;
}
},
dayOfMonthOrdinalParse:/\d{1,2}/,
ordinal:'%d',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('sv',{
months:'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
monthsShort:'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
weekdays:'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
weekdaysShort:'sön_mån_tis_ons_tor_fre_lör'.split('_'),
weekdaysMin:'sö_må_ti_on_to_fr_lö'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY-MM-DD',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY [kl.] HH:mm',
LLLL:'dddd D MMMM YYYY [kl.] HH:mm',
lll:'D MMM YYYY HH:mm',
llll:'ddd D MMM YYYY HH:mm'
},
calendar:{
sameDay:'[Idag] LT',
nextDay:'[Imorgon] LT',
lastDay:'[Igår] LT',
nextWeek:'[På] dddd LT',
lastWeek:'[I] dddd[s] LT',
sameElse:'L'
},
relativeTime:{
future:'om %s',
past:'för %s sedan',
s:'några sekunder',
ss:'%d sekunder',
m:'en minut',
mm:'%d minuter',
h:'en timme',
hh:'%d timmar',
d:'en dag',
dd:'%d dagar',
M:'en månad',
MM:'%d månader',
y:'ett år',
yy:'%d år'
},
dayOfMonthOrdinalParse:/\d{1,2}(e|a)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'e':
(b===1)?'a':
(b===2)?'a':
(b===3)?'e':'e';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('sw',{
months:'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
monthsShort:'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
weekdays:'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
weekdaysShort:'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
weekdaysMin:'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[leo saa] LT',
nextDay:'[kesho saa] LT',
nextWeek:'[wiki ijayo] dddd [saat] LT',
lastDay:'[jana] LT',
lastWeek:'[wiki iliyopita] dddd [saat] LT',
sameElse:'L'
},
relativeTime:{
future:'%s baadaye',
past:'tokea %s',
s:'hivi punde',
ss:'sekunde %d',
m:'dakika moja',
mm:'dakika %d',
h:'saa limoja',
hh:'masaa %d',
d:'siku moja',
dd:'masiku %d',
M:'mwezi mmoja',
MM:'miezi %d',
y:'mwaka mmoja',
yy:'miaka %d'
},
week:{
dow:1,
doy:7
}
});
var symbolMap$13={
'1':'௧',
'2':'௨',
'3':'௩',
'4':'௪',
'5':'௫',
'6':'௬',
'7':'௭',
'8':'௮',
'9':'௯',
'0':'௦'
};
var numberMap$12={
'௧':'1',
'௨':'2',
'௩':'3',
'௪':'4',
'௫':'5',
'௬':'6',
'௭':'7',
'௮':'8',
'௯':'9',
'௦':'0'
};
hooks.defineLocale('ta',{
months:'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
monthsShort:'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
weekdays:'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
weekdaysShort:'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
weekdaysMin:'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, HH:mm',
LLLL:'dddd, D MMMM YYYY, HH:mm'
},
calendar:{
sameDay:'[இன்று] LT',
nextDay:'[நாளை] LT',
nextWeek:'dddd, LT',
lastDay:'[நேற்று] LT',
lastWeek:'[கடந்த வாரம்] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s இல்',
past:'%s முன்',
s:'ஒரு சில விநாடிகள்',
ss:'%d விநாடிகள்',
m:'ஒரு நிமிடம்',
mm:'%d நிமிடங்கள்',
h:'ஒரு மணி நேரம்',
hh:'%d மணி நேரம்',
d:'ஒரு நாள்',
dd:'%d நாட்கள்',
M:'ஒரு மாதம்',
MM:'%d மாதங்கள்',
y:'ஒரு வருடம்',
yy:'%d ஆண்டுகள்'
},
dayOfMonthOrdinalParse:/\d{1,2}வது/,
ordinal:function(number){
return number+'வது';
},
preparse:function(string){
return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,function(match){
return numberMap$12[match];
});
},
postformat:function(string){
return string.replace(/\d/g,function(match){
return symbolMap$13[match];
});
},
meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
meridiem:function(hour,minute,isLower){
if(hour<2){
return' யாமம்';
}else if(hour<6){
return' வைகறை';
}else if(hour<10){
return' காலை';
}else if(hour<14){
return' நண்பகல்';
}else if(hour<18){
return' எற்பாடு';
}else if(hour<22){
return' மாலை';
}else{
return' யாமம்';
}
},
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='யாமம்'){
return hour<2?hour:hour+12;
}else if(meridiem==='வைகறை'||meridiem==='காலை'){
return hour;
}else if(meridiem==='நண்பகல்'){
return hour>=10?hour:hour+12;
}else{
return hour+12;
}
},
week:{
dow:0,
doy:6
}
});
hooks.defineLocale('te',{
months:'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
monthsShort:'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
monthsParseExact:true,
weekdays:'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
weekdaysShort:'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
weekdaysMin:'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
longDateFormat:{
LT:'A h:mm',
LTS:'A h:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY, A h:mm',
LLLL:'dddd, D MMMM YYYY, A h:mm'
},
calendar:{
sameDay:'[నేడు] LT',
nextDay:'[రేపు] LT',
nextWeek:'dddd, LT',
lastDay:'[నిన్న] LT',
lastWeek:'[గత] dddd, LT',
sameElse:'L'
},
relativeTime:{
future:'%s లో',
past:'%s క్రితం',
s:'కొన్ని క్షణాలు',
ss:'%d సెకన్లు',
m:'ఒక నిమిషం',
mm:'%d నిమిషాలు',
h:'ఒక గంట',
hh:'%d గంటలు',
d:'ఒక రోజు',
dd:'%d రోజులు',
M:'ఒక నెల',
MM:'%d నెలలు',
y:'ఒక సంవత్సరం',
yy:'%d సంవత్సరాలు'
},
dayOfMonthOrdinalParse:/\d{1,2}వ/,
ordinal:'%dవ',
meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='రాత్రి'){
return hour<4?hour:hour+12;
}else if(meridiem==='ఉదయం'){
return hour;
}else if(meridiem==='మధ్యాహ్నం'){
return hour>=10?hour:hour+12;
}else if(meridiem==='సాయంత్రం'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'రాత్రి';
}else if(hour<10){
return'ఉదయం';
}else if(hour<17){
return'మధ్యాహ్నం';
}else if(hour<20){
return'సాయంత్రం';
}else{
return'రాత్రి';
}
},
week:{
dow:0,
doy:6
}
});
hooks.defineLocale('tet',{
months:'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
monthsShort:'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
weekdays:'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
weekdaysShort:'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
weekdaysMin:'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[Ohin iha] LT',
nextDay:'[Aban iha] LT',
nextWeek:'dddd [iha] LT',
lastDay:'[Horiseik iha] LT',
lastWeek:'dddd [semana kotuk] [iha] LT',
sameElse:'L'
},
relativeTime:{
future:'iha %s',
past:'%s liuba',
s:'minutu balun',
ss:'minutu %d',
m:'minutu ida',
mm:'minutus %d',
h:'horas ida',
hh:'horas %d',
d:'loron ida',
dd:'loron %d',
M:'fulan ida',
MM:'fulan %d',
y:'tinan ida',
yy:'tinan %d'
},
dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('th',{
months:'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
monthsShort:'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
monthsParseExact:true,
weekdays:'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
weekdaysShort:'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'),
weekdaysMin:'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'H:mm',
LTS:'H:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY เวลา H:mm',
LLLL:'วันddddที่ D MMMM YYYY เวลา H:mm'
},
meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,
isPM:function(input){
return input==='หลังเที่ยง';
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'ก่อนเที่ยง';
}else{
return'หลังเที่ยง';
}
},
calendar:{
sameDay:'[วันนี้ เวลา] LT',
nextDay:'[พรุ่งนี้ เวลา] LT',
nextWeek:'dddd[หน้า เวลา] LT',
lastDay:'[เมื่อวานนี้ เวลา] LT',
lastWeek:'[วัน]dddd[ที่แล้ว เวลา] LT',
sameElse:'L'
},
relativeTime:{
future:'อีก %s',
past:'%sที่แล้ว',
s:'ไม่กี่วินาที',
ss:'%d วินาที',
m:'1 นาที',
mm:'%d นาที',
h:'1 ชั่วโมง',
hh:'%d ชั่วโมง',
d:'1 วัน',
dd:'%d วัน',
M:'1 เดือน',
MM:'%d เดือน',
y:'1 ปี',
yy:'%d ปี'
}
});
hooks.defineLocale('tl-ph',{
months:'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
monthsShort:'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
weekdays:'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
weekdaysShort:'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
weekdaysMin:'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'MM/D/YYYY',
LL:'MMMM D, YYYY',
LLL:'MMMM D, YYYY HH:mm',
LLLL:'dddd, MMMM DD, YYYY HH:mm'
},
calendar:{
sameDay:'LT [ngayong araw]',
nextDay:'[Bukas ng] LT',
nextWeek:'LT [sa susunod na] dddd',
lastDay:'LT [kahapon]',
lastWeek:'LT [noong nakaraang] dddd',
sameElse:'L'
},
relativeTime:{
future:'sa loob ng %s',
past:'%s ang nakalipas',
s:'ilang segundo',
ss:'%d segundo',
m:'isang minuto',
mm:'%d minuto',
h:'isang oras',
hh:'%d oras',
d:'isang araw',
dd:'%d araw',
M:'isang buwan',
MM:'%d buwan',
y:'isang taon',
yy:'%d taon'
},
dayOfMonthOrdinalParse:/\d{1,2}/,
ordinal:function(number){
return number;
},
week:{
dow:1,
doy:4
}
});
var numbersNouns='pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
function translateFuture(output){
var time=output;
time=(output.indexOf('jaj')!==-1)?
time.slice(0,-3)+'leS':
(output.indexOf('jar')!==-1)?
time.slice(0,-3)+'waQ':
(output.indexOf('DIS')!==-1)?
time.slice(0,-3)+'nem':
time+' pIq';
return time;
}
function translatePast(output){
var time=output;
time=(output.indexOf('jaj')!==-1)?
time.slice(0,-3)+'Hu’':
(output.indexOf('jar')!==-1)?
time.slice(0,-3)+'wen':
(output.indexOf('DIS')!==-1)?
time.slice(0,-3)+'ben':
time+' ret';
return time;
}
function translate$9(number,withoutSuffix,string,isFuture){
var numberNoun=numberAsNoun(number);
switch(string){
case'ss':
return numberNoun+' lup';
case'mm':
return numberNoun+' tup';
case'hh':
return numberNoun+' rep';
case'dd':
return numberNoun+' jaj';
case'MM':
return numberNoun+' jar';
case'yy':
return numberNoun+' DIS';
}
}
function numberAsNoun(number){
var hundred=Math.floor((number%1000)/100),
ten=Math.floor((number%100)/10),
one=number%10,
word='';
if(hundred>0){
word+=numbersNouns[hundred]+'vatlh';
}
if(ten>0){
word+=((word!=='')?' ':'')+numbersNouns[ten]+'maH';
}
if(one>0){
word+=((word!=='')?' ':'')+numbersNouns[one];
}
return(word==='')?'pagh':word;
}
hooks.defineLocale('tlh',{
months:'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
monthsShort:'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
monthsParseExact:true,
weekdays:'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
weekdaysShort:'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
weekdaysMin:'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[DaHjaj] LT',
nextDay:'[wa’leS] LT',
nextWeek:'LLL',
lastDay:'[wa’Hu’] LT',
lastWeek:'LLL',
sameElse:'L'
},
relativeTime:{
future:translateFuture,
past:translatePast,
s:'puS lup',
ss:translate$9,
m:'wa’ tup',
mm:translate$9,
h:'wa’ rep',
hh:translate$9,
d:'wa’ jaj',
dd:translate$9,
M:'wa’ jar',
MM:translate$9,
y:'wa’ DIS',
yy:translate$9
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
var suffixes$3={
1:'\'inci',
5:'\'inci',
8:'\'inci',
70:'\'inci',
80:'\'inci',
2:'\'nci',
7:'\'nci',
20:'\'nci',
50:'\'nci',
3:'\'üncü',
4:'\'üncü',
100:'\'üncü',
6:'\'ncı',
9:'\'uncu',
10:'\'uncu',
30:'\'uncu',
60:'\'ıncı',
90:'\'ıncı'
};
hooks.defineLocale('tr',{
months:'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
monthsShort:'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
weekdays:'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
weekdaysShort:'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
weekdaysMin:'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[bugün saat] LT',
nextDay:'[yarın saat] LT',
nextWeek:'[gelecek] dddd [saat] LT',
lastDay:'[dün] LT',
lastWeek:'[geçen] dddd [saat] LT',
sameElse:'L'
},
relativeTime:{
future:'%s sonra',
past:'%s önce',
s:'birkaç saniye',
ss:'%d saniye',
m:'bir dakika',
mm:'%d dakika',
h:'bir saat',
hh:'%d saat',
d:'bir gün',
dd:'%d gün',
M:'bir ay',
MM:'%d ay',
y:'bir yıl',
yy:'%d yıl'
},
dayOfMonthOrdinalParse:/\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
ordinal:function(number){
if(number===0){
return number+'\'ıncı';
}
var a=number%10,
b=number%100-a,
c=number>=100?100:null;
return number+(suffixes$3[a]||suffixes$3[b]||suffixes$3[c]);
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('tzl',{
months:'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
monthsShort:'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
weekdays:'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
weekdaysShort:'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
weekdaysMin:'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
longDateFormat:{
LT:'HH.mm',
LTS:'HH.mm.ss',
L:'DD.MM.YYYY',
LL:'D. MMMM [dallas] YYYY',
LLL:'D. MMMM [dallas] YYYY HH.mm',
LLLL:'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
},
meridiemParse:/d\'o|d\'a/i,
isPM:function(input){
return'd\'o'===input.toLowerCase();
},
meridiem:function(hours,minutes,isLower){
if(hours>11){
return isLower?'d\'o':'D\'O';
}else{
return isLower?'d\'a':'D\'A';
}
},
calendar:{
sameDay:'[oxhi à] LT',
nextDay:'[demà à] LT',
nextWeek:'dddd [à] LT',
lastDay:'[ieiri à] LT',
lastWeek:'[sür el] dddd [lasteu à] LT',
sameElse:'L'
},
relativeTime:{
future:'osprei %s',
past:'ja%s',
s:processRelativeTime$7,
ss:processRelativeTime$7,
m:processRelativeTime$7,
mm:processRelativeTime$7,
h:processRelativeTime$7,
hh:processRelativeTime$7,
d:processRelativeTime$7,
dd:processRelativeTime$7,
M:processRelativeTime$7,
MM:processRelativeTime$7,
y:processRelativeTime$7,
yy:processRelativeTime$7
},
dayOfMonthOrdinalParse:/\d{1,2}\./,
ordinal:'%d.',
week:{
dow:1,
doy:4
}
});
function processRelativeTime$7(number,withoutSuffix,key,isFuture){
var format={
's':['viensas secunds','\'iensas secunds'],
'ss':[number+' secunds',''+number+' secunds'],
'm':['\'n míut','\'iens míut'],
'mm':[number+' míuts',''+number+' míuts'],
'h':['\'n þora','\'iensa þora'],
'hh':[number+' þoras',''+number+' þoras'],
'd':['\'n ziua','\'iensa ziua'],
'dd':[number+' ziuas',''+number+' ziuas'],
'M':['\'n mes','\'iens mes'],
'MM':[number+' mesen',''+number+' mesen'],
'y':['\'n ar','\'iens ar'],
'yy':[number+' ars',''+number+' ars']
};
return isFuture?format[key][0]:(withoutSuffix?format[key][0]:format[key][1]);
}
hooks.defineLocale('tzm-latn',{
months:'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
monthsShort:'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
weekdays:'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
weekdaysShort:'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
weekdaysMin:'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[asdkh g] LT',
nextDay:'[aska g] LT',
nextWeek:'dddd [g] LT',
lastDay:'[assant g] LT',
lastWeek:'dddd [g] LT',
sameElse:'L'
},
relativeTime:{
future:'dadkh s yan %s',
past:'yan %s',
s:'imik',
ss:'%d imik',
m:'minuḍ',
mm:'%d minuḍ',
h:'saɛa',
hh:'%d tassaɛin',
d:'ass',
dd:'%d ossan',
M:'ayowr',
MM:'%d iyyirn',
y:'asgas',
yy:'%d isgasn'
},
week:{
dow:6,
doy:12
}
});
hooks.defineLocale('tzm',{
months:'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
monthsShort:'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
weekdays:'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
weekdaysShort:'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
weekdaysMin:'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[ⴰⵙⴷⵅ ⴴ] LT',
nextDay:'[ⴰⵙⴽⴰ ⴴ] LT',
nextWeek:'dddd [ⴴ] LT',
lastDay:'[ⴰⵚⴰⵏⵜ ⴴ] LT',
lastWeek:'dddd [ⴴ] LT',
sameElse:'L'
},
relativeTime:{
future:'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
past:'ⵢⴰⵏ %s',
s:'ⵉⵎⵉⴽ',
ss:'%d ⵉⵎⵉⴽ',
m:'ⵎⵉⵏⵓⴺ',
mm:'%d ⵎⵉⵏⵓⴺ',
h:'ⵙⴰⵄⴰ',
hh:'%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
d:'ⴰⵙⵙ',
dd:'%d oⵙⵙⴰⵏ',
M:'ⴰⵢoⵓⵔ',
MM:'%d ⵉⵢⵢⵉⵔⵏ',
y:'ⴰⵙⴳⴰⵙ',
yy:'%d ⵉⵙⴳⴰⵙⵏ'
},
week:{
dow:6,
doy:12
}
});
function plural$6(word,num){
var forms=word.split('_');
return num%10===1&&num%100!==11?forms[0]:(num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2]);
}
function relativeTimeWithPlural$4(number,withoutSuffix,key){
var format={
'ss':withoutSuffix?'секунда_секунди_секунд':'секунду_секунди_секунд',
'mm':withoutSuffix?'хвилина_хвилини_хвилин':'хвилину_хвилини_хвилин',
'hh':withoutSuffix?'година_години_годин':'годину_години_годин',
'dd':'день_дні_днів',
'MM':'місяць_місяці_місяців',
'yy':'рік_роки_років'
};
if(key==='m'){
return withoutSuffix?'хвилина':'хвилину';
}
else if(key==='h'){
return withoutSuffix?'година':'годину';
}
else{
return number+' '+plural$6(format[key],+number);
}
}
function weekdaysCaseReplace(m,format){
var weekdays={
'nominative':'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
'accusative':'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
'genitive':'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
};
if(!m){
return weekdays['nominative'];
}
var nounCase=(/(\[[ВвУу]\]) ?dddd/).test(format)?
'accusative':
((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format)?
'genitive':
'nominative');
return weekdays[nounCase][m.day()];
}
function processHoursFunction(str){
return function(){
return str+'о'+(this.hours()===11?'б':'')+'] LT';
};
}
hooks.defineLocale('uk',{
months:{
'format':'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
'standalone':'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
},
monthsShort:'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
weekdays:weekdaysCaseReplace,
weekdaysShort:'нд_пн_вт_ср_чт_пт_сб'.split('_'),
weekdaysMin:'нд_пн_вт_ср_чт_пт_сб'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD.MM.YYYY',
LL:'D MMMM YYYY р.',
LLL:'D MMMM YYYY р., HH:mm',
LLLL:'dddd, D MMMM YYYY р., HH:mm'
},
calendar:{
sameDay:processHoursFunction('[Сьогодні '),
nextDay:processHoursFunction('[Завтра '),
lastDay:processHoursFunction('[Вчора '),
nextWeek:processHoursFunction('[У] dddd ['),
lastWeek:function(){
switch(this.day()){
case 0:
case 3:
case 5:
case 6:
return processHoursFunction('[Минулої] dddd [').call(this);
case 1:
case 2:
case 4:
return processHoursFunction('[Минулого] dddd [').call(this);
}
},
sameElse:'L'
},
relativeTime:{
future:'за %s',
past:'%s тому',
s:'декілька секунд',
ss:relativeTimeWithPlural$4,
m:relativeTimeWithPlural$4,
mm:relativeTimeWithPlural$4,
h:'годину',
hh:relativeTimeWithPlural$4,
d:'день',
dd:relativeTimeWithPlural$4,
M:'місяць',
MM:relativeTimeWithPlural$4,
y:'рік',
yy:relativeTimeWithPlural$4
},
meridiemParse:/ночі|ранку|дня|вечора/,
isPM:function(input){
return/^(дня|вечора)$/.test(input);
},
meridiem:function(hour,minute,isLower){
if(hour<4){
return'ночі';
}else if(hour<12){
return'ранку';
}else if(hour<17){
return'дня';
}else{
return'вечора';
}
},
dayOfMonthOrdinalParse:/\d{1,2}-(й|го)/,
ordinal:function(number,period){
switch(period){
case'M':
case'd':
case'DDD':
case'w':
case'W':
return number+'-й';
case'D':
return number+'-го';
default:
return number;
}
},
week:{
dow:1,
doy:7
}
});
var months$8=[
'جنوری',
'فروری',
'مارچ',
'اپریل',
'مئی',
'جون',
'جولائی',
'اگست',
'ستمبر',
'اکتوبر',
'نومبر',
'دسمبر'
];
var days$2=[
'اتوار',
'پیر',
'منگل',
'بدھ',
'جمعرات',
'جمعہ',
'ہفتہ'
];
hooks.defineLocale('ur',{
months:months$8,
monthsShort:months$8,
weekdays:days$2,
weekdaysShort:days$2,
weekdaysMin:days$2,
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd، D MMMM YYYY HH:mm'
},
meridiemParse:/صبح|شام/,
isPM:function(input){
return'شام'===input;
},
meridiem:function(hour,minute,isLower){
if(hour<12){
return'صبح';
}
return'شام';
},
calendar:{
sameDay:'[آج بوقت] LT',
nextDay:'[کل بوقت] LT',
nextWeek:'dddd [بوقت] LT',
lastDay:'[گذشتہ روز بوقت] LT',
lastWeek:'[گذشتہ] dddd [بوقت] LT',
sameElse:'L'
},
relativeTime:{
future:'%s بعد',
past:'%s قبل',
s:'چند سیکنڈ',
ss:'%d سیکنڈ',
m:'ایک منٹ',
mm:'%d منٹ',
h:'ایک گھنٹہ',
hh:'%d گھنٹے',
d:'ایک دن',
dd:'%d دن',
M:'ایک ماہ',
MM:'%d ماہ',
y:'ایک سال',
yy:'%d سال'
},
preparse:function(string){
return string.replace(/،/g,',');
},
postformat:function(string){
return string.replace(/,/g,'،');
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('uz-latn',{
months:'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
monthsShort:'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
weekdays:'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
weekdaysShort:'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
weekdaysMin:'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'D MMMM YYYY, dddd HH:mm'
},
calendar:{
sameDay:'[Bugun soat] LT [da]',
nextDay:'[Ertaga] LT [da]',
nextWeek:'dddd [kuni soat] LT [da]',
lastDay:'[Kecha soat] LT [da]',
lastWeek:'[O\'tgan] dddd [kuni soat] LT [da]',
sameElse:'L'
},
relativeTime:{
future:'Yaqin %s ichida',
past:'Bir necha %s oldin',
s:'soniya',
ss:'%d soniya',
m:'bir daqiqa',
mm:'%d daqiqa',
h:'bir soat',
hh:'%d soat',
d:'bir kun',
dd:'%d kun',
M:'bir oy',
MM:'%d oy',
y:'bir yil',
yy:'%d yil'
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('uz',{
months:'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
monthsShort:'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
weekdays:'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
weekdaysShort:'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
weekdaysMin:'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'D MMMM YYYY, dddd HH:mm'
},
calendar:{
sameDay:'[Бугун соат] LT [да]',
nextDay:'[Эртага] LT [да]',
nextWeek:'dddd [куни соат] LT [да]',
lastDay:'[Кеча соат] LT [да]',
lastWeek:'[Утган] dddd [куни соат] LT [да]',
sameElse:'L'
},
relativeTime:{
future:'Якин %s ичида',
past:'Бир неча %s олдин',
s:'фурсат',
ss:'%d фурсат',
m:'бир дакика',
mm:'%d дакика',
h:'бир соат',
hh:'%d соат',
d:'бир кун',
dd:'%d кун',
M:'бир ой',
MM:'%d ой',
y:'бир йил',
yy:'%d йил'
},
week:{
dow:1,
doy:7
}
});
hooks.defineLocale('vi',{
months:'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
monthsShort:'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
monthsParseExact:true,
weekdays:'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
weekdaysShort:'CN_T2_T3_T4_T5_T6_T7'.split('_'),
weekdaysMin:'CN_T2_T3_T4_T5_T6_T7'.split('_'),
weekdaysParseExact:true,
meridiemParse:/sa|ch/i,
isPM:function(input){
return/^ch$/i.test(input);
},
meridiem:function(hours,minutes,isLower){
if(hours<12){
return isLower?'sa':'SA';
}else{
return isLower?'ch':'CH';
}
},
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'DD/MM/YYYY',
LL:'D MMMM [năm] YYYY',
LLL:'D MMMM [năm] YYYY HH:mm',
LLLL:'dddd, D MMMM [năm] YYYY HH:mm',
l:'DD/M/YYYY',
ll:'D MMM YYYY',
lll:'D MMM YYYY HH:mm',
llll:'ddd, D MMM YYYY HH:mm'
},
calendar:{
sameDay:'[Hôm nay lúc] LT',
nextDay:'[Ngày mai lúc] LT',
nextWeek:'dddd [tuần tới lúc] LT',
lastDay:'[Hôm qua lúc] LT',
lastWeek:'dddd [tuần rồi lúc] LT',
sameElse:'L'
},
relativeTime:{
future:'%s tới',
past:'%s trước',
s:'vài giây',
ss:'%d giây',
m:'một phút',
mm:'%d phút',
h:'một giờ',
hh:'%d giờ',
d:'một ngày',
dd:'%d ngày',
M:'một tháng',
MM:'%d tháng',
y:'một năm',
yy:'%d năm'
},
dayOfMonthOrdinalParse:/\d{1,2}/,
ordinal:function(number){
return number;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('x-pseudo',{
months:'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
monthsShort:'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
monthsParseExact:true,
weekdays:'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
weekdaysShort:'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
weekdaysMin:'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
weekdaysParseExact:true,
longDateFormat:{
LT:'HH:mm',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY HH:mm',
LLLL:'dddd, D MMMM YYYY HH:mm'
},
calendar:{
sameDay:'[T~ódá~ý át] LT',
nextDay:'[T~ómó~rró~w át] LT',
nextWeek:'dddd [át] LT',
lastDay:'[Ý~ést~érdá~ý át] LT',
lastWeek:'[L~ást] dddd [át] LT',
sameElse:'L'
},
relativeTime:{
future:'í~ñ %s',
past:'%s á~gó',
s:'á ~féw ~sécó~ñds',
ss:'%d s~écóñ~ds',
m:'á ~míñ~úté',
mm:'%d m~íñú~tés',
h:'á~ñ hó~úr',
hh:'%d h~óúrs',
d:'á ~dáý',
dd:'%d d~áýs',
M:'á ~móñ~th',
MM:'%d m~óñt~hs',
y:'á ~ýéár',
yy:'%d ý~éárs'
},
dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,
ordinal:function(number){
var b=number%10,
output=(~~(number%100/10)===1)?'th':
(b===1)?'st':
(b===2)?'nd':
(b===3)?'rd':'th';
return number+output;
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('yo',{
months:'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
monthsShort:'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
weekdays:'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
weekdaysShort:'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
weekdaysMin:'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
longDateFormat:{
LT:'h:mm A',
LTS:'h:mm:ss A',
L:'DD/MM/YYYY',
LL:'D MMMM YYYY',
LLL:'D MMMM YYYY h:mm A',
LLLL:'dddd, D MMMM YYYY h:mm A'
},
calendar:{
sameDay:'[Ònì ni] LT',
nextDay:'[Ọ̀la ni] LT',
nextWeek:'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
lastDay:'[Àna ni] LT',
lastWeek:'dddd [Ọsẹ̀ tólọ́] [ni] LT',
sameElse:'L'
},
relativeTime:{
future:'ní %s',
past:'%s kọjá',
s:'ìsẹjú aayá die',
ss:'aayá %d',
m:'ìsẹjú kan',
mm:'ìsẹjú %d',
h:'wákati kan',
hh:'wákati %d',
d:'ọjọ́ kan',
dd:'ọjọ́ %d',
M:'osù kan',
MM:'osù %d',
y:'ọdún kan',
yy:'ọdún %d'
},
dayOfMonthOrdinalParse:/ọjọ́\s\d{1,2}/,
ordinal:'ọjọ́ %d',
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('zh-cn',{
months:'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
monthsShort:'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
weekdays:'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
weekdaysShort:'周日_周一_周二_周三_周四_周五_周六'.split('_'),
weekdaysMin:'日_一_二_三_四_五_六'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY/MM/DD',
LL:'YYYY年M月D日',
LLL:'YYYY年M月D日Ah点mm分',
LLLL:'YYYY年M月D日ddddAh点mm分',
l:'YYYY/M/D',
ll:'YYYY年M月D日',
lll:'YYYY年M月D日 HH:mm',
llll:'YYYY年M月D日dddd HH:mm'
},
meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='凌晨'||meridiem==='早上'||
meridiem==='上午'){
return hour;
}else if(meridiem==='下午'||meridiem==='晚上'){
return hour+12;
}else{
return hour>=11?hour:hour+12;
}
},
meridiem:function(hour,minute,isLower){
var hm=hour*100+minute;
if(hm<600){
return'凌晨';
}else if(hm<900){
return'早上';
}else if(hm<1130){
return'上午';
}else if(hm<1230){
return'中午';
}else if(hm<1800){
return'下午';
}else{
return'晚上';
}
},
calendar:{
sameDay:'[今天]LT',
nextDay:'[明天]LT',
nextWeek:'[下]ddddLT',
lastDay:'[昨天]LT',
lastWeek:'[上]ddddLT',
sameElse:'L'
},
dayOfMonthOrdinalParse:/\d{1,2}(日|月|周)/,
ordinal:function(number,period){
switch(period){
case'd':
case'D':
case'DDD':
return number+'日';
case'M':
return number+'月';
case'w':
case'W':
return number+'周';
default:
return number;
}
},
relativeTime:{
future:'%s内',
past:'%s前',
s:'几秒',
ss:'%d 秒',
m:'1 分钟',
mm:'%d 分钟',
h:'1 小时',
hh:'%d 小时',
d:'1 天',
dd:'%d 天',
M:'1 个月',
MM:'%d 个月',
y:'1 年',
yy:'%d 年'
},
week:{
dow:1,
doy:4
}
});
hooks.defineLocale('zh-hk',{
months:'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
monthsShort:'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
weekdays:'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
weekdaysShort:'週日_週一_週二_週三_週四_週五_週六'.split('_'),
weekdaysMin:'日_一_二_三_四_五_六'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY/MM/DD',
LL:'YYYY年M月D日',
LLL:'YYYY年M月D日 HH:mm',
LLLL:'YYYY年M月D日dddd HH:mm',
l:'YYYY/M/D',
ll:'YYYY年M月D日',
lll:'YYYY年M月D日 HH:mm',
llll:'YYYY年M月D日dddd HH:mm'
},
meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='凌晨'||meridiem==='早上'||meridiem==='上午'){
return hour;
}else if(meridiem==='中午'){
return hour>=11?hour:hour+12;
}else if(meridiem==='下午'||meridiem==='晚上'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
var hm=hour*100+minute;
if(hm<600){
return'凌晨';
}else if(hm<900){
return'早上';
}else if(hm<1130){
return'上午';
}else if(hm<1230){
return'中午';
}else if(hm<1800){
return'下午';
}else{
return'晚上';
}
},
calendar:{
sameDay:'[今天]LT',
nextDay:'[明天]LT',
nextWeek:'[下]ddddLT',
lastDay:'[昨天]LT',
lastWeek:'[上]ddddLT',
sameElse:'L'
},
dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,
ordinal:function(number,period){
switch(period){
case'd':
case'D':
case'DDD':
return number+'日';
case'M':
return number+'月';
case'w':
case'W':
return number+'週';
default:
return number;
}
},
relativeTime:{
future:'%s內',
past:'%s前',
s:'幾秒',
ss:'%d 秒',
m:'1 分鐘',
mm:'%d 分鐘',
h:'1 小時',
hh:'%d 小時',
d:'1 天',
dd:'%d 天',
M:'1 個月',
MM:'%d 個月',
y:'1 年',
yy:'%d 年'
}
});
hooks.defineLocale('zh-tw',{
months:'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
monthsShort:'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
weekdays:'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
weekdaysShort:'週日_週一_週二_週三_週四_週五_週六'.split('_'),
weekdaysMin:'日_一_二_三_四_五_六'.split('_'),
longDateFormat:{
LT:'HH:mm',
LTS:'HH:mm:ss',
L:'YYYY/MM/DD',
LL:'YYYY年M月D日',
LLL:'YYYY年M月D日 HH:mm',
LLLL:'YYYY年M月D日dddd HH:mm',
l:'YYYY/M/D',
ll:'YYYY年M月D日',
lll:'YYYY年M月D日 HH:mm',
llll:'YYYY年M月D日dddd HH:mm'
},
meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,
meridiemHour:function(hour,meridiem){
if(hour===12){
hour=0;
}
if(meridiem==='凌晨'||meridiem==='早上'||meridiem==='上午'){
return hour;
}else if(meridiem==='中午'){
return hour>=11?hour:hour+12;
}else if(meridiem==='下午'||meridiem==='晚上'){
return hour+12;
}
},
meridiem:function(hour,minute,isLower){
var hm=hour*100+minute;
if(hm<600){
return'凌晨';
}else if(hm<900){
return'早上';
}else if(hm<1130){
return'上午';
}else if(hm<1230){
return'中午';
}else if(hm<1800){
return'下午';
}else{
return'晚上';
}
},
calendar:{
sameDay:'[今天]LT',
nextDay:'[明天]LT',
nextWeek:'[下]ddddLT',
lastDay:'[昨天]LT',
lastWeek:'[上]ddddLT',
sameElse:'L'
},
dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,
ordinal:function(number,period){
switch(period){
case'd':
case'D':
case'DDD':
return number+'日';
case'M':
return number+'月';
case'w':
case'W':
return number+'週';
default:
return number;
}
},
relativeTime:{
future:'%s內',
past:'%s前',
s:'幾秒',
ss:'%d 秒',
m:'1 分鐘',
mm:'%d 分鐘',
h:'1 小時',
hh:'%d 小時',
d:'1 天',
dd:'%d 天',
M:'1 個月',
MM:'%d 個月',
y:'1 年',
yy:'%d 年'
}
});
hooks.locale('en');
return hooks;
})));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/datetimepicker/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/datetimepicker/vendor/jquery.datetimepicker.js";
(function($){
'use strict';
var default_options={
i18n:{
bg:{
months:[
"Януари","Февруари","Март","Април","Май","Юни","Юли","Август","Септември","Октомври","Ноември","Декември"
],
dayOfWeek:[
"Нд","Пн","Вт","Ср","Чт","Пт","Сб"
]
},
fa:{
months:[
'فروردین','اردیبهشت','خرداد','تیر','مرداد','شهریور','مهر','آبان','آذر','دی','بهمن','اسفند'
],
dayOfWeek:[
'یکشنبه','دوشنبه','سه شنبه','چهارشنبه','پنجشنبه','جمعه','شنبه'
]
},
ru:{
months:[
'Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'
],
dayOfWeek:[
"Вск","Пн","Вт","Ср","Чт","Пт","Сб"
]
},
en:{
months:[
"January","February","March","April","May","June","July","August","September","October","November","December"
],
dayOfWeek:[
"Sun","Mon","Tue","Wed","Thu","Fri","Sat"
]
},
el:{
months:[
"Ιανουάριος","Φεβρουάριος","Μάρτιος","Απρίλιος","Μάιος","Ιούνιος","Ιούλιος","Αύγουστος","Σεπτέμβριος","Οκτώβριος","Νοέμβριος","Δεκέμβριος"
],
dayOfWeek:[
"Κυρ","Δευ","Τρι","Τετ","Πεμ","Παρ","Σαβ"
]
},
de:{
months:[
'Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'
],
dayOfWeek:[
"So","Mo","Di","Mi","Do","Fr","Sa"
]
},
nl:{
months:[
"januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"
],
dayOfWeek:[
"zo","ma","di","wo","do","vr","za"
]
},
tr:{
months:[
"Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık"
],
dayOfWeek:[
"Paz","Pts","Sal","Çar","Per","Cum","Cts"
]
},
fr:{
months:[
"Janvier","Février","Mars","Avril","Mai","Juin","Juillet","Août","Septembre","Octobre","Novembre","Décembre"
],
dayOfWeek:[
"Dim","Lun","Mar","Mer","Jeu","Ven","Sam"
]
},
es:{
months:[
"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
],
dayOfWeek:[
"Dom","Lun","Mar","Mié","Jue","Vie","Sáb"
]
},
th:{
months:[
'มกราคม','กุมภาพันธ์','มีนาคม','เมษายน','พฤษภาคม','มิถุนายน','กรกฎาคม','สิงหาคม','กันยายน','ตุลาคม','พฤศจิกายน','ธันวาคม'
],
dayOfWeek:[
'อา.','จ.','อ.','พ.','พฤ.','ศ.','ส.'
]
},
pl:{
months:[
"styczeń","luty","marzec","kwiecień","maj","czerwiec","lipiec","sierpień","wrzesień","październik","listopad","grudzień"
],
dayOfWeek:[
"nd","pn","wt","śr","cz","pt","sb"
]
},
pt:{
months:[
"Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"
],
dayOfWeek:[
"Dom","Seg","Ter","Qua","Qui","Sex","Sab"
]
},
ch:{
months:[
"一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"
],
dayOfWeek:[
"日","一","二","三","四","五","六"
]
},
se:{
months:[
"Januari","Februari","Mars","April","Maj","Juni","Juli","Augusti","September","Oktober","November","December"
],
dayOfWeek:[
"Sön","Mån","Tis","Ons","Tor","Fre","Lör"
]
},
kr:{
months:[
"1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"
],
dayOfWeek:[
"일","월","화","수","목","금","토"
]
},
it:{
months:[
"Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre"
],
dayOfWeek:[
"Dom","Lun","Mar","Mer","Gio","Ven","Sab"
]
},
da:{
months:[
"January","Februar","Marts","April","Maj","Juni","July","August","September","Oktober","November","December"
],
dayOfWeek:[
"Søn","Man","Tir","ons","Tor","Fre","lør"
]
},
ja:{
months:[
"1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"
],
dayOfWeek:[
"日","月","火","水","木","金","土"
]
},
vi:{
months:[
"Tháng 1","Tháng 2","Tháng 3","Tháng 4","Tháng 5","Tháng 6","Tháng 7","Tháng 8","Tháng 9","Tháng 10","Tháng 11","Tháng 12"
],
dayOfWeek:[
"CN","T2","T3","T4","T5","T6","T7"
]
},
sl:{
months:[
"Januar","Februar","Marec","April","Maj","Junij","Julij","Avgust","September","Oktober","November","December"
],
dayOfWeek:[
"Ned","Pon","Tor","Sre","Čet","Pet","Sob"
]
},
cs:{
months:[
"Leden","Únor","Březen","Duben","Květen","Červen","Červenec","Srpen","Září","Říjen","Listopad","Prosinec"
],
dayOfWeek:[
"Ne","Po","Út","St","Čt","Pá","So"
]
}
},
value:'',
lang:'en',
format:'Y/m/d H:i',
formatTime:'H:i',
formatDate:'Y/m/d',
startDate:false,
step:60,
monthChangeSpinner:true,
closeOnDateSelect:false,
closeOnWithoutClick:true,
closeOnInputClick:true,
timepicker:true,
datepicker:true,
minDate:false,
maxDate:false,
minTime:false,
maxTime:false,
allowTimes:[],
opened:false,
initTime:true,
inline:false,
onSelectDate:function(){},
onSelectTime:function(){},
onChangeMonth:function(){},
onChangeDateTime:function(){},
onShow:function(){},
onClose:function(){},
onGenerate:function(){},
withoutCopyright:true,
inverseButton:false,
hours12:false,
next:'xdsoft_next',
prev:'xdsoft_prev',
dayOfWeekStart:0,
timeHeightInTimePicker:25,
timepickerScrollbar:true,
todayButton:true,
defaultSelect:true,
scrollMonth:true,
scrollTime:true,
scrollInput:true,
lazyInit:false,
mask:false,
validateOnBlur:true,
allowBlank:true,
yearStart:1950,
yearEnd:2050,
style:'',
id:'',
fixed:false,
roundTime:'round',
className:'',
weekends:[],
yearOffset:0
};
if(!Array.prototype.indexOf){
Array.prototype.indexOf=function(obj,start){
for(var i=(start||0),j=this.length;i<j;i++){
if(this[i]===obj){return i;}
}
return-1;
}
}
Date.prototype.countDaysInMonth=function(){
return new Date(this.getFullYear(),this.getMonth()+1,0).getDate();
};
$.fn.xdsoftScroller=function(_percent){
return this.each(function(){
var timeboxparent=$(this);
if(!$(this).hasClass('xdsoft_scroller_box')){
var pointerEventToXY=function(e){
var out={x:0,y:0};
if(e.type=='touchstart'||e.type=='touchmove'||e.type=='touchend'||e.type=='touchcancel'){
var touch=e.originalEvent.touches[0]||e.originalEvent.changedTouches[0];
out.x=touch.pageX;
out.y=touch.pageY;
}else if(e.type=='mousedown'||e.type=='mouseup'||e.type=='mousemove'||e.type=='mouseover'||e.type=='mouseout'||e.type=='mouseenter'||e.type=='mouseleave'){
out.x=e.pageX;
out.y=e.pageY;
}
return out;
},
move=0,
timebox=timeboxparent.children().eq(0),
parentHeight=timeboxparent[0].clientHeight,
height=timebox[0].offsetHeight,
scrollbar=$('<div class="xdsoft_scrollbar"></div>'),
scroller=$('<div class="xdsoft_scroller"></div>'),
maximumOffset=100,
start=false;
scrollbar.append(scroller);
timeboxparent.addClass('xdsoft_scroller_box').append(scrollbar);
scroller.on('mousedown.xdsoft_scroller',function(event){
if(!parentHeight)
timeboxparent.trigger('resize_scroll.xdsoft_scroller',[_percent]);
var pageY=event.pageY,
top=parseInt(scroller.css('margin-top')),
h1=scrollbar[0].offsetHeight;
$(document.body).addClass('xdsoft_noselect');
$([document.body,window]).on('mouseup.xdsoft_scroller',function arguments_callee(){
$([document.body,window]).off('mouseup.xdsoft_scroller',arguments_callee)
.off('mousemove.xdsoft_scroller',move)
.removeClass('xdsoft_noselect');
});
$(document.body).on('mousemove.xdsoft_scroller',move=function(event){
var offset=event.pageY-pageY+top;
if(offset<0)
offset=0;
if(offset+scroller[0].offsetHeight>h1)
offset=h1-scroller[0].offsetHeight;
timeboxparent.trigger('scroll_element.xdsoft_scroller',[maximumOffset?offset/maximumOffset:0]);
});
});
timeboxparent
.on('scroll_element.xdsoft_scroller',function(event,percent){
if(!parentHeight)
timeboxparent.trigger('resize_scroll.xdsoft_scroller',[percent,true]);
percent=percent>1?1:(percent<0||isNaN(percent))?0:percent;
scroller.css('margin-top',maximumOffset*percent);
timebox.css('marginTop',-parseInt((height-parentHeight)*percent))
})
.on('resize_scroll.xdsoft_scroller',function(event,_percent,noTriggerScroll){
parentHeight=timeboxparent[0].clientHeight;
height=timebox[0].offsetHeight;
var percent=parentHeight/height,
sh=percent*scrollbar[0].offsetHeight;
if(percent>1)
scroller.hide();
else{
scroller.show();
scroller.css('height',parseInt(sh>10?sh:10));
maximumOffset=scrollbar[0].offsetHeight-scroller[0].offsetHeight;
if(noTriggerScroll!==true)
timeboxparent.trigger('scroll_element.xdsoft_scroller',[_percent?_percent:Math.abs(parseInt(timebox.css('marginTop')))/(height-parentHeight)]);
}
});
timeboxparent.mousewheel&&timeboxparent.mousewheel(function(event,delta,deltaX,deltaY){
var top=Math.abs(parseInt(timebox.css('marginTop')));
timeboxparent.trigger('scroll_element.xdsoft_scroller',[(top-delta*20)/(height-parentHeight)]);
event.stopPropagation();
return false;
});
timeboxparent.on('touchstart',function(event){
start=pointerEventToXY(event);
});
timeboxparent.on('touchmove',function(event){
if(start){
var coord=pointerEventToXY(event),top=Math.abs(parseInt(timebox.css('marginTop')));
timeboxparent.trigger('scroll_element.xdsoft_scroller',[(top-(coord.y-start.y))/(height-parentHeight)]);
event.stopPropagation();
event.preventDefault();
}
});
timeboxparent.on('touchend touchcancel',function(event){
start=false;
});
}
timeboxparent.trigger('resize_scroll.xdsoft_scroller',[_percent]);
});
};
$.fn.datetimepicker=function(opt){
var KEY0=48,
KEY9=57,
_KEY0=96,
_KEY9=105,
CTRLKEY=17,
DEL=46,
ENTER=13,
ESC=27,
BACKSPACE=8,
ARROWLEFT=37,
ARROWUP=38,
ARROWRIGHT=39,
ARROWDOWN=40,
TAB=9,
F5=116,
AKEY=65,
CKEY=67,
VKEY=86,
ZKEY=90,
YKEY=89,
ctrlDown=false,
options=($.isPlainObject(opt)||!opt)?$.extend(true,{},default_options,opt):$.extend({},default_options),
lazyInitTimer=0,
lazyInit=function(input){
input
.on('open.xdsoft focusin.xdsoft mousedown.xdsoft',function initOnActionCallback(event){
if(input.is(':disabled')||input.is(':hidden')||!input.is(':visible')||input.data('xdsoft_datetimepicker'))
return;
clearTimeout(lazyInitTimer);
lazyInitTimer=setTimeout(function(){
if(!input.data('xdsoft_datetimepicker'))
createDateTimePicker(input);
input
.off('open.xdsoft focusin.xdsoft mousedown.xdsoft',initOnActionCallback)
.trigger('open.xdsoft');
},100);
});
},
createDateTimePicker=function(input){
var datetimepicker=$('<div '+(options.id?'id="'+options.id+'"':'')+' '+(options.style?'style="'+options.style+'"':'')+' class="xdsoft_datetimepicker xdsoft_noselect '+options.className+'"></div>'),
xdsoft_copyright=$('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'),
datepicker=$('<div class="xdsoft_datepicker active"></div>'),
mounth_picker=$('<div class="xdsoft_mounthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span></div><div class="xdsoft_label xdsoft_year"><span></span></div><button type="button" class="xdsoft_next"></button></div>'),
calendar=$('<div class="xdsoft_calendar"></div>'),
timepicker=$('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'),
timeboxparent=timepicker.find('.xdsoft_time_box').eq(0),
timebox=$('<div class="xdsoft_time_variant"></div>'),
scrollbar=$('<div class="xdsoft_scrollbar"></div>'),
scroller=$('<div class="xdsoft_scroller"></div>'),
monthselect=$('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'),
yearselect=$('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>');
mounth_picker
.find('.xdsoft_month span')
.after(monthselect);
mounth_picker
.find('.xdsoft_year span')
.after(yearselect);
mounth_picker
.find('.xdsoft_month,.xdsoft_year')
.on('mousedown.xdsoft',function(event){
mounth_picker
.find('.xdsoft_select')
.hide();
var select=$(this).find('.xdsoft_select').eq(0),
val=0,
top=0;
if(_xdsoft_datetime.currentTime)
val=_xdsoft_datetime.currentTime[$(this).hasClass('xdsoft_month')?'getMonth':'getFullYear']();
select.show();
for(var items=select.find('div.xdsoft_option'),i=0;i<items.length;i++){
if(items.eq(i).data('value')==val){
break;
}else top+=items[0].offsetHeight;
}
select.xdsoftScroller(top/(select.children()[0].offsetHeight-(select[0].clientHeight)));
event.stopPropagation();
return false;
});
mounth_picker
.find('.xdsoft_select')
.xdsoftScroller()
.on('mousedown.xdsoft',function(event){
event.stopPropagation();
event.preventDefault();
})
.on('mousedown.xdsoft','.xdsoft_option',function(event){
if(_xdsoft_datetime&&_xdsoft_datetime.currentTime)
_xdsoft_datetime.currentTime[$(this).parent().parent().hasClass('xdsoft_monthselect')?'setMonth':'setFullYear']($(this).data('value'));
$(this).parent().parent().hide();
datetimepicker.trigger('xchange.xdsoft');
options.onChangeMonth&&options.onChangeMonth.call&&options.onChangeMonth.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
});
datetimepicker.setOptions=function(_options){
options=$.extend(true,{},options,_options);
if(_options.allowTimes&&$.isArray(_options.allowTimes)&&_options.allowTimes.length){
options['allowTimes']=$.extend(true,[],_options.allowTimes);
}
if(_options.weekends&&$.isArray(_options.weekends)&&_options.weekends.length){
options['weekends']=$.extend(true,[],_options.weekends);
}
if((options.open||options.opened)&&(!options.inline)){
input.trigger('open.xdsoft');
}
if(options.inline){
triggerAfterOpen=true;
datetimepicker.addClass('xdsoft_inline');
input.after(datetimepicker).hide();
}
if(options.inverseButton){
options.next='xdsoft_prev';
options.prev='xdsoft_next';
}
if(options.datepicker)
datepicker.addClass('active');
else
datepicker.removeClass('active');
if(options.timepicker)
timepicker.addClass('active');
else
timepicker.removeClass('active');
if(options.value){
input&&input.val&&input.val(options.value);
_xdsoft_datetime.setCurrentTime(options.value);
}
if(isNaN(options.dayOfWeekStart)||parseInt(options.dayOfWeekStart)<0||parseInt(options.dayOfWeekStart)>6)
options.dayOfWeekStart=0;
else
options.dayOfWeekStart=parseInt(options.dayOfWeekStart);
if(!options.timepickerScrollbar)
scrollbar.hide();
if(options.minDate&&/^-(.*)$/.test(options.minDate)){
options.minDate=_xdsoft_datetime.strToDateTime(options.minDate).dateFormat(options.formatDate);
}
if(options.maxDate&&/^\+(.*)$/.test(options.maxDate)){
options.maxDate=_xdsoft_datetime.strToDateTime(options.maxDate).dateFormat(options.formatDate);
}
mounth_picker
.find('.xdsoft_today_button')
.css('visibility',!options.todayButton?'hidden':'visible');
if(options.mask){
var e,
getCaretPos=function(input){
try{
if(document.selection&&document.selection.createRange){
var range=document.selection.createRange();
return range.getBookmark().charCodeAt(2)-2;
}else
if(input.setSelectionRange)
return input.selectionStart;
}catch(e){
return 0;
}
},
setCaretPos=function(node,pos){
node=(typeof node=="string"||node instanceof String)?document.getElementById(node):node;
if(!node){
return false;
}else if(node.createTextRange){
var textRange=node.createTextRange();
textRange.collapse(true);
textRange.moveEnd(pos);
textRange.moveStart(pos);
textRange.select();
return true;
}else if(node.setSelectionRange){
node.setSelectionRange(pos,pos);
return true;
}
return false;
},
isValidValue=function(mask,value){
var reg=mask
.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g,'\\$1')
.replace(/_/g,'{digit+}')
.replace(/([0-9]{1})/g,'{digit$1}')
.replace(/\{digit([0-9]{1})\}/g,'[0-$1_]{1}')
.replace(/\{digit[\+]\}/g,'[0-9_]{1}');
return RegExp(reg).test(value);
};
input.off('keydown.xdsoft');
switch(true){
case(options.mask===true):
options.mask=options.format
.replace(/Y/g,'9999')
.replace(/F/g,'9999')
.replace(/m/g,'19')
.replace(/d/g,'39')
.replace(/H/g,'29')
.replace(/i/g,'59')
.replace(/s/g,'59');
case($.type(options.mask)=='string'):
if(!isValidValue(options.mask,input.val()))
input.val(options.mask.replace(/[0-9]/g,'_'));
input.on('keydown.xdsoft',function(event){
var val=this.value,
key=event.which;
switch(true){
case((key>=KEY0&&key<=KEY9)||(key>=_KEY0&&key<=_KEY9))||(key==BACKSPACE||key==DEL):
var pos=getCaretPos(this),
digit=(key!=BACKSPACE&&key!=DEL)?String.fromCharCode((_KEY0<=key&&key<=_KEY9)?key-KEY0:key):'_';
if((key==BACKSPACE||key==DEL)&&pos){
pos--;
digit='_';
}
while(/[^0-9_]/.test(options.mask.substr(pos,1))&&pos<options.mask.length&&pos>0)
pos+=(key==BACKSPACE||key==DEL)?-1:1;
val=val.substr(0,pos)+digit+val.substr(pos+1);
if($.trim(val)==''){
val=options.mask.replace(/[0-9]/g,'_');
}else{
if(pos==options.mask.length)
break;
}
pos+=(key==BACKSPACE||key==DEL)?0:1;
while(/[^0-9_]/.test(options.mask.substr(pos,1))&&pos<options.mask.length&&pos>0)
pos+=(key==BACKSPACE||key==DEL)?-1:1;
if(isValidValue(options.mask,val)){
this.value=val;
setCaretPos(this,pos);
}else if($.trim(val)=='')
this.value=options.mask.replace(/[0-9]/g,'_');
else{
input.trigger('error_input.xdsoft');
}
break;
case(!!~([AKEY,CKEY,VKEY,ZKEY,YKEY].indexOf(key))&&ctrlDown):
case!!~([ESC,ARROWUP,ARROWDOWN,ARROWLEFT,ARROWRIGHT,F5,CTRLKEY,TAB,ENTER].indexOf(key)):
return true;
}
event.preventDefault();
return false;
});
break;
}
}
if(options.validateOnBlur){
input
.off('blur.xdsoft')
.on('blur.xdsoft',function(){
if(options.allowBlank&&!$.trim($(this).val()).length){
$(this).val(null);
datetimepicker.data('xdsoft_datetime').empty();
}else if(!Date.parseDate($(this).val(),options.format)){
$(this).val((_xdsoft_datetime.now()).dateFormat(options.format));
datetimepicker.data('xdsoft_datetime').setCurrentTime($(this).val());
}
else{
datetimepicker.data('xdsoft_datetime').setCurrentTime($(this).val());
}
datetimepicker.trigger('changedatetime.xdsoft');
});
}
options.dayOfWeekStartPrev=(options.dayOfWeekStart==0)?6:options.dayOfWeekStart-1;
datetimepicker
.trigger('xchange.xdsoft')
.trigger('afterOpen.xdsoft')
};
datetimepicker
.data('options',options)
.on('mousedown.xdsoft',function(event){
event.stopPropagation();
event.preventDefault();
yearselect.hide();
monthselect.hide();
return false;
});
var scroll_element=timepicker.find('.xdsoft_time_box');
scroll_element.append(timebox);
scroll_element.xdsoftScroller();
datetimepicker.on('afterOpen.xdsoft',function(){
scroll_element.xdsoftScroller();
});
datetimepicker
.append(datepicker)
.append(timepicker);
if(options.withoutCopyright!==true)
datetimepicker
.append(xdsoft_copyright);
datepicker
.append(mounth_picker)
.append(calendar);
$('body').append(datetimepicker);
var _xdsoft_datetime=new function(){
var _this=this;
_this.now=function(){
var d=new Date();
if(options.yearOffset)
d.setFullYear(d.getFullYear()+options.yearOffset);
return d;
};
_this.currentTime=this.now();
_this.isValidDate=function(d){
if(Object.prototype.toString.call(d)!=="[object Date]")
return false;
return!isNaN(d.getTime());
};
_this.setCurrentTime=function(dTime){
_this.currentTime=(typeof dTime=='string')?_this.strToDateTime(dTime):_this.isValidDate(dTime)?dTime:_this.now();
datetimepicker.trigger('xchange.xdsoft');
};
_this.empty=function(){
_this.currentTime=null;
};
_this.getCurrentTime=function(dTime){
return _this.currentTime;
};
_this.nextMonth=function(){
var month=_this.currentTime.getMonth()+1;
if(month==12){
_this.currentTime.setFullYear(_this.currentTime.getFullYear()+1);
month=0;
}
_this.currentTime.setDate(
Math.min(
Date.daysInMonth[month],
_this.currentTime.getDate()
)
);
_this.currentTime.setMonth(month);
options.onChangeMonth&&options.onChangeMonth.call&&options.onChangeMonth.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
datetimepicker.trigger('xchange.xdsoft');
return month;
};
_this.prevMonth=function(){
var month=_this.currentTime.getMonth()-1;
if(month==-1){
_this.currentTime.setFullYear(_this.currentTime.getFullYear()-1);
month=11;
}
_this.currentTime.setDate(
Math.min(
Date.daysInMonth[month],
_this.currentTime.getDate()
)
);
_this.currentTime.setMonth(month);
options.onChangeMonth&&options.onChangeMonth.call&&options.onChangeMonth.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
datetimepicker.trigger('xchange.xdsoft');
return month;
};
_this.strToDateTime=function(sDateTime){
if(sDateTime&&sDateTime instanceof Date&&_this.isValidDate(sDateTime))
return sDateTime;
var tmpDate=[],timeOffset,currentTime;
if((tmpDate=/^(\+|\-)(.*)$/.exec(sDateTime))&&(tmpDate[2]=Date.parseDate(tmpDate[2],options.formatDate))){
timeOffset=tmpDate[2].getTime()-(tmpDate[2].getTimezoneOffset())*60000;
currentTime=new Date((_xdsoft_datetime.now()).getTime()+parseInt(tmpDate[1]+'1')*timeOffset);
}else
currentTime=sDateTime?Date.parseDate(sDateTime,options.format):_this.now();
if(!_this.isValidDate(currentTime))
currentTime=_this.now();
return currentTime;
};
_this.strtodate=function(sDate){
if(sDate&&sDate instanceof Date&&_this.isValidDate(sDate))
return sDate;
var currentTime=sDate?Date.parseDate(sDate,options.formatDate):_this.now();
if(!_this.isValidDate(currentTime))
currentTime=_this.now();
return currentTime;
};
_this.strtotime=function(sTime){
if(sTime&&sTime instanceof Date&&_this.isValidDate(sTime))
return sTime;
var currentTime=sTime?Date.parseDate(sTime,options.formatTime):_this.now();
if(!_this.isValidDate(currentTime))
currentTime=_this.now();
return currentTime;
};
_this.str=function(){
return _this.currentTime.dateFormat(options.format);
};
};
mounth_picker
.find('.xdsoft_today_button')
.on('mousedown.xdsoft',function(){
datetimepicker.data('changed',true);
_xdsoft_datetime.setCurrentTime(0);
datetimepicker.trigger('afterOpen.xdsoft');
}).on('dblclick.xdsoft',function(){
input.val(_xdsoft_datetime.str());
datetimepicker.trigger('close.xdsoft');
});
mounth_picker
.find('.xdsoft_prev,.xdsoft_next')
.on('mousedown.xdsoft',function(){
var $this=$(this),
timer=0,
stop=false;
(function arguments_callee1(v){
var month=_xdsoft_datetime.currentTime.getMonth();
if($this.hasClass(options.next)){
_xdsoft_datetime.nextMonth();
}else if($this.hasClass(options.prev)){
_xdsoft_datetime.prevMonth();
}
if(options.monthChangeSpinner){
!stop&&(timer=setTimeout(arguments_callee1,v?v:100));
}
})(500);
$([document.body,window]).on('mouseup.xdsoft',function arguments_callee2(){
clearTimeout(timer);
stop=true;
$([document.body,window]).off('mouseup.xdsoft',arguments_callee2);
});
});
timepicker
.find('.xdsoft_prev,.xdsoft_next')
.on('mousedown.xdsoft',function(){
var $this=$(this),
timer=0,
stop=false,
period=110;
(function arguments_callee4(v){
var pheight=timeboxparent[0].clientHeight,
height=timebox[0].offsetHeight,
top=Math.abs(parseInt(timebox.css('marginTop')));
if($this.hasClass(options.next)&&(height-pheight)-options.timeHeightInTimePicker>=top){
timebox.css('marginTop','-'+(top+options.timeHeightInTimePicker)+'px')
}else if($this.hasClass(options.prev)&&top-options.timeHeightInTimePicker>=0){
timebox.css('marginTop','-'+(top-options.timeHeightInTimePicker)+'px')
}
timeboxparent.trigger('scroll_element.xdsoft_scroller',[Math.abs(parseInt(timebox.css('marginTop'))/(height-pheight))]);
period=(period>10)?10:period-10;
!stop&&(timer=setTimeout(arguments_callee4,v?v:period));
})(500);
$([document.body,window]).on('mouseup.xdsoft',function arguments_callee5(){
clearTimeout(timer);
stop=true;
$([document.body,window])
.off('mouseup.xdsoft',arguments_callee5);
});
});
var xchangeTimer=0;
datetimepicker
.on('xchange.xdsoft',function(event){
clearTimeout(xchangeTimer);
xchangeTimer=setTimeout(function(){
var table='',
start=new Date(_xdsoft_datetime.currentTime.getFullYear(),_xdsoft_datetime.currentTime.getMonth(),1,12,0,0),
i=0,
today=_xdsoft_datetime.now();
while(start.getDay()!=options.dayOfWeekStart)
start.setDate(start.getDate()-1);
table+='<table><thead><tr>';
for(var j=0;j<7;j++){
table+='<th>'+options.i18n[options.lang].dayOfWeek[(j+options.dayOfWeekStart)>6?0:j+options.dayOfWeekStart]+'</th>';
}
table+='</tr></thead>';
table+='<tbody><tr>';
var maxDate=false,minDate=false;
if(options.maxDate!==false){
maxDate=_xdsoft_datetime.strtodate(options.maxDate);
maxDate=new Date(maxDate.getFullYear(),maxDate.getMonth(),maxDate.getDate(),23,59,59,999);
}
if(options.minDate!==false){
minDate=_xdsoft_datetime.strtodate(options.minDate);
minDate=new Date(minDate.getFullYear(),minDate.getMonth(),minDate.getDate());
}
var d,y,m,classes=[];
while(i<_xdsoft_datetime.currentTime.countDaysInMonth()||start.getDay()!=options.dayOfWeekStart||_xdsoft_datetime.currentTime.getMonth()==start.getMonth()){
classes=[];
i++;
d=start.getDate();y=start.getFullYear();m=start.getMonth();
classes.push('xdsoft_date');
if((maxDate!==false&&start>maxDate)||(minDate!==false&&start<minDate)){
classes.push('xdsoft_disabled');
}
if(_xdsoft_datetime.currentTime.getMonth()!=m){
classes.push('xdsoft_other_month');
}
if((options.defaultSelect||datetimepicker.data('changed'))&&_xdsoft_datetime.currentTime.dateFormat(options.formatDate)==start.dateFormat(options.formatDate)){
classes.push('xdsoft_current');
}
if(today.dateFormat(options.formatDate)==start.dateFormat(options.formatDate)){
classes.push('xdsoft_today');
}
if(start.getDay()==0||start.getDay()==6||~options.weekends.indexOf(start.dateFormat(options.formatDate))){
classes.push('xdsoft_weekend');
}
if(options.beforeShowDay&&typeof options.beforeShowDay=='function'){
classes.push(options.beforeShowDay(start))
}
table+='<td data-date="'+d+'" data-month="'+m+'" data-year="'+y+'"'+' class="xdsoft_date xdsoft_day_of_week'+start.getDay()+' '+classes.join(' ')+'">'+
'<div>'+d+'</div>'+
'</td>';
if(start.getDay()==options.dayOfWeekStartPrev){
table+='</tr>';
}
start.setDate(d+1);
}
table+='</tbody></table>';
calendar.html(table);
mounth_picker.find('.xdsoft_label span').eq(0).text(options.i18n[options.lang].months[_xdsoft_datetime.currentTime.getMonth()]);
mounth_picker.find('.xdsoft_label span').eq(1).text(_xdsoft_datetime.currentTime.getFullYear());
var time='',
h='',
m='',
line_time=function line_time(h,m){
var now=_xdsoft_datetime.now();
now.setHours(h);
h=parseInt(now.getHours());
now.setMinutes(m);
m=parseInt(now.getMinutes());
classes=[];
if((options.maxTime!==false&&_xdsoft_datetime.strtotime(options.maxTime).getTime()<now.getTime())||(options.minTime!==false&&_xdsoft_datetime.strtotime(options.minTime).getTime()>now.getTime()))
classes.push('xdsoft_disabled');
if((options.initTime||options.defaultSelect||datetimepicker.data('changed'))&&parseInt(_xdsoft_datetime.currentTime.getHours())==parseInt(h)&&(options.step>59||Math[options.roundTime](_xdsoft_datetime.currentTime.getMinutes()/options.step)*options.step==parseInt(m))){
if(options.defaultSelect||datetimepicker.data('changed')){
classes.push('xdsoft_current');
}else if(options.initTime){
classes.push('xdsoft_init_time');
}
}
if(parseInt(today.getHours())==parseInt(h)&&parseInt(today.getMinutes())==parseInt(m))
classes.push('xdsoft_today');
time+='<div class="xdsoft_time '+classes.join(' ')+'" data-hour="'+h+'" data-minute="'+m+'">'+now.dateFormat(options.formatTime)+'</div>';
};
if(!options.allowTimes||!$.isArray(options.allowTimes)||!options.allowTimes.length){
for(var i=0,j=0;i<(options.hours12?12:24);i++){
for(j=0;j<60;j+=options.step){
h=(i<10?'0':'')+i;
m=(j<10?'0':'')+j;
line_time(h,m);
}
}
}else{
for(var i=0;i<options.allowTimes.length;i++){
h=_xdsoft_datetime.strtotime(options.allowTimes[i]).getHours();
m=_xdsoft_datetime.strtotime(options.allowTimes[i]).getMinutes();
line_time(h,m);
}
}
timebox.html(time);
var opt='',
i=0;
for(i=parseInt(options.yearStart,10)+options.yearOffset;i<=parseInt(options.yearEnd,10)+options.yearOffset;i++){
opt+='<div class="xdsoft_option '+(_xdsoft_datetime.currentTime.getFullYear()==i?'xdsoft_current':'')+'" data-value="'+i+'">'+i+'</div>';
}
yearselect.children().eq(0)
.html(opt);
for(i=0,opt='';i<=11;i++){
opt+='<div class="xdsoft_option '+(_xdsoft_datetime.currentTime.getMonth()==i?'xdsoft_current':'')+'" data-value="'+i+'">'+options.i18n[options.lang].months[i]+'</div>';
}
monthselect.children().eq(0).html(opt);
$(datetimepicker)
.trigger('generate.xdsoft');
},10);
event.stopPropagation();
})
.on('afterOpen.xdsoft',function(){
if(options.timepicker){
var classType;
if(timebox.find('.xdsoft_current').length){
classType='.xdsoft_current';
}else if(timebox.find('.xdsoft_init_time').length){
classType='.xdsoft_init_time';
}
if(classType){
var pheight=timeboxparent[0].clientHeight,
height=timebox[0].offsetHeight,
top=timebox.find(classType).index()*options.timeHeightInTimePicker+1;
if((height-pheight)<top)
top=height-pheight;
timeboxparent.trigger('scroll_element.xdsoft_scroller',[parseInt(top)/(height-pheight)]);
}else{
timeboxparent.trigger('scroll_element.xdsoft_scroller',[0]);
}
}
});
var timerclick=0;
calendar
.on('click.xdsoft','td',function(xdevent){
xdevent.stopPropagation();
timerclick++;
var $this=$(this),
currentTime=_xdsoft_datetime.currentTime;
if($this.hasClass('xdsoft_disabled'))
return false;
currentTime.setDate(1);
currentTime.setFullYear($this.data('year'));
currentTime.setMonth($this.data('month'));
currentTime.setDate($this.data('date'));
datetimepicker.trigger('select.xdsoft',[currentTime]);
input.val(_xdsoft_datetime.str());
if((timerclick>1||(options.closeOnDateSelect===true||(options.closeOnDateSelect===0&&!options.timepicker)))&&!options.inline){
datetimepicker.trigger('close.xdsoft');
}
if(options.onSelectDate&&options.onSelectDate.call){
options.onSelectDate.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
}
datetimepicker.data('changed',true);
datetimepicker.trigger('xchange.xdsoft');
datetimepicker.trigger('changedatetime.xdsoft');
setTimeout(function(){
timerclick=0;
},200);
});
timebox
.on('click.xdsoft','div',function(xdevent){
xdevent.stopPropagation();
var $this=$(this),
currentTime=_xdsoft_datetime.currentTime;
if($this.hasClass('xdsoft_disabled'))
return false;
currentTime.setHours($this.data('hour'));
currentTime.setMinutes($this.data('minute'));
datetimepicker.trigger('select.xdsoft',[currentTime]);
datetimepicker.data('input').val(_xdsoft_datetime.str());
!options.inline&&datetimepicker.trigger('close.xdsoft');
if(options.onSelectTime&&options.onSelectTime.call){
options.onSelectTime.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
}
datetimepicker.data('changed',true);
datetimepicker.trigger('xchange.xdsoft');
datetimepicker.trigger('changedatetime.xdsoft');
});
datetimepicker.mousewheel&&datepicker.mousewheel(function(event,delta,deltaX,deltaY){
if(!options.scrollMonth)
return true;
if(delta<0)
_xdsoft_datetime.nextMonth();
else
_xdsoft_datetime.prevMonth();
return false;
});
datetimepicker.mousewheel&&timeboxparent.unmousewheel().mousewheel(function(event,delta,deltaX,deltaY){
if(!options.scrollTime)
return true;
var pheight=timeboxparent[0].clientHeight,
height=timebox[0].offsetHeight,
top=Math.abs(parseInt(timebox.css('marginTop'))),
fl=true;
if(delta<0&&(height-pheight)-options.timeHeightInTimePicker>=top){
timebox.css('marginTop','-'+(top+options.timeHeightInTimePicker)+'px');
fl=false;
}else if(delta>0&&top-options.timeHeightInTimePicker>=0){
timebox.css('marginTop','-'+(top-options.timeHeightInTimePicker)+'px');
fl=false;
}
timeboxparent.trigger('scroll_element.xdsoft_scroller',[Math.abs(parseInt(timebox.css('marginTop'))/(height-pheight))]);
event.stopPropagation();
return fl;
});
var triggerAfterOpen=false;
datetimepicker
.on('changedatetime.xdsoft',function(){
if(options.onChangeDateTime&&options.onChangeDateTime.call){
var $input=datetimepicker.data('input');
options.onChangeDateTime.call(datetimepicker,_xdsoft_datetime.currentTime,$input);
$input.trigger('change');
}
})
.on('generate.xdsoft',function(){
if(options.onGenerate&&options.onGenerate.call)
options.onGenerate.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
if(triggerAfterOpen){
datetimepicker.trigger('afterOpen.xdsoft');
triggerAfterOpen=false;
}
})
.on('click.xdsoft',function(xdevent)
{
xdevent.stopPropagation();
});
var current_time_index=0;
input.mousewheel&&input.mousewheel(function(event,delta,deltaX,deltaY){
if(!options.scrollInput)
return true;
if(!options.datepicker&&options.timepicker){
current_time_index=timebox.find('.xdsoft_current').length?timebox.find('.xdsoft_current').eq(0).index():0;
if(current_time_index+delta>=0&&current_time_index+delta<timebox.children().length)
current_time_index+=delta;
timebox.children().eq(current_time_index).length&&timebox.children().eq(current_time_index).trigger('mousedown');
return false;
}else if(options.datepicker&&!options.timepicker){
datepicker.trigger(event,[delta,deltaX,deltaY]);
input.val&&input.val(_xdsoft_datetime.str());
datetimepicker.trigger('changedatetime.xdsoft');
return false;
}
});
var setPos=function(){
var offset=datetimepicker.data('input').offset(),top=offset.top+datetimepicker.data('input')[0].offsetHeight-1,left=offset.left,position="absolute";
if(options.fixed){
top-=$(window).scrollTop();
left-=$(window).scrollLeft();
position="fixed";
}else{
if(top+datetimepicker[0].offsetHeight>$(window).height()+$(window).scrollTop())
top=offset.top-datetimepicker[0].offsetHeight+1;
if(top<0)
top=0;
if(left+datetimepicker[0].offsetWidth>$(window).width())
left=offset.left-datetimepicker[0].offsetWidth+datetimepicker.data('input')[0].offsetWidth;
}
datetimepicker.css({
left:left,
top:top,
position:position
});
};
datetimepicker
.on('open.xdsoft',function(){
var onShow=true;
if(options.onShow&&options.onShow.call){
onShow=options.onShow.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
}
if(onShow!==false){
datetimepicker.show();
setPos();
$(window)
.off('resize.xdsoft',setPos)
.on('resize.xdsoft',setPos);
if(options.closeOnWithoutClick){
$([document.body,window]).on('mousedown.xdsoft',function arguments_callee6(){
datetimepicker.trigger('close.xdsoft');
$([document.body,window]).off('mousedown.xdsoft',arguments_callee6);
});
}
}
})
.on('close.xdsoft',function(event){
var onClose=true;
if(options.onClose&&options.onClose.call){
onClose=options.onClose.call(datetimepicker,_xdsoft_datetime.currentTime,datetimepicker.data('input'));
}
if(onClose!==false&&!options.opened&&!options.inline){
datetimepicker.hide();
}
event.stopPropagation();
})
.data('input',input);
var timer=0,
timer1=0;
datetimepicker.data('xdsoft_datetime',_xdsoft_datetime);
datetimepicker.setOptions(options);
function getCurrentValue(){
var ct=options.value?options.value:(input&&input.val&&input.val())?input.val():'';
if(ct&&_xdsoft_datetime.isValidDate(ct=Date.parseDate(ct,options.format))){
datetimepicker.data('changed',true);
}else
ct='';
if(!ct&&options.startDate!==false){
ct=_xdsoft_datetime.strToDateTime(options.startDate);
}
return ct?ct:0;
}
_xdsoft_datetime.setCurrentTime(getCurrentValue());
input
.data('xdsoft_datetimepicker',datetimepicker)
.on('open.xdsoft focusin.xdsoft mousedown.xdsoft',function(event){
if(input.is(':disabled')||input.is(':hidden')||!input.is(':visible')||(input.data('xdsoft_datetimepicker').is(':visible')&&options.closeOnInputClick))
return;
clearTimeout(timer);
timer=setTimeout(function(){
if(input.is(':disabled')||input.is(':hidden')||!input.is(':visible'))
return;
triggerAfterOpen=true;
_xdsoft_datetime.setCurrentTime(getCurrentValue());
datetimepicker.trigger('open.xdsoft');
},100);
})
.on('keydown.xdsoft',function(event){
var val=this.value,
key=event.which;
switch(true){
case!!~([ENTER].indexOf(key)):
var elementSelector=$("input:visible,textarea:visible");
datetimepicker.trigger('close.xdsoft');
elementSelector.eq(elementSelector.index(this)+1).focus();
return false;
case!!~[TAB].indexOf(key):
datetimepicker.trigger('close.xdsoft');
return true;
}
});
},
destroyDateTimePicker=function(input){
var datetimepicker=input.data('xdsoft_datetimepicker');
if(datetimepicker){
datetimepicker.data('xdsoft_datetime',null);
datetimepicker.remove();
input
.data('xdsoft_datetimepicker',null)
.off('open.xdsoft focusin.xdsoft focusout.xdsoft mousedown.xdsoft blur.xdsoft keydown.xdsoft');
$(window).off('resize.xdsoft');
$([window,document.body]).off('mousedown.xdsoft');
input.unmousewheel&&input.unmousewheel();
}
};
$(document)
.off('keydown.xdsoftctrl keyup.xdsoftctrl')
.on('keydown.xdsoftctrl',function(e){
if(e.keyCode==CTRLKEY)
ctrlDown=true;
})
.on('keyup.xdsoftctrl',function(e){
if(e.keyCode==CTRLKEY)
ctrlDown=false;
});
return this.each(function(){
var datetimepicker;
if(datetimepicker=$(this).data('xdsoft_datetimepicker')){
if($.type(opt)==='string'){
switch(opt){
case'show':
$(this).select().focus();
datetimepicker.trigger('open.xdsoft');
break;
case'hide':
datetimepicker.trigger('close.xdsoft');
break;
case'destroy':
destroyDateTimePicker($(this));
break;
case'reset':
this.value=this.defaultValue;
if(!this.value||!datetimepicker.data('xdsoft_datetime').isValidDate(Date.parseDate(this.value,options.format)))
datetimepicker.data('changed',false);
datetimepicker.data('xdsoft_datetime').setCurrentTime(this.value);
break;
}
}else{
datetimepicker
.setOptions(opt);
}
return 0;
}else
if(($.type(opt)!=='string')){
if(!options.lazyInit||options.open||options.inline){
createDateTimePicker($(this));
}else
lazyInit($(this));
}
});
};
$.fn.datetimepicker.defaults=default_options;
})(jQuery);
(function(factory){if(typeof define==='function'&&define.amd){define(['jquery'],factory)}else if(typeof exports==='object'){module.exports=factory}else{factory(jQuery)}}(function($){var toFix=['wheel','mousewheel','DOMMouseScroll','MozMousePixelScroll'];var toBind='onwheel'in document||document.documentMode>=9?['wheel']:['mousewheel','DomMouseScroll','MozMousePixelScroll'];var lowestDelta,lowestDeltaXY;if($.event.fixHooks){for(var i=toFix.length;i;){$.event.fixHooks[toFix[--i]]=$.event.mouseHooks}}$.event.special.mousewheel={setup:function(){if(this.addEventListener){for(var i=toBind.length;i;){this.addEventListener(toBind[--i],handler,false)}}else{this.onmousewheel=handler}},teardown:function(){if(this.removeEventListener){for(var i=toBind.length;i;){this.removeEventListener(toBind[--i],handler,false)}}else{this.onmousewheel=null}}};$.fn.extend({mousewheel:function(fn){return fn?this.bind("mousewheel",fn):this.trigger("mousewheel")},unmousewheel:function(fn){return this.unbind("mousewheel",fn)}});function handler(event){var orgEvent=event||window.event,args=[].slice.call(arguments,1),delta=0,deltaX=0,deltaY=0,absDelta=0,absDeltaXY=0,fn;event=$.event.fix(orgEvent);event.type="mousewheel";if(orgEvent.wheelDelta){delta=orgEvent.wheelDelta}if(orgEvent.detail){delta=orgEvent.detail*-1}if(orgEvent.deltaY){deltaY=orgEvent.deltaY*-1;delta=deltaY}if(orgEvent.deltaX){deltaX=orgEvent.deltaX;delta=deltaX*-1}if(orgEvent.wheelDeltaY!==undefined){deltaY=orgEvent.wheelDeltaY}if(orgEvent.wheelDeltaX!==undefined){deltaX=orgEvent.wheelDeltaX*-1}absDelta=Math.abs(delta);if(!lowestDelta||absDelta<lowestDelta){lowestDelta=absDelta}absDeltaXY=Math.max(Math.abs(deltaY),Math.abs(deltaX));if(!lowestDeltaXY||absDeltaXY<lowestDeltaXY){lowestDeltaXY=absDeltaXY}fn=delta>0?'floor':'ceil';delta=Math[fn](delta/lowestDelta);deltaX=Math[fn](deltaX/lowestDeltaXY);deltaY=Math[fn](deltaY/lowestDeltaXY);args.unshift(event,delta,deltaX,deltaY);return($.event.dispatch||$.event.handle).apply(this,args)}}));
Date.parseFunctions={count:0};
Date.parseRegexes=[];
Date.formatFunctions={count:0};
Date.prototype.dateFormat=function(format,ignore_offset){
if(Date.formatFunctions[format]==null){
Date.createNewFormat(format);
}
var func=Date.formatFunctions[format];
if(ignore_offset||!this.offset){
return this[func]();
}else{
return(new Date(this.valueOf()-this.offset))[func]();
}
};
Date.createNewFormat=function(format){
var funcName="format"+Date.formatFunctions.count++;
Date.formatFunctions[format]=funcName;
var code="Date.prototype."+funcName+" = function(){return ";
var special=false;
var ch='';
for(var i=0;i<format.length;++i){
ch=format.charAt(i);
if(!special&&ch=="\\"){
special=true;
}
else if(!special&&ch=='"'){
var end=format.indexOf('"',i+1);
if(end==-1)
{
end=format.length;
}
code+="'"+String.escape(format.substring(i+1,end))+"' + ";
i=end;
}
else if(special){
special=false;
code+="'"+String.escape(ch)+"' + ";
}
else{
code+=Date.getFormatCode(ch);
}
}
eval(code.substring(0,code.length-3)+";}");
};
Date.getFormatCode=function(character){
switch(character){
case"d":
return"String.leftPad(this.getDate(), 2, '0') + ";
case"D":
return"Date.dayNames[this.getDay()].substring(0, 3) + ";
case"j":
return"this.getDate() + ";
case"l":
return"Date.dayNames[this.getDay()] + ";
case"S":
return"this.getSuffix() + ";
case"w":
return"this.getDay() + ";
case"z":
return"this.getDayOfYear() + ";
case"W":
return"this.getWeekOfYear() + ";
case"F":
return"Date.monthNames[this.getMonth()] + ";
case"m":
return"String.leftPad(this.getMonth() + 1, 2, '0') + ";
case"M":
return"Date.monthNames[this.getMonth()].substring(0, 3) + ";
case"n":
return"(this.getMonth() + 1) + ";
case"t":
return"this.getDaysInMonth() + ";
case"L":
return"(this.isLeapYear() ? 1 : 0) + ";
case"Y":
return"this.getFullYear() + ";
case"y":
return"('' + this.getFullYear()).substring(2, 4) + ";
case"a":
return"(this.getHours() < 12 ? 'am' : 'pm') + ";
case"A":
return"(this.getHours() < 12 ? 'AM' : 'PM') + ";
case"g":
return"((this.getHours() %12) ? this.getHours() % 12 : 12) + ";
case"G":
return"this.getHours() + ";
case"h":
return"String.leftPad((this.getHours() %12) ? this.getHours() % 12 : 12, 2, '0') + ";
case"H":
return"String.leftPad(this.getHours(), 2, '0') + ";
case"i":
return"String.leftPad(this.getMinutes(), 2, '0') + ";
case"s":
return"String.leftPad(this.getSeconds(), 2, '0') + ";
case"X":
return"String.leftPad(this.getMilliseconds(), 3, '0') + ";
case"O":
return"this.getGMTOffset() + ";
case"T":
return"this.getTimezone() + ";
case"Z":
return"(this.getTimezoneOffset() * -60) + ";
case"q":
return"this.getQuarter() + ";
default:
return"'"+String.escape(character)+"' + ";
}
};
Date.parseDate=function(input,format){
if(Date.parseFunctions[format]==null){
Date.createParser(format);
}
var func=Date.parseFunctions[format];
return Date[func](input);
};
Date.createParser=function(format){
var funcName="parse"+Date.parseFunctions.count++;
var regexNum=Date.parseRegexes.length;
var currentGroup=1;
Date.parseFunctions[format]=funcName;
var code="Date."+funcName+" = function(input){\n"
+"var y = -1, m = -1, d = -1, h = -1, i = -1, s = -1, ms = -1, z = 0;\n"
+"var d = new Date();\n"
+"y = d.getFullYear();\n"
+"m = d.getMonth();\n"
+"d = d.getDate();\n"
+"var results = input.match(Date.parseRegexes["+regexNum+"]);\n"
+"if (results && results.length > 0) {";
var regex="";
var special=false;
var ch='';
for(var i=0;i<format.length;++i){
ch=format.charAt(i);
if(!special&&ch=="\\"){
special=true;
}
else if(special){
special=false;
regex+=String.escape(ch);
}
else{
var obj=Date.formatCodeToRegex(ch,currentGroup);
currentGroup+=obj.g;
regex+=obj.s;
if(obj.g&&obj.c){
code+=obj.c;
}
}
}
code+="if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0 && s >= 0 && ms >= 0)\n"
+"{return new Date(y, m, d, h, i, s, ms).applyOffset(z);}\n"
+"if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0 && s >= 0)\n"
+"{return new Date(y, m, d, h, i, s).applyOffset(z);}\n"
+"else if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0)\n"
+"{return new Date(y, m, d, h, i).applyOffset(z);}\n"
+"else if (y > 0 && m >= 0 && d > 0 && h >= 0)\n"
+"{return new Date(y, m, d, h).applyOffset(z);}\n"
+"else if (y > 0 && m >= 0 && d > 0)\n"
+"{return new Date(y, m, d).applyOffset(z);}\n"
+"else if (y > 0 && m >= 0)\n"
+"{return new Date(y, m).applyOffset(z);}\n"
+"else if (y > 0)\n"
+"{return new Date(y).applyOffset(z);}\n"
+"}return null;}";
Date.parseRegexes[regexNum]=new RegExp("^"+regex+"$");
eval(code);
};
Date.formatCodeToRegex=function(character,currentGroup){
switch(character){
case"D":
return{g:0,
c:null,
s:"(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)"};
case"j":
case"d":
return{g:1,
c:"d = parseInt(results["+currentGroup+"], 10);\n",
s:"(\\d{1,2})"};
case"l":
return{g:0,
c:null,
s:"(?:"+Date.dayNames.join("|")+")"};
case"S":
return{g:0,
c:null,
s:"(?:st|nd|rd|th)"};
case"w":
return{g:0,
c:null,
s:"\\d"};
case"z":
return{g:0,
c:null,
s:"(?:\\d{1,3})"};
case"W":
return{g:0,
c:null,
s:"(?:\\d{2})"};
case"F":
return{g:1,
c:"m = parseInt(Date.monthNumbers[results["+currentGroup+"].substring(0, 3)], 10);\n",
s:"("+Date.monthNames.join("|")+")"};
case"M":
return{g:1,
c:"m = parseInt(Date.monthNumbers[results["+currentGroup+"]], 10);\n",
s:"(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)"};
case"n":
case"m":
return{g:1,
c:"m = parseInt(results["+currentGroup+"], 10) - 1;\n",
s:"(\\d{1,2})"};
case"t":
return{g:0,
c:null,
s:"\\d{1,2}"};
case"L":
return{g:0,
c:null,
s:"(?:1|0)"};
case"Y":
return{g:1,
c:"y = parseInt(results["+currentGroup+"], 10);\n",
s:"(\\d{4})"};
case"y":
return{g:1,
c:"var ty = parseInt(results["+currentGroup+"], 10);\n"
+"y = ty > Date.y2kYear ? 1900 + ty : 2000 + ty;\n",
s:"(\\d{1,2})"};
case"a":
return{g:1,
c:"if (results["+currentGroup+"] == 'am') {\n"
+"if (h == 12) { h = 0; }\n"
+"} else { if (h < 12) { h += 12; }}",
s:"(am|pm)"};
case"A":
return{g:1,
c:"if (results["+currentGroup+"] == 'AM') {\n"
+"if (h == 12) { h = 0; }\n"
+"} else { if (h < 12) { h += 12; }}",
s:"(AM|PM)"};
case"g":
case"G":
case"h":
case"H":
return{g:1,
c:"h = parseInt(results["+currentGroup+"], 10);\n",
s:"(\\d{1,2})"};
case"i":
return{g:1,
c:"i = parseInt(results["+currentGroup+"], 10);\n",
s:"(\\d{2})"};
case"s":
return{g:1,
c:"s = parseInt(results["+currentGroup+"], 10);\n",
s:"(\\d{2})"};
case"X":
return{g:1,
c:"ms = parseInt(results["+currentGroup+"], 10);\n",
s:"(\\d{3})"};
case"O":
case"P":
return{g:1,
c:"z = Date.parseOffset(results["+currentGroup+"], 10);\n",
s:"(Z|[+-]\\d{2}:?\\d{2})"};
case"T":
return{g:0,
c:null,
s:"[A-Z]{3}"};
case"Z":
return{g:1,
c:"s = parseInt(results["+currentGroup+"], 10);\n",
s:"([+-]\\d{1,5})"};
default:
return{g:0,
c:null,
s:String.escape(character)};
}
};
Date.parseOffset=function(str){
if(str=="Z"){return 0;}
var seconds;
seconds=parseInt(str[0]+str[1]+str[2])*3600;
if(str[3]==":"){
seconds+=parseInt(str[4]+str[5])*60;
}else{
seconds+=parseInt(str[3]+str[4])*60;
}
return seconds;
};
Date.prototype.applyOffset=function(offset_seconds){
this.offset=offset_seconds*1000;
this.setTime(this.valueOf()+this.offset);
return this;
};
Date.prototype.getTimezone=function(){
return this.toString().replace(
/^.*? ([A-Z]{3}) [0-9]{4}.*$/,"$1").replace(
/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/,"$1$2$3").replace(
/^.*?[0-9]{4} \(([A-Z]{3})\)/,"$1");
};
Date.prototype.getGMTOffset=function(){
return(this.getTimezoneOffset()>0?"-":"+")
+String.leftPad(Math.floor(this.getTimezoneOffset()/60),2,"0")
+String.leftPad(this.getTimezoneOffset()%60,2,"0");
};
Date.prototype.getDayOfYear=function(){
var num=0;
Date.daysInMonth[1]=this.isLeapYear()?29:28;
for(var i=0;i<this.getMonth();++i){
num+=Date.daysInMonth[i];
}
return num+this.getDate()-1;
};
Date.prototype.getWeekOfYear=function(){
var now=this.getDayOfYear()+(4-this.getDay());
var jan1=new Date(this.getFullYear(),0,1);
var then=(7-jan1.getDay()+4);
document.write(then);
return String.leftPad(((now-then)/7)+1,2,"0");
};
Date.prototype.isLeapYear=function(){
var year=this.getFullYear();
return((year&3)==0&&(year%100||(year%400==0&&year)));
};
Date.prototype.getFirstDayOfMonth=function(){
var day=(this.getDay()-(this.getDate()-1))%7;
return(day<0)?(day+7):day;
};
Date.prototype.getLastDayOfMonth=function(){
var day=(this.getDay()+(Date.daysInMonth[this.getMonth()]-this.getDate()))%7;
return(day<0)?(day+7):day;
};
Date.prototype.getDaysInMonth=function(){
Date.daysInMonth[1]=this.isLeapYear()?29:28;
return Date.daysInMonth[this.getMonth()];
};
Date.prototype.getQuarter=function(){
return Date.quarterFromMonthNum[this.getMonth()];
};
Date.prototype.getSuffix=function(){
switch(this.getDate()){
case 1:
case 21:
case 31:
return"st";
case 2:
case 22:
return"nd";
case 3:
case 23:
return"rd";
default:
return"th";
}
};
String.escape=function(string){
return string.replace(/('|\\)/g,"\\$1");
};
String.leftPad=function(val,size,ch){
var result=new String(val);
if(ch==null){
ch=" ";
}
while(result.length<size){
result=ch+result;
}
return result;
};
Date.quarterFromMonthNum=[1,1,1,2,2,2,3,3,3,4,4,4];
Date.daysInMonth=[31,28,31,30,31,30,31,31,30,31,30,31];
Date.monthNames=
["January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December"];
Date.dayNames=
["Sunday",
"Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday"];
Date.y2kYear=50;
Date.monthNumbers={
Jan:0,
Feb:1,
Mar:2,
Apr:3,
May:4,
Jun:5,
Jul:6,
Aug:7,
Sep:8,
Oct:9,
Nov:10,
Dec:11};
Date.patterns={
ISO8601LongPattern:"Y\\-m\\-d\\TH\\:i\\:sO",
ISO8601ShortPattern:"Y\\-m\\-d",
ShortDatePattern:"n/j/Y",
LongDatePattern:"l, F d, Y",
FullDateTimePattern:"l, F d, Y g:i:s A",
MonthDayPattern:"F d",
ShortTimePattern:"g:i A",
LongTimePattern:"g:i:s A",
SortableDateTimePattern:"Y-m-d\\TH:i:s",
UniversalSortableDateTimePattern:"Y-m-d H:i:sO",
YearMonthPattern:"F, Y"};
Date.parseDate=function(input,format){
return moment(input,format).toDate();
};
Date.prototype.dateFormat=function(format){
return moment(this).format(format);
};
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/lib/formKit/:module.js";
jQuery(function($){
function hasInput(type){
var input=document.createElement('input');
input.setAttribute('type',type);
return input.type===type;
}
var defaultOptions={
opened:false,
todayButton:true,
style:'z-index: '+(1999999999+99),
allowBlank:true,
dayOfWeekStart:1,
format:'YYYY-MM-DD HH:mm',
formatDate:'DD.MM.YYYY',
formatTime:'HH:mm',
lang:'de',
step:15,
datepicker:true,
timepicker:true
};
var typeOptions={
'date':{
format:'DD.MM.YYYY',
timepicker:false
},
'time':{
format:'HH:mm',
datepicker:false
},
'datetime':{
},
'datetime-local':{
}
};
$('form.formkit').each(function(){
var $form=$(this);
for(var type in typeOptions){
if(!hasInput(type)){
$form.find('input[type="'+type+'"]').each(function(){
var $input=$(this);
$input.datetimepicker($.extend({},defaultOptions,typeOptions[type],{
step:$input.data('minutes-step')
}));
});
}
}
});
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/chosen/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/chosen/vendor/chosen.jquery.min.js";
(function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),title:a.title?a.title:void 0,children:0,disabled:a.disabled,classes:a.className}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,title:a.title?a.title:void 0,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,group_label:null!=b?this.parsed[b].label:null,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":/[\&\<\>\"\'\`]/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=/&(?!\w+;)|[\<\>\"\'\`]/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers(),this.on_ready())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0,this.include_group_label_in_selected=this.options.include_group_label_in_selected||!1},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.choice_label=function(a){return this.include_group_label_in_selected&&null!=a.group_label?"<b class='group-name'>"+a.group_label+"</b>"+a.html:a.html},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(this.choice_label(c)));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,a.title&&(c.title=a.title),this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b,c;return a.search_match||a.group_match?a.active_options>0?(b=[],b.push("group-result"),a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.innerHTML=a.search_text,a.title&&(c.title=a.title),this.outerHTML(c)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l;for(this.no_results_clear(),d=0,f=this.get_search_text(),a=f.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),i=new RegExp(a,"i"),c=this.get_search_regex(a),l=this.results_data,j=0,k=l.length;k>j;j++)b=l[j],b.search_match=!1,e=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(e=this.results_data[b.group_array_index],0===e.active_options&&e.search_match&&(d+=1),e.active_options+=1),b.search_text=b.group?b.label:b.html,(!b.group||this.group_search)&&(b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(d+=1),b.search_match?(f.length&&(g=b.search_text.search(i),h=b.search_text.substr(0,g+f.length)+"</em>"+b.search_text.substr(g+f.length),b.search_text=h.substr(0,g)+"<em>"+h.substr(g)),null!=e&&(e.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>d&&f.length?(this.update_results_content(""),this.no_results(f)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.get_search_regex=function(a){var b;return b=this.search_contains?"":"^",new RegExp(b+a,"i")},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(/\[|\]/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:/iP(od|hone)/i.test(window.navigator.userAgent)?!1:/Android/i.test(window.navigator.userAgent)&&/Mobile/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d instanceof Chosen?d.destroy():d instanceof Chosen||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(/[^\w]/g,"_")+"_chosen"),this.container=a("<div />",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chosen-drop"><ul class="chosen-results"></ul></div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'</span><div><b></b></div></a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" /></div><ul class="chosen-results"></ul></div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior()},Chosen.prototype.on_ready=function(){return this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("touchstart.chosen",function(b){return a.container_mousedown(b),b.preventDefault()}),this.container.bind("touchend.chosen",function(b){return a.container_mouseup(b),b.preventDefault()}),this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=a.originalEvent.deltaY||-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li />",{"class":"search-choice"}).html("<span>"+this.choice_label(b)+"</span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a />",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),b.addClass("result-selected"),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(this.choice_label(c)),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,a.preventDefault(),this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").html(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return a("<div/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span></span>"</li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:this.results_showing&&a.preventDefault();break;case 32:this.disable_search&&a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div />",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}).call(this);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/social/shareButtons/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/social/shareButtons/js/jquery.socialshareprivacy.js";
(function($){
"use strict";
function abbreviateText(text,length){
var abbreviated=decodeURIComponent(text);
if(abbreviated.length<=length){
return text;
}
var lastWhitespaceIndex=abbreviated.substring(0,length-1).lastIndexOf(' ');
abbreviated=encodeURIComponent(abbreviated.substring(0,lastWhitespaceIndex))+"\u2026";
return abbreviated;
}
function getMeta(name){
var metaContent=$('meta[name="'+name+'"]').attr('content');
return metaContent||'';
}
function getTweetText(){
var title=getMeta('DC.title');
var creator=getMeta('DC.creator');
if(title.length>0&&creator.length>0){
title+=' - '+creator;
}else{
title=$('title').text();
}
return encodeURIComponent(title);
}
function getURI(){
var uri=document.location.href;
var canonical=$("link[rel=canonical]").attr("href");
if(canonical&&canonical.length>0){
if(canonical.indexOf("http")<0){
canonical=document.location.protocol+"//"+document.location.host+canonical;
}
uri=canonical;
}
return uri;
}
function cookieSet(name,value,days,path,domain){
var expires=new Date();
expires.setTime(expires.getTime()+(days*24*60*60*1000));
document.cookie=name+'='+value+'; expires='+expires.toUTCString()+'; path='+path+'; domain='+domain;
}
function cookieDel(name,value,path,domain){
var expires=new Date();
expires.setTime(expires.getTime()-100);
document.cookie=name+'='+value+'; expires='+expires.toUTCString()+'; path='+path+'; domain='+domain;
}
$.fn.socialSharePrivacy=function(settings){
var defaults={
'services':{
'facebook':{
'status':'on',
'dummy_img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook.png?fp=8e8ed4af289b",
'perma_option':'on',
'referrer_track':'',
'action':'recommend',
'layout':'button_count',
'sharer':{
'status':'off',
'dummy_img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook_share_de.png?fp=d978610b0b34",
'img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook_share_de.png?fp=d978610b0b34"
}
},
'twitter':{
'status':'on',
'dummy_img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_twitter.png?fp=2f7543ce58b2",
'perma_option':'on',
'referrer_track':'',
'tweet_text':getTweetText,
'count':'horizontal'
},
'gplus':{
'status':'on',
'dummy_img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_gplus.png?fp=bea2cc0a252a",
'perma_option':'on',
'referrer_track':'',
'size':'medium'
}
},
'info_link':'http://www.heise.de/ct/artikel/2-Klicks-fuer-mehr-Datenschutz-1333879.html',
'cookie_path':'/',
'cookie_domain':document.location.host,
'cookie_expires':'365',
'css_path':'',
'uri':getURI,
'language':'',
'lang_path':'',
'skin':'light',
'alignment':'horizontal',
'switch_alignment':'left',
'perma_orientation':'down'
};
var options=$.extend(true,defaults,settings);
var facebook_on=(options.services.facebook.status==='on');
var facebook_sharer_on=(options.services.facebook.sharer.status==='on');
var twitter_on=(options.services.twitter.status==='on');
var gplus_on=(options.services.gplus.status==='on');
if(!facebook_on&&!twitter_on&&!gplus_on){
return;
}
return this.each(function(){
var iteration=this;
$.when(
)
.then(function(){
$(iteration).prepend('<ul class="social_share_privacy_area clearfix"></ul>');
var context=$('.social_share_privacy_area',iteration);
if(options.skin=='dark'){
$(context).addClass('skin-dark');
}
if(options.alignment=='vertical'){
$(context).addClass('vertical');
if(options.switch_alignment=='right'&&
((facebook_on&&options.services.facebook.layout=='box_count')||(!facebook_on))&&
((twitter_on&&options.services.twitter.count=='vertical')||(!twitter_on))&&
((gplus_on&&options.services.gplus.size=='tall')||(!gplus_on))){
$(context).addClass('switch_right');
}
}
var uri=options.uri;
if(typeof uri==='function'){
uri=uri(context);
}
if(facebook_on){
var fb_dummy_btn;
var fb_code;
var fb_height=options.services.facebook.layout=='box_count'?'61':'21';
var fb_width=options.services.facebook.layout=='box_count'?'90':'130';
var fb_enc_uri=encodeURIComponent(uri+options.services.facebook.referrer_track);
if(facebook_sharer_on){
fb_dummy_btn='<img src="'+options.services.facebook.sharer.dummy_img+'" alt="Facebook &quot;Share&quot;-Dummy" class="fb_like_privacy_dummy" />';
fb_code='<a href="#" onclick="window.open(\'https://www.facebook.com/sharer/sharer.php?u='+fb_enc_uri+'\', \'facebook-share-dialog\', \'width=626,height=436\'); return false;"><img src="'+options.services.facebook.sharer.img+'" alt="" /></a>';
}
else{
fb_dummy_btn='<img src="'+options.services.facebook.dummy_img+'" alt="Facebook &quot;Like&quot;-Dummy" class="fb_like_privacy_dummy" />';
fb_code='<iframe src="//www.facebook.com/plugins/like.php?locale='+"de_DE"+'&amp;href='+fb_enc_uri+'&amp;width='+fb_width+'&amp;layout='+options.services.facebook.layout+'&amp;action='+options.services.facebook.action+'&amp;show_faces=false&amp;share=false&amp;height='+fb_height+'&amp;colorscheme='+options.skin+'" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:'+fb_width+'px; height:'+fb_height+'px;" allowTransparency="true"></iframe>';
}
context.append('<li class="facebook help_info clearfix"><span class="info">'+"2 Klicks f\x26uuml;r mehr Datenschutz: Erst wenn Sie hier klicken, wird der Button aktiv und Sie k\x26ouml;nnen Ihre Empfehlung an Facebook senden. Schon beim Aktivieren werden Daten an Dritte \x26uuml;bertragen \x26ndash; siehe \x3Cem\x3Ei\x3C/em\x3E."+'</span><a href="#" class="switch off">'+"nicht mit Facebook verbunden"+'</a><div class="fb_like dummy_btn">'+fb_dummy_btn+'</div></li>');
var $container_fb=$('li.facebook',context);
$(context).on('click','li.facebook div.fb_like img.fb_like_privacy_dummy,li.facebook .switch',function(e){
e.preventDefault();
if($container_fb.find('.switch').hasClass('off')){
$container_fb.addClass('info_off');
$container_fb.find('.switch').addClass('on').removeClass('off').html("mit Facebook verbunden");
$container_fb.find('img.fb_like_privacy_dummy').replaceWith(fb_code);
}
else{
$container_fb.removeClass('info_off');
$container_fb.find('.switch').addClass('off').removeClass('on').html("nicht mit Facebook verbunden");
$container_fb.find('.fb_like').html(fb_dummy_btn);
}
});
}
if(twitter_on){
var text=options.services.twitter.tweet_text;
if(typeof text==='function'){
text=text();
}
text=abbreviateText(text,'120');
var tw_height=options.services.twitter.count=='horizontal'?'25':'62';
var tw_width=options.services.twitter.count=='horizontal'?'130':'83';
var twitter_enc_uri=encodeURIComponent(uri+options.services.twitter.referrer_track);
var twitter_count_url=encodeURIComponent(uri);
var twitter_code='<iframe allowtransparency="true" frameborder="0" scrolling="no" src="//platform.twitter.com/widgets/tweet_button.html?url='+twitter_enc_uri+'&amp;counturl='+twitter_count_url+'&amp;text='+text+'&amp;count='+options.services.twitter.count+'&amp;lang='+"en"+'&amp;dnt=true" style="width:'+tw_width+'px; height:'+tw_height+'px;"></iframe>';
var twitter_dummy_btn='<img src="'+options.services.twitter.dummy_img+'" alt="&quot;Tweet this&quot;-Dummy" class="tweet_this_dummy" />';
context.append('<li class="twitter help_info clearfix"><span class="info">'+"2 Klicks f\x26uuml;r mehr Datenschutz: Erst wenn Sie hier klicken, wird der Button aktiv und Sie k\x26ouml;nnen Ihre Empfehlung an Twitter senden. Schon beim Aktivieren werden Daten an Dritte \x26uuml;bertragen \x26ndash; siehe \x3Cem\x3Ei\x3C/em\x3E."+'</span><a href="#" class="switch off">'+"nicht mit Twitter verbunden"+'</a><div class="tweet dummy_btn">'+twitter_dummy_btn+'</div></li>');
var $container_tw=$('li.twitter',context);
$(context).on('click','li.twitter div.tweet img,li.twitter .switch',function(e){
e.preventDefault();
if($container_tw.find('.switch').hasClass('off')){
$container_tw.addClass('info_off');
$container_tw.find('.switch').addClass('on').removeClass('off').html("mit Twitter verbunden");
$container_tw.find('img.tweet_this_dummy').replaceWith(twitter_code);
}
else{
$container_tw.removeClass('info_off');
$container_tw.find('.switch').addClass('off').removeClass('on').html("nicht mit Twitter verbunden");
$container_tw.find('.tweet').html(twitter_dummy_btn);
}
});
}
if(gplus_on){
var gplus_uri=uri+options.services.gplus.referrer_track;
var gplus_code='<div class="g-plusone" data-size="'+options.services.gplus.size+'" data-href="'+gplus_uri+'"></div><script type="text/javascript">window.___gcfg = {lang: "'+"de"+'"}; (function() { var po = document.createElement("script"); po.type = "text/javascript"; po.async = true; po.src = "https://apis.google.com/js/platform.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(po, s); })(); </script>';
var gplus_dummy_btn='<img src="'+options.services.gplus.dummy_img+'" alt="&quot;Google+1&quot;-Dummy" class="gplus_one_dummy" />';
context.append('<li class="gplus help_info clearfix"><span class="info">'+"2 Klicks f\x26uuml;r mehr Datenschutz: Erst wenn Sie hier klicken, wird der Button aktiv und Sie k\x26ouml;nnen Ihre Empfehlung an Google+ senden. Schon beim Aktivieren werden Daten an Dritte \x26uuml;bertragen \x26ndash; siehe \x3Cem\x3Ei\x3C/em\x3E."+'</span><a href="#" class="switch off">'+"nicht mit Google+ verbunden"+'</a><div class="gplusone dummy_btn">'+gplus_dummy_btn+'</div></li>');
var $container_gplus=$('li.gplus',context);
$(context).on('click','li.gplus div.gplusone img,li.gplus .switch',function(e){
e.preventDefault();
if($container_gplus.find('.switch').hasClass('off')){
$container_gplus.addClass('info_off');
$container_gplus.find('.switch').addClass('on').removeClass('off').html("mit Google+ verbunden");
$container_gplus.find('img.gplus_one_dummy').replaceWith(gplus_code);
}
else{
$container_gplus.removeClass('info_off');
$container_gplus.find('.switch').addClass('off').removeClass('on').html("nicht mit Google+ verbunden");
$container_gplus.find('.gplusone').html(gplus_dummy_btn);
}
});
}
context.append('<li class="settings_info '+options.perma_orientation+'"><div class="settings_info_menu off perma_option_off"><a href="'+options.info_link+'"><span class="help_info icon"><span class="info">'+"Wenn Sie diese Felder durch einen Klick aktivieren, werden Informationen an Facebook, Twitter oder Google in die USA \x26uuml;bertragen und unter Umst\x26auml;nden auch dort gespeichert. N\x26auml;heres erfahren Sie durch einen Klick auf das \x3Cem\x3Ei\x3C/em\x3E."+'</span></span></a></div></li>');
$(context).on('mouseenter','.help_info:not(.info_off)',function(){
var $info_wrapper=$(this);
var timeout_id=window.setTimeout(function(){$($info_wrapper).addClass('display');},500);
$(this).data('timeout_id',timeout_id);
});
$(context).on('mouseleave','.help_info',function(){
var timeout_id=$(this).data('timeout_id');
window.clearTimeout(timeout_id);
if($(this).hasClass('display')){
$(this).removeClass('display');
}
});
var facebook_perma=(options.services.facebook.perma_option==='on');
var twitter_perma=(options.services.twitter.perma_option==='on');
var gplus_perma=(options.services.gplus.perma_option==='on');
if((facebook_on&&facebook_perma)||(twitter_on&&twitter_perma)||(gplus_on&&gplus_perma)){
var cookie_list=document.cookie.split(';');
var cookies='{';
var i=0;
for(;i<cookie_list.length;i+=1){
if(cookie_list[i].match(/=/)){
var foo=cookie_list[i].split('=');
foo[0]=$.trim(foo[0].replace(/"/g,''));
foo[1]=$.trim(foo[1].replace(/"/g,''));
cookies+='"'+foo[0]+'":"'+foo[1]+'"';
if(i<cookie_list.length-1){
cookies+=',';
}
}
}
cookies+='}';
cookies=jQuery.parseJSON(cookies);
var $container_settings_info=$('li.settings_info',context);
$container_settings_info.find('.settings_info_menu').removeClass('perma_option_off');
$container_settings_info.find('.settings_info_menu').append('<a href="#" class="settings">'+"Einstellungen"+'</a><form><fieldset><legend>'+"Dauerhaft aktivieren und Daten\x26uuml;ber\x26shy;tragung zustimmen:"+'</legend></fieldset></form>');
var random='r'+Math.floor(Math.random()*101);
var checked=' checked="checked"';
if(facebook_on&&facebook_perma){
var perma_status_facebook=cookies.socialSharePrivacy_facebook==='perma_on'?checked:'';
$container_settings_info.find('form fieldset').append(
'<input type="checkbox" name="perma_status_facebook" id="'+random+'_perma_status_facebook"'+perma_status_facebook+' /><label for="'+random+'_perma_status_facebook">'+"Facebook"+'</label>'
);
}
if(twitter_on&&twitter_perma){
var perma_status_twitter=cookies.socialSharePrivacy_twitter==='perma_on'?checked:'';
$container_settings_info.find('form fieldset').append(
'<input type="checkbox" name="perma_status_twitter" id="'+random+'_perma_status_twitter"'+perma_status_twitter+' /><label for="'+random+'_perma_status_twitter">'+"Twitter"+'</label>'
);
}
if(gplus_on&&gplus_perma){
var perma_status_gplus=cookies.socialSharePrivacy_gplus==='perma_on'?checked:'';
$container_settings_info.find('form fieldset').append(
'<input type="checkbox" name="perma_status_gplus" id="'+random+'_perma_status_gplus"'+perma_status_gplus+' /><label for="'+random+'_perma_status_gplus">'+"Google+"+'</label>'
);
}
$(context).on('click','li.settings_info .settings',function(e){
e.preventDefault();
if($(this).data('keyb')=='on'){
$('li.settings_info',context).trigger('mouseleave');
$(this).data('keyb','off');
}
else{
$('li.settings_info .settings',context).trigger('mouseenter');
$(this).data('keyb','on');
}
});
$(context).on('mouseenter','li.settings_info .settings',function(){
var timeout_id=window.setTimeout(function(){$container_settings_info.find('.settings_info_menu').removeClass('off').addClass('on');},500);
$(this).data('timeout_id',timeout_id);
});
$(context).on('mouseleave','li.settings_info',function(){
var timeout_id=$(this).data('timeout_id');
window.clearTimeout(timeout_id);
$container_settings_info.find('.settings_info_menu').removeClass('on').addClass('off');
});
$(context).on('click','li.settings_info fieldset input',function(event){
var click=event.target.id;
var service=click.substr(click.lastIndexOf('_')+1,click.length);
var cookie_name='socialSharePrivacy_'+service;
if($('#'+event.target.id+':checked').length){
cookieSet(cookie_name,'perma_on',options.cookie_expires,options.cookie_path,options.cookie_domain);
$('form fieldset label[for='+click+']',context).addClass('checked');
}
else{
cookieDel(cookie_name,'perma_on',options.cookie_path,options.cookie_domain);
$('form fieldset label[for='+click+']',context).removeClass('checked');
}
});
if(facebook_on&&facebook_perma&&cookies.socialSharePrivacy_facebook==='perma_on'){
$('li.facebook .switch',context).click();
}
if(twitter_on&&twitter_perma&&cookies.socialSharePrivacy_twitter==='perma_on'){
$('li.twitter .switch',context).click();
}
if(gplus_on&&gplus_perma&&cookies.socialSharePrivacy_gplus==='perma_on'){
$('li.gplus .switch',context).click();
}
}
});
});
};
}(jQuery));
jQuery(function($){
$('.socialshareprivacy').each(function(){
var $socialshareprivacy=$(this);
var facebook_dummy_img="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook_en.png?fp=5df0fc2fd4db";
if($('meta[http-equiv=content-language]').attr("content")=='de'){
facebook_dummy_img="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook.png?fp=8e8ed4af289b";
}
if($socialshareprivacy.data('facebook-action')=='like'){
facebook_dummy_img="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook_like.png?fp=165e60c29e6e";
}
var sharer={};
var facebook_dummy_img_share="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook_share_en.png?fp=94c09df85edc";
var facebook_img_share="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/facebook_share_en.png?fp=e9bd748db5da";
if($('meta[http-equiv=content-language]').attr("content")=='de'){
facebook_dummy_img_share="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_facebook_share_de.png?fp=d978610b0b34";
facebook_img_share="/sv_oberursel/:res/modules/common/common/social/shareButtons/img/facebook_share_de.png?fp=1f6421bc7057";
}
if($socialshareprivacy.data('facebook-share')=='on'){
sharer={
'status':'on',
'dummy_img':facebook_dummy_img_share,
'img':facebook_img_share
};
}
var options={
'services':{
'facebook':{
'status':'off',
'perma_option':($socialshareprivacy.data('perma-option')=='off'?'off':'on'),
'action':($socialshareprivacy.data('facebook-action')=='like'?'like':'recommend'),
'layout':($socialshareprivacy.data('count-position')=='top'?'box_count':'button_count'),
'dummy_img':facebook_dummy_img,
'img':facebook_dummy_img,
'sharer':sharer
},
'twitter':{
'status':'off',
'perma_option':($socialshareprivacy.data('perma-option')=='off'?'off':'on'),
'count':($socialshareprivacy.data('count-position')=='top'?'vertical':'horizontal'),
'dummy_img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_twitter.png?fp=2f7543ce58b2",
},
'gplus':{
'status':'off',
'perma_option':($socialshareprivacy.data('perma-option')=='off'?'off':'on'),
'size':($socialshareprivacy.data('count-position')=='top'?'tall':'medium'),
'dummy_img':"/sv_oberursel/:res/modules/common/common/social/shareButtons/img/dummy_gplus.png?fp=bea2cc0a252a",
}
},
'uri':$socialshareprivacy.data('uri'),
'alignment':$socialshareprivacy.data('alignment'),
'perma_orientation':$socialshareprivacy.data('perma-orientation')
};
$socialshareprivacy.data('services').split(/\s+/).forEach(function(service){
if(options.services[service]){
options.services[service].status='on';
}
});
$socialshareprivacy.socialSharePrivacy(options);
});
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fullcalendar/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fullcalendar/vendor/fullcalendar.min.js";
!function(a){"function"==typeof define&&define.amd?define(["jquery","moment"],a):"object"==typeof exports?module.exports=a(require("jquery"),require("moment")):a(jQuery,moment)}(function(a,b){function c(a){return W(a,Ya)}function d(b){var c,d={views:b.views||{}};return a.each(b,function(b,e){"views"!=b&&(a.isPlainObject(e)&&!/(time|duration|interval)$/i.test(b)&&-1==a.inArray(b,Ya)?(c=null,a.each(e,function(a,e){/^(month|week|day|default|basic(Week|Day)?|agenda(Week|Day)?)$/.test(a)?(d.views[a]||(d.views[a]={}),d.views[a][b]=e):(c||(c={}),c[a]=e)}),c&&(d[b]=c)):d[b]=e)}),d}function e(a,b){b.left&&a.css({"border-left-width":1,"margin-left":b.left-1}),b.right&&a.css({"border-right-width":1,"margin-right":b.right-1})}function f(a){a.css({"margin-left":"","margin-right":"","border-left-width":"","border-right-width":""})}function g(){a("body").addClass("fc-not-allowed")}function h(){a("body").removeClass("fc-not-allowed")}function i(b,c,d){var e=Math.floor(c/b.length),f=Math.floor(c-e*(b.length-1)),g=[],h=[],i=[],k=0;j(b),b.each(function(c,d){var j=c===b.length-1?f:e,l=a(d).outerHeight(!0);j>l?(g.push(d),h.push(l),i.push(a(d).height())):k+=l}),d&&(c-=k,e=Math.floor(c/g.length),f=Math.floor(c-e*(g.length-1))),a(g).each(function(b,c){var d=b===g.length-1?f:e,j=h[b],k=i[b],l=d-(j-k);d>j&&a(c).height(l)})}function j(a){a.height("")}function k(b){var c=0;return b.find("> span").each(function(b,d){var e=a(d).outerWidth();e>c&&(c=e)}),c++,b.width(c),c}function l(a,b){var c,d=a.add(b);return d.css({position:"relative",left:-1}),c=a.outerHeight()-b.outerHeight(),d.css({position:"",left:""}),c}function m(b){var c=b.css("position"),d=b.parents().filter(function(){var b=a(this);return/(auto|scroll)/.test(b.css("overflow")+b.css("overflow-y")+b.css("overflow-x"))}).eq(0);return"fixed"!==c&&d.length?d:a(b[0].ownerDocument||document)}function n(a,b){var c=a.offset(),d=c.left-(b?b.left:0),e=c.top-(b?b.top:0);return{left:d,right:d+a.outerWidth(),top:e,bottom:e+a.outerHeight()}}function o(a,b){var c=a.offset(),d=q(a),e=c.left+t(a,"border-left-width")+d.left-(b?b.left:0),f=c.top+t(a,"border-top-width")+d.top-(b?b.top:0);return{left:e,right:e+a[0].clientWidth,top:f,bottom:f+a[0].clientHeight}}function p(a,b){var c=a.offset(),d=c.left+t(a,"border-left-width")+t(a,"padding-left")-(b?b.left:0),e=c.top+t(a,"border-top-width")+t(a,"padding-top")-(b?b.top:0);return{left:d,right:d+a.width(),top:e,bottom:e+a.height()}}function q(a){var b=a.innerWidth()-a[0].clientWidth,c={left:0,right:0,top:0,bottom:a.innerHeight()-a[0].clientHeight};return r()&&"rtl"==a.css("direction")?c.left=b:c.right=b,c}function r(){return null===Za&&(Za=s()),Za}function s(){var b=a("<div><div/></div>").css({position:"absolute",top:-1e3,left:0,border:0,padding:0,overflow:"scroll",direction:"rtl"}).appendTo("body"),c=b.children(),d=c.offset().left>b.offset().left;return b.remove(),d}function t(a,b){return parseFloat(a.css(b))||0}function u(a){return 1==a.which&&!a.ctrlKey}function v(a){if(void 0!==a.pageX)return a.pageX;var b=a.originalEvent.touches;return b?b[0].pageX:void 0}function w(a){if(void 0!==a.pageY)return a.pageY;var b=a.originalEvent.touches;return b?b[0].pageY:void 0}function x(a){return/^touch/.test(a.type)}function y(a){a.addClass("fc-unselectable").on("selectstart",z)}function z(a){a.preventDefault()}function A(a){return window.addEventListener?(window.addEventListener("scroll",a,!0),!0):!1}function B(a){return window.removeEventListener?(window.removeEventListener("scroll",a,!0),!0):!1}function C(a,b){var c={left:Math.max(a.left,b.left),right:Math.min(a.right,b.right),top:Math.max(a.top,b.top),bottom:Math.min(a.bottom,b.bottom)};return c.left<c.right&&c.top<c.bottom?c:!1}function D(a,b){return{left:Math.min(Math.max(a.left,b.left),b.right),top:Math.min(Math.max(a.top,b.top),b.bottom)}}function E(a){return{left:(a.left+a.right)/2,top:(a.top+a.bottom)/2}}function F(a,b){return{left:a.left-b.left,top:a.top-b.top}}function G(b){var c,d,e=[],f=[];for("string"==typeof b?f=b.split(/\s*,\s*/):"function"==typeof b?f=[b]:a.isArray(b)&&(f=b),c=0;c<f.length;c++)d=f[c],"string"==typeof d?e.push("-"==d.charAt(0)?{field:d.substring(1),order:-1}:{field:d,order:1}):"function"==typeof d&&e.push({func:d});return e}function H(a,b,c){var d,e;for(d=0;d<c.length;d++)if(e=I(a,b,c[d]))return e;return 0}function I(a,b,c){return c.func?c.func(a,b):J(a[c.field],b[c.field])*(c.order||1)}function J(b,c){return b||c?null==c?-1:null==b?1:"string"===a.type(b)||"string"===a.type(c)?String(b).localeCompare(String(c)):b-c:0}function K(a,b){var c,d,e,f,g=a.start,h=a.end,i=b.start,j=b.end;return h>i&&j>g?(g>=i?(c=g.clone(),e=!0):(c=i.clone(),e=!1),j>=h?(d=h.clone(),f=!0):(d=j.clone(),f=!1),{start:c,end:d,isStart:e,isEnd:f}):void 0}function L(a,c){return b.duration({days:a.clone().stripTime().diff(c.clone().stripTime(),"days"),ms:a.time()-c.time()})}function M(a,c){return b.duration({days:a.clone().stripTime().diff(c.clone().stripTime(),"days")})}function N(a,c,d){return b.duration(Math.round(a.diff(c,d,!0)),d)}function O(a,b){var c,d,e;for(c=0;c<_a.length&&(d=_a[c],e=P(d,a,b),!(e>=1&&ha(e)));c++);return d}function P(a,c,d){return null!=d?d.diff(c,a,!0):b.isDuration(c)?c.as(a):c.end.diff(c.start,a,!0)}function Q(a,b,c){var d;return T(c)?(b-a)/c:(d=c.asMonths(),Math.abs(d)>=1&&ha(d)?b.diff(a,"months",!0)/d:b.diff(a,"days",!0)/c.asDays())}function R(a,b){var c,d;return T(a)||T(b)?a/b:(c=a.asMonths(),d=b.asMonths(),Math.abs(c)>=1&&ha(c)&&Math.abs(d)>=1&&ha(d)?c/d:a.asDays()/b.asDays())}function S(a,c){var d;return T(a)?b.duration(a*c):(d=a.asMonths(),Math.abs(d)>=1&&ha(d)?b.duration({months:d*c}):b.duration({days:a.asDays()*c}))}function T(a){return Boolean(a.hours()||a.minutes()||a.seconds()||a.milliseconds())}function U(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function V(a){return/^\d+\:\d+(?:\:\d+\.?(?:\d{3})?)?$/.test(a)}function W(a,b){var c,d,e,f,g,h,i={};if(b)for(c=0;c<b.length;c++){for(d=b[c],e=[],f=a.length-1;f>=0;f--)if(g=a[f][d],"object"==typeof g)e.unshift(g);else if(void 0!==g){i[d]=g;break}e.length&&(i[d]=W(e))}for(c=a.length-1;c>=0;c--){h=a[c];for(d in h)d in i||(i[d]=h[d])}return i}function X(a){var b=function(){};return b.prototype=a,new b}function Y(a,b){for(var c in a)$(a,c)&&(b[c]=a[c])}function Z(a,b){var c,d,e=["constructor","toString","valueOf"];for(c=0;c<e.length;c++)d=e[c],a[d]!==Object.prototype[d]&&(b[d]=a[d])}function $(a,b){return db.call(a,b)}function _(b){return/undefined|null|boolean|number|string/.test(a.type(b))}function aa(b,c,d){if(a.isFunction(b)&&(b=[b]),b){var e,f;for(e=0;e<b.length;e++)f=b[e].apply(c,d)||f;return f}}function ba(){for(var a=0;a<arguments.length;a++)if(void 0!==arguments[a])return arguments[a]}function ca(a){return(a+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#039;").replace(/"/g,"&quot;").replace(/\n/g,"<br />")}function da(a){return a.replace(/&.*?;/g,"")}function ea(b){var c=[];return a.each(b,function(a,b){null!=b&&c.push(a+":"+b)}),c.join(";")}function fa(a){return a.charAt(0).toUpperCase()+a.slice(1)}function ga(a,b){return a-b}function ha(a){return a%1===0}function ia(a,b){var c=a[b];return function(){return c.apply(a,arguments)}}function ja(a,b,c){var d,e,f,g,h,i=function(){var j=+new Date-g;b>j?d=setTimeout(i,b-j):(d=null,c||(h=a.apply(f,e),f=e=null))};return function(){f=this,e=arguments,g=+new Date;var j=c&&!d;return d||(d=setTimeout(i,b)),j&&(h=a.apply(f,e),f=e=null),h}}function ka(b,c){return b&&b.then&&"resolved"!==b.state()?c?b.then(c):void 0:a.when(c())}function la(c,d,e){var f,g,h,i,j=c[0],k=1==c.length&&"string"==typeof j;return b.isMoment(j)?(i=b.apply(null,c),na(j,i)):U(j)||void 0===j?i=b.apply(null,c):(f=!1,g=!1,k?eb.test(j)?(j+="-01",c=[j],f=!0,g=!0):(h=fb.exec(j))&&(f=!h[5],g=!0):a.isArray(j)&&(g=!0),i=d||f?b.utc.apply(b,c):b.apply(null,c),f?(i._ambigTime=!0,i._ambigZone=!0):e&&(g?i._ambigZone=!0:k&&(i.utcOffset?i.utcOffset(j):i.zone(j)))),i._fullCalendar=!0,i}function ma(a,c){var d,e,f=!1,g=!1,h=a.length,i=[];for(d=0;h>d;d++)e=a[d],b.isMoment(e)||(e=Wa.moment.parseZone(e)),f=f||e._ambigTime,g=g||e._ambigZone,i.push(e);for(d=0;h>d;d++)e=i[d],c||!f||e._ambigTime?g&&!e._ambigZone&&(i[d]=e.clone().stripZone()):i[d]=e.clone().stripTime();return i}function na(a,b){a._ambigTime?b._ambigTime=!0:b._ambigTime&&(b._ambigTime=!1),a._ambigZone?b._ambigZone=!0:b._ambigZone&&(b._ambigZone=!1)}function oa(a,b){a.year(b[0]||0).month(b[1]||0).date(b[2]||0).hours(b[3]||0).minutes(b[4]||0).seconds(b[5]||0).milliseconds(b[6]||0)}function pa(a,b){return hb.format.call(a,b)}function qa(a,b){return ra(a,wa(b))}function ra(a,b){var c,d="";for(c=0;c<b.length;c++)d+=sa(a,b[c]);return d}function sa(a,b){var c,d;return"string"==typeof b?b:(c=b.token)?ib[c]?ib[c](a):pa(a,c):b.maybe&&(d=ra(a,b.maybe),d.match(/[1-9]/))?d:""}function ta(a,b,c,d,e){var f;return a=Wa.moment.parseZone(a),b=Wa.moment.parseZone(b),f=(a.localeData||a.lang).call(a),c=f.longDateFormat(c)||c,d=d||" - ",ua(a,b,wa(c),d,e)}function ua(a,b,c,d,e){var f,g,h,i,j=a.clone().stripZone(),k=b.clone().stripZone(),l="",m="",n="",o="",p="";for(g=0;g<c.length&&(f=va(a,b,j,k,c[g]),f!==!1);g++)l+=f;for(h=c.length-1;h>g&&(f=va(a,b,j,k,c[h]),f!==!1);h--)m=f+m;for(i=g;h>=i;i++)n+=sa(a,c[i]),o+=sa(b,c[i]);return(n||o)&&(p=e?o+d+n:n+d+o),l+p+m}function va(a,b,c,d,e){var f,g;return"string"==typeof e?e:(f=e.token)&&(g=jb[f.charAt(0)],g&&c.isSame(d,g))?pa(a,f):!1}function wa(a){return a in kb?kb[a]:kb[a]=xa(a)}function xa(a){for(var b,c=[],d=/\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g;b=d.exec(a);)b[1]?c.push(b[1]):b[2]?c.push({maybe:xa(b[2])}):b[3]?c.push({token:b[3]}):b[5]&&c.push(b[5]);return c}function ya(){}function za(a,b){var c;return $(b,"constructor")&&(c=b.constructor),"function"!=typeof c&&(c=b.constructor=function(){a.apply(this,arguments)}),c.prototype=X(a.prototype),Y(b,c.prototype),Z(b,c.prototype),Y(a,c),c}function Aa(a,b){Y(b,a.prototype)}function Ba(a,b){return a||b?a&&b?a.component===b.component&&Ca(a,b)&&Ca(b,a):!1:!0}function Ca(a,b){for(var c in a)if(!/^(component|left|right|top|bottom)$/.test(c)&&a[c]!==b[c])return!1;return!0}function Da(a){var b=Fa(a);return"background"===b||"inverse-background"===b}function Ea(a){return"inverse-background"===Fa(a)}function Fa(a){return ba((a.source||{}).rendering,a.rendering)}function Ga(a){var b,c,d={};for(b=0;b<a.length;b++)c=a[b],(d[c._id]||(d[c._id]=[])).push(c);return d}function Ha(a,b){return a.start-b.start}function Ia(c){var d,e,f,g,h=Wa.dataAttrPrefix;return h&&(h+="-"),d=c.data(h+"event")||null,d&&(d="object"==typeof d?a.extend({},d):{},e=d.start,null==e&&(e=d.time),f=d.duration,g=d.stick,delete d.start,delete d.time,delete d.duration,delete d.stick),null==e&&(e=c.data(h+"start")),null==e&&(e=c.data(h+"time")),null==f&&(f=c.data(h+"duration")),null==g&&(g=c.data(h+"stick")),e=null!=e?b.duration(e):null,f=null!=f?b.duration(f):null,g=Boolean(g),{eventProps:d,startTime:e,duration:f,stick:g}}function Ja(a,b){var c,d;for(c=0;c<b.length;c++)if(d=b[c],d.leftCol<=a.rightCol&&d.rightCol>=a.leftCol)return!0;return!1}function Ka(a,b){return a.leftCol-b.leftCol}function La(a){var b,c,d,e=[];for(b=0;b<a.length;b++){for(c=a[b],d=0;d<e.length&&Oa(c,e[d]).length;d++);c.level=d,(e[d]||(e[d]=[])).push(c)}return e}function Ma(a){var b,c,d,e,f;for(b=0;b<a.length;b++)for(c=a[b],d=0;d<c.length;d++)for(e=c[d],e.forwardSegs=[],f=b+1;f<a.length;f++)Oa(e,a[f],e.forwardSegs)}function Na(a){var b,c,d=a.forwardSegs,e=0;if(void 0===a.forwardPressure){for(b=0;b<d.length;b++)c=d[b],Na(c),e=Math.max(e,1+c.forwardPressure);a.forwardPressure=e}}function Oa(a,b,c){c=c||[];for(var d=0;d<b.length;d++)Pa(a,b[d])&&c.push(b[d]);return c}function Pa(a,b){return a.bottom>b.top&&a.top<b.bottom}function Qa(c,e){function f(a){"_locale"in a?a._locale=V:a._lang=V}function g(){Y?k()&&(p(),l()):h()}function h(){c.addClass("fc"),U.bindOption("theme",function(a){Z=a?"ui":"fc",c.toggleClass("ui-widget",a),c.toggleClass("fc-unthemed",!a)}),U.bindOptions(["isRTL","lang"],function(a){c.toggleClass("fc-ltr",!a),c.toggleClass("fc-rtl",a)}),Y=a("<div class='fc-view-container'/>").prependTo(c),W=U.header=new Ta(U),i(),l(U.options.defaultView),U.options.handleWindowResize&&(aa=ja(s,U.options.windowResizeDelay),a(window).resize(aa))}function i(){W.render(),W.el&&c.prepend(W.el)}function j(){$&&$.removeElement(),W.removeElement(),Y.remove(),c.removeClass("fc fc-ltr fc-rtl fc-unthemed ui-widget"),aa&&a(window).unbind("resize",aa)}function k(){return c.is(":visible")}function l(b,c){ha++,$&&b&&$.type!==b&&(N(),m()),!$&&b&&($=U.view=ga[b]||(ga[b]=U.instantiateView(b)),$.setElement(a("<div class='fc-view fc-"+b+"-view' />").appendTo(Y)),W.activateButton(b)),$&&(ba=$.massageCurrentDate(ba),$.displaying&&ba.isWithin($.intervalStart,$.intervalEnd)||k()&&($.display(ba,c),O(),A(),B(),w())),O(),ha--}function m(){W.deactivateButton($.type),$.removeElement(),$=U.view=null}function n(){ha++,N();var a=$.type,b=$.queryScroll();m(),l(a,b),O(),ha--}function o(a){return k()?(a&&q(),ha++,$.updateSize(!0),ha--,!0):void 0}function p(){k()&&q()}function q(){var a=U.options.contentHeight,b=U.options.height;_="number"==typeof a?a:"function"==typeof a?a():"number"==typeof b?b-r():"function"==typeof b?b()-r():"parent"===b?c.parent().height()-r():Math.round(Y.width()/Math.max(U.options.aspectRatio,.5))}function r(){return W.el?W.el.outerHeight(!0):0}function s(a){!ha&&a.target===window&&$.start&&o(!0)&&$.trigger("windowResize",fa)}function t(){x()}function u(a){ea(U.getEventSourcesByMatchArray(a))}function v(){k()&&(N(),$.displayEvents(ia),O())}function w(){!U.options.lazyFetching||ca($.start,$.end)?x():v()}function x(){da($.start,$.end)}function y(a){ia=a,v()}function z(){v()}function A(){W.updateTitle($.title)}function B(){var a=U.getNow();a.isWithin($.intervalStart,$.intervalEnd)?W.disableButton("today"):W.enableButton("today")}function C(a,b){$.select(U.buildSelectSpan.apply(U,arguments))}function D(){$&&$.unselect()}function E(){ba=$.computePrevDate(ba),l()}function F(){ba=$.computeNextDate(ba),l()}function G(){ba.add(-1,"years"),l()}function H(){ba.add(1,"years"),l()}function I(){ba=U.getNow(),l()}function J(a){ba=U.moment(a).stripZone(),l()}function K(a){ba.add(b.duration(a)),l()}function L(a,b){var c;b=b||"day",c=U.getViewSpec(b)||U.getUnitViewSpec(b),ba=a.clone(),l(c?c.type:null)}function M(){return U.applyTimezone(ba)}function N(){Y.css({width:"100%",height:Y.height(),overflow:"hidden"})}function O(){Y.css({width:"",height:"",overflow:""})}function P(){return U}function Q(){return $}function R(a,b){var c;if("string"==typeof a){if(void 0===b)return U.options[a];c={},c[a]=b,S(c)}else"object"==typeof a&&S(a)}function S(a){var b,c=0;for(b in a)U.dynamicOverrides[b]=a[b];U.viewSpecCache={},U.populateOptionsHash();for(b in a)U.triggerOptionHandlers(b),c++;if(1===c){if("height"===b||"contentHeight"===b||"aspectRatio"===b)return void o(!0);if("defaultDate"===b)return;if("businessHours"===b)return void($&&($.unrenderBusinessHours(),$.renderBusinessHours()));if("timezone"===b)return U.rezoneArrayEventSources(),void t()}i(),ga={},n()}function T(a,b){var c=Array.prototype.slice.call(arguments,2);return b=b||fa,this.triggerWith(a,b,c),U.options[a]?U.options[a].apply(b,c):void 0}var U=this;U.render=g,U.destroy=j,U.refetchEvents=t,U.refetchEventSources=u,U.reportEvents=y,U.reportEventChange=z,U.rerenderEvents=v,U.changeView=l,U.select=C,U.unselect=D,U.prev=E,U.next=F,U.prevYear=G,U.nextYear=H,U.today=I,U.gotoDate=J,U.incrementDate=K,U.zoomTo=L,U.getDate=M,U.getCalendar=P,U.getView=Q,U.option=R,U.trigger=T,U.dynamicOverrides={},U.viewSpecCache={},U.optionHandlers={},U.overrides=d(e||{}),U.populateOptionsHash();var V;U.bindOptions(["lang","monthNames","monthNamesShort","dayNames","dayNamesShort","firstDay","weekNumberCalculation"],function(a,b,c,d,e,g,h){if(V=X(Sa(a)),b&&(V._months=b),c&&(V._monthsShort=c),d&&(V._weekdays=d),e&&(V._weekdaysShort=e),null!=g){var i=X(V._week);i.dow=g,V._week=i}"iso"===h&&(h="ISO"),"ISO"!==h&&"local"!==h&&"function"!=typeof h||(V._fullCalendar_weekCalc=h),ba&&f(ba)}),U.defaultAllDayEventDuration=b.duration(U.options.defaultAllDayEventDuration),U.defaultTimedEventDuration=b.duration(U.options.defaultTimedEventDuration),U.moment=function(){var a;return"local"===U.options.timezone?(a=Wa.moment.apply(null,arguments),a.hasTime()&&a.local()):a="UTC"===U.options.timezone?Wa.moment.utc.apply(null,arguments):Wa.moment.parseZone.apply(null,arguments),f(a),a},U.getIsAmbigTimezone=function(){return"local"!==U.options.timezone&&"UTC"!==U.options.timezone},U.applyTimezone=function(a){if(!a.hasTime())return a.clone();var b,c=U.moment(a.toArray()),d=a.time()-c.time();return d&&(b=c.clone().add(d),a.time()-b.time()===0&&(c=b)),c},U.getNow=function(){var a=U.options.now;return"function"==typeof a&&(a=a()),U.moment(a).stripZone()},U.getEventEnd=function(a){return a.end?a.end.clone():U.getDefaultEventEnd(a.allDay,a.start)},U.getDefaultEventEnd=function(a,b){var c=b.clone();return a?c.stripTime().add(U.defaultAllDayEventDuration):c.add(U.defaultTimedEventDuration),U.getIsAmbigTimezone()&&c.stripZone(),c},U.humanizeDuration=function(a){return(a.locale||a.lang).call(a,U.options.lang).humanize()},Ua.call(U);var W,Y,Z,$,_,aa,ba,ca=U.isFetchNeeded,da=U.fetchEvents,ea=U.fetchEventSources,fa=c[0],ga={},ha=0,ia=[];ba=null!=U.options.defaultDate?U.moment(U.options.defaultDate).stripZone():U.getNow(),U.getSuggestedViewHeight=function(){return void 0===_&&p(),_},U.isHeightAuto=function(){return"auto"===U.options.contentHeight||"auto"===U.options.height},U.freezeContentHeight=N,U.unfreezeContentHeight=O,U.initialize()}function Ra(b){a.each(Db,function(a,c){null==b[a]&&(b[a]=c(b))})}function Sa(a){var c=b.localeData||b.langData;return c.call(b,a)||c.call(b,"en")}function Ta(b){function c(){var c=b.options,f=c.header;n=c.theme?"ui":"fc",f?(m?m.empty():m=this.el=a("<div class='fc-toolbar'/>"),m.append(e("left")).append(e("right")).append(e("center")).append('<div class="fc-clear"/>')):d()}function d(){m&&(m.remove(),m=l.el=null)}function e(c){var d=a('<div class="fc-'+c+'"/>'),e=b.options,f=e.header[c];return f&&a.each(f.split(" "),function(c){var f,g=a(),h=!0;a.each(this.split(","),function(c,d){var f,i,j,k,l,m,p,q,r,s;"title"==d?(g=g.add(a("<h2>&nbsp;</h2>")),h=!1):((f=(e.customButtons||{})[d])?(j=function(a){f.click&&f.click.call(s[0],a)},k="",l=f.text):(i=b.getViewSpec(d))?(j=function(){b.changeView(d)},o.push(d),k=i.buttonTextOverride,l=i.buttonTextDefault):b[d]&&(j=function(){b[d]()},k=(b.overrides.buttonText||{})[d],l=e.buttonText[d]),j&&(m=f?f.themeIcon:e.themeButtonIcons[d],p=f?f.icon:e.buttonIcons[d],q=k?ca(k):m&&e.theme?"<span class='ui-icon ui-icon-"+m+"'></span>":p&&!e.theme?"<span class='fc-icon fc-icon-"+p+"'></span>":ca(l),r=["fc-"+d+"-button",n+"-button",n+"-state-default"],s=a('<button type="button" class="'+r.join(" ")+'">'+q+"</button>").click(function(a){s.hasClass(n+"-state-disabled")||(j(a),(s.hasClass(n+"-state-active")||s.hasClass(n+"-state-disabled"))&&s.removeClass(n+"-state-hover"))}).mousedown(function(){s.not("."+n+"-state-active").not("."+n+"-state-disabled").addClass(n+"-state-down")}).mouseup(function(){s.removeClass(n+"-state-down")}).hover(function(){s.not("."+n+"-state-active").not("."+n+"-state-disabled").addClass(n+"-state-hover")},function(){s.removeClass(n+"-state-hover").removeClass(n+"-state-down")}),g=g.add(s)))}),h&&g.first().addClass(n+"-corner-left").end().last().addClass(n+"-corner-right").end(),g.length>1?(f=a("<div/>"),h&&f.addClass("fc-button-group"),f.append(g),d.append(f)):d.append(g)}),d}function f(a){m&&m.find("h2").text(a)}function g(a){m&&m.find(".fc-"+a+"-button").addClass(n+"-state-active")}function h(a){m&&m.find(".fc-"+a+"-button").removeClass(n+"-state-active")}function i(a){m&&m.find(".fc-"+a+"-button").prop("disabled",!0).addClass(n+"-state-disabled")}function j(a){m&&m.find(".fc-"+a+"-button").prop("disabled",!1).removeClass(n+"-state-disabled")}function k(){return o}var l=this;l.render=c,l.removeElement=d,l.updateTitle=f,l.activateButton=g,l.deactivateButton=h,l.disableButton=i,l.enableButton=j,l.getViewsWithButtons=k,l.el=null;var m,n,o=[]}function Ua(){function c(a,b){return!T||T>a||b>U}function d(a,b){T=a,U=b,e(Y,"reset")}function e(a,b){var c,d;for("reset"===b?$=[]:"add"!==b&&($=u($,a)),c=0;c<a.length;c++)d=a[c],"pending"!==d._status&&Z++,d._fetchId=(d._fetchId||0)+1,d._status="pending";for(c=0;c<a.length;c++)d=a[c],f(d,d._fetchId)}function f(b,c){i(b,function(d){var e,f,g,i=a.isArray(b.events);if(c===b._fetchId&&"rejected"!==b._status){if(b._status="resolved",d)for(e=0;e<d.length;e++)f=d[e],g=i?f:C(f,b),g&&$.push.apply($,G(g));h()}})}function g(a){var b="pending"===a._status;a._status="rejected",b&&h()}function h(){Z--,Z||W($)}function i(b,c){var d,e,f=Wa.sourceFetchers;for(d=0;d<f.length;d++){if(e=f[d].call(S,b,T.clone(),U.clone(),S.options.timezone,c),e===!0)return;if("object"==typeof e)return void i(e,c)}var g=b.events;if(g)a.isFunction(g)?(S.pushLoading(),g.call(S,T.clone(),U.clone(),S.options.timezone,function(a){c(a),S.popLoading()})):a.isArray(g)?c(g):c();else{var h=b.url;if(h){var j,k=b.success,l=b.error,m=b.complete;j=a.isFunction(b.data)?b.data():b.data;var n=a.extend({},j||{}),o=ba(b.startParam,S.options.startParam),p=ba(b.endParam,S.options.endParam),q=ba(b.timezoneParam,S.options.timezoneParam);o&&(n[o]=T.format()),p&&(n[p]=U.format()),S.options.timezone&&"local"!=S.options.timezone&&(n[q]=S.options.timezone),S.pushLoading(),a.ajax(a.extend({},Eb,b,{data:n,success:function(b){b=b||[];var d=aa(k,this,arguments);a.isArray(d)&&(b=d),c(b)},error:function(){aa(l,this,arguments),c()},complete:function(){aa(m,this,arguments),S.popLoading()}}))}else c()}}function j(a){var b=k(a);b&&(Y.push(b),e([b],"add"))}function k(b){var c,d,e=Wa.sourceNormalizers;if(a.isFunction(b)||a.isArray(b)?c={events:b}:"string"==typeof b?c={url:b}:"object"==typeof b&&(c=a.extend({},b)),c){for(c.className?"string"==typeof c.className&&(c.className=c.className.split(/\s+/)):c.className=[],a.isArray(c.events)&&(c.origArray=c.events,c.events=a.map(c.events,function(a){return C(a,c)})),d=0;d<e.length;d++)e[d].call(S,c);return c}}function l(a){n(r(a))}function m(a){null==a?n(Y,!0):n(q(a))}function n(b,c){var d;for(d=0;d<b.length;d++)g(b[d]);c?(Y=[],$=[]):(Y=a.grep(Y,function(a){for(d=0;d<b.length;d++)if(a===b[d])return!1;return!0}),$=u($,b)),W($)}function o(){return Y.slice(1)}function p(b){return a.grep(Y,function(a){return a.id&&a.id===b})[0]}function q(b){b?a.isArray(b)||(b=[b]):b=[];var c,d=[];for(c=0;c<b.length;c++)d.push.apply(d,r(b[c]));return d}function r(b){var c,d;for(c=0;c<Y.length;c++)if(d=Y[c],d===b)return[d];return d=p(b),d?[d]:a.grep(Y,function(a){return s(b,a)})}function s(a,b){return a&&b&&t(a)==t(b)}function t(a){return("object"==typeof a?a.origArray||a.googleCalendarId||a.url||a.events:null)||a}function u(b,c){return a.grep(b,function(a){for(var b=0;b<c.length;b++)if(a.source===c[b])return!1;return!0})}function v(a){a.start=S.moment(a.start),a.end?a.end=S.moment(a.end):a.end=null,H(a,w(a)),W($)}function w(b){var c={};return a.each(b,function(a,b){x(a)&&void 0!==b&&_(b)&&(c[a]=b)}),c}function x(a){return!/^_|^(id|allDay|start|end)$/.test(a)}function y(a,b){var c,d,e,f=C(a);if(f){for(c=G(f),d=0;d<c.length;d++)e=c[d],e.source||(b&&(X.events.push(e),e.source=X),$.push(e));return W($),c}return[]}function z(b){var c,d;for(null==b?b=function(){return!0}:a.isFunction(b)||(c=b+"",b=function(a){return a._id==c}),$=a.grep($,b,!0),d=0;d<Y.length;d++)a.isArray(Y[d].events)&&(Y[d].events=a.grep(Y[d].events,b,!0));W($)}function A(b){return a.isFunction(b)?a.grep($,b):null!=b?(b+="",a.grep($,function(a){return a._id==b})):$}function B(a){a.start=S.moment(a.start),a.end&&(a.end=S.moment(a.end)),Va(a)}function C(c,d){var e,f,g,h={};if(S.options.eventDataTransform&&(c=S.options.eventDataTransform(c)),d&&d.eventDataTransform&&(c=d.eventDataTransform(c)),a.extend(h,c),d&&(h.source=d),h._id=c._id||(void 0===c.id?"_fc"+Fb++:c.id+""),c.className?"string"==typeof c.className?h.className=c.className.split(/\s+/):h.className=c.className:h.className=[],e=c.start||c.date,f=c.end,V(e)&&(e=b.duration(e)),V(f)&&(f=b.duration(f)),c.dow||b.isDuration(e)||b.isDuration(f))h.start=e?b.duration(e):null,h.end=f?b.duration(f):null,h._recurring=!0;else{if(e&&(e=S.moment(e),!e.isValid()))return!1;f&&(f=S.moment(f),f.isValid()||(f=null)),g=c.allDay,void 0===g&&(g=ba(d?d.allDayDefault:void 0,S.options.allDayDefault)),D(e,f,g,h)}return S.normalizeEvent(h),h}function D(a,b,c,d){d.start=a,d.end=b,d.allDay=c,E(d),Va(d)}function E(a){F(a),a.end&&!a.end.isAfter(a.start)&&(a.end=null),a.end||(S.options.forceEventDuration?a.end=S.getDefaultEventEnd(a.allDay,a.start):a.end=null)}function F(a){null==a.allDay&&(a.allDay=!(a.start.hasTime()||a.end&&a.end.hasTime())),a.allDay?(a.start.stripTime(),a.end&&a.end.stripTime()):(a.start.hasTime()||(a.start=S.applyTimezone(a.start.time(0))),a.end&&!a.end.hasTime()&&(a.end=S.applyTimezone(a.end.time(0))))}function G(b,c,d){var e,f,g,h,i,j,k,l,m,n=[];if(c=c||T,d=d||U,b)if(b._recurring){if(f=b.dow)for(e={},g=0;g<f.length;g++)e[f[g]]=!0;for(h=c.clone().stripTime();h.isBefore(d);)e&&!e[h.day()]||(i=b.start,j=b.end,k=h.clone(),l=null,i&&(k=k.time(i)),j&&(l=h.clone().time(j)),m=a.extend({},b),D(k,l,!i&&!j,m),n.push(m)),h.add(1,"days")}else n.push(b);return n}function H(b,c,d){function e(a,b){return d?N(a,b,d):c.allDay?M(a,b):L(a,b)}var f,g,h,i,j,k,l={};return c=c||{},c.start||(c.start=b.start.clone()),void 0===c.end&&(c.end=b.end?b.end.clone():null),null==c.allDay&&(c.allDay=b.allDay),E(c),f={start:b._start.clone(),end:b._end?b._end.clone():S.getDefaultEventEnd(b._allDay,b._start),allDay:c.allDay},E(f),g=null!==b._end&&null===c.end,h=e(c.start,f.start),c.end?(i=e(c.end,f.end),j=i.subtract(h)):j=null,a.each(c,function(a,b){x(a)&&void 0!==b&&(l[a]=b)}),k=I(A(b._id),g,c.allDay,h,j,l),{dateDelta:h,durationDelta:j,undo:k}}function I(b,c,d,e,f,g){var h=S.getIsAmbigTimezone(),i=[];return e&&!e.valueOf()&&(e=null),f&&!f.valueOf()&&(f=null),a.each(b,function(b,j){var k,l;k={start:j.start.clone(),end:j.end?j.end.clone():null,allDay:j.allDay},a.each(g,function(a){k[a]=j[a]}),l={start:j._start,end:j._end,allDay:d},E(l),c?l.end=null:f&&!l.end&&(l.end=S.getDefaultEventEnd(l.allDay,l.start)),e&&(l.start.add(e),l.end&&l.end.add(e)),f&&l.end.add(f),h&&!l.allDay&&(e||f)&&(l.start.stripZone(),l.end&&l.end.stripZone()),a.extend(j,g,l),Va(j),i.push(function(){a.extend(j,k),Va(j)})}),function(){for(var a=0;a<i.length;a++)i[a]()}}function J(a,b){var c=b.source||{},d=ba(b.constraint,c.constraint,S.options.eventConstraint),e=ba(b.overlap,c.overlap,S.options.eventOverlap);return P(a,d,e,b)}function K(b,c,d){var e,f;return d&&(e=a.extend({},d,c),f=G(C(e))[0]),f?J(b,f):O(b)}function O(a){return P(a,S.options.selectConstraint,S.options.selectOverlap)}function P(a,b,c,d){var e,f,g,h,i,j;if(null!=b){for(e=Q(b),f=!1,h=0;h<e.length;h++)if(S.spanContainsSpan(e[h],a)){f=!0;break}if(!f)return!1}for(g=S.getPeerEvents(a,d),h=0;h<g.length;h++)if(i=g[h],R(i,a)){if(c===!1)return!1;if("function"==typeof c&&!c(i,d))return!1;if(d){if(j=ba(i.overlap,(i.source||{}).overlap),j===!1)return!1;if("function"==typeof j&&!j(d,i))return!1}}return!0}function Q(a){return"businessHours"===a?S.getCurrentBusinessHourEvents():"object"==typeof a?G(C(a)):A(a)}function R(a,b){var c=a.start.clone().stripZone(),d=S.getEventEnd(a).stripZone();return b.start<d&&b.end>c}var S=this;S.isFetchNeeded=c,S.fetchEvents=d,S.fetchEventSources=e,S.getEventSources=o,S.getEventSourceById=p,S.getEventSourcesByMatchArray=q,S.getEventSourcesByMatch=r,S.addEventSource=j,S.removeEventSource=l,S.removeEventSources=m,S.updateEvent=v,S.renderEvent=y,S.removeEvents=z,S.clientEvents=A,S.mutateEvent=H,S.normalizeEventDates=E,S.normalizeEventTimes=F;var T,U,W=S.reportEvents,X={events:[]},Y=[X],Z=0,$=[];a.each((S.options.events?[S.options.events]:[]).concat(S.options.eventSources||[]),function(a,b){var c=k(b);c&&Y.push(c)}),S.rezoneArrayEventSources=function(){var b,c,d;for(b=0;b<Y.length;b++)if(c=Y[b].events,a.isArray(c))for(d=0;d<c.length;d++)B(c[d])},S.buildEventFromInput=C,S.expandEvent=G,S.isEventSpanAllowed=J,S.isExternalSpanAllowed=K,S.isSelectionSpanAllowed=O,S.getEventCache=function(){return $}}function Va(a){a._allDay=a.allDay,a._start=a.start.clone(),a._end=a.end?a.end.clone():null}var Wa=a.fullCalendar={version:"2.9.1",internalApiVersion:5},Xa=Wa.views={};a.fn.fullCalendar=function(b){var c=Array.prototype.slice.call(arguments,1),d=this;return this.each(function(e,f){var g,h=a(f),i=h.data("fullCalendar");"string"==typeof b?i&&a.isFunction(i[b])&&(g=i[b].apply(i,c),e||(d=g),"destroy"===b&&h.removeData("fullCalendar")):i||(i=new zb(h,b),h.data("fullCalendar",i),i.render())}),d};var Ya=["header","buttonText","buttonIcons","themeButtonIcons"];Wa.intersectRanges=K,Wa.applyAll=aa,Wa.debounce=ja,Wa.isInt=ha,Wa.htmlEscape=ca,Wa.cssToStr=ea,Wa.proxy=ia,Wa.capitaliseFirstLetter=fa,Wa.getOuterRect=n,Wa.getClientRect=o,Wa.getContentRect=p,Wa.getScrollbarWidths=q;var Za=null;Wa.preventDefault=z,Wa.intersectRects=C,Wa.parseFieldSpecs=G,Wa.compareByFieldSpecs=H,Wa.compareByFieldSpec=I,Wa.flexibleCompare=J,Wa.computeIntervalUnit=O,Wa.divideRangeByDuration=Q,Wa.divideDurationByDuration=R,Wa.multiplyDuration=S,Wa.durationHasTime=T;var $a=["sun","mon","tue","wed","thu","fri","sat"],_a=["year","month","week","day","hour","minute","second","millisecond"];Wa.log=function(){var a=window.console;return a&&a.log?a.log.apply(a,arguments):void 0},Wa.warn=function(){var a=window.console;return a&&a.warn?a.warn.apply(a,arguments):Wa.log.apply(Wa,arguments)};var ab,bb,cb,db={}.hasOwnProperty,eb=/^\s*\d{4}-\d\d$/,fb=/^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/,gb=b.fn,hb=a.extend({},gb);Wa.moment=function(){return la(arguments)},Wa.moment.utc=function(){var a=la(arguments,!0);return a.hasTime()&&a.utc(),a},Wa.moment.parseZone=function(){return la(arguments,!0,!0)},gb.clone=function(){var a=hb.clone.apply(this,arguments);return na(this,a),this._fullCalendar&&(a._fullCalendar=!0),a},gb.week=gb.weeks=function(a){var b=(this._locale||this._lang)._fullCalendar_weekCalc;return null==a&&"function"==typeof b?b(this):"ISO"===b?hb.isoWeek.apply(this,arguments):hb.week.apply(this,arguments)},gb.time=function(a){if(!this._fullCalendar)return hb.time.apply(this,arguments);if(null==a)return b.duration({hours:this.hours(),minutes:this.minutes(),seconds:this.seconds(),milliseconds:this.milliseconds()});this._ambigTime=!1,b.isDuration(a)||b.isMoment(a)||(a=b.duration(a));var c=0;return b.isDuration(a)&&(c=24*Math.floor(a.asDays())),this.hours(c+a.hours()).minutes(a.minutes()).seconds(a.seconds()).milliseconds(a.milliseconds())},gb.stripTime=function(){var a;return this._ambigTime||(a=this.toArray(),this.utc(),bb(this,a.slice(0,3)),this._ambigTime=!0,this._ambigZone=!0),this},gb.hasTime=function(){return!this._ambigTime},gb.stripZone=function(){var a,b;return this._ambigZone||(a=this.toArray(),b=this._ambigTime,this.utc(),bb(this,a),this._ambigTime=b||!1,this._ambigZone=!0),this},gb.hasZone=function(){return!this._ambigZone},gb.local=function(){var a=this.toArray(),b=this._ambigZone;return hb.local.apply(this,arguments),this._ambigTime=!1,this._ambigZone=!1,b&&cb(this,a),this},gb.utc=function(){return hb.utc.apply(this,arguments),this._ambigTime=!1,this._ambigZone=!1,this},a.each(["zone","utcOffset"],function(a,b){hb[b]&&(gb[b]=function(a){return null!=a&&(this._ambigTime=!1,this._ambigZone=!1),hb[b].apply(this,arguments)})}),gb.format=function(){return this._fullCalendar&&arguments[0]?qa(this,arguments[0]):this._ambigTime?pa(this,"YYYY-MM-DD"):this._ambigZone?pa(this,"YYYY-MM-DD[T]HH:mm:ss"):hb.format.apply(this,arguments)},gb.toISOString=function(){return this._ambigTime?pa(this,"YYYY-MM-DD"):this._ambigZone?pa(this,"YYYY-MM-DD[T]HH:mm:ss"):hb.toISOString.apply(this,arguments)},gb.isWithin=function(a,b){var c=ma([this,a,b]);return c[0]>=c[1]&&c[0]<c[2];
},gb.isSame=function(a,b){var c;return this._fullCalendar?b?(c=ma([this,a],!0),hb.isSame.call(c[0],c[1],b)):(a=Wa.moment.parseZone(a),hb.isSame.call(this,a)&&Boolean(this._ambigTime)===Boolean(a._ambigTime)&&Boolean(this._ambigZone)===Boolean(a._ambigZone)):hb.isSame.apply(this,arguments)},a.each(["isBefore","isAfter"],function(a,b){gb[b]=function(a,c){var d;return this._fullCalendar?(d=ma([this,a]),hb[b].call(d[0],d[1],c)):hb[b].apply(this,arguments)}}),ab="_d"in b()&&"updateOffset"in b,bb=ab?function(a,c){a._d.setTime(Date.UTC.apply(Date,c)),b.updateOffset(a,!1)}:oa,cb=ab?function(a,c){a._d.setTime(+new Date(c[0]||0,c[1]||0,c[2]||0,c[3]||0,c[4]||0,c[5]||0,c[6]||0)),b.updateOffset(a,!1)}:oa;var ib={t:function(a){return pa(a,"a").charAt(0)},T:function(a){return pa(a,"A").charAt(0)}};Wa.formatRange=ta;var jb={Y:"year",M:"month",D:"day",d:"day",A:"second",a:"second",T:"second",t:"second",H:"second",h:"second",m:"second",s:"second"},kb={};Wa.Class=ya,ya.extend=function(){var a,b,c=arguments.length;for(a=0;c>a;a++)b=arguments[a],c-1>a&&Aa(this,b);return za(this,b||{})},ya.mixin=function(a){Aa(this,a)};var lb=Wa.EmitterMixin={on:function(b,c){var d=function(a,b){return c.apply(b.context||this,b.args||[])};return c.guid||(c.guid=a.guid++),d.guid=c.guid,a(this).on(b,d),this},off:function(b,c){return a(this).off(b,c),this},trigger:function(b){var c=Array.prototype.slice.call(arguments,1);return a(this).triggerHandler(b,{args:c}),this},triggerWith:function(b,c,d){return a(this).triggerHandler(b,{context:c,args:d}),this}},mb=Wa.ListenerMixin=function(){var b=0,c={listenerId:null,listenTo:function(b,c,d){if("object"==typeof c)for(var e in c)c.hasOwnProperty(e)&&this.listenTo(b,e,c[e]);else"string"==typeof c&&b.on(c+"."+this.getListenerNamespace(),a.proxy(d,this))},stopListeningTo:function(a,b){a.off((b||"")+"."+this.getListenerNamespace())},getListenerNamespace:function(){return null==this.listenerId&&(this.listenerId=b++),"_listener"+this.listenerId}};return c}(),nb={isIgnoringMouse:!1,delayUnignoreMouse:null,initMouseIgnoring:function(a){this.delayUnignoreMouse=ja(ia(this,"unignoreMouse"),a||1e3)},tempIgnoreMouse:function(){this.isIgnoringMouse=!0,this.delayUnignoreMouse()},unignoreMouse:function(){this.isIgnoringMouse=!1}},ob=ya.extend(mb,{isHidden:!0,options:null,el:null,margin:10,constructor:function(a){this.options=a||{}},show:function(){this.isHidden&&(this.el||this.render(),this.el.show(),this.position(),this.isHidden=!1,this.trigger("show"))},hide:function(){this.isHidden||(this.el.hide(),this.isHidden=!0,this.trigger("hide"))},render:function(){var b=this,c=this.options;this.el=a('<div class="fc-popover"/>').addClass(c.className||"").css({top:0,left:0}).append(c.content).appendTo(c.parentEl),this.el.on("click",".fc-close",function(){b.hide()}),c.autoHide&&this.listenTo(a(document),"mousedown",this.documentMousedown)},documentMousedown:function(b){this.el&&!a(b.target).closest(this.el).length&&this.hide()},removeElement:function(){this.hide(),this.el&&(this.el.remove(),this.el=null),this.stopListeningTo(a(document),"mousedown")},position:function(){var b,c,d,e,f,g=this.options,h=this.el.offsetParent().offset(),i=this.el.outerWidth(),j=this.el.outerHeight(),k=a(window),l=m(this.el);e=g.top||0,f=void 0!==g.left?g.left:void 0!==g.right?g.right-i:0,l.is(window)||l.is(document)?(l=k,b=0,c=0):(d=l.offset(),b=d.top,c=d.left),b+=k.scrollTop(),c+=k.scrollLeft(),g.viewportConstrain!==!1&&(e=Math.min(e,b+l.outerHeight()-j-this.margin),e=Math.max(e,b+this.margin),f=Math.min(f,c+l.outerWidth()-i-this.margin),f=Math.max(f,c+this.margin)),this.el.css({top:e-h.top,left:f-h.left})},trigger:function(a){this.options[a]&&this.options[a].apply(this,Array.prototype.slice.call(arguments,1))}}),pb=Wa.CoordCache=ya.extend({els:null,forcedOffsetParentEl:null,origin:null,boundingRect:null,isHorizontal:!1,isVertical:!1,lefts:null,rights:null,tops:null,bottoms:null,constructor:function(b){this.els=a(b.els),this.isHorizontal=b.isHorizontal,this.isVertical=b.isVertical,this.forcedOffsetParentEl=b.offsetParent?a(b.offsetParent):null},build:function(){var a=this.forcedOffsetParentEl||this.els.eq(0).offsetParent();this.origin=a.offset(),this.boundingRect=this.queryBoundingRect(),this.isHorizontal&&this.buildElHorizontals(),this.isVertical&&this.buildElVerticals()},clear:function(){this.origin=null,this.boundingRect=null,this.lefts=null,this.rights=null,this.tops=null,this.bottoms=null},ensureBuilt:function(){this.origin||this.build()},buildElHorizontals:function(){var b=[],c=[];this.els.each(function(d,e){var f=a(e),g=f.offset().left,h=f.outerWidth();b.push(g),c.push(g+h)}),this.lefts=b,this.rights=c},buildElVerticals:function(){var b=[],c=[];this.els.each(function(d,e){var f=a(e),g=f.offset().top,h=f.outerHeight();b.push(g),c.push(g+h)}),this.tops=b,this.bottoms=c},getHorizontalIndex:function(a){this.ensureBuilt();var b,c=this.lefts,d=this.rights,e=c.length;for(b=0;e>b;b++)if(a>=c[b]&&a<d[b])return b},getVerticalIndex:function(a){this.ensureBuilt();var b,c=this.tops,d=this.bottoms,e=c.length;for(b=0;e>b;b++)if(a>=c[b]&&a<d[b])return b},getLeftOffset:function(a){return this.ensureBuilt(),this.lefts[a]},getLeftPosition:function(a){return this.ensureBuilt(),this.lefts[a]-this.origin.left},getRightOffset:function(a){return this.ensureBuilt(),this.rights[a]},getRightPosition:function(a){return this.ensureBuilt(),this.rights[a]-this.origin.left},getWidth:function(a){return this.ensureBuilt(),this.rights[a]-this.lefts[a]},getTopOffset:function(a){return this.ensureBuilt(),this.tops[a]},getTopPosition:function(a){return this.ensureBuilt(),this.tops[a]-this.origin.top},getBottomOffset:function(a){return this.ensureBuilt(),this.bottoms[a]},getBottomPosition:function(a){return this.ensureBuilt(),this.bottoms[a]-this.origin.top},getHeight:function(a){return this.ensureBuilt(),this.bottoms[a]-this.tops[a]},queryBoundingRect:function(){var a=m(this.els.eq(0));return a.is(document)?void 0:o(a)},isPointInBounds:function(a,b){return this.isLeftInBounds(a)&&this.isTopInBounds(b)},isLeftInBounds:function(a){return!this.boundingRect||a>=this.boundingRect.left&&a<this.boundingRect.right},isTopInBounds:function(a){return!this.boundingRect||a>=this.boundingRect.top&&a<this.boundingRect.bottom}}),qb=Wa.DragListener=ya.extend(mb,nb,{options:null,subjectEl:null,subjectHref:null,originX:null,originY:null,scrollEl:null,isInteracting:!1,isDistanceSurpassed:!1,isDelayEnded:!1,isDragging:!1,isTouch:!1,delay:null,delayTimeoutId:null,minDistance:null,handleTouchScrollProxy:null,constructor:function(a){this.options=a||{},this.handleTouchScrollProxy=ia(this,"handleTouchScroll"),this.initMouseIgnoring(500)},startInteraction:function(b,c){var d=x(b);if("mousedown"===b.type){if(this.isIgnoringMouse)return;if(!u(b))return;b.preventDefault()}this.isInteracting||(c=c||{},this.delay=ba(c.delay,this.options.delay,0),this.minDistance=ba(c.distance,this.options.distance,0),this.subjectEl=this.options.subjectEl,this.isInteracting=!0,this.isTouch=d,this.isDelayEnded=!1,this.isDistanceSurpassed=!1,this.originX=v(b),this.originY=w(b),this.scrollEl=m(a(b.target)),this.bindHandlers(),this.initAutoScroll(),this.handleInteractionStart(b),this.startDelay(b),this.minDistance||this.handleDistanceSurpassed(b))},handleInteractionStart:function(a){this.trigger("interactionStart",a)},endInteraction:function(a,b){this.isInteracting&&(this.endDrag(a),this.delayTimeoutId&&(clearTimeout(this.delayTimeoutId),this.delayTimeoutId=null),this.destroyAutoScroll(),this.unbindHandlers(),this.isInteracting=!1,this.handleInteractionEnd(a,b),this.isTouch&&this.tempIgnoreMouse())},handleInteractionEnd:function(a,b){this.trigger("interactionEnd",a,b||!1)},bindHandlers:function(){var b=this,c=1;this.isTouch?(this.listenTo(a(document),{touchmove:this.handleTouchMove,touchend:this.endInteraction,touchcancel:this.endInteraction,touchstart:function(a){c?c--:b.endInteraction(a,!0)}}),!A(this.handleTouchScrollProxy)&&this.scrollEl&&this.listenTo(this.scrollEl,"scroll",this.handleTouchScroll)):this.listenTo(a(document),{mousemove:this.handleMouseMove,mouseup:this.endInteraction}),this.listenTo(a(document),{selectstart:z,contextmenu:z})},unbindHandlers:function(){this.stopListeningTo(a(document)),B(this.handleTouchScrollProxy),this.scrollEl&&this.stopListeningTo(this.scrollEl,"scroll")},startDrag:function(a,b){this.startInteraction(a,b),this.isDragging||(this.isDragging=!0,this.handleDragStart(a))},handleDragStart:function(a){this.trigger("dragStart",a),this.initHrefHack()},handleMove:function(a){var b,c=v(a)-this.originX,d=w(a)-this.originY,e=this.minDistance;this.isDistanceSurpassed||(b=c*c+d*d,b>=e*e&&this.handleDistanceSurpassed(a)),this.isDragging&&this.handleDrag(c,d,a)},handleDrag:function(a,b,c){this.trigger("drag",a,b,c),this.updateAutoScroll(c)},endDrag:function(a){this.isDragging&&(this.isDragging=!1,this.handleDragEnd(a))},handleDragEnd:function(a){this.trigger("dragEnd",a),this.destroyHrefHack()},startDelay:function(a){var b=this;this.delay?this.delayTimeoutId=setTimeout(function(){b.handleDelayEnd(a)},this.delay):this.handleDelayEnd(a)},handleDelayEnd:function(a){this.isDelayEnded=!0,this.isDistanceSurpassed&&this.startDrag(a)},handleDistanceSurpassed:function(a){this.isDistanceSurpassed=!0,this.isDelayEnded&&this.startDrag(a)},handleTouchMove:function(a){this.isDragging&&a.preventDefault(),this.handleMove(a)},handleMouseMove:function(a){this.handleMove(a)},handleTouchScroll:function(a){this.isDragging||this.endInteraction(a,!0)},initHrefHack:function(){var a=this.subjectEl;(this.subjectHref=a?a.attr("href"):null)&&a.removeAttr("href")},destroyHrefHack:function(){var a=this.subjectEl,b=this.subjectHref;setTimeout(function(){b&&a.attr("href",b)},0)},trigger:function(a){this.options[a]&&this.options[a].apply(this,Array.prototype.slice.call(arguments,1)),this["_"+a]&&this["_"+a].apply(this,Array.prototype.slice.call(arguments,1))}});qb.mixin({isAutoScroll:!1,scrollBounds:null,scrollTopVel:null,scrollLeftVel:null,scrollIntervalId:null,scrollSensitivity:30,scrollSpeed:200,scrollIntervalMs:50,initAutoScroll:function(){var a=this.scrollEl;this.isAutoScroll=this.options.scroll&&a&&!a.is(window)&&!a.is(document),this.isAutoScroll&&this.listenTo(a,"scroll",ja(this.handleDebouncedScroll,100))},destroyAutoScroll:function(){this.endAutoScroll(),this.isAutoScroll&&this.stopListeningTo(this.scrollEl,"scroll")},computeScrollBounds:function(){this.isAutoScroll&&(this.scrollBounds=n(this.scrollEl))},updateAutoScroll:function(a){var b,c,d,e,f=this.scrollSensitivity,g=this.scrollBounds,h=0,i=0;g&&(b=(f-(w(a)-g.top))/f,c=(f-(g.bottom-w(a)))/f,d=(f-(v(a)-g.left))/f,e=(f-(g.right-v(a)))/f,b>=0&&1>=b?h=b*this.scrollSpeed*-1:c>=0&&1>=c&&(h=c*this.scrollSpeed),d>=0&&1>=d?i=d*this.scrollSpeed*-1:e>=0&&1>=e&&(i=e*this.scrollSpeed)),this.setScrollVel(h,i)},setScrollVel:function(a,b){this.scrollTopVel=a,this.scrollLeftVel=b,this.constrainScrollVel(),!this.scrollTopVel&&!this.scrollLeftVel||this.scrollIntervalId||(this.scrollIntervalId=setInterval(ia(this,"scrollIntervalFunc"),this.scrollIntervalMs))},constrainScrollVel:function(){var a=this.scrollEl;this.scrollTopVel<0?a.scrollTop()<=0&&(this.scrollTopVel=0):this.scrollTopVel>0&&a.scrollTop()+a[0].clientHeight>=a[0].scrollHeight&&(this.scrollTopVel=0),this.scrollLeftVel<0?a.scrollLeft()<=0&&(this.scrollLeftVel=0):this.scrollLeftVel>0&&a.scrollLeft()+a[0].clientWidth>=a[0].scrollWidth&&(this.scrollLeftVel=0)},scrollIntervalFunc:function(){var a=this.scrollEl,b=this.scrollIntervalMs/1e3;this.scrollTopVel&&a.scrollTop(a.scrollTop()+this.scrollTopVel*b),this.scrollLeftVel&&a.scrollLeft(a.scrollLeft()+this.scrollLeftVel*b),this.constrainScrollVel(),this.scrollTopVel||this.scrollLeftVel||this.endAutoScroll()},endAutoScroll:function(){this.scrollIntervalId&&(clearInterval(this.scrollIntervalId),this.scrollIntervalId=null,this.handleScrollEnd())},handleDebouncedScroll:function(){this.scrollIntervalId||this.handleScrollEnd()},handleScrollEnd:function(){}});var rb=qb.extend({component:null,origHit:null,hit:null,coordAdjust:null,constructor:function(a,b){qb.call(this,b),this.component=a},handleInteractionStart:function(a){var b,c,d,e=this.subjectEl;this.computeCoords(),a?(c={left:v(a),top:w(a)},d=c,e&&(b=n(e),d=D(d,b)),this.origHit=this.queryHit(d.left,d.top),e&&this.options.subjectCenter&&(this.origHit&&(b=C(this.origHit,b)||b),d=E(b)),this.coordAdjust=F(d,c)):(this.origHit=null,this.coordAdjust=null),qb.prototype.handleInteractionStart.apply(this,arguments)},computeCoords:function(){this.component.prepareHits(),this.computeScrollBounds()},handleDragStart:function(a){var b;qb.prototype.handleDragStart.apply(this,arguments),b=this.queryHit(v(a),w(a)),b&&this.handleHitOver(b)},handleDrag:function(a,b,c){var d;qb.prototype.handleDrag.apply(this,arguments),d=this.queryHit(v(c),w(c)),Ba(d,this.hit)||(this.hit&&this.handleHitOut(),d&&this.handleHitOver(d))},handleDragEnd:function(){this.handleHitDone(),qb.prototype.handleDragEnd.apply(this,arguments)},handleHitOver:function(a){var b=Ba(a,this.origHit);this.hit=a,this.trigger("hitOver",this.hit,b,this.origHit)},handleHitOut:function(){this.hit&&(this.trigger("hitOut",this.hit),this.handleHitDone(),this.hit=null)},handleHitDone:function(){this.hit&&this.trigger("hitDone",this.hit)},handleInteractionEnd:function(){qb.prototype.handleInteractionEnd.apply(this,arguments),this.origHit=null,this.hit=null,this.component.releaseHits()},handleScrollEnd:function(){qb.prototype.handleScrollEnd.apply(this,arguments),this.computeCoords()},queryHit:function(a,b){return this.coordAdjust&&(a+=this.coordAdjust.left,b+=this.coordAdjust.top),this.component.queryHit(a,b)}}),sb=ya.extend(mb,{options:null,sourceEl:null,el:null,parentEl:null,top0:null,left0:null,y0:null,x0:null,topDelta:null,leftDelta:null,isFollowing:!1,isHidden:!1,isAnimating:!1,constructor:function(b,c){this.options=c=c||{},this.sourceEl=b,this.parentEl=c.parentEl?a(c.parentEl):b.parent()},start:function(b){this.isFollowing||(this.isFollowing=!0,this.y0=w(b),this.x0=v(b),this.topDelta=0,this.leftDelta=0,this.isHidden||this.updatePosition(),x(b)?this.listenTo(a(document),"touchmove",this.handleMove):this.listenTo(a(document),"mousemove",this.handleMove))},stop:function(b,c){function d(){e.isAnimating=!1,e.removeElement(),e.top0=e.left0=null,c&&c()}var e=this,f=this.options.revertDuration;this.isFollowing&&!this.isAnimating&&(this.isFollowing=!1,this.stopListeningTo(a(document)),b&&f&&!this.isHidden?(this.isAnimating=!0,this.el.animate({top:this.top0,left:this.left0},{duration:f,complete:d})):d())},getEl:function(){var a=this.el;return a||(this.sourceEl.width(),a=this.el=this.sourceEl.clone().addClass(this.options.additionalClass||"").css({position:"absolute",visibility:"",display:this.isHidden?"none":"",margin:0,right:"auto",bottom:"auto",width:this.sourceEl.width(),height:this.sourceEl.height(),opacity:this.options.opacity||"",zIndex:this.options.zIndex}),a.addClass("fc-unselectable"),a.appendTo(this.parentEl)),a},removeElement:function(){this.el&&(this.el.remove(),this.el=null)},updatePosition:function(){var a,b;this.getEl(),null===this.top0&&(this.sourceEl.width(),a=this.sourceEl.offset(),b=this.el.offsetParent().offset(),this.top0=a.top-b.top,this.left0=a.left-b.left),this.el.css({top:this.top0+this.topDelta,left:this.left0+this.leftDelta})},handleMove:function(a){this.topDelta=w(a)-this.y0,this.leftDelta=v(a)-this.x0,this.isHidden||this.updatePosition()},hide:function(){this.isHidden||(this.isHidden=!0,this.el&&this.el.hide())},show:function(){this.isHidden&&(this.isHidden=!1,this.updatePosition(),this.getEl().show())}}),tb=Wa.Grid=ya.extend(mb,nb,{view:null,isRTL:null,start:null,end:null,el:null,elsByFill:null,eventTimeFormat:null,displayEventTime:null,displayEventEnd:null,minResizeDuration:null,largeUnit:null,dayDragListener:null,segDragListener:null,segResizeListener:null,externalDragListener:null,constructor:function(a){this.view=a,this.isRTL=a.opt("isRTL"),this.elsByFill={},this.dayDragListener=this.buildDayDragListener(),this.initMouseIgnoring()},computeEventTimeFormat:function(){return this.view.opt("smallTimeFormat")},computeDisplayEventTime:function(){return!0},computeDisplayEventEnd:function(){return!0},setRange:function(a){this.start=a.start.clone(),this.end=a.end.clone(),this.rangeUpdated(),this.processRangeOptions()},rangeUpdated:function(){},processRangeOptions:function(){var a,b,c=this.view;this.eventTimeFormat=c.opt("eventTimeFormat")||c.opt("timeFormat")||this.computeEventTimeFormat(),a=c.opt("displayEventTime"),null==a&&(a=this.computeDisplayEventTime()),b=c.opt("displayEventEnd"),null==b&&(b=this.computeDisplayEventEnd()),this.displayEventTime=a,this.displayEventEnd=b},spanToSegs:function(a){},diffDates:function(a,b){return this.largeUnit?N(a,b,this.largeUnit):L(a,b)},prepareHits:function(){},releaseHits:function(){},queryHit:function(a,b){},getHitSpan:function(a){},getHitEl:function(a){},setElement:function(a){this.el=a,y(a),this.bindDayHandler("touchstart",this.dayTouchStart),this.bindDayHandler("mousedown",this.dayMousedown),this.bindSegHandlers(),this.bindGlobalHandlers()},bindDayHandler:function(b,c){var d=this;this.el.on(b,function(b){return a(b.target).is(".fc-event-container *, .fc-more")?void 0:c.call(d,b)})},removeElement:function(){this.unbindGlobalHandlers(),this.clearDragListeners(),this.el.remove()},renderSkeleton:function(){},renderDates:function(){},unrenderDates:function(){},bindGlobalHandlers:function(){this.listenTo(a(document),{dragstart:this.externalDragStart,sortstart:this.externalDragStart})},unbindGlobalHandlers:function(){this.stopListeningTo(a(document))},dayMousedown:function(a){this.isIgnoringMouse||this.dayDragListener.startInteraction(a,{})},dayTouchStart:function(a){var b=this.view;(b.isSelected||b.selectedEvent)&&this.tempIgnoreMouse(),this.dayDragListener.startInteraction(a,{delay:this.view.opt("longPressDelay")})},buildDayDragListener:function(){var a,b,c=this,d=this.view,e=d.opt("selectable"),f=new rb(this,{scroll:d.opt("dragScroll"),interactionStart:function(){a=f.origHit,b=null},dragStart:function(){d.unselect()},hitOver:function(d,f,h){h&&(f||(a=null),e&&(b=c.computeSelection(c.getHitSpan(h),c.getHitSpan(d)),b?c.renderSelection(b):b===!1&&g()))},hitOut:function(){a=null,b=null,c.unrenderSelection()},hitDone:function(){h()},interactionEnd:function(e,f){f||(a&&!c.isIgnoringMouse&&d.triggerDayClick(c.getHitSpan(a),c.getHitEl(a),e),b&&d.reportSelection(b,e))}});return f},clearDragListeners:function(){this.dayDragListener.endInteraction(),this.segDragListener&&this.segDragListener.endInteraction(),this.segResizeListener&&this.segResizeListener.endInteraction(),this.externalDragListener&&this.externalDragListener.endInteraction()},renderEventLocationHelper:function(a,b){var c=this.fabricateHelperEvent(a,b);return this.renderHelper(c,b)},fabricateHelperEvent:function(a,b){var c=b?X(b.event):{};return c.start=a.start.clone(),c.end=a.end?a.end.clone():null,c.allDay=null,this.view.calendar.normalizeEventDates(c),c.className=(c.className||[]).concat("fc-helper"),b||(c.editable=!1),c},renderHelper:function(a,b){},unrenderHelper:function(){},renderSelection:function(a){this.renderHighlight(a)},unrenderSelection:function(){this.unrenderHighlight()},computeSelection:function(a,b){var c=this.computeSelectionSpan(a,b);return c&&!this.view.calendar.isSelectionSpanAllowed(c)?!1:c},computeSelectionSpan:function(a,b){var c=[a.start,a.end,b.start,b.end];return c.sort(ga),{start:c[0].clone(),end:c[3].clone()}},renderHighlight:function(a){this.renderFill("highlight",this.spanToSegs(a))},unrenderHighlight:function(){this.unrenderFill("highlight")},highlightSegClasses:function(){return["fc-highlight"]},renderBusinessHours:function(){},unrenderBusinessHours:function(){},getNowIndicatorUnit:function(){},renderNowIndicator:function(a){},unrenderNowIndicator:function(){},renderFill:function(a,b){},unrenderFill:function(a){var b=this.elsByFill[a];b&&(b.remove(),delete this.elsByFill[a])},renderFillSegEls:function(b,c){var d,e=this,f=this[b+"SegEl"],g="",h=[];if(c.length){for(d=0;d<c.length;d++)g+=this.fillSegHtml(b,c[d]);a(g).each(function(b,d){var g=c[b],i=a(d);f&&(i=f.call(e,g,i)),i&&(i=a(i),i.is(e.fillSegTag)&&(g.el=i,h.push(g)))})}return h},fillSegTag:"div",fillSegHtml:function(a,b){var c=this[a+"SegClasses"],d=this[a+"SegCss"],e=c?c.call(this,b):[],f=ea(d?d.call(this,b):{});return"<"+this.fillSegTag+(e.length?' class="'+e.join(" ")+'"':"")+(f?' style="'+f+'"':"")+" />"},getDayClasses:function(a){var b=this.view,c=b.calendar.getNow(),d=["fc-"+$a[a.day()]];return 1==b.intervalDuration.as("months")&&a.month()!=b.intervalStart.month()&&d.push("fc-other-month"),a.isSame(c,"day")?d.push("fc-today",b.highlightStateClass):c>a?d.push("fc-past"):d.push("fc-future"),d}});tb.mixin({mousedOverSeg:null,isDraggingSeg:!1,isResizingSeg:!1,isDraggingExternal:!1,segs:null,renderEvents:function(a){var b,c=[],d=[];for(b=0;b<a.length;b++)(Da(a[b])?c:d).push(a[b]);this.segs=[].concat(this.renderBgEvents(c),this.renderFgEvents(d))},renderBgEvents:function(a){var b=this.eventsToSegs(a);return this.renderBgSegs(b)||b},renderFgEvents:function(a){var b=this.eventsToSegs(a);return this.renderFgSegs(b)||b},unrenderEvents:function(){this.handleSegMouseout(),this.clearDragListeners(),this.unrenderFgSegs(),this.unrenderBgSegs(),this.segs=null},getEventSegs:function(){return this.segs||[]},renderFgSegs:function(a){},unrenderFgSegs:function(){},renderFgSegEls:function(b,c){var d,e=this.view,f="",g=[];if(b.length){for(d=0;d<b.length;d++)f+=this.fgSegHtml(b[d],c);a(f).each(function(c,d){var f=b[c],h=e.resolveEventEl(f.event,a(d));h&&(h.data("fc-seg",f),f.el=h,g.push(f))})}return g},fgSegHtml:function(a,b){},renderBgSegs:function(a){return this.renderFill("bgEvent",a)},unrenderBgSegs:function(){this.unrenderFill("bgEvent")},bgEventSegEl:function(a,b){return this.view.resolveEventEl(a.event,b)},bgEventSegClasses:function(a){var b=a.event,c=b.source||{};return["fc-bgevent"].concat(b.className,c.className||[])},bgEventSegCss:function(a){return{"background-color":this.getSegSkinCss(a)["background-color"]}},businessHoursSegClasses:function(a){return["fc-nonbusiness","fc-bgevent"]},buildBusinessHourSegs:function(b){var c=this.view.calendar.getCurrentBusinessHourEvents(b);return!c.length&&this.view.calendar.options.businessHours&&(c=[a.extend({},Gb,{start:this.view.end,end:this.view.end,dow:null})]),this.eventsToSegs(c)},bindSegHandlers:function(){this.bindSegHandlersToEl(this.el)},bindSegHandlersToEl:function(a){this.bindSegHandlerToEl(a,"touchstart",this.handleSegTouchStart),this.bindSegHandlerToEl(a,"touchend",this.handleSegTouchEnd),this.bindSegHandlerToEl(a,"mouseenter",this.handleSegMouseover),this.bindSegHandlerToEl(a,"mouseleave",this.handleSegMouseout),this.bindSegHandlerToEl(a,"mousedown",this.handleSegMousedown),this.bindSegHandlerToEl(a,"click",this.handleSegClick)},bindSegHandlerToEl:function(b,c,d){var e=this;b.on(c,".fc-event-container > *",function(b){var c=a(this).data("fc-seg");return!c||e.isDraggingSeg||e.isResizingSeg?void 0:d.call(e,c,b)})},handleSegClick:function(a,b){return this.view.trigger("eventClick",a.el[0],a.event,b)},handleSegMouseover:function(a,b){this.isIgnoringMouse||this.mousedOverSeg||(this.mousedOverSeg=a,a.el.addClass("fc-allow-mouse-resize"),this.view.trigger("eventMouseover",a.el[0],a.event,b))},handleSegMouseout:function(a,b){b=b||{},this.mousedOverSeg&&(a=a||this.mousedOverSeg,this.mousedOverSeg=null,a.el.removeClass("fc-allow-mouse-resize"),this.view.trigger("eventMouseout",a.el[0],a.event,b))},handleSegMousedown:function(a,b){var c=this.startSegResize(a,b,{distance:5});!c&&this.view.isEventDraggable(a.event)&&this.buildSegDragListener(a).startInteraction(b,{distance:5})},handleSegTouchStart:function(a,b){var c,d=this.view,e=a.event,f=d.isEventSelected(e),g=d.isEventDraggable(e),h=d.isEventResizable(e),i=!1;f&&h&&(i=this.startSegResize(a,b)),i||!g&&!h||(c=g?this.buildSegDragListener(a):this.buildSegSelectListener(a),c.startInteraction(b,{delay:f?0:this.view.opt("longPressDelay")})),this.tempIgnoreMouse()},handleSegTouchEnd:function(a,b){this.tempIgnoreMouse()},startSegResize:function(b,c,d){return a(c.target).is(".fc-resizer")?(this.buildSegResizeListener(b,a(c.target).is(".fc-start-resizer")).startInteraction(c,d),!0):!1},buildSegDragListener:function(a){var b,c,d,e=this,f=this.view,i=f.calendar,j=a.el,k=a.event;if(this.segDragListener)return this.segDragListener;var l=this.segDragListener=new rb(f,{scroll:f.opt("dragScroll"),subjectEl:j,subjectCenter:!0,interactionStart:function(d){a.component=e,b=!1,c=new sb(a.el,{additionalClass:"fc-dragging",parentEl:f.el,opacity:l.isTouch?null:f.opt("dragOpacity"),revertDuration:f.opt("dragRevertDuration"),zIndex:2}),c.hide(),c.start(d)},dragStart:function(c){l.isTouch&&!f.isEventSelected(k)&&f.selectEvent(k),b=!0,e.handleSegMouseout(a,c),e.segDragStart(a,c),f.hideEvent(k)},hitOver:function(b,h,j){var m;a.hit&&(j=a.hit),d=e.computeEventDrop(j.component.getHitSpan(j),b.component.getHitSpan(b),k),d&&!i.isEventSpanAllowed(e.eventToSpan(d),k)&&(g(),d=null),d&&(m=f.renderDrag(d,a))?(m.addClass("fc-dragging"),l.isTouch||e.applyDragOpacity(m),c.hide()):c.show(),h&&(d=null)},hitOut:function(){f.unrenderDrag(),c.show(),d=null},hitDone:function(){h()},interactionEnd:function(g){delete a.component,c.stop(!d,function(){b&&(f.unrenderDrag(),f.showEvent(k),e.segDragStop(a,g)),d&&f.reportEventDrop(k,d,this.largeUnit,j,g)}),e.segDragListener=null}});return l},buildSegSelectListener:function(a){var b=this,c=this.view,d=a.event;if(this.segDragListener)return this.segDragListener;var e=this.segDragListener=new qb({dragStart:function(a){e.isTouch&&!c.isEventSelected(d)&&c.selectEvent(d)},interactionEnd:function(a){b.segDragListener=null}});return e},segDragStart:function(a,b){this.isDraggingSeg=!0,this.view.trigger("eventDragStart",a.el[0],a.event,b,{})},segDragStop:function(a,b){this.isDraggingSeg=!1,this.view.trigger("eventDragStop",a.el[0],a.event,b,{})},computeEventDrop:function(a,b,c){var d,e,f=this.view.calendar,g=a.start,h=b.start;return g.hasTime()===h.hasTime()?(d=this.diffDates(h,g),c.allDay&&T(d)?(e={start:c.start.clone(),end:f.getEventEnd(c),allDay:!1},f.normalizeEventTimes(e)):e={start:c.start.clone(),end:c.end?c.end.clone():null,allDay:c.allDay},e.start.add(d),e.end&&e.end.add(d)):e={start:h.clone(),end:null,allDay:!h.hasTime()},e},applyDragOpacity:function(a){var b=this.view.opt("dragOpacity");null!=b&&a.each(function(a,c){c.style.opacity=b})},externalDragStart:function(b,c){var d,e,f=this.view;f.opt("droppable")&&(d=a((c?c.item:null)||b.target),e=f.opt("dropAccept"),(a.isFunction(e)?e.call(d[0],d):d.is(e))&&(this.isDraggingExternal||this.listenToExternalDrag(d,b,c)))},listenToExternalDrag:function(a,b,c){var d,e=this,f=this.view.calendar,i=Ia(a),j=e.externalDragListener=new rb(this,{interactionStart:function(){e.isDraggingExternal=!0},hitOver:function(a){d=e.computeExternalDrop(a.component.getHitSpan(a),i),d&&!f.isExternalSpanAllowed(e.eventToSpan(d),d,i.eventProps)&&(g(),d=null),d&&e.renderDrag(d)},hitOut:function(){d=null},hitDone:function(){h(),e.unrenderDrag()},interactionEnd:function(b){d&&e.view.reportExternalDrop(i,d,a,b,c),e.isDraggingExternal=!1,e.externalDragListener=null}});j.startDrag(b)},computeExternalDrop:function(a,b){var c=this.view.calendar,d={start:c.applyTimezone(a.start),end:null};return b.startTime&&!d.start.hasTime()&&d.start.time(b.startTime),b.duration&&(d.end=d.start.clone().add(b.duration)),d},renderDrag:function(a,b){},unrenderDrag:function(){},buildSegResizeListener:function(a,b){var c,d,e=this,f=this.view,i=f.calendar,j=a.el,k=a.event,l=i.getEventEnd(k),m=this.segResizeListener=new rb(this,{scroll:f.opt("dragScroll"),subjectEl:j,interactionStart:function(){c=!1},dragStart:function(b){c=!0,e.handleSegMouseout(a,b),e.segResizeStart(a,b)},hitOver:function(c,h,j){var m=e.getHitSpan(j),n=e.getHitSpan(c);d=b?e.computeEventStartResize(m,n,k):e.computeEventEndResize(m,n,k),d&&(i.isEventSpanAllowed(e.eventToSpan(d),k)?d.start.isSame(k.start)&&d.end.isSame(l)&&(d=null):(g(),d=null)),d&&(f.hideEvent(k),e.renderEventResize(d,a))},hitOut:function(){d=null},hitDone:function(){e.unrenderEventResize(),f.showEvent(k),h()},interactionEnd:function(b){c&&e.segResizeStop(a,b),d&&f.reportEventResize(k,d,this.largeUnit,j,b),e.segResizeListener=null}});return m},segResizeStart:function(a,b){this.isResizingSeg=!0,this.view.trigger("eventResizeStart",a.el[0],a.event,b,{})},segResizeStop:function(a,b){this.isResizingSeg=!1,this.view.trigger("eventResizeStop",a.el[0],a.event,b,{})},computeEventStartResize:function(a,b,c){return this.computeEventResize("start",a,b,c)},computeEventEndResize:function(a,b,c){return this.computeEventResize("end",a,b,c)},computeEventResize:function(a,b,c,d){var e,f,g=this.view.calendar,h=this.diffDates(c[a],b[a]);return e={start:d.start.clone(),end:g.getEventEnd(d),allDay:d.allDay},e.allDay&&T(h)&&(e.allDay=!1,g.normalizeEventTimes(e)),e[a].add(h),e.start.isBefore(e.end)||(f=this.minResizeDuration||(d.allDay?g.defaultAllDayEventDuration:g.defaultTimedEventDuration),"start"==a?e.start=e.end.clone().subtract(f):e.end=e.start.clone().add(f)),e},renderEventResize:function(a,b){},unrenderEventResize:function(){},getEventTimeText:function(a,b,c){return null==b&&(b=this.eventTimeFormat),null==c&&(c=this.displayEventEnd),this.displayEventTime&&a.start.hasTime()?c&&a.end?this.view.formatRange(a,b):a.start.format(b):""},getSegClasses:function(a,b,c){var d=this.view,e=a.event,f=["fc-event",a.isStart?"fc-start":"fc-not-start",a.isEnd?"fc-end":"fc-not-end"].concat(e.className,e.source?e.source.className:[]);return b&&f.push("fc-draggable"),c&&f.push("fc-resizable"),d.isEventSelected(e)&&f.push("fc-selected"),f},getSegSkinCss:function(a){var b=a.event,c=this.view,d=b.source||{},e=b.color,f=d.color,g=c.opt("eventColor");return{"background-color":b.backgroundColor||e||d.backgroundColor||f||c.opt("eventBackgroundColor")||g,"border-color":b.borderColor||e||d.borderColor||f||c.opt("eventBorderColor")||g,color:b.textColor||d.textColor||c.opt("eventTextColor")}},eventToSegs:function(a){return this.eventsToSegs([a])},eventToSpan:function(a){return this.eventToSpans(a)[0]},eventToSpans:function(a){var b=this.eventToRange(a);return this.eventRangeToSpans(b,a)},eventsToSegs:function(b,c){var d=this,e=Ga(b),f=[];return a.each(e,function(a,b){var e,g=[];for(e=0;e<b.length;e++)g.push(d.eventToRange(b[e]));if(Ea(b[0]))for(g=d.invertRanges(g),e=0;e<g.length;e++)f.push.apply(f,d.eventRangeToSegs(g[e],b[0],c));else for(e=0;e<g.length;e++)f.push.apply(f,d.eventRangeToSegs(g[e],b[e],c))}),f},eventToRange:function(a){return{start:a.start.clone().stripZone(),end:(a.end?a.end.clone():this.view.calendar.getDefaultEventEnd(null!=a.allDay?a.allDay:!a.start.hasTime(),a.start)).stripZone()}},eventRangeToSegs:function(a,b,c){var d,e=this.eventRangeToSpans(a,b),f=[];for(d=0;d<e.length;d++)f.push.apply(f,this.eventSpanToSegs(e[d],b,c));return f},eventRangeToSpans:function(b,c){return[a.extend({},b)]},eventSpanToSegs:function(a,b,c){var d,e,f=c?c(a):this.spanToSegs(a);for(d=0;d<f.length;d++)e=f[d],e.event=b,e.eventStartMS=+a.start,e.eventDurationMS=a.end-a.start;return f},invertRanges:function(a){var b,c,d=this.view,e=d.start.clone(),f=d.end.clone(),g=[],h=e;for(a.sort(Ha),b=0;b<a.length;b++)c=a[b],c.start>h&&g.push({start:h,end:c.start}),h=c.end;return f>h&&g.push({start:h,end:f}),g},sortEventSegs:function(a){a.sort(ia(this,"compareEventSegs"))},compareEventSegs:function(a,b){return a.eventStartMS-b.eventStartMS||b.eventDurationMS-a.eventDurationMS||b.event.allDay-a.event.allDay||H(a.event,b.event,this.view.eventOrderSpecs)}}),Wa.isBgEvent=Da,Wa.dataAttrPrefix="";var ub=Wa.DayTableMixin={breakOnWeeks:!1,dayDates:null,dayIndices:null,daysPerRow:null,rowCnt:null,colCnt:null,colHeadFormat:null,updateDayTable:function(){for(var a,b,c,d=this.view,e=this.start.clone(),f=-1,g=[],h=[];e.isBefore(this.end);)d.isHiddenDay(e)?g.push(f+.5):(f++,
g.push(f),h.push(e.clone())),e.add(1,"days");if(this.breakOnWeeks){for(b=h[0].day(),a=1;a<h.length&&h[a].day()!=b;a++);c=Math.ceil(h.length/a)}else c=1,a=h.length;this.dayDates=h,this.dayIndices=g,this.daysPerRow=a,this.rowCnt=c,this.updateDayTableCols()},updateDayTableCols:function(){this.colCnt=this.computeColCnt(),this.colHeadFormat=this.view.opt("columnFormat")||this.computeColHeadFormat()},computeColCnt:function(){return this.daysPerRow},getCellDate:function(a,b){return this.dayDates[this.getCellDayIndex(a,b)].clone()},getCellRange:function(a,b){var c=this.getCellDate(a,b),d=c.clone().add(1,"days");return{start:c,end:d}},getCellDayIndex:function(a,b){return a*this.daysPerRow+this.getColDayIndex(b)},getColDayIndex:function(a){return this.isRTL?this.colCnt-1-a:a},getDateDayIndex:function(a){var b=this.dayIndices,c=a.diff(this.start,"days");return 0>c?b[0]-1:c>=b.length?b[b.length-1]+1:b[c]},computeColHeadFormat:function(){return this.rowCnt>1||this.colCnt>10?"ddd":this.colCnt>1?this.view.opt("dayOfMonthFormat"):"dddd"},sliceRangeByRow:function(a){var b,c,d,e,f,g=this.daysPerRow,h=this.view.computeDayRange(a),i=this.getDateDayIndex(h.start),j=this.getDateDayIndex(h.end.clone().subtract(1,"days")),k=[];for(b=0;b<this.rowCnt;b++)c=b*g,d=c+g-1,e=Math.max(i,c),f=Math.min(j,d),e=Math.ceil(e),f=Math.floor(f),f>=e&&k.push({row:b,firstRowDayIndex:e-c,lastRowDayIndex:f-c,isStart:e===i,isEnd:f===j});return k},sliceRangeByDay:function(a){var b,c,d,e,f,g,h=this.daysPerRow,i=this.view.computeDayRange(a),j=this.getDateDayIndex(i.start),k=this.getDateDayIndex(i.end.clone().subtract(1,"days")),l=[];for(b=0;b<this.rowCnt;b++)for(c=b*h,d=c+h-1,e=c;d>=e;e++)f=Math.max(j,e),g=Math.min(k,e),f=Math.ceil(f),g=Math.floor(g),g>=f&&l.push({row:b,firstRowDayIndex:f-c,lastRowDayIndex:g-c,isStart:f===j,isEnd:g===k});return l},renderHeadHtml:function(){var a=this.view;return'<div class="fc-row '+a.widgetHeaderClass+'"><table><thead>'+this.renderHeadTrHtml()+"</thead></table></div>"},renderHeadIntroHtml:function(){return this.renderIntroHtml()},renderHeadTrHtml:function(){return"<tr>"+(this.isRTL?"":this.renderHeadIntroHtml())+this.renderHeadDateCellsHtml()+(this.isRTL?this.renderHeadIntroHtml():"")+"</tr>"},renderHeadDateCellsHtml:function(){var a,b,c=[];for(a=0;a<this.colCnt;a++)b=this.getCellDate(0,a),c.push(this.renderHeadDateCellHtml(b));return c.join("")},renderHeadDateCellHtml:function(a,b,c){var d=this.view;return'<th class="fc-day-header '+d.widgetHeaderClass+" fc-"+$a[a.day()]+'"'+(1==this.rowCnt?' data-date="'+a.format("YYYY-MM-DD")+'"':"")+(b>1?' colspan="'+b+'"':"")+(c?" "+c:"")+">"+ca(a.format(this.colHeadFormat))+"</th>"},renderBgTrHtml:function(a){return"<tr>"+(this.isRTL?"":this.renderBgIntroHtml(a))+this.renderBgCellsHtml(a)+(this.isRTL?this.renderBgIntroHtml(a):"")+"</tr>"},renderBgIntroHtml:function(a){return this.renderIntroHtml()},renderBgCellsHtml:function(a){var b,c,d=[];for(b=0;b<this.colCnt;b++)c=this.getCellDate(a,b),d.push(this.renderBgCellHtml(c));return d.join("")},renderBgCellHtml:function(a,b){var c=this.view,d=this.getDayClasses(a);return d.unshift("fc-day",c.widgetContentClass),'<td class="'+d.join(" ")+'" data-date="'+a.format("YYYY-MM-DD")+'"'+(b?" "+b:"")+"></td>"},renderIntroHtml:function(){},bookendCells:function(a){var b=this.renderIntroHtml();b&&(this.isRTL?a.append(b):a.prepend(b))}},vb=Wa.DayGrid=tb.extend(ub,{numbersVisible:!1,bottomCoordPadding:0,rowEls:null,cellEls:null,helperEls:null,rowCoordCache:null,colCoordCache:null,renderDates:function(a){var b,c,d=this.view,e=this.rowCnt,f=this.colCnt,g="";for(b=0;e>b;b++)g+=this.renderDayRowHtml(b,a);for(this.el.html(g),this.rowEls=this.el.find(".fc-row"),this.cellEls=this.el.find(".fc-day"),this.rowCoordCache=new pb({els:this.rowEls,isVertical:!0}),this.colCoordCache=new pb({els:this.cellEls.slice(0,this.colCnt),isHorizontal:!0}),b=0;e>b;b++)for(c=0;f>c;c++)d.trigger("dayRender",null,this.getCellDate(b,c),this.getCellEl(b,c))},unrenderDates:function(){this.removeSegPopover()},renderBusinessHours:function(){var a=this.buildBusinessHourSegs(!0);this.renderFill("businessHours",a,"bgevent")},unrenderBusinessHours:function(){this.unrenderFill("businessHours")},renderDayRowHtml:function(a,b){var c=this.view,d=["fc-row","fc-week",c.widgetContentClass];return b&&d.push("fc-rigid"),'<div class="'+d.join(" ")+'"><div class="fc-bg"><table>'+this.renderBgTrHtml(a)+'</table></div><div class="fc-content-skeleton"><table>'+(this.numbersVisible?"<thead>"+this.renderNumberTrHtml(a)+"</thead>":"")+"</table></div></div>"},renderNumberTrHtml:function(a){return"<tr>"+(this.isRTL?"":this.renderNumberIntroHtml(a))+this.renderNumberCellsHtml(a)+(this.isRTL?this.renderNumberIntroHtml(a):"")+"</tr>"},renderNumberIntroHtml:function(a){return this.renderIntroHtml()},renderNumberCellsHtml:function(a){var b,c,d=[];for(b=0;b<this.colCnt;b++)c=this.getCellDate(a,b),d.push(this.renderNumberCellHtml(c));return d.join("")},renderNumberCellHtml:function(a){var b;return this.view.dayNumbersVisible?(b=this.getDayClasses(a),b.unshift("fc-day-number"),'<td class="'+b.join(" ")+'" data-date="'+a.format()+'">'+a.date()+"</td>"):"<td/>"},computeEventTimeFormat:function(){return this.view.opt("extraSmallTimeFormat")},computeDisplayEventEnd:function(){return 1==this.colCnt},rangeUpdated:function(){this.updateDayTable()},spanToSegs:function(a){var b,c,d=this.sliceRangeByRow(a);for(b=0;b<d.length;b++)c=d[b],this.isRTL?(c.leftCol=this.daysPerRow-1-c.lastRowDayIndex,c.rightCol=this.daysPerRow-1-c.firstRowDayIndex):(c.leftCol=c.firstRowDayIndex,c.rightCol=c.lastRowDayIndex);return d},prepareHits:function(){this.colCoordCache.build(),this.rowCoordCache.build(),this.rowCoordCache.bottoms[this.rowCnt-1]+=this.bottomCoordPadding},releaseHits:function(){this.colCoordCache.clear(),this.rowCoordCache.clear()},queryHit:function(a,b){if(this.colCoordCache.isLeftInBounds(a)&&this.rowCoordCache.isTopInBounds(b)){var c=this.colCoordCache.getHorizontalIndex(a),d=this.rowCoordCache.getVerticalIndex(b);if(null!=d&&null!=c)return this.getCellHit(d,c)}},getHitSpan:function(a){return this.getCellRange(a.row,a.col)},getHitEl:function(a){return this.getCellEl(a.row,a.col)},getCellHit:function(a,b){return{row:a,col:b,component:this,left:this.colCoordCache.getLeftOffset(b),right:this.colCoordCache.getRightOffset(b),top:this.rowCoordCache.getTopOffset(a),bottom:this.rowCoordCache.getBottomOffset(a)}},getCellEl:function(a,b){return this.cellEls.eq(a*this.colCnt+b)},renderDrag:function(a,b){return this.renderHighlight(this.eventToSpan(a)),b&&b.component!==this?this.renderEventLocationHelper(a,b):void 0},unrenderDrag:function(){this.unrenderHighlight(),this.unrenderHelper()},renderEventResize:function(a,b){return this.renderHighlight(this.eventToSpan(a)),this.renderEventLocationHelper(a,b)},unrenderEventResize:function(){this.unrenderHighlight(),this.unrenderHelper()},renderHelper:function(b,c){var d,e=[],f=this.eventToSegs(b);return f=this.renderFgSegEls(f),d=this.renderSegRows(f),this.rowEls.each(function(b,f){var g,h=a(f),i=a('<div class="fc-helper-skeleton"><table/></div>');g=c&&c.row===b?c.el.position().top:h.find(".fc-content-skeleton tbody").position().top,i.css("top",g).find("table").append(d[b].tbodyEl),h.append(i),e.push(i[0])}),this.helperEls=a(e)},unrenderHelper:function(){this.helperEls&&(this.helperEls.remove(),this.helperEls=null)},fillSegTag:"td",renderFill:function(b,c,d){var e,f,g,h=[];for(c=this.renderFillSegEls(b,c),e=0;e<c.length;e++)f=c[e],g=this.renderFillRow(b,f,d),this.rowEls.eq(f.row).append(g),h.push(g[0]);return this.elsByFill[b]=a(h),c},renderFillRow:function(b,c,d){var e,f,g=this.colCnt,h=c.leftCol,i=c.rightCol+1;return d=d||b.toLowerCase(),e=a('<div class="fc-'+d+'-skeleton"><table><tr/></table></div>'),f=e.find("tr"),h>0&&f.append('<td colspan="'+h+'"/>'),f.append(c.el.attr("colspan",i-h)),g>i&&f.append('<td colspan="'+(g-i)+'"/>'),this.bookendCells(f),e}});vb.mixin({rowStructs:null,unrenderEvents:function(){this.removeSegPopover(),tb.prototype.unrenderEvents.apply(this,arguments)},getEventSegs:function(){return tb.prototype.getEventSegs.call(this).concat(this.popoverSegs||[])},renderBgSegs:function(b){var c=a.grep(b,function(a){return a.event.allDay});return tb.prototype.renderBgSegs.call(this,c)},renderFgSegs:function(b){var c;return b=this.renderFgSegEls(b),c=this.rowStructs=this.renderSegRows(b),this.rowEls.each(function(b,d){a(d).find(".fc-content-skeleton > table").append(c[b].tbodyEl)}),b},unrenderFgSegs:function(){for(var a,b=this.rowStructs||[];a=b.pop();)a.tbodyEl.remove();this.rowStructs=null},renderSegRows:function(a){var b,c,d=[];for(b=this.groupSegRows(a),c=0;c<b.length;c++)d.push(this.renderSegRow(c,b[c]));return d},fgSegHtml:function(a,b){var c,d,e=this.view,f=a.event,g=e.isEventDraggable(f),h=!b&&f.allDay&&a.isStart&&e.isEventResizableFromStart(f),i=!b&&f.allDay&&a.isEnd&&e.isEventResizableFromEnd(f),j=this.getSegClasses(a,g,h||i),k=ea(this.getSegSkinCss(a)),l="";return j.unshift("fc-day-grid-event","fc-h-event"),a.isStart&&(c=this.getEventTimeText(f),c&&(l='<span class="fc-time">'+ca(c)+"</span>")),d='<span class="fc-title">'+(ca(f.title||"")||"&nbsp;")+"</span>",'<a class="'+j.join(" ")+'"'+(f.url?' href="'+ca(f.url)+'"':"")+(k?' style="'+k+'"':"")+'><div class="fc-content">'+(this.isRTL?d+" "+l:l+" "+d)+"</div>"+(h?'<div class="fc-resizer fc-start-resizer" />':"")+(i?'<div class="fc-resizer fc-end-resizer" />':"")+"</a>"},renderSegRow:function(b,c){function d(b){for(;b>g;)k=(r[e-1]||[])[g],k?k.attr("rowspan",parseInt(k.attr("rowspan")||1,10)+1):(k=a("<td/>"),h.append(k)),q[e][g]=k,r[e][g]=k,g++}var e,f,g,h,i,j,k,l=this.colCnt,m=this.buildSegLevels(c),n=Math.max(1,m.length),o=a("<tbody/>"),p=[],q=[],r=[];for(e=0;n>e;e++){if(f=m[e],g=0,h=a("<tr/>"),p.push([]),q.push([]),r.push([]),f)for(i=0;i<f.length;i++){for(j=f[i],d(j.leftCol),k=a('<td class="fc-event-container"/>').append(j.el),j.leftCol!=j.rightCol?k.attr("colspan",j.rightCol-j.leftCol+1):r[e][g]=k;g<=j.rightCol;)q[e][g]=k,p[e][g]=j,g++;h.append(k)}d(l),this.bookendCells(h),o.append(h)}return{row:b,tbodyEl:o,cellMatrix:q,segMatrix:p,segLevels:m,segs:c}},buildSegLevels:function(a){var b,c,d,e=[];for(this.sortEventSegs(a),b=0;b<a.length;b++){for(c=a[b],d=0;d<e.length&&Ja(c,e[d]);d++);c.level=d,(e[d]||(e[d]=[])).push(c)}for(d=0;d<e.length;d++)e[d].sort(Ka);return e},groupSegRows:function(a){var b,c=[];for(b=0;b<this.rowCnt;b++)c.push([]);for(b=0;b<a.length;b++)c[a[b].row].push(a[b]);return c}}),vb.mixin({segPopover:null,popoverSegs:null,removeSegPopover:function(){this.segPopover&&this.segPopover.hide()},limitRows:function(a){var b,c,d=this.rowStructs||[];for(b=0;b<d.length;b++)this.unlimitRow(b),c=a?"number"==typeof a?a:this.computeRowLevelLimit(b):!1,c!==!1&&this.limitRow(b,c)},computeRowLevelLimit:function(b){function c(b,c){f=Math.max(f,a(c).outerHeight())}var d,e,f,g=this.rowEls.eq(b),h=g.height(),i=this.rowStructs[b].tbodyEl.children();for(d=0;d<i.length;d++)if(e=i.eq(d).removeClass("fc-limited"),f=0,e.find("> td > :first-child").each(c),e.position().top+f>h)return d;return!1},limitRow:function(b,c){function d(d){for(;d>w;)j=t.getCellSegs(b,w,c),j.length&&(m=f[c-1][w],s=t.renderMoreLink(b,w,j),r=a("<div/>").append(s),m.append(r),v.push(r[0])),w++}var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t=this,u=this.rowStructs[b],v=[],w=0;if(c&&c<u.segLevels.length){for(e=u.segLevels[c-1],f=u.cellMatrix,g=u.tbodyEl.children().slice(c).addClass("fc-limited").get(),h=0;h<e.length;h++){for(i=e[h],d(i.leftCol),l=[],k=0;w<=i.rightCol;)j=this.getCellSegs(b,w,c),l.push(j),k+=j.length,w++;if(k){for(m=f[c-1][i.leftCol],n=m.attr("rowspan")||1,o=[],p=0;p<l.length;p++)q=a('<td class="fc-more-cell"/>').attr("rowspan",n),j=l[p],s=this.renderMoreLink(b,i.leftCol+p,[i].concat(j)),r=a("<div/>").append(s),q.append(r),o.push(q[0]),v.push(q[0]);m.addClass("fc-limited").after(a(o)),g.push(m[0])}}d(this.colCnt),u.moreEls=a(v),u.limitedEls=a(g)}},unlimitRow:function(a){var b=this.rowStructs[a];b.moreEls&&(b.moreEls.remove(),b.moreEls=null),b.limitedEls&&(b.limitedEls.removeClass("fc-limited"),b.limitedEls=null)},renderMoreLink:function(b,c,d){var e=this,f=this.view;return a('<a class="fc-more"/>').text(this.getMoreLinkText(d.length)).on("click",function(g){var h=f.opt("eventLimitClick"),i=e.getCellDate(b,c),j=a(this),k=e.getCellEl(b,c),l=e.getCellSegs(b,c),m=e.resliceDaySegs(l,i),n=e.resliceDaySegs(d,i);"function"==typeof h&&(h=f.trigger("eventLimitClick",null,{date:i,dayEl:k,moreEl:j,segs:m,hiddenSegs:n},g)),"popover"===h?e.showSegPopover(b,c,j,m):"string"==typeof h&&f.calendar.zoomTo(i,h)})},showSegPopover:function(a,b,c,d){var e,f,g=this,h=this.view,i=c.parent();e=1==this.rowCnt?h.el:this.rowEls.eq(a),f={className:"fc-more-popover",content:this.renderSegPopoverContent(a,b,d),parentEl:this.view.el,top:e.offset().top,autoHide:!0,viewportConstrain:h.opt("popoverViewportConstrain"),hide:function(){g.segPopover.removeElement(),g.segPopover=null,g.popoverSegs=null}},this.isRTL?f.right=i.offset().left+i.outerWidth()+1:f.left=i.offset().left-1,this.segPopover=new ob(f),this.segPopover.show(),this.bindSegHandlersToEl(this.segPopover.el)},renderSegPopoverContent:function(b,c,d){var e,f=this.view,g=f.opt("theme"),h=this.getCellDate(b,c).format(f.opt("dayPopoverFormat")),i=a('<div class="fc-header '+f.widgetHeaderClass+'"><span class="fc-close '+(g?"ui-icon ui-icon-closethick":"fc-icon fc-icon-x")+'"></span><span class="fc-title">'+ca(h)+'</span><div class="fc-clear"/></div><div class="fc-body '+f.widgetContentClass+'"><div class="fc-event-container"></div></div>'),j=i.find(".fc-event-container");for(d=this.renderFgSegEls(d,!0),this.popoverSegs=d,e=0;e<d.length;e++)this.prepareHits(),d[e].hit=this.getCellHit(b,c),this.releaseHits(),j.append(d[e].el);return i},resliceDaySegs:function(b,c){var d=a.map(b,function(a){return a.event}),e=c.clone(),f=e.clone().add(1,"days"),g={start:e,end:f};return b=this.eventsToSegs(d,function(a){var b=K(a,g);return b?[b]:[]}),this.sortEventSegs(b),b},getMoreLinkText:function(a){var b=this.view.opt("eventLimitText");return"function"==typeof b?b(a):"+"+a+" "+b},getCellSegs:function(a,b,c){for(var d,e=this.rowStructs[a].segMatrix,f=c||0,g=[];f<e.length;)d=e[f][b],d&&g.push(d),f++;return g}});var wb=Wa.TimeGrid=tb.extend(ub,{slotDuration:null,snapDuration:null,snapsPerSlot:null,minTime:null,maxTime:null,labelFormat:null,labelInterval:null,colEls:null,slatContainerEl:null,slatEls:null,nowIndicatorEls:null,colCoordCache:null,slatCoordCache:null,constructor:function(){tb.apply(this,arguments),this.processOptions()},renderDates:function(){this.el.html(this.renderHtml()),this.colEls=this.el.find(".fc-day"),this.slatContainerEl=this.el.find(".fc-slats"),this.slatEls=this.slatContainerEl.find("tr"),this.colCoordCache=new pb({els:this.colEls,isHorizontal:!0}),this.slatCoordCache=new pb({els:this.slatEls,isVertical:!0}),this.renderContentSkeleton()},renderHtml:function(){return'<div class="fc-bg"><table>'+this.renderBgTrHtml(0)+'</table></div><div class="fc-slats"><table>'+this.renderSlatRowHtml()+"</table></div>"},renderSlatRowHtml:function(){for(var a,c,d,e=this.view,f=this.isRTL,g="",h=b.duration(+this.minTime);h<this.maxTime;)a=this.start.clone().time(h),c=ha(R(h,this.labelInterval)),d='<td class="fc-axis fc-time '+e.widgetContentClass+'" '+e.axisStyleAttr()+">"+(c?"<span>"+ca(a.format(this.labelFormat))+"</span>":"")+"</td>",g+='<tr data-time="'+a.format("HH:mm:ss")+'"'+(c?"":' class="fc-minor"')+">"+(f?"":d)+'<td class="'+e.widgetContentClass+'"/>'+(f?d:"")+"</tr>",h.add(this.slotDuration);return g},processOptions:function(){var c,d=this.view,e=d.opt("slotDuration"),f=d.opt("snapDuration");e=b.duration(e),f=f?b.duration(f):e,this.slotDuration=e,this.snapDuration=f,this.snapsPerSlot=e/f,this.minResizeDuration=f,this.minTime=b.duration(d.opt("minTime")),this.maxTime=b.duration(d.opt("maxTime")),c=d.opt("slotLabelFormat"),a.isArray(c)&&(c=c[c.length-1]),this.labelFormat=c||d.opt("axisFormat")||d.opt("smallTimeFormat"),c=d.opt("slotLabelInterval"),this.labelInterval=c?b.duration(c):this.computeLabelInterval(e)},computeLabelInterval:function(a){var c,d,e;for(c=Ob.length-1;c>=0;c--)if(d=b.duration(Ob[c]),e=R(d,a),ha(e)&&e>1)return d;return b.duration(a)},computeEventTimeFormat:function(){return this.view.opt("noMeridiemTimeFormat")},computeDisplayEventEnd:function(){return!0},prepareHits:function(){this.colCoordCache.build(),this.slatCoordCache.build()},releaseHits:function(){this.colCoordCache.clear()},queryHit:function(a,b){var c=this.snapsPerSlot,d=this.colCoordCache,e=this.slatCoordCache;if(d.isLeftInBounds(a)&&e.isTopInBounds(b)){var f=d.getHorizontalIndex(a),g=e.getVerticalIndex(b);if(null!=f&&null!=g){var h=e.getTopOffset(g),i=e.getHeight(g),j=(b-h)/i,k=Math.floor(j*c),l=g*c+k,m=h+k/c*i,n=h+(k+1)/c*i;return{col:f,snap:l,component:this,left:d.getLeftOffset(f),right:d.getRightOffset(f),top:m,bottom:n}}}},getHitSpan:function(a){var b,c=this.getCellDate(0,a.col),d=this.computeSnapTime(a.snap);return c.time(d),b=c.clone().add(this.snapDuration),{start:c,end:b}},getHitEl:function(a){return this.colEls.eq(a.col)},rangeUpdated:function(){this.updateDayTable()},computeSnapTime:function(a){return b.duration(this.minTime+this.snapDuration*a)},spanToSegs:function(a){var b,c=this.sliceRangeByTimes(a);for(b=0;b<c.length;b++)this.isRTL?c[b].col=this.daysPerRow-1-c[b].dayIndex:c[b].col=c[b].dayIndex;return c},sliceRangeByTimes:function(a){var b,c,d,e,f=[];for(c=0;c<this.daysPerRow;c++)d=this.dayDates[c].clone(),e={start:d.clone().time(this.minTime),end:d.clone().time(this.maxTime)},b=K(a,e),b&&(b.dayIndex=c,f.push(b));return f},updateSize:function(a){this.slatCoordCache.build(),a&&this.updateSegVerticals([].concat(this.fgSegs||[],this.bgSegs||[],this.businessSegs||[]))},getTotalSlatHeight:function(){return this.slatContainerEl.outerHeight()},computeDateTop:function(a,c){return this.computeTimeTop(b.duration(a-c.clone().stripTime()))},computeTimeTop:function(a){var b,c,d=this.slatEls.length,e=(a-this.minTime)/this.slotDuration;return e=Math.max(0,e),e=Math.min(d,e),b=Math.floor(e),b=Math.min(b,d-1),c=e-b,this.slatCoordCache.getTopPosition(b)+this.slatCoordCache.getHeight(b)*c},renderDrag:function(a,b){return b?this.renderEventLocationHelper(a,b):void this.renderHighlight(this.eventToSpan(a))},unrenderDrag:function(){this.unrenderHelper(),this.unrenderHighlight()},renderEventResize:function(a,b){return this.renderEventLocationHelper(a,b)},unrenderEventResize:function(){this.unrenderHelper()},renderHelper:function(a,b){return this.renderHelperSegs(this.eventToSegs(a),b)},unrenderHelper:function(){this.unrenderHelperSegs()},renderBusinessHours:function(){this.renderBusinessSegs(this.buildBusinessHourSegs())},unrenderBusinessHours:function(){this.unrenderBusinessSegs()},getNowIndicatorUnit:function(){return"minute"},renderNowIndicator:function(b){var c,d=this.spanToSegs({start:b,end:b}),e=this.computeDateTop(b,b),f=[];for(c=0;c<d.length;c++)f.push(a('<div class="fc-now-indicator fc-now-indicator-line"></div>').css("top",e).appendTo(this.colContainerEls.eq(d[c].col))[0]);d.length>0&&f.push(a('<div class="fc-now-indicator fc-now-indicator-arrow"></div>').css("top",e).appendTo(this.el.find(".fc-content-skeleton"))[0]),this.nowIndicatorEls=a(f)},unrenderNowIndicator:function(){this.nowIndicatorEls&&(this.nowIndicatorEls.remove(),this.nowIndicatorEls=null)},renderSelection:function(a){this.view.opt("selectHelper")?this.renderEventLocationHelper(a):this.renderHighlight(a)},unrenderSelection:function(){this.unrenderHelper(),this.unrenderHighlight()},renderHighlight:function(a){this.renderHighlightSegs(this.spanToSegs(a))},unrenderHighlight:function(){this.unrenderHighlightSegs()}});wb.mixin({colContainerEls:null,fgContainerEls:null,bgContainerEls:null,helperContainerEls:null,highlightContainerEls:null,businessContainerEls:null,fgSegs:null,bgSegs:null,helperSegs:null,highlightSegs:null,businessSegs:null,renderContentSkeleton:function(){var b,c,d="";for(b=0;b<this.colCnt;b++)d+='<td><div class="fc-content-col"><div class="fc-event-container fc-helper-container"></div><div class="fc-event-container"></div><div class="fc-highlight-container"></div><div class="fc-bgevent-container"></div><div class="fc-business-container"></div></div></td>';c=a('<div class="fc-content-skeleton"><table><tr>'+d+"</tr></table></div>"),this.colContainerEls=c.find(".fc-content-col"),this.helperContainerEls=c.find(".fc-helper-container"),this.fgContainerEls=c.find(".fc-event-container:not(.fc-helper-container)"),this.bgContainerEls=c.find(".fc-bgevent-container"),this.highlightContainerEls=c.find(".fc-highlight-container"),this.businessContainerEls=c.find(".fc-business-container"),this.bookendCells(c.find("tr")),this.el.append(c)},renderFgSegs:function(a){return a=this.renderFgSegsIntoContainers(a,this.fgContainerEls),this.fgSegs=a,a},unrenderFgSegs:function(){this.unrenderNamedSegs("fgSegs")},renderHelperSegs:function(b,c){var d,e,f,g=[];for(b=this.renderFgSegsIntoContainers(b,this.helperContainerEls),d=0;d<b.length;d++)e=b[d],c&&c.col===e.col&&(f=c.el,e.el.css({left:f.css("left"),right:f.css("right"),"margin-left":f.css("margin-left"),"margin-right":f.css("margin-right")})),g.push(e.el[0]);return this.helperSegs=b,a(g)},unrenderHelperSegs:function(){this.unrenderNamedSegs("helperSegs")},renderBgSegs:function(a){return a=this.renderFillSegEls("bgEvent",a),this.updateSegVerticals(a),this.attachSegsByCol(this.groupSegsByCol(a),this.bgContainerEls),this.bgSegs=a,a},unrenderBgSegs:function(){this.unrenderNamedSegs("bgSegs")},renderHighlightSegs:function(a){a=this.renderFillSegEls("highlight",a),this.updateSegVerticals(a),this.attachSegsByCol(this.groupSegsByCol(a),this.highlightContainerEls),this.highlightSegs=a},unrenderHighlightSegs:function(){this.unrenderNamedSegs("highlightSegs")},renderBusinessSegs:function(a){a=this.renderFillSegEls("businessHours",a),this.updateSegVerticals(a),this.attachSegsByCol(this.groupSegsByCol(a),this.businessContainerEls),this.businessSegs=a},unrenderBusinessSegs:function(){this.unrenderNamedSegs("businessSegs")},groupSegsByCol:function(a){var b,c=[];for(b=0;b<this.colCnt;b++)c.push([]);for(b=0;b<a.length;b++)c[a[b].col].push(a[b]);return c},attachSegsByCol:function(a,b){var c,d,e;for(c=0;c<this.colCnt;c++)for(d=a[c],e=0;e<d.length;e++)b.eq(c).append(d[e].el)},unrenderNamedSegs:function(a){var b,c=this[a];if(c){for(b=0;b<c.length;b++)c[b].el.remove();this[a]=null}},renderFgSegsIntoContainers:function(a,b){var c,d;for(a=this.renderFgSegEls(a),c=this.groupSegsByCol(a),d=0;d<this.colCnt;d++)this.updateFgSegCoords(c[d]);return this.attachSegsByCol(c,b),a},fgSegHtml:function(a,b){var c,d,e,f=this.view,g=a.event,h=f.isEventDraggable(g),i=!b&&a.isStart&&f.isEventResizableFromStart(g),j=!b&&a.isEnd&&f.isEventResizableFromEnd(g),k=this.getSegClasses(a,h,i||j),l=ea(this.getSegSkinCss(a));return k.unshift("fc-time-grid-event","fc-v-event"),f.isMultiDayEvent(g)?(a.isStart||a.isEnd)&&(c=this.getEventTimeText(a),d=this.getEventTimeText(a,"LT"),e=this.getEventTimeText(a,null,!1)):(c=this.getEventTimeText(g),d=this.getEventTimeText(g,"LT"),e=this.getEventTimeText(g,null,!1)),'<a class="'+k.join(" ")+'"'+(g.url?' href="'+ca(g.url)+'"':"")+(l?' style="'+l+'"':"")+'><div class="fc-content">'+(c?'<div class="fc-time" data-start="'+ca(e)+'" data-full="'+ca(d)+'"><span>'+ca(c)+"</span></div>":"")+(g.title?'<div class="fc-title">'+ca(g.title)+"</div>":"")+'</div><div class="fc-bg"/>'+(j?'<div class="fc-resizer fc-end-resizer" />':"")+"</a>"},updateSegVerticals:function(a){this.computeSegVerticals(a),this.assignSegVerticals(a)},computeSegVerticals:function(a){var b,c;for(b=0;b<a.length;b++)c=a[b],c.top=this.computeDateTop(c.start,c.start),c.bottom=this.computeDateTop(c.end,c.start)},assignSegVerticals:function(a){var b,c;for(b=0;b<a.length;b++)c=a[b],c.el.css(this.generateSegVerticalCss(c))},generateSegVerticalCss:function(a){return{top:a.top,bottom:-a.bottom}},updateFgSegCoords:function(a){this.computeSegVerticals(a),this.computeFgSegHorizontals(a),this.assignSegVerticals(a),this.assignFgSegHorizontals(a)},computeFgSegHorizontals:function(a){var b,c,d;if(this.sortEventSegs(a),b=La(a),Ma(b),c=b[0]){for(d=0;d<c.length;d++)Na(c[d]);for(d=0;d<c.length;d++)this.computeFgSegForwardBack(c[d],0,0)}},computeFgSegForwardBack:function(a,b,c){var d,e=a.forwardSegs;if(void 0===a.forwardCoord)for(e.length?(this.sortForwardSegs(e),this.computeFgSegForwardBack(e[0],b+1,c),a.forwardCoord=e[0].backwardCoord):a.forwardCoord=1,a.backwardCoord=a.forwardCoord-(a.forwardCoord-c)/(b+1),d=0;d<e.length;d++)this.computeFgSegForwardBack(e[d],0,a.forwardCoord)},sortForwardSegs:function(a){a.sort(ia(this,"compareForwardSegs"))},compareForwardSegs:function(a,b){return b.forwardPressure-a.forwardPressure||(a.backwardCoord||0)-(b.backwardCoord||0)||this.compareEventSegs(a,b)},assignFgSegHorizontals:function(a){var b,c;for(b=0;b<a.length;b++)c=a[b],c.el.css(this.generateFgSegHorizontalCss(c)),c.bottom-c.top<30&&c.el.addClass("fc-short")},generateFgSegHorizontalCss:function(a){var b,c,d=this.view.opt("slotEventOverlap"),e=a.backwardCoord,f=a.forwardCoord,g=this.generateSegVerticalCss(a);return d&&(f=Math.min(1,e+2*(f-e))),this.isRTL?(b=1-f,c=e):(b=e,c=1-f),g.zIndex=a.level+1,g.left=100*b+"%",g.right=100*c+"%",d&&a.forwardPressure&&(g[this.isRTL?"marginLeft":"marginRight"]=20),g}});var xb=Wa.View=ya.extend(lb,mb,{type:null,name:null,title:null,calendar:null,options:null,el:null,displaying:null,isSkeletonRendered:!1,isEventsRendered:!1,start:null,end:null,intervalStart:null,intervalEnd:null,intervalDuration:null,intervalUnit:null,isRTL:!1,isSelected:!1,selectedEvent:null,eventOrderSpecs:null,widgetHeaderClass:null,widgetContentClass:null,highlightStateClass:null,nextDayThreshold:null,isHiddenDayHash:null,isNowIndicatorRendered:null,initialNowDate:null,initialNowQueriedMs:null,nowIndicatorTimeoutID:null,nowIndicatorIntervalID:null,constructor:function(a,c,d,e){this.calendar=a,this.type=this.name=c,this.options=d,this.intervalDuration=e||b.duration(1,"day"),this.nextDayThreshold=b.duration(this.opt("nextDayThreshold")),this.initThemingProps(),this.initHiddenDays(),this.isRTL=this.opt("isRTL"),this.eventOrderSpecs=G(this.opt("eventOrder")),this.initialize()},initialize:function(){},opt:function(a){return this.options[a]},trigger:function(a,b){var c=this.calendar;return c.trigger.apply(c,[a,b||this].concat(Array.prototype.slice.call(arguments,2),[this]))},setDate:function(a){this.setRange(this.computeRange(a))},setRange:function(b){a.extend(this,b),this.updateTitle()},computeRange:function(a){var b,c,d=O(this.intervalDuration),e=a.clone().startOf(d),f=e.clone().add(this.intervalDuration);return/year|month|week|day/.test(d)?(e.stripTime(),f.stripTime()):(e.hasTime()||(e=this.calendar.time(0)),f.hasTime()||(f=this.calendar.time(0))),b=e.clone(),b=this.skipHiddenDays(b),c=f.clone(),c=this.skipHiddenDays(c,-1,!0),{intervalUnit:d,intervalStart:e,intervalEnd:f,start:b,end:c}},computePrevDate:function(a){return this.massageCurrentDate(a.clone().startOf(this.intervalUnit).subtract(this.intervalDuration),-1)},computeNextDate:function(a){return this.massageCurrentDate(a.clone().startOf(this.intervalUnit).add(this.intervalDuration))},massageCurrentDate:function(a,b){return this.intervalDuration.as("days")<=1&&this.isHiddenDay(a)&&(a=this.skipHiddenDays(a,b),a.startOf("day")),a},updateTitle:function(){this.title=this.computeTitle()},computeTitle:function(){return this.formatRange({start:this.calendar.applyTimezone(this.intervalStart),end:this.calendar.applyTimezone(this.intervalEnd)},this.opt("titleFormat")||this.computeTitleFormat(),this.opt("titleRangeSeparator"))},computeTitleFormat:function(){return"year"==this.intervalUnit?"YYYY":"month"==this.intervalUnit?this.opt("monthYearFormat"):this.intervalDuration.as("days")>1?"ll":"LL"},formatRange:function(a,b,c){var d=a.end;return d.hasTime()||(d=d.clone().subtract(1)),ta(a.start,d,b,c,this.opt("isRTL"))},setElement:function(a){this.el=a,this.bindGlobalHandlers()},removeElement:function(){this.clear(),this.isSkeletonRendered&&(this.unrenderSkeleton(),this.isSkeletonRendered=!1),this.unbindGlobalHandlers(),this.el.remove()},display:function(a,b){var c=this,d=null;return null!=b&&this.displaying&&(d=this.queryScroll()),this.calendar.freezeContentHeight(),ka(this.clear(),function(){return c.displaying=ka(c.displayView(a),function(){null!=b?c.setScroll(b):c.forceScroll(c.computeInitialScroll(d)),c.calendar.unfreezeContentHeight(),c.triggerRender()})})},clear:function(){var b=this,c=this.displaying;return c?ka(c,function(){return b.displaying=null,b.clearEvents(),b.clearView()}):a.when()},displayView:function(a){this.isSkeletonRendered||(this.renderSkeleton(),this.isSkeletonRendered=!0),a&&this.setDate(a),this.render&&this.render(),this.renderDates(),this.updateSize(),this.renderBusinessHours(),this.startNowIndicator()},clearView:function(){this.unselect(),this.stopNowIndicator(),this.triggerUnrender(),this.unrenderBusinessHours(),this.unrenderDates(),this.destroy&&this.destroy()},renderSkeleton:function(){},unrenderSkeleton:function(){},renderDates:function(){},unrenderDates:function(){},triggerRender:function(){this.trigger("viewRender",this,this,this.el)},triggerUnrender:function(){this.trigger("viewDestroy",this,this,this.el)},bindGlobalHandlers:function(){this.listenTo(a(document),"mousedown",this.handleDocumentMousedown),this.listenTo(a(document),"touchstart",this.processUnselect)},unbindGlobalHandlers:function(){this.stopListeningTo(a(document))},initThemingProps:function(){var a=this.opt("theme")?"ui":"fc";this.widgetHeaderClass=a+"-widget-header",this.widgetContentClass=a+"-widget-content",this.highlightStateClass=a+"-state-highlight"},renderBusinessHours:function(){},unrenderBusinessHours:function(){},startNowIndicator:function(){var a,c,d,e=this;this.opt("nowIndicator")&&(a=this.getNowIndicatorUnit(),a&&(c=ia(this,"updateNowIndicator"),this.initialNowDate=this.calendar.getNow(),this.initialNowQueriedMs=+new Date,this.renderNowIndicator(this.initialNowDate),this.isNowIndicatorRendered=!0,d=this.initialNowDate.clone().startOf(a).add(1,a)-this.initialNowDate,this.nowIndicatorTimeoutID=setTimeout(function(){e.nowIndicatorTimeoutID=null,c(),d=+b.duration(1,a),d=Math.max(100,d),e.nowIndicatorIntervalID=setInterval(c,d)},d)))},updateNowIndicator:function(){this.isNowIndicatorRendered&&(this.unrenderNowIndicator(),this.renderNowIndicator(this.initialNowDate.clone().add(new Date-this.initialNowQueriedMs)))},stopNowIndicator:function(){this.isNowIndicatorRendered&&(this.nowIndicatorTimeoutID&&(clearTimeout(this.nowIndicatorTimeoutID),this.nowIndicatorTimeoutID=null),this.nowIndicatorIntervalID&&(clearTimeout(this.nowIndicatorIntervalID),this.nowIndicatorIntervalID=null),this.unrenderNowIndicator(),this.isNowIndicatorRendered=!1)},getNowIndicatorUnit:function(){},renderNowIndicator:function(a){},unrenderNowIndicator:function(){},updateSize:function(a){var b;a&&(b=this.queryScroll()),this.updateHeight(a),this.updateWidth(a),this.updateNowIndicator(),a&&this.setScroll(b)},updateWidth:function(a){},updateHeight:function(a){var b=this.calendar;this.setHeight(b.getSuggestedViewHeight(),b.isHeightAuto())},setHeight:function(a,b){},computeInitialScroll:function(a){return 0},queryScroll:function(){},setScroll:function(a){},forceScroll:function(a){var b=this;this.setScroll(a),setTimeout(function(){b.setScroll(a)},0)},displayEvents:function(a){var b=this.queryScroll();this.clearEvents(),this.renderEvents(a),this.isEventsRendered=!0,this.setScroll(b),this.triggerEventRender()},clearEvents:function(){var a;this.isEventsRendered&&(a=this.queryScroll(),this.triggerEventUnrender(),this.destroyEvents&&this.destroyEvents(),this.unrenderEvents(),this.setScroll(a),this.isEventsRendered=!1)},renderEvents:function(a){},unrenderEvents:function(){},triggerEventRender:function(){this.renderedEventSegEach(function(a){this.trigger("eventAfterRender",a.event,a.event,a.el)}),this.trigger("eventAfterAllRender");
},triggerEventUnrender:function(){this.renderedEventSegEach(function(a){this.trigger("eventDestroy",a.event,a.event,a.el)})},resolveEventEl:function(b,c){var d=this.trigger("eventRender",b,b,c);return d===!1?c=null:d&&d!==!0&&(c=a(d)),c},showEvent:function(a){this.renderedEventSegEach(function(a){a.el.css("visibility","")},a)},hideEvent:function(a){this.renderedEventSegEach(function(a){a.el.css("visibility","hidden")},a)},renderedEventSegEach:function(a,b){var c,d=this.getEventSegs();for(c=0;c<d.length;c++)b&&d[c].event._id!==b._id||d[c].el&&a.call(this,d[c])},getEventSegs:function(){return[]},isEventDraggable:function(a){var b=a.source||{};return ba(a.startEditable,b.startEditable,this.opt("eventStartEditable"),a.editable,b.editable,this.opt("editable"))},reportEventDrop:function(a,b,c,d,e){var f=this.calendar,g=f.mutateEvent(a,b,c),h=function(){g.undo(),f.reportEventChange()};this.triggerEventDrop(a,g.dateDelta,h,d,e),f.reportEventChange()},triggerEventDrop:function(a,b,c,d,e){this.trigger("eventDrop",d[0],a,b,c,e,{})},reportExternalDrop:function(b,c,d,e,f){var g,h,i=b.eventProps;i&&(g=a.extend({},i,c),h=this.calendar.renderEvent(g,b.stick)[0]),this.triggerExternalDrop(h,c,d,e,f)},triggerExternalDrop:function(a,b,c,d,e){this.trigger("drop",c[0],b.start,d,e),a&&this.trigger("eventReceive",null,a)},renderDrag:function(a,b){},unrenderDrag:function(){},isEventResizableFromStart:function(a){return this.opt("eventResizableFromStart")&&this.isEventResizable(a)},isEventResizableFromEnd:function(a){return this.isEventResizable(a)},isEventResizable:function(a){var b=a.source||{};return ba(a.durationEditable,b.durationEditable,this.opt("eventDurationEditable"),a.editable,b.editable,this.opt("editable"))},reportEventResize:function(a,b,c,d,e){var f=this.calendar,g=f.mutateEvent(a,b,c),h=function(){g.undo(),f.reportEventChange()};this.triggerEventResize(a,g.durationDelta,h,d,e),f.reportEventChange()},triggerEventResize:function(a,b,c,d,e){this.trigger("eventResize",d[0],a,b,c,e,{})},select:function(a,b){this.unselect(b),this.renderSelection(a),this.reportSelection(a,b)},renderSelection:function(a){},reportSelection:function(a,b){this.isSelected=!0,this.triggerSelect(a,b)},triggerSelect:function(a,b){this.trigger("select",null,this.calendar.applyTimezone(a.start),this.calendar.applyTimezone(a.end),b)},unselect:function(a){this.isSelected&&(this.isSelected=!1,this.destroySelection&&this.destroySelection(),this.unrenderSelection(),this.trigger("unselect",null,a))},unrenderSelection:function(){},selectEvent:function(a){this.selectedEvent&&this.selectedEvent===a||(this.unselectEvent(),this.renderedEventSegEach(function(a){a.el.addClass("fc-selected")},a),this.selectedEvent=a)},unselectEvent:function(){this.selectedEvent&&(this.renderedEventSegEach(function(a){a.el.removeClass("fc-selected")},this.selectedEvent),this.selectedEvent=null)},isEventSelected:function(a){return this.selectedEvent&&this.selectedEvent._id===a._id},handleDocumentMousedown:function(a){u(a)&&this.processUnselect(a)},processUnselect:function(a){this.processRangeUnselect(a),this.processEventUnselect(a)},processRangeUnselect:function(b){var c;this.isSelected&&this.opt("unselectAuto")&&(c=this.opt("unselectCancel"),c&&a(b.target).closest(c).length||this.unselect(b))},processEventUnselect:function(b){this.selectedEvent&&(a(b.target).closest(".fc-selected").length||this.unselectEvent())},triggerDayClick:function(a,b,c){this.trigger("dayClick",b,this.calendar.applyTimezone(a.start),c)},initHiddenDays:function(){var b,c=this.opt("hiddenDays")||[],d=[],e=0;for(this.opt("weekends")===!1&&c.push(0,6),b=0;7>b;b++)(d[b]=-1!==a.inArray(b,c))||e++;if(!e)throw"invalid hiddenDays";this.isHiddenDayHash=d},isHiddenDay:function(a){return b.isMoment(a)&&(a=a.day()),this.isHiddenDayHash[a]},skipHiddenDays:function(a,b,c){var d=a.clone();for(b=b||1;this.isHiddenDayHash[(d.day()+(c?b:0)+7)%7];)d.add(b,"days");return d},computeDayRange:function(a){var b,c=a.start.clone().stripTime(),d=a.end,e=null;return d&&(e=d.clone().stripTime(),b=+d.time(),b&&b>=this.nextDayThreshold&&e.add(1,"days")),(!d||c>=e)&&(e=c.clone().add(1,"days")),{start:c,end:e}},isMultiDayEvent:function(a){var b=this.computeDayRange(a);return b.end.diff(b.start,"days")>1}}),yb=Wa.Scroller=ya.extend({el:null,scrollEl:null,overflowX:null,overflowY:null,constructor:function(a){a=a||{},this.overflowX=a.overflowX||a.overflow||"auto",this.overflowY=a.overflowY||a.overflow||"auto"},render:function(){this.el=this.renderEl(),this.applyOverflow()},renderEl:function(){return this.scrollEl=a('<div class="fc-scroller"></div>')},clear:function(){this.setHeight("auto"),this.applyOverflow()},destroy:function(){this.el.remove()},applyOverflow:function(){this.scrollEl.css({"overflow-x":this.overflowX,"overflow-y":this.overflowY})},lockOverflow:function(a){var b=this.overflowX,c=this.overflowY;a=a||this.getScrollbarWidths(),"auto"===b&&(b=a.top||a.bottom||this.scrollEl[0].scrollWidth-1>this.scrollEl[0].clientWidth?"scroll":"hidden"),"auto"===c&&(c=a.left||a.right||this.scrollEl[0].scrollHeight-1>this.scrollEl[0].clientHeight?"scroll":"hidden"),this.scrollEl.css({"overflow-x":b,"overflow-y":c})},setHeight:function(a){this.scrollEl.height(a)},getScrollTop:function(){return this.scrollEl.scrollTop()},setScrollTop:function(a){this.scrollEl.scrollTop(a)},getClientWidth:function(){return this.scrollEl[0].clientWidth},getClientHeight:function(){return this.scrollEl[0].clientHeight},getScrollbarWidths:function(){return q(this.scrollEl)}}),zb=Wa.Calendar=ya.extend({dirDefaults:null,langDefaults:null,overrides:null,dynamicOverrides:null,options:null,viewSpecCache:null,view:null,header:null,loadingLevel:0,constructor:Qa,initialize:function(){},populateOptionsHash:function(){var a,b,d,e;a=ba(this.dynamicOverrides.lang,this.overrides.lang),b=Ab[a],b||(a=zb.defaults.lang,b=Ab[a]||{}),d=ba(this.dynamicOverrides.isRTL,this.overrides.isRTL,b.isRTL,zb.defaults.isRTL),e=d?zb.rtlDefaults:{},this.dirDefaults=e,this.langDefaults=b,this.options=c([zb.defaults,e,b,this.overrides,this.dynamicOverrides]),Ra(this.options)},getViewSpec:function(a){var b=this.viewSpecCache;return b[a]||(b[a]=this.buildViewSpec(a))},getUnitViewSpec:function(b){var c,d,e;if(-1!=a.inArray(b,_a))for(c=this.header.getViewsWithButtons(),a.each(Wa.views,function(a){c.push(a)}),d=0;d<c.length;d++)if(e=this.getViewSpec(c[d]),e&&e.singleUnit==b)return e},buildViewSpec:function(a){for(var d,e,f,g,h=this.overrides.views||{},i=[],j=[],k=[],l=a;l;)d=Xa[l],e=h[l],l=null,"function"==typeof d&&(d={"class":d}),d&&(i.unshift(d),j.unshift(d.defaults||{}),f=f||d.duration,l=l||d.type),e&&(k.unshift(e),f=f||e.duration,l=l||e.type);return d=W(i),d.type=a,d["class"]?(f&&(f=b.duration(f),f.valueOf()&&(d.duration=f,g=O(f),1===f.as(g)&&(d.singleUnit=g,k.unshift(h[g]||{})))),d.defaults=c(j),d.overrides=c(k),this.buildViewSpecOptions(d),this.buildViewSpecButtonText(d,a),d):!1},buildViewSpecOptions:function(a){a.options=c([zb.defaults,a.defaults,this.dirDefaults,this.langDefaults,this.overrides,a.overrides,this.dynamicOverrides]),Ra(a.options)},buildViewSpecButtonText:function(a,b){function c(c){var d=c.buttonText||{};return d[b]||(a.singleUnit?d[a.singleUnit]:null)}a.buttonTextOverride=c(this.dynamicOverrides)||c(this.overrides)||a.overrides.buttonText,a.buttonTextDefault=c(this.langDefaults)||c(this.dirDefaults)||a.defaults.buttonText||c(zb.defaults)||(a.duration?this.humanizeDuration(a.duration):null)||b},instantiateView:function(a){var b=this.getViewSpec(a);return new b["class"](this,a,b.options,b.duration)},isValidViewType:function(a){return Boolean(this.getViewSpec(a))},pushLoading:function(){this.loadingLevel++||this.trigger("loading",null,!0,this.view)},popLoading:function(){--this.loadingLevel||this.trigger("loading",null,!1,this.view)},buildSelectSpan:function(a,b){var c,d=this.moment(a).stripZone();return c=b?this.moment(b).stripZone():d.hasTime()?d.clone().add(this.defaultTimedEventDuration):d.clone().add(this.defaultAllDayEventDuration),{start:d,end:c}}});zb.mixin(lb),zb.mixin({optionHandlers:null,bindOption:function(a,b){this.bindOptions([a],b)},bindOptions:function(a,b){var c,d={func:b,names:a};for(c=0;c<a.length;c++)this.registerOptionHandlerObj(a[c],d);this.triggerOptionHandlerObj(d)},registerOptionHandlerObj:function(a,b){(this.optionHandlers[a]||(this.optionHandlers[a]=[])).push(b)},triggerOptionHandlers:function(a){var b,c=this.optionHandlers[a]||[];for(b=0;b<c.length;b++)this.triggerOptionHandlerObj(c[b])},triggerOptionHandlerObj:function(a){var b,c=a.names,d=[];for(b=0;b<c.length;b++)d.push(this.options[c[b]]);a.func.apply(this,d)}}),zb.defaults={titleRangeSeparator:" – ",monthYearFormat:"MMMM YYYY",defaultTimedEventDuration:"02:00:00",defaultAllDayEventDuration:{days:1},forceEventDuration:!1,nextDayThreshold:"09:00:00",defaultView:"month",aspectRatio:1.35,header:{left:"title",center:"",right:"today prev,next"},weekends:!0,weekNumbers:!1,weekNumberTitle:"W",weekNumberCalculation:"local",scrollTime:"06:00:00",lazyFetching:!0,startParam:"start",endParam:"end",timezoneParam:"timezone",timezone:!1,isRTL:!1,buttonText:{prev:"prev",next:"next",prevYear:"prev year",nextYear:"next year",year:"year",today:"today",month:"month",week:"week",day:"day"},buttonIcons:{prev:"left-single-arrow",next:"right-single-arrow",prevYear:"left-double-arrow",nextYear:"right-double-arrow"},theme:!1,themeButtonIcons:{prev:"circle-triangle-w",next:"circle-triangle-e",prevYear:"seek-prev",nextYear:"seek-next"},dragOpacity:.75,dragRevertDuration:500,dragScroll:!0,unselectAuto:!0,dropAccept:"*",eventOrder:"title",eventLimit:!1,eventLimitText:"more",eventLimitClick:"popover",dayPopoverFormat:"LL",handleWindowResize:!0,windowResizeDelay:100,longPressDelay:1e3},zb.englishDefaults={dayPopoverFormat:"dddd, MMMM D"},zb.rtlDefaults={header:{left:"next,prev today",center:"",right:"title"},buttonIcons:{prev:"right-single-arrow",next:"left-single-arrow",prevYear:"right-double-arrow",nextYear:"left-double-arrow"},themeButtonIcons:{prev:"circle-triangle-e",next:"circle-triangle-w",nextYear:"seek-prev",prevYear:"seek-next"}};var Ab=Wa.langs={};Wa.datepickerLang=function(b,c,d){var e=Ab[b]||(Ab[b]={});e.isRTL=d.isRTL,e.weekNumberTitle=d.weekHeader,a.each(Bb,function(a,b){e[a]=b(d)}),a.datepicker&&(a.datepicker.regional[c]=a.datepicker.regional[b]=d,a.datepicker.regional.en=a.datepicker.regional[""],a.datepicker.setDefaults(d))},Wa.lang=function(b,d){var e,f;e=Ab[b]||(Ab[b]={}),d&&(e=Ab[b]=c([e,d])),f=Sa(b),a.each(Cb,function(a,b){null==e[a]&&(e[a]=b(f,e))}),zb.defaults.lang=b};var Bb={buttonText:function(a){return{prev:da(a.prevText),next:da(a.nextText),today:da(a.currentText)}},monthYearFormat:function(a){return a.showMonthAfterYear?"YYYY["+a.yearSuffix+"] MMMM":"MMMM YYYY["+a.yearSuffix+"]"}},Cb={dayOfMonthFormat:function(a,b){var c=a.longDateFormat("l");return c=c.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g,""),b.isRTL?c+=" ddd":c="ddd "+c,c},mediumTimeFormat:function(a){return a.longDateFormat("LT").replace(/\s*a$/i,"a")},smallTimeFormat:function(a){return a.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"a")},extraSmallTimeFormat:function(a){return a.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"t")},hourFormat:function(a){return a.longDateFormat("LT").replace(":mm","").replace(/(\Wmm)$/,"").replace(/\s*a$/i,"a")},noMeridiemTimeFormat:function(a){return a.longDateFormat("LT").replace(/\s*a$/i,"")}},Db={smallDayDateFormat:function(a){return a.isRTL?"D dd":"dd D"},weekFormat:function(a){return a.isRTL?"w[ "+a.weekNumberTitle+"]":"["+a.weekNumberTitle+" ]w"},smallWeekFormat:function(a){return a.isRTL?"w["+a.weekNumberTitle+"]":"["+a.weekNumberTitle+"]w"}};Wa.lang("en",zb.englishDefaults),Wa.sourceNormalizers=[],Wa.sourceFetchers=[];var Eb={dataType:"json",cache:!1},Fb=1;zb.prototype.normalizeEvent=function(a){},zb.prototype.spanContainsSpan=function(a,b){var c=a.start.clone().stripZone(),d=this.getEventEnd(a).stripZone();return b.start>=c&&b.end<=d},zb.prototype.getPeerEvents=function(a,b){var c,d,e=this.getEventCache(),f=[];for(c=0;c<e.length;c++)d=e[c],b&&b._id===d._id||f.push(d);return f};var Gb={id:"_fcBusinessHours",start:"09:00",end:"17:00",dow:[1,2,3,4,5],rendering:"inverse-background"};zb.prototype.getCurrentBusinessHourEvents=function(a){return this.computeBusinessHourEvents(a,this.options.businessHours)},zb.prototype.computeBusinessHourEvents=function(b,c){return c===!0?this.expandBusinessHourEvents(b,[{}]):a.isPlainObject(c)?this.expandBusinessHourEvents(b,[c]):a.isArray(c)?this.expandBusinessHourEvents(b,c,!0):[]},zb.prototype.expandBusinessHourEvents=function(b,c,d){var e,f,g=this.getView(),h=[];for(e=0;e<c.length;e++)f=c[e],d&&!f.dow||(f=a.extend({},Gb,f),b&&(f.start=null,f.end=null),h.push.apply(h,this.expandEvent(this.buildEventFromInput(f),g.start,g.end)));return h};var Hb=Wa.BasicView=xb.extend({scroller:null,dayGridClass:vb,dayGrid:null,dayNumbersVisible:!1,weekNumbersVisible:!1,weekNumberWidth:null,headContainerEl:null,headRowEl:null,initialize:function(){this.dayGrid=this.instantiateDayGrid(),this.scroller=new yb({overflowX:"hidden",overflowY:"auto"})},instantiateDayGrid:function(){var a=this.dayGridClass.extend(Ib);return new a(this)},setRange:function(a){xb.prototype.setRange.call(this,a),this.dayGrid.breakOnWeeks=/year|month|week/.test(this.intervalUnit),this.dayGrid.setRange(a)},computeRange:function(a){var b=xb.prototype.computeRange.call(this,a);return/year|month/.test(b.intervalUnit)&&(b.start.startOf("week"),b.start=this.skipHiddenDays(b.start),b.end.weekday()&&(b.end.add(1,"week").startOf("week"),b.end=this.skipHiddenDays(b.end,-1,!0))),b},renderDates:function(){this.dayNumbersVisible=this.dayGrid.rowCnt>1,this.weekNumbersVisible=this.opt("weekNumbers"),this.dayGrid.numbersVisible=this.dayNumbersVisible||this.weekNumbersVisible,this.el.addClass("fc-basic-view").html(this.renderSkeletonHtml()),this.renderHead(),this.scroller.render();var b=this.scroller.el.addClass("fc-day-grid-container"),c=a('<div class="fc-day-grid" />').appendTo(b);this.el.find(".fc-body > tr > td").append(b),this.dayGrid.setElement(c),this.dayGrid.renderDates(this.hasRigidRows())},renderHead:function(){this.headContainerEl=this.el.find(".fc-head-container").html(this.dayGrid.renderHeadHtml()),this.headRowEl=this.headContainerEl.find(".fc-row")},unrenderDates:function(){this.dayGrid.unrenderDates(),this.dayGrid.removeElement(),this.scroller.destroy()},renderBusinessHours:function(){this.dayGrid.renderBusinessHours()},unrenderBusinessHours:function(){this.dayGrid.unrenderBusinessHours()},renderSkeletonHtml:function(){return'<table><thead class="fc-head"><tr><td class="fc-head-container '+this.widgetHeaderClass+'"></td></tr></thead><tbody class="fc-body"><tr><td class="'+this.widgetContentClass+'"></td></tr></tbody></table>'},weekNumberStyleAttr:function(){return null!==this.weekNumberWidth?'style="width:'+this.weekNumberWidth+'px"':""},hasRigidRows:function(){var a=this.opt("eventLimit");return a&&"number"!=typeof a},updateWidth:function(){this.weekNumbersVisible&&(this.weekNumberWidth=k(this.el.find(".fc-week-number")))},setHeight:function(a,b){var c,d,g=this.opt("eventLimit");this.scroller.clear(),f(this.headRowEl),this.dayGrid.removeSegPopover(),g&&"number"==typeof g&&this.dayGrid.limitRows(g),c=this.computeScrollerHeight(a),this.setGridHeight(c,b),g&&"number"!=typeof g&&this.dayGrid.limitRows(g),b||(this.scroller.setHeight(c),d=this.scroller.getScrollbarWidths(),(d.left||d.right)&&(e(this.headRowEl,d),c=this.computeScrollerHeight(a),this.scroller.setHeight(c)),this.scroller.lockOverflow(d))},computeScrollerHeight:function(a){return a-l(this.el,this.scroller.el)},setGridHeight:function(a,b){b?j(this.dayGrid.rowEls):i(this.dayGrid.rowEls,a,!0)},queryScroll:function(){return this.scroller.getScrollTop()},setScroll:function(a){this.scroller.setScrollTop(a)},prepareHits:function(){this.dayGrid.prepareHits()},releaseHits:function(){this.dayGrid.releaseHits()},queryHit:function(a,b){return this.dayGrid.queryHit(a,b)},getHitSpan:function(a){return this.dayGrid.getHitSpan(a)},getHitEl:function(a){return this.dayGrid.getHitEl(a)},renderEvents:function(a){this.dayGrid.renderEvents(a),this.updateHeight()},getEventSegs:function(){return this.dayGrid.getEventSegs()},unrenderEvents:function(){this.dayGrid.unrenderEvents()},renderDrag:function(a,b){return this.dayGrid.renderDrag(a,b)},unrenderDrag:function(){this.dayGrid.unrenderDrag()},renderSelection:function(a){this.dayGrid.renderSelection(a)},unrenderSelection:function(){this.dayGrid.unrenderSelection()}}),Ib={renderHeadIntroHtml:function(){var a=this.view;return a.weekNumbersVisible?'<th class="fc-week-number '+a.widgetHeaderClass+'" '+a.weekNumberStyleAttr()+"><span>"+ca(a.opt("weekNumberTitle"))+"</span></th>":""},renderNumberIntroHtml:function(a){var b=this.view;return b.weekNumbersVisible?'<td class="fc-week-number" '+b.weekNumberStyleAttr()+"><span>"+this.getCellDate(a,0).format("w")+"</span></td>":""},renderBgIntroHtml:function(){var a=this.view;return a.weekNumbersVisible?'<td class="fc-week-number '+a.widgetContentClass+'" '+a.weekNumberStyleAttr()+"></td>":""},renderIntroHtml:function(){var a=this.view;return a.weekNumbersVisible?'<td class="fc-week-number" '+a.weekNumberStyleAttr()+"></td>":""}},Jb=Wa.MonthView=Hb.extend({computeRange:function(a){var b,c=Hb.prototype.computeRange.call(this,a);return this.isFixedWeeks()&&(b=Math.ceil(c.end.diff(c.start,"weeks",!0)),c.end.add(6-b,"weeks")),c},setGridHeight:function(a,b){b=b||"variable"===this.opt("weekMode"),b&&(a*=this.rowCnt/6),i(this.dayGrid.rowEls,a,!b)},isFixedWeeks:function(){var a=this.opt("weekMode");return a?"fixed"===a:this.opt("fixedWeekCount")}});Xa.basic={"class":Hb},Xa.basicDay={type:"basic",duration:{days:1}},Xa.basicWeek={type:"basic",duration:{weeks:1}},Xa.month={"class":Jb,duration:{months:1},defaults:{fixedWeekCount:!0}};var Kb=Wa.AgendaView=xb.extend({scroller:null,timeGridClass:wb,timeGrid:null,dayGridClass:vb,dayGrid:null,axisWidth:null,headContainerEl:null,noScrollRowEls:null,bottomRuleEl:null,initialize:function(){this.timeGrid=this.instantiateTimeGrid(),this.opt("allDaySlot")&&(this.dayGrid=this.instantiateDayGrid()),this.scroller=new yb({overflowX:"hidden",overflowY:"auto"})},instantiateTimeGrid:function(){var a=this.timeGridClass.extend(Lb);return new a(this)},instantiateDayGrid:function(){var a=this.dayGridClass.extend(Mb);return new a(this)},setRange:function(a){xb.prototype.setRange.call(this,a),this.timeGrid.setRange(a),this.dayGrid&&this.dayGrid.setRange(a)},renderDates:function(){this.el.addClass("fc-agenda-view").html(this.renderSkeletonHtml()),this.renderHead(),this.scroller.render();var b=this.scroller.el.addClass("fc-time-grid-container"),c=a('<div class="fc-time-grid" />').appendTo(b);this.el.find(".fc-body > tr > td").append(b),this.timeGrid.setElement(c),this.timeGrid.renderDates(),this.bottomRuleEl=a('<hr class="fc-divider '+this.widgetHeaderClass+'"/>').appendTo(this.timeGrid.el),this.dayGrid&&(this.dayGrid.setElement(this.el.find(".fc-day-grid")),this.dayGrid.renderDates(),this.dayGrid.bottomCoordPadding=this.dayGrid.el.next("hr").outerHeight()),this.noScrollRowEls=this.el.find(".fc-row:not(.fc-scroller *)")},renderHead:function(){this.headContainerEl=this.el.find(".fc-head-container").html(this.timeGrid.renderHeadHtml())},unrenderDates:function(){this.timeGrid.unrenderDates(),this.timeGrid.removeElement(),this.dayGrid&&(this.dayGrid.unrenderDates(),this.dayGrid.removeElement()),this.scroller.destroy()},renderSkeletonHtml:function(){return'<table><thead class="fc-head"><tr><td class="fc-head-container '+this.widgetHeaderClass+'"></td></tr></thead><tbody class="fc-body"><tr><td class="'+this.widgetContentClass+'">'+(this.dayGrid?'<div class="fc-day-grid"/><hr class="fc-divider '+this.widgetHeaderClass+'"/>':"")+"</td></tr></tbody></table>"},axisStyleAttr:function(){return null!==this.axisWidth?'style="width:'+this.axisWidth+'px"':""},renderBusinessHours:function(){this.timeGrid.renderBusinessHours(),this.dayGrid&&this.dayGrid.renderBusinessHours()},unrenderBusinessHours:function(){this.timeGrid.unrenderBusinessHours(),this.dayGrid&&this.dayGrid.unrenderBusinessHours()},getNowIndicatorUnit:function(){return this.timeGrid.getNowIndicatorUnit()},renderNowIndicator:function(a){this.timeGrid.renderNowIndicator(a)},unrenderNowIndicator:function(){this.timeGrid.unrenderNowIndicator()},updateSize:function(a){this.timeGrid.updateSize(a),xb.prototype.updateSize.call(this,a)},updateWidth:function(){this.axisWidth=k(this.el.find(".fc-axis"))},setHeight:function(a,b){var c,d,g;this.bottomRuleEl.hide(),this.scroller.clear(),f(this.noScrollRowEls),this.dayGrid&&(this.dayGrid.removeSegPopover(),c=this.opt("eventLimit"),c&&"number"!=typeof c&&(c=Nb),c&&this.dayGrid.limitRows(c)),b||(d=this.computeScrollerHeight(a),this.scroller.setHeight(d),g=this.scroller.getScrollbarWidths(),(g.left||g.right)&&(e(this.noScrollRowEls,g),d=this.computeScrollerHeight(a),this.scroller.setHeight(d)),this.scroller.lockOverflow(g),this.timeGrid.getTotalSlatHeight()<d&&this.bottomRuleEl.show())},computeScrollerHeight:function(a){return a-l(this.el,this.scroller.el)},computeInitialScroll:function(){var a=b.duration(this.opt("scrollTime")),c=this.timeGrid.computeTimeTop(a);return c=Math.ceil(c),c&&c++,c},queryScroll:function(){return this.scroller.getScrollTop()},setScroll:function(a){this.scroller.setScrollTop(a)},prepareHits:function(){this.timeGrid.prepareHits(),this.dayGrid&&this.dayGrid.prepareHits()},releaseHits:function(){this.timeGrid.releaseHits(),this.dayGrid&&this.dayGrid.releaseHits()},queryHit:function(a,b){var c=this.timeGrid.queryHit(a,b);return!c&&this.dayGrid&&(c=this.dayGrid.queryHit(a,b)),c},getHitSpan:function(a){return a.component.getHitSpan(a)},getHitEl:function(a){return a.component.getHitEl(a)},renderEvents:function(a){var b,c,d=[],e=[],f=[];for(c=0;c<a.length;c++)a[c].allDay?d.push(a[c]):e.push(a[c]);b=this.timeGrid.renderEvents(e),this.dayGrid&&(f=this.dayGrid.renderEvents(d)),this.updateHeight()},getEventSegs:function(){return this.timeGrid.getEventSegs().concat(this.dayGrid?this.dayGrid.getEventSegs():[])},unrenderEvents:function(){this.timeGrid.unrenderEvents(),this.dayGrid&&this.dayGrid.unrenderEvents()},renderDrag:function(a,b){return a.start.hasTime()?this.timeGrid.renderDrag(a,b):this.dayGrid?this.dayGrid.renderDrag(a,b):void 0},unrenderDrag:function(){this.timeGrid.unrenderDrag(),this.dayGrid&&this.dayGrid.unrenderDrag()},renderSelection:function(a){a.start.hasTime()||a.end.hasTime()?this.timeGrid.renderSelection(a):this.dayGrid&&this.dayGrid.renderSelection(a)},unrenderSelection:function(){this.timeGrid.unrenderSelection(),this.dayGrid&&this.dayGrid.unrenderSelection()}}),Lb={renderHeadIntroHtml:function(){var a,b=this.view;return b.opt("weekNumbers")?(a=this.start.format(b.opt("smallWeekFormat")),'<th class="fc-axis fc-week-number '+b.widgetHeaderClass+'" '+b.axisStyleAttr()+"><span>"+ca(a)+"</span></th>"):'<th class="fc-axis '+b.widgetHeaderClass+'" '+b.axisStyleAttr()+"></th>"},renderBgIntroHtml:function(){var a=this.view;return'<td class="fc-axis '+a.widgetContentClass+'" '+a.axisStyleAttr()+"></td>"},renderIntroHtml:function(){var a=this.view;return'<td class="fc-axis" '+a.axisStyleAttr()+"></td>"}},Mb={renderBgIntroHtml:function(){var a=this.view;return'<td class="fc-axis '+a.widgetContentClass+'" '+a.axisStyleAttr()+"><span>"+(a.opt("allDayHtml")||ca(a.opt("allDayText")))+"</span></td>"},renderIntroHtml:function(){var a=this.view;return'<td class="fc-axis" '+a.axisStyleAttr()+"></td>"}},Nb=5,Ob=[{hours:1},{minutes:30},{minutes:15},{seconds:30},{seconds:15}];return Xa.agenda={"class":Kb,defaults:{allDaySlot:!0,allDayText:"all-day",slotDuration:"00:30:00",minTime:"00:00:00",maxTime:"24:00:00",slotEventOverlap:!0}},Xa.agendaDay={type:"agenda",duration:{days:1}},Xa.agendaWeek={type:"agenda",duration:{weeks:1}},Wa});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/framework/fullcalendar/vendor/lang/de.js";
!function(a){"function"==typeof define&&define.amd?define(["jquery","moment"],a):"object"==typeof exports?module.exports=a(require("jquery"),require("moment")):a(jQuery,moment)}(function(a,b){!function(){"use strict";function a(a,b,c,d){var e={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[a+" Tage",a+" Tagen"],M:["ein Monat","einem Monat"],MM:[a+" Monate",a+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[a+" Jahre",a+" Jahren"]};return b?e[c][0]:e[c][1]}var c=(b.defineLocale||b.lang).call(b,"de",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",m:a,mm:"%d Minuten",h:a,hh:"%d Stunden",d:a,dd:a,M:a,MM:a,y:a,yy:a},ordinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}});return c}(),a.fullCalendar.datepickerLang("de","de",{closeText:"Schließen",prevText:"&#x3C;Zurück",nextText:"Vor&#x3E;",currentText:"Heute",monthNames:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],monthNamesShort:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],dayNames:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],dayNamesShort:["So","Mo","Di","Mi","Do","Fr","Sa"],dayNamesMin:["So","Mo","Di","Mi","Do","Fr","Sa"],weekHeader:"KW",dateFormat:"dd.mm.yy",firstDay:1,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""}),a.fullCalendar.lang("de",{buttonText:{month:"Monat",week:"Woche",day:"Tag",list:"Terminübersicht"},allDayText:"Ganztägig",eventLimitText:function(a){return"+ weitere "+a}})});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/integration/base/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/integration/base/js/jquery.visible.js";
(function($){
var $w=$(window);
$.fn.visible=function(partial,hidden,direction){
if(this.length<1)
return;
var $t=this.length>1?this.eq(0):this,
t=$t.get(0),
vpWidth=$w.width(),
vpHeight=$w.height(),
direction=(direction)?direction:'both',
clientSize=hidden===true?t.offsetWidth*t.offsetHeight:true;
if(typeof t.getBoundingClientRect==='function'){
var rec=t.getBoundingClientRect(),
tViz=rec.top>=0&&rec.top<vpHeight,
bViz=rec.bottom>0&&rec.bottom<=vpHeight,
lViz=rec.left>=0&&rec.left<vpWidth,
rViz=rec.right>0&&rec.right<=vpWidth,
vVisible=partial?tViz||bViz:tViz&&bViz,
hVisible=partial?lViz||rViz:lViz&&rViz;
if(direction==='both')
return clientSize&&vVisible&&hVisible;
else if(direction==='vertical')
return clientSize&&vVisible;
else if(direction==='horizontal')
return clientSize&&hVisible;
}else{
var viewTop=$w.scrollTop(),
viewBottom=viewTop+vpHeight,
viewLeft=$w.scrollLeft(),
viewRight=viewLeft+vpWidth,
offset=$t.offset(),
_top=offset.top,
_bottom=_top+$t.height(),
_left=offset.left,
_right=_left+$t.width(),
compareTop=partial===true?_bottom:_top,
compareBottom=partial===true?_top:_bottom,
compareLeft=partial===true?_right:_left,
compareRight=partial===true?_left:_right;
if(direction==='both')
return!!clientSize&&((compareBottom<=viewBottom)&&(compareTop>=viewTop))&&((compareRight<=viewRight)&&(compareLeft>=viewLeft));
else if(direction==='vertical')
return!!clientSize&&((compareBottom<=viewBottom)&&(compareTop>=viewTop));
else if(direction==='horizontal')
return!!clientSize&&((compareRight<=viewRight)&&(compareLeft>=viewLeft));
}
};
})(jQuery);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/lib/structuredData/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/lib/structuredData/js/structuredDataApp.js";
var STRUCTUREDDATA;
(function(STRUCTUREDDATA){
STRUCTUREDDATA.angularModule=angular.module('structuredDataApp',[]);
STRUCTUREDDATA.angularModule.directive('sdResultPage',function(){
return{
restrict:'A',
scope:true,
link:function($scope,element,attrs){
$scope.pageCount=1;
$scope.page=attrs.sdResultPage;
$scope.elementId='#'+attrs.id;
var doLoad=function(){
var visible=$($scope.elementId).children().last().visible(true);
if(!visible||$scope.loading||!$scope.page||$scope.page.indexOf('offset')==-1){
return;
}
var sdResultPage=$($scope.elementId).data('sd-result-page');
if(!sdResultPage){
return;
}
$scope.pageCount=$scope.pageCount+1;
$scope.loading=true;
$($scope.elementId).siblings('.loading').show();
var jqxhr=$.ajax($scope.page)
.done(function(data,textStatus,jqXHR){
var newContainer=$(data);
var newElements=newContainer.children();
$($scope.elementId).append(newElements);
if(newElements.length>0){
$scope.page=newContainer.data('sd-result-page');
if($scope.pageCount>2){
$($scope.elementId).siblings('.more-results').css('display','block');
}
$('body').trigger("sdResultPage.load");
}
else{
$($scope.elementId).siblings('.nomore-results').show();
}
})
.fail(function(jqXHR,textStatus,errorThrown){
console.log(jqXHR.status+' '+textStatus);
if(jqXHR.status>=400){
$scope.page='';
$($scope.elementId).siblings('.nomore-results').show();
}
})
.always(function(){
$scope.loading=false;
$($scope.elementId).siblings('.loading').hide();
});
};
$(window).on('scroll',function(){
var scrollTop=$(window).scrollTop();
if(scrollTop>$scope.lastScrollTop){
if($scope.pageCount<3){
doLoad();
}
}
$scope.lastScrollTop=scrollTop;
});
$($scope.elementId).siblings('.more-results').on('click',function(event,tab){
$(this).hide();
doLoad();
});
}
};
});
STRUCTUREDDATA.angularModule.directive('sdIndexPage',function(){
return{
restrict:'A',
scope:true,
link:function($scope,element,attrs){
$scope.page=attrs.sdIndexPage;
var doLoad=function(){
if($scope.loading||!$scope.page){
return;
}
$scope.loading=true;
var id='#'+element.parent().attr('id')+'-'+$scope.page.substring($scope.page.indexOf('&index=')+7);
$(id).children('.loading').show();
var jqxhr=$.ajax($scope.page)
.done(function(data,textStatus,jqXHR){
var newContainer=$(data);
var newElements=newContainer.children();
$(id).prepend(newElements);
$('body').trigger("sdIndexPage.load");
})
.fail(function(jqXHR,textStatus,errorThrown){
console.log(jqXHR.status+' '+textStatus);
})
.always(function(){
$(id).children('.loading').remove();
});
};
element.on('click',function(event,tab){
doLoad();
});
}
};
});
STRUCTUREDDATA.angularModule.directive('sdSearchPage',function(){
return{
restrict:'A',
scope:true,
link:function($scope,element,attrs){
var filterElement=element.parent().find('select[name=filterId]');
var queryElement=element.parent().find('input[name=query]');
var doLoad=function(){
var filterId=filterElement&&filterElement.val()!==undefined?filterElement.val():'';
var query=queryElement.val();
var url=attrs.sdSearchPage.replace('\{filterId\}',filterId).replace('\{query\}',query);
if($scope.loading||$scope.page==url){
return;
}
$scope.loading=true;
$scope.page=url;
element.parent().children('.loading').css('display','inline-block');
var jqxhr=$.ajax($scope.page)
.done(function(data,textStatus,jqXHR){
var newContainer=$(data);
var newElements=newContainer.children();
if(newElements.length>0){
element.parent().siblings('.no-results').hide();
element.parent().next().replaceWith($(data));
$('body').trigger("sdSearchPage.load");
}
else{
element.parent().next().empty();
element.parent().siblings('.no-results').show();
}
})
.fail(function(jqXHR,textStatus,errorThrown){
if(jqXHR.status>=400){
element.parent().next().empty();
element.parent().siblings('.no-results').show();
}
console.log(jqXHR.status+' '+textStatus);
})
.always(function(){
$scope.loading=false;
element.parent().children('.loading').hide();
});
};
queryElement.on('keyup',function(event,tab){
var keyCode=event.which||event.keyCode;
setTimeout(function(){doLoad();},keyCode==13?0:500);
});
filterElement.on('change',function(event,tab){
doLoad();
});
}
};
});
})(STRUCTUREDDATA||(STRUCTUREDDATA={}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/lib/structuredData/js/_placesMap.js";
var googleMapsApiKey="AIzaSyBl65aADImMBZRsNbJmZiibP3oc8115PC0";
(function(){
var ionas=parent.ionas;
var console=window.console||{
log:function(){
}
};
var geocoder;
function createGeocoder(){
return new Promise(function(resolve,reject){
if(geocoder){
resolve(geocoder);
}else if(google&&google.maps&&google.maps.Geocoder){
geocoder=new google.maps.Geocoder();
resolve(geocoder);
}else{
Pegasus.GoogleMapsApi.require().then(function(){
geocoder=new google.maps.Geocoder();
resolve(geocoder);
});
}
});
}
function getAddressCoordinates(address){
return new Promise(function(resolve,reject){
createGeocoder().then(function(geocoder){
geocoder.geocode({address:address},function(results,status){
resolve({
status:status,
results:results
});
});
});
});
}
function initializeMap(selector){
var elements=$(selector);
if(elements.size()){
Pegasus.GoogleMapsApi.require().then(function(){
elements.each(function(){
var $mapDiv=$(this);
var $context=$mapDiv.closest('.placeEditor');
var dataUrl=$mapDiv.data('url');
var dataAddress=$mapDiv.data('address');
var dataLatitude=$mapDiv.data('latitude');
var dataLongitude=$mapDiv.data('longitude');
var tabindex=$mapDiv.attr('tabindex');
var google=window.google;
var greyscale=[
{
featureType:"landscape",
stylers:[{saturation:-100},{lightness:65},{visibility:"on"}]
},
{
featureType:"poi",
stylers:[{saturation:-100},{lightness:51},{visibility:"simplified"}]
},
{featureType:"road.highway",stylers:[{saturation:-100},{visibility:"simplified"}]},
{
featureType:"road.arterial",
stylers:[{saturation:-100},{lightness:30},{visibility:"on"}]
},
{
featureType:"road.local",
stylers:[{saturation:-100},{lightness:40},{visibility:"on"}]
},
{featureType:"transit",stylers:[{saturation:-100},{visibility:"simplified"}]},
{featureType:"administrative.province",stylers:[{visibility:"off"}]},
{
featureType:"water",
elementType:"labels",
stylers:[{visibility:"on"},{lightness:-25},{saturation:-100}]
},
{
featureType:"water",
elementType:"geometry",
stylers:[{hue:"#ffff00"},{lightness:-25},{saturation:-97}]
}
];
var centerOfTheUniverse=new google.maps.LatLng(50.690085,10.747406);
var options={
zoom:6,
mapTypeId:google.maps.MapTypeId.ROADMAP,
styles:greyscale,
center:centerOfTheUniverse
};
var googleMap=new google.maps.Map($mapDiv[0],options);
var locations=[];
var noop=function(){
};
var updateGeoControls=noop;
var addressChangedHandler=noop;
function locationHasGeoCoordinates(location){
return location.geo&&location.geo.latitude&&location.geo.longitude;
}
function addLocation(location){
var draggable=updateGeoControls!==noop;
var latLng=new google.maps.LatLng(location.geo.latitude,location.geo.longitude);
var marker=new google.maps.Marker({
map:googleMap,
position:latLng,
draggable:draggable
});
google.maps.event.addListener(marker,'click',function(){
var infoWindowContent='<a href="'+location.href+'" >'+location.name+'</a>';
var infowindow=new google.maps.InfoWindow({content:infoWindowContent});
infowindow.open(googleMap,marker);
});
if(draggable){
google.maps.event.addListener(marker,'dragend',function(event){
updateGeoControls(this.position.lat(),this.position.lng());
});
}
location.marker=marker;
updateLocationPosition(location,location.geo.latitude,location.geo.longitude);
locations.push(location);
return location;
}
function updateLocationPosition(location,latitude,longitude){
var latLng=new google.maps.LatLng(latitude,longitude);
location.marker.setPosition(latLng);
googleMap.panTo(latLng);
}
$mapDiv.find('a').attr('tabindex',tabindex);
function updateAddressData(address){
getAddressCoordinates(address).then(function(data){
if(data.status==='OK'){
var geometry=data.results[0].geometry;
if(locations.length>0){
locations[0].marker.setPosition(geometry.location);
}else{
addLocation({
geo:{
latitude:geometry.location.lat(),
longitude:geometry.location.lng()
}
});
$mapDiv.addClass("visible");
}
updateGeoControls(geometry.location.lat(),geometry.location.lng());
googleMap.panTo(geometry.location);
googleMap.fitBounds(geometry.viewport);
}
});
}
if(ionas.control){
var countryControl=ionas.control($context.find('.country'));
var plzControl=ionas.control($context.find('.plz'));
var ortControl=ionas.control($context.find('.ort'));
var strasseHausnummerControl=ionas.control($context.find('.strassehausnummer'));
var latitudeControl=ionas.control($context.find('.latitude'));
var longitudeControl=ionas.control($context.find('.longitude'));
if(countryControl&&plzControl&&ortControl&&strasseHausnummerControl&&latitudeControl&&longitudeControl){
updateGeoControls=function(lat,lng){
latitudeControl.setValue(lat);
longitudeControl.setValue(lng);
}
addressChangedHandler=function(){
var plz=plzControl.getValue();
var ort=ortControl.getValue();
var strassehausnummer=strasseHausnummerControl.getValue();
var country=countryControl.getValue()||"Deutschland";
if(googleMap&&plz&&ort&&strassehausnummer){
updateAddressData(strassehausnummer+", "+plz+" "+ort+", "+country);
}
}
function geoControlsChangedHandler(){
var latitude=latitudeControl.getValue();
var longitude=longitudeControl.getValue();
if(latitude&&longitude){
if(locations.length>0){
updateLocationPosition(locations[0],latitude,longitude);
}else{
addLocation({
geo:{
latitude:latitude,
longitude:longitude
}
});
$mapDiv.addClass("visible");
}
}
}
plzControl.on("change",addressChangedHandler);
ortControl.on("change",addressChangedHandler);
strasseHausnummerControl.on("change",addressChangedHandler);
latitudeControl.on("change",geoControlsChangedHandler);
longitudeControl.on("change",geoControlsChangedHandler);
}
}
var loadingLocationsData;
if(dataUrl){
loadingLocationsData=$.ajax({
type:'GET',
url:dataUrl,
dataType:'json'
}).promise().then(function(data){
return data;
},function(){
console.log("Fehler beim Laden der Kartendaten");
});
}else if(dataLatitude&&dataLongitude){
loadingLocationsData=$.when([{
geo:{
latitude:dataLatitude,
longitude:dataLongitude
}
}]);
}else{
loadingLocationsData=$.when([]);
}
$.when(loadingLocationsData).then(function(locations){
try{
var bounds=new google.maps.LatLngBounds();
var locationsWithCoordninates=locations.filter(locationHasGeoCoordinates);
locationsWithCoordninates.forEach(addLocation);
locationsWithCoordninates.forEach(function(location){
bounds.extend(location.marker.getPosition());
});
if(locationsWithCoordninates.length>0){
$mapDiv.addClass("visible");
}else if(dataAddress){
setTimeout(function(){
updateAddressData(dataAddress);
},0);
}else{
addressChangedHandler();
}
if(locationsWithCoordninates.length>1){
googleMap.fitBounds(bounds);
}else{
googleMap.setZoom(15);
}
}catch(e){
console.log("Fehler bei der Initialisierung der Google Karte",e);
}
});
});
});
}
}
if(googleMapsApiKey){
var GOOGLE_MAP_SELECTOR='.googleMap';
var observer=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
var $newGoogleMaps=$(mutation.addedNodes).find(GOOGLE_MAP_SELECTOR);
initializeMap($newGoogleMaps);
});
});
var config={attributes:false,childList:true,characterData:false,subtree:true};
observer.observe(document.body,config);
$(document).on('show',function(event){
var $newGoogleMaps=$(event.target).find(GOOGLE_MAP_SELECTOR).addBack(GOOGLE_MAP_SELECTOR);
initializeMap($newGoogleMaps);
});
initializeMap(GOOGLE_MAP_SELECTOR);
}
}());
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/:module.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/js/clipboard.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/js/clipboard/clipboard.min.js";
!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Clipboard=t()}}(function(){var t,e,n;return function t(e,n,o){function i(a,c){if(!n[a]){if(!e[a]){var s="function"==typeof require&&require;if(!c&&s)return s(a,!0);if(r)return r(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var u=n[a]={exports:{}};e[a][0].call(u.exports,function(t){var n=e[a][1][t];return i(n?n:t)},u,u.exports,t,e,n,o)}return n[a].exports}for(var r="function"==typeof require&&require,a=0;a<o.length;a++)i(o[a]);return i}({1:[function(t,e,n){var o=t("matches-selector");e.exports=function(t,e,n){for(var i=n?t:t.parentNode;i&&i!==document;){if(o(i,e))return i;i=i.parentNode}}},{"matches-selector":5}],2:[function(t,e,n){function o(t,e,n,o,r){var a=i.apply(this,arguments);return t.addEventListener(n,a,r),{destroy:function(){t.removeEventListener(n,a,r)}}}function i(t,e,n,o){return function(n){n.delegateTarget=r(n.target,e,!0),n.delegateTarget&&o.call(t,n)}}var r=t("closest");e.exports=o},{closest:1}],3:[function(t,e,n){n.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},n.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||n.node(t[0]))},n.string=function(t){return"string"==typeof t||t instanceof String},n.fn=function(t){var e=Object.prototype.toString.call(t);return"[object Function]"===e}},{}],4:[function(t,e,n){function o(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!c.string(e))throw new TypeError("Second argument must be a String");if(!c.fn(n))throw new TypeError("Third argument must be a Function");if(c.node(t))return i(t,e,n);if(c.nodeList(t))return r(t,e,n);if(c.string(t))return a(t,e,n);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function i(t,e,n){return t.addEventListener(e,n),{destroy:function(){t.removeEventListener(e,n)}}}function r(t,e,n){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,n)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,n)})}}}function a(t,e,n){return s(document.body,t,e,n)}var c=t("./is"),s=t("delegate");e.exports=o},{"./is":3,delegate:2}],5:[function(t,e,n){function o(t,e){if(r)return r.call(t,e);for(var n=t.parentNode.querySelectorAll(e),o=0;o<n.length;++o)if(n[o]==t)return!0;return!1}var i=Element.prototype,r=i.matchesSelector||i.webkitMatchesSelector||i.mozMatchesSelector||i.msMatchesSelector||i.oMatchesSelector;e.exports=o},{}],6:[function(t,e,n){function o(t){var e;if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName)t.focus(),t.setSelectionRange(0,t.value.length),e=t.value;else{t.hasAttribute("contenteditable")&&t.focus();var n=window.getSelection(),o=document.createRange();o.selectNodeContents(t),n.removeAllRanges(),n.addRange(o),e=n.toString()}return e}e.exports=o},{}],7:[function(t,e,n){function o(){}o.prototype={on:function(t,e,n){var o=this.e||(this.e={});return(o[t]||(o[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function o(){i.off(t,o),e.apply(n,arguments)}var i=this;return o._=e,this.on(t,o,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),o=0,i=n.length;for(o;i>o;o++)n[o].fn.apply(n[o].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),o=n[t],i=[];if(o&&e)for(var r=0,a=o.length;a>r;r++)o[r].fn!==e&&o[r].fn._!==e&&i.push(o[r]);return i.length?n[t]=i:delete n[t],this}},e.exports=o},{}],8:[function(e,n,o){!function(i,r){if("function"==typeof t&&t.amd)t(["module","select"],r);else if("undefined"!=typeof o)r(n,e("select"));else{var a={exports:{}};r(a,i.select),i.clipboardAction=a.exports}}(this,function(t,e){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var i=n(e),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),c=function(){function t(e){o(this,t),this.resolveOptions(e),this.initSelection()}return t.prototype.resolveOptions=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action=e.action,this.emitter=e.emitter,this.target=e.target,this.text=e.text,this.trigger=e.trigger,this.selectedText=""},t.prototype.initSelection=function t(){this.text?this.selectFake():this.target&&this.selectTarget()},t.prototype.selectFake=function t(){var e=this,n="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return e.removeFake()},this.fakeHandler=document.body.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[n?"right":"left"]="-9999px",this.fakeElem.style.top=(window.pageYOffset||document.documentElement.scrollTop)+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,document.body.appendChild(this.fakeElem),this.selectedText=(0,i.default)(this.fakeElem),this.copyText()},t.prototype.removeFake=function t(){this.fakeHandler&&(document.body.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(document.body.removeChild(this.fakeElem),this.fakeElem=null)},t.prototype.selectTarget=function t(){this.selectedText=(0,i.default)(this.target),this.copyText()},t.prototype.copyText=function t(){var e=void 0;try{e=document.execCommand(this.action)}catch(n){e=!1}this.handleResult(e)},t.prototype.handleResult=function t(e){e?this.emitter.emit("success",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)}):this.emitter.emit("error",{action:this.action,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})},t.prototype.clearSelection=function t(){this.target&&this.target.blur(),window.getSelection().removeAllRanges()},t.prototype.destroy=function t(){this.removeFake()},a(t,[{key:"action",set:function t(){var e=arguments.length<=0||void 0===arguments[0]?"copy":arguments[0];if(this._action=e,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function t(){return this._action}},{key:"target",set:function t(e){if(void 0!==e){if(!e||"object"!==("undefined"==typeof e?"undefined":r(e))||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&e.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(e.hasAttribute("readonly")||e.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=e}},get:function t(){return this._target}}]),t}();t.exports=c})},{select:6}],9:[function(e,n,o){!function(i,r){if("function"==typeof t&&t.amd)t(["module","./clipboard-action","tiny-emitter","good-listener"],r);else if("undefined"!=typeof o)r(n,e("./clipboard-action"),e("tiny-emitter"),e("good-listener"));else{var a={exports:{}};r(a,i.clipboardAction,i.tinyEmitter,i.goodListener),i.clipboard=a.exports}}(this,function(t,e,n,o){"use strict";function i(t){return t&&t.__esModule?t:{"default":t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function s(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}var l=i(e),u=i(n),f=i(o),d=function(t){function e(n,o){r(this,e);var i=a(this,t.call(this));return i.resolveOptions(o),i.listenClick(n),i}return c(e,t),e.prototype.resolveOptions=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action="function"==typeof e.action?e.action:this.defaultAction,this.target="function"==typeof e.target?e.target:this.defaultTarget,this.text="function"==typeof e.text?e.text:this.defaultText},e.prototype.listenClick=function t(e){var n=this;this.listener=(0,f.default)(e,"click",function(t){return n.onClick(t)})},e.prototype.onClick=function t(e){var n=e.delegateTarget||e.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new l.default({action:this.action(n),target:this.target(n),text:this.text(n),trigger:n,emitter:this})},e.prototype.defaultAction=function t(e){return s("action",e)},e.prototype.defaultTarget=function t(e){var n=s("target",e);return n?document.querySelector(n):void 0},e.prototype.defaultText=function t(e){return s("text",e)},e.prototype.destroy=function t(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)},e}(u.default);t.exports=d})},{"./clipboard-action":8,"good-listener":4,"tiny-emitter":7}]},{},[9])(9)});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/js/datepicker.js";
window.currentSourceFile="/sv_oberursel/:ionas-web/framework/js/jquery-ui-1.10.4.custom.min.js";
(function(e,t){function i(t,i){var s,a,o,r=t.nodeName.toLowerCase();return"area"===r?(s=t.parentNode,a=s.name,t.href&&a&&"map"===s.nodeName.toLowerCase()?(o=e("img[usemap=#"+a+"]")[0],!!o&&n(o)):!1):(/input|select|textarea|button|object/.test(r)?!t.disabled:"a"===r?t.href||i:i)&&n(t)}function n(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return"hidden"===e.css(this,"visibility")}).length}var s=0,a=/^ui-id-\d+$/;e.ui=e.ui||{},e.extend(e.ui,{version:"1.10.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({focus:function(t){return function(i,n){return"number"==typeof i?this.each(function(){var t=this;setTimeout(function(){e(t).focus(),n&&n.call(t)},i)}):t.apply(this,arguments)}}(e.fn.focus),scrollParent:function(){var t;return t=e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(i){if(i!==t)return this.css("zIndex",i);if(this.length)for(var n,s,a=e(this[0]);a.length&&a[0]!==document;){if(n=a.css("position"),("absolute"===n||"relative"===n||"fixed"===n)&&(s=parseInt(a.css("zIndex"),10),!isNaN(s)&&0!==s))return s;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++s)})},removeUniqueId:function(){return this.each(function(){a.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,n){return!!e.data(t,n[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),s=isNaN(n);return(s||n>=0)&&i(t,!s)}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(i,n){function s(t,i,n,s){return e.each(a,function(){i-=parseFloat(e.css(t,"padding"+this))||0,n&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var a="Width"===n?["Left","Right"]:["Top","Bottom"],o=n.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+n]=function(i){return i===t?r["inner"+n].call(this):this.each(function(){e(this).css(o,s(this,i)+"px")})},e.fn["outer"+n]=function(t,i){return"number"!=typeof t?r["outer"+n].call(this,t):this.each(function(){e(this).css(o,s(this,t,!0,i)+"px")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),e.support.selectstart="onselectstart"in document.createElement("div"),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,i,n){var s,a=e.ui[t].prototype;for(s in n)a.plugins[s]=a.plugins[s]||[],a.plugins[s].push([i,n[s]])},call:function(e,t,i){var n,s=e.plugins[t];if(s&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(n=0;s.length>n;n++)e.options[s[n][0]]&&s[n][1].apply(e.element,i)}},hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return t[n]>0?!0:(t[n]=1,s=t[n]>0,t[n]=0,s)}})})(jQuery);(function(t,e){var i=0,s=Array.prototype.slice,n=t.cleanData;t.cleanData=function(e){for(var i,s=0;null!=(i=e[s]);s++)try{t(i).triggerHandler("remove")}catch(o){}n(e)},t.widget=function(i,s,n){var o,a,r,h,l={},c=i.split(".")[0];i=i.split(".")[1],o=c+"-"+i,n||(n=s,s=t.Widget),t.expr[":"][o.toLowerCase()]=function(e){return!!t.data(e,o)},t[c]=t[c]||{},a=t[c][i],r=t[c][i]=function(t,i){return this._createWidget?(arguments.length&&this._createWidget(t,i),e):new r(t,i)},t.extend(r,a,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),h=new s,h.options=t.widget.extend({},h.options),t.each(n,function(i,n){return t.isFunction(n)?(l[i]=function(){var t=function(){return s.prototype[i].apply(this,arguments)},e=function(t){return s.prototype[i].apply(this,t)};return function(){var i,s=this._super,o=this._superApply;return this._super=t,this._superApply=e,i=n.apply(this,arguments),this._super=s,this._superApply=o,i}}(),e):(l[i]=n,e)}),r.prototype=t.widget.extend(h,{widgetEventPrefix:a?h.widgetEventPrefix||i:i},l,{constructor:r,namespace:c,widgetName:i,widgetFullName:o}),a?(t.each(a._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,r,i._proto)}),delete a._childConstructors):s._childConstructors.push(r),t.widget.bridge(i,r)},t.widget.extend=function(i){for(var n,o,a=s.call(arguments,1),r=0,h=a.length;h>r;r++)for(n in a[r])o=a[r][n],a[r].hasOwnProperty(n)&&o!==e&&(i[n]=t.isPlainObject(o)?t.isPlainObject(i[n])?t.widget.extend({},i[n],o):t.widget.extend({},o):o);return i},t.widget.bridge=function(i,n){var o=n.prototype.widgetFullName||i;t.fn[i]=function(a){var r="string"==typeof a,h=s.call(arguments,1),l=this;return a=!r&&h.length?t.widget.extend.apply(null,[a].concat(h)):a,r?this.each(function(){var s,n=t.data(this,o);return n?t.isFunction(n[a])&&"_"!==a.charAt(0)?(s=n[a].apply(n,h),s!==n&&s!==e?(l=s&&s.jquery?l.pushStack(s.get()):s,!1):e):t.error("no such method '"+a+"' for "+i+" widget instance"):t.error("cannot call methods on "+i+" prior to initialization; "+"attempted to call method '"+a+"'")}):this.each(function(){var e=t.data(this,o);e?e.option(a||{})._init():t.data(this,o,new n(a,this))}),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(e,s){s=t(s||this.defaultElement||this)[0],this.element=t(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this.bindings=t(),this.hoverable=t(),this.focusable=t(),s!==this&&(t.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===s&&this.destroy()}}),this.document=t(s.style?s.ownerDocument:s.document||s),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:t.noop,widget:function(){return this.element},option:function(i,s){var n,o,a,r=i;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof i)if(r={},n=i.split("."),i=n.shift(),n.length){for(o=r[i]=t.widget.extend({},this.options[i]),a=0;n.length-1>a;a++)o[n[a]]=o[n[a]]||{},o=o[n[a]];if(i=n.pop(),1===arguments.length)return o[i]===e?null:o[i];o[i]=s}else{if(1===arguments.length)return this.options[i]===e?null:this.options[i];r[i]=s}return this._setOptions(r),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,"disabled"===t&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!e).attr("aria-disabled",e),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(i,s,n){var o,a=this;"boolean"!=typeof i&&(n=s,s=i,i=!1),n?(s=o=t(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,o=this.widget()),t.each(n,function(n,r){function h(){return i||a.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof r?a[r]:r).apply(a,arguments):e}"string"!=typeof r&&(h.guid=r.guid=r.guid||h.guid||t.guid++);var l=n.match(/^(\w+)\s*(.*)$/),c=l[1]+a.eventNamespace,u=l[2];u?o.delegate(u,c,h):s.bind(c,h)})},_off:function(t,e){e=(e||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.unbind(e).undelegate(e)},_delay:function(t,e){function i(){return("string"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass("ui-state-hover")},mouseleave:function(e){t(e.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass("ui-state-focus")},focusout:function(e){t(e.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(s,n,o){"string"==typeof n&&(n={effect:n});var a,r=n?n===!0||"number"==typeof n?i:n.effect||i:e;n=n||{},"number"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}})})(jQuery);(function(t){var e=!1;t(document).mouseup(function(){e=!1}),t.widget("ui.mouse",{version:"1.10.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).bind("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&t(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!e){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a="string"==typeof this.options.cancel&&i.target.nodeName?t(i.target).closest(this.options.cancel).length:!1;return n&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===t.data(i.target,this.widgetName+".preventClickEvent")&&t.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return s._mouseMove(t)},this._mouseUpDelegate=function(t){return s._mouseUp(t)},t(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),e=!0,!0)):!0}},_mouseMove:function(e){return t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button?this._mouseUp(e):this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){return t(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(t,e){function i(t,e,i){return[parseFloat(t[0])*(p.test(t[0])?e/100:1),parseFloat(t[1])*(p.test(t[1])?i/100:1)]}function s(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var a,o=Math.max,r=Math.abs,l=Math.round,h=/left|center|right/,c=/top|center|bottom/,u=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,p=/%$/,f=t.fn.position;t.position={scrollbarWidth:function(){if(a!==e)return a;var i,s,n=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=n.children()[0];return t("body").append(n),i=o.offsetWidth,n.css("overflow","scroll"),s=o.offsetWidth,i===s&&(s=n[0].clientWidth),n.remove(),a=i-s},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),s=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),n="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,a="scroll"===s||"auto"===s&&e.height<e.element[0].scrollHeight;return{width:a?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:s,isDocument:n,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},t.fn.position=function(e){if(!e||!e.of)return f.apply(this,arguments);e=t.extend({},e);var a,p,g,m,v,_,b=t(e.of),y=t.position.getWithinInfo(e.within),k=t.position.getScrollInfo(y),w=(e.collision||"flip").split(" "),D={};return _=n(b),b[0].preventDefault&&(e.at="left top"),p=_.width,g=_.height,m=_.offset,v=t.extend({},m),t.each(["my","at"],function(){var t,i,s=(e[this]||"").split(" ");1===s.length&&(s=h.test(s[0])?s.concat(["center"]):c.test(s[0])?["center"].concat(s):["center","center"]),s[0]=h.test(s[0])?s[0]:"center",s[1]=c.test(s[1])?s[1]:"center",t=u.exec(s[0]),i=u.exec(s[1]),D[this]=[t?t[0]:0,i?i[0]:0],e[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===w.length&&(w[1]=w[0]),"right"===e.at[0]?v.left+=p:"center"===e.at[0]&&(v.left+=p/2),"bottom"===e.at[1]?v.top+=g:"center"===e.at[1]&&(v.top+=g/2),a=i(D.at,p,g),v.left+=a[0],v.top+=a[1],this.each(function(){var n,h,c=t(this),u=c.outerWidth(),d=c.outerHeight(),f=s(this,"marginLeft"),_=s(this,"marginTop"),x=u+f+s(this,"marginRight")+k.width,C=d+_+s(this,"marginBottom")+k.height,M=t.extend({},v),T=i(D.my,c.outerWidth(),c.outerHeight());"right"===e.my[0]?M.left-=u:"center"===e.my[0]&&(M.left-=u/2),"bottom"===e.my[1]?M.top-=d:"center"===e.my[1]&&(M.top-=d/2),M.left+=T[0],M.top+=T[1],t.support.offsetFractions||(M.left=l(M.left),M.top=l(M.top)),n={marginLeft:f,marginTop:_},t.each(["left","top"],function(i,s){t.ui.position[w[i]]&&t.ui.position[w[i]][s](M,{targetWidth:p,targetHeight:g,elemWidth:u,elemHeight:d,collisionPosition:n,collisionWidth:x,collisionHeight:C,offset:[a[0]+T[0],a[1]+T[1]],my:e.my,at:e.at,within:y,elem:c})}),e.using&&(h=function(t){var i=m.left-M.left,s=i+p-u,n=m.top-M.top,a=n+g-d,l={target:{element:b,left:m.left,top:m.top,width:p,height:g},element:{element:c,left:M.left,top:M.top,width:u,height:d},horizontal:0>s?"left":i>0?"right":"center",vertical:0>a?"top":n>0?"bottom":"middle"};u>p&&p>r(i+s)&&(l.horizontal="center"),d>g&&g>r(n+a)&&(l.vertical="middle"),l.important=o(r(i),r(s))>o(r(n),r(a))?"horizontal":"vertical",e.using.call(this,t,l)}),c.offset(t.extend(M,{using:h}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,l=n-r,h=r+e.collisionWidth-a-n;e.collisionWidth>a?l>0&&0>=h?(i=t.left+l+e.collisionWidth-a-n,t.left+=l-i):t.left=h>0&&0>=l?n:l>h?n+a-e.collisionWidth:n:l>0?t.left+=l:h>0?t.left-=h:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,l=n-r,h=r+e.collisionHeight-a-n;e.collisionHeight>a?l>0&&0>=h?(i=t.top+l+e.collisionHeight-a-n,t.top+=l-i):t.top=h>0&&0>=l?n:l>h?n+a-e.collisionHeight:n:l>0?t.top+=l:h>0?t.top-=h:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,a=n.offset.left+n.scrollLeft,o=n.width,l=n.isWindow?n.scrollLeft:n.offset.left,h=t.left-e.collisionPosition.marginLeft,c=h-l,u=h+e.collisionWidth-o-l,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-o-a,(0>i||r(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-l,(s>0||u>r(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,a=n.offset.top+n.scrollTop,o=n.height,l=n.isWindow?n.scrollTop:n.offset.top,h=t.top-e.collisionPosition.marginTop,c=h-l,u=h+e.collisionHeight-o-l,d="top"===e.my[1],p=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,f="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-o-a,t.top+p+f+g>c&&(0>s||r(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-l,t.top+p+f+g>u&&(i>0||u>r(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,s,n,a,o=document.getElementsByTagName("body")[0],r=document.createElement("div");e=document.createElement(o?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&t.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(a in s)e.style[a]=s[a];e.appendChild(r),i=o||document.documentElement,i.insertBefore(e,i.firstChild),r.style.cssText="position: absolute; left: 10.7432222px;",n=t(r).offset().left,t.support.offsetFractions=n>10&&11>n,e.innerHTML="",i.removeChild(e)}()})(jQuery);(function(t){t.widget("ui.draggable",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(e),this.handle?(t(i.iframeFix===!0?"iframe":i.iframeFix).each(function(){t("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(t(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css("position"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_mouseDrag:function(e,i){if("fixed"===this.offsetParentCssPosition&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",e,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),"original"!==this.options.helper||t.contains(this.element[0].ownerDocument,this.element[0])?("invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear()}):this._trigger("stop",e)!==!1&&this._clear(),!1):!1},_mouseUp:function(e){return t("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.element.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;return n.containment?"window"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):"document"===n.containment?(this.containment=[0,0,t(document).width()-this.helperProportions.width-this.margins.left,(t(document).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):n.containment.constructor===Array?(this.containment=n.containment,undefined):("parent"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e="hidden"!==i.css("overflow"),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i),undefined):(this.containment=null,undefined)},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return this.offset.scroll||(this.offset.scroll={top:n.scrollTop(),left:n.scrollLeft()}),{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top)*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)*s}},_generatePosition:function(e){var i,s,n,a,o=this.options,r="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=e.pageX,h=e.pageY;return this.offset.scroll||(this.offset.scroll={top:r.scrollTop(),left:r.scrollLeft()}),this.originalPosition&&(this.containment&&(this.relative_container?(s=this.relative_container.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),o.grid&&(n=o.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,h=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-o.grid[1]:n+o.grid[1]:n,a=o.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,l=i?a-this.offset.click.left>=i[0]||a-this.offset.click.left>i[2]?a:a-this.offset.click.left>=i[0]?a-o.grid[0]:a+o.grid[0]:a)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s]),"drag"===e&&(this.positionAbs=this._convertPositionTo("absolute")),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i){var s=t(this).data("ui-draggable"),n=s.options,a=t.extend({},i,{item:s.element});s.sortables=[],t(n.connectToSortable).each(function(){var i=t.data(this,"ui-sortable");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",e,a))})},stop:function(e,i){var s=t(this).data("ui-draggable"),n=t.extend({},i,{item:s.element});t.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(e),this.instance.options.helper=this.instance.options._helper,"original"===s.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",e,n))})},drag:function(e,i){var s=t(this).data("ui-draggable"),n=this;t.each(s.sortables,function(){var a=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,t.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!==o&&this.instance._intersectsWith(this.instance.containerCache)&&t.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=t(n).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},e.target=this.instance.currentItem[0],this.instance._mouseCapture(e,!0),this.instance._mouseStart(e,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",e),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(e)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",e,this.instance._uiHash(this.instance)),this.instance._mouseStop(e,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger("fromSortable",e),s.dropped=!1)})}}),t.ui.plugin.add("draggable","cursor",{start:function(){var e=t("body"),i=t(this).data("ui-draggable").options;e.css("cursor")&&(i._cursor=e.css("cursor")),e.css("cursor",i.cursor)},stop:function(){var e=t(this).data("ui-draggable").options;e._cursor&&t("body").css("cursor",e._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i){var s=t(i.helper),n=t(this).data("ui-draggable").options;s.css("opacity")&&(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(e,i){var s=t(this).data("ui-draggable").options;s._opacity&&t(i.helper).css("opacity",s._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(){var e=t(this).data("ui-draggable");e.scrollParent[0]!==document&&"HTML"!==e.scrollParent[0].tagName&&(e.overflowOffset=e.scrollParent.offset())},drag:function(e){var i=t(this).data("ui-draggable"),s=i.options,n=!1;i.scrollParent[0]!==document&&"HTML"!==i.scrollParent[0].tagName?(s.axis&&"x"===s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-e.pageY<s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:e.pageY-i.overflowOffset.top<s.scrollSensitivity&&(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-e.pageX<s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:e.pageX-i.overflowOffset.left<s.scrollSensitivity&&(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(e.pageY-t(document).scrollTop()<s.scrollSensitivity?n=t(document).scrollTop(t(document).scrollTop()-s.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<s.scrollSensitivity&&(n=t(document).scrollTop(t(document).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(e.pageX-t(document).scrollLeft()<s.scrollSensitivity?n=t(document).scrollLeft(t(document).scrollLeft()-s.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<s.scrollSensitivity&&(n=t(document).scrollLeft(t(document).scrollLeft()+s.scrollSpeed)))),n!==!1&&t.ui.ddmanager&&!s.dropBehaviour&&t.ui.ddmanager.prepareOffsets(i,e)}}),t.ui.plugin.add("draggable","snap",{start:function(){var e=t(this).data("ui-draggable"),i=e.options;e.snapElements=[],t(i.snap.constructor!==String?i.snap.items||":data(ui-draggable)":i.snap).each(function(){var i=t(this),s=i.offset();this!==e.element[0]&&e.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(e,i){var s,n,a,o,r,l,h,c,u,d,p=t(this).data("ui-draggable"),g=p.options,f=g.snapTolerance,m=i.offset.left,_=m+p.helperProportions.width,v=i.offset.top,b=v+p.helperProportions.height;for(u=p.snapElements.length-1;u>=0;u--)r=p.snapElements[u].left,l=r+p.snapElements[u].width,h=p.snapElements[u].top,c=h+p.snapElements[u].height,r-f>_||m>l+f||h-f>b||v>c+f||!t.contains(p.snapElements[u].item.ownerDocument,p.snapElements[u].item)?(p.snapElements[u].snapping&&p.options.snap.release&&p.options.snap.release.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[u].item})),p.snapElements[u].snapping=!1):("inner"!==g.snapMode&&(s=f>=Math.abs(h-b),n=f>=Math.abs(c-v),a=f>=Math.abs(r-_),o=f>=Math.abs(l-m),s&&(i.position.top=p._convertPositionTo("relative",{top:h-p.helperProportions.height,left:0}).top-p.margins.top),n&&(i.position.top=p._convertPositionTo("relative",{top:c,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo("relative",{top:0,left:r-p.helperProportions.width}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo("relative",{top:0,left:l}).left-p.margins.left)),d=s||n||a||o,"outer"!==g.snapMode&&(s=f>=Math.abs(h-v),n=f>=Math.abs(c-b),a=f>=Math.abs(r-m),o=f>=Math.abs(l-_),s&&(i.position.top=p._convertPositionTo("relative",{top:h,left:0}).top-p.margins.top),n&&(i.position.top=p._convertPositionTo("relative",{top:c-p.helperProportions.height,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo("relative",{top:0,left:r}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo("relative",{top:0,left:l-p.helperProportions.width}).left-p.margins.left)),!p.snapElements[u].snapping&&(s||n||a||o||d)&&p.options.snap.snap&&p.options.snap.snap.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[u].item})),p.snapElements[u].snapping=s||n||a||o||d)}}),t.ui.plugin.add("draggable","stack",{start:function(){var e,i=this.data("ui-draggable").options,s=t.makeArray(t(i.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});s.length&&(e=parseInt(t(s[0]).css("zIndex"),10)||0,t(s).each(function(i){t(this).css("zIndex",e+i)}),this.css("zIndex",e+s.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i){var s=t(i.helper),n=t(this).data("ui-draggable").options;s.css("zIndex")&&(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(e,i){var s=t(this).data("ui-draggable").options;s._zIndex&&t(i.helper).css("zIndex",s._zIndex)}})})(jQuery);(function(t){function e(t,e,i){return t>e&&e+i>t}t.widget("ui.droppable",{version:"1.10.4",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s)},this.proportions=function(){return arguments.length?(e=arguments[0],undefined):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},t.ui.ddmanager.droppables[i.scope]=t.ui.ddmanager.droppables[i.scope]||[],t.ui.ddmanager.droppables[i.scope].push(this),i.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){for(var e=0,i=t.ui.ddmanager.droppables[this.options.scope];i.length>e;e++)i[e]===this&&i.splice(e,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(e,i){"accept"===e&&(this.accept=t.isFunction(i)?i:function(t){return t.is(i)}),t.Widget.prototype._setOption.apply(this,arguments)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var e=t.data(this,"ui-droppable");return e.options.greedy&&!e.options.disabled&&e.options.scope===s.options.scope&&e.accept.call(e.element[0],s.currentItem||s.element)&&t.ui.intersect(s,t.extend(e,{offset:e.element.offset()}),e.options.tolerance)?(n=!0,!1):undefined}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",e,this.ui(s)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(t,i,s){if(!i.offset)return!1;var n,a,o=(t.positionAbs||t.position.absolute).left,r=(t.positionAbs||t.position.absolute).top,l=o+t.helperProportions.width,h=r+t.helperProportions.height,c=i.offset.left,u=i.offset.top,d=c+i.proportions().width,p=u+i.proportions().height;switch(s){case"fit":return o>=c&&d>=l&&r>=u&&p>=h;case"intersect":return o+t.helperProportions.width/2>c&&d>l-t.helperProportions.width/2&&r+t.helperProportions.height/2>u&&p>h-t.helperProportions.height/2;case"pointer":return n=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,a=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,e(a,u,i.proportions().height)&&e(n,c,i.proportions().width);case"touch":return(r>=u&&p>=r||h>=u&&p>=h||u>r&&h>p)&&(o>=c&&d>=o||l>=c&&d>=l||c>o&&l>d);default:return!1}},t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var s,n,a=t.ui.ddmanager.droppables[e.options.scope]||[],o=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(s=0;a.length>s;s++)if(!(a[s].options.disabled||e&&!a[s].accept.call(a[s].element[0],e.currentItem||e.element))){for(n=0;r.length>n;n++)if(r[n]===a[s].element[0]){a[s].proportions().height=0;continue t}a[s].visible="none"!==a[s].element.css("display"),a[s].visible&&("mousedown"===o&&a[s]._activate.call(a[s],i),a[s].offset=a[s].element.offset(),a[s].proportions({width:a[s].element[0].offsetWidth,height:a[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(e,i){e.element.parentsUntil("body").bind("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,a,o=t.ui.intersect(e,this,this.options.tolerance),r=!o&&this.isover?"isout":o&&!this.isover?"isover":null;r&&(this.options.greedy&&(n=this.options.scope,a=this.element.parents(":data(ui-droppable)").filter(function(){return t.data(this,"ui-droppable").options.scope===n}),a.length&&(s=t.data(a[0],"ui-droppable"),s.greedyChild="isover"===r)),s&&"isover"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),s&&"isout"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").unbind("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}}})(jQuery);(function(t){function e(t){return parseInt(t,10)||0}function i(t){return!isNaN(parseInt(t,10))}t.widget("ui.resizable",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var e,i,s,n,a,o=this,r=this.options;if(this.element.addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!r.aspectRatio,aspectRatio:r.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:r.helper||r.ghost||r.animate?r.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.data("ui-resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=r.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),e=this.handles.split(","),this.handles={},i=0;e.length>i;i++)s=t.trim(e[i]),a="ui-resizable-"+s,n=t("<div class='ui-resizable-handle "+a+"'></div>"),n.css({zIndex:r.zIndex}),"se"===s&&n.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(n);this._renderAxis=function(e){var i,s,n,a;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String&&(this.handles[i]=t(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(s=t(this.handles[i],this.element),a=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(n,a),this._proportionallyResize()),t(this.handles[i]).length},this._renderAxis(this.element),this._handles=t(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){o.resizing||(this.className&&(n=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=n&&n[1]?n[1]:"se")}),r.autoHide&&(this._handles.hide(),t(this.element).addClass("ui-resizable-autohide").mouseenter(function(){r.disabled||(t(this).removeClass("ui-resizable-autohide"),o._handles.show())}).mouseleave(function(){r.disabled||o.resizing||(t(this).addClass("ui-resizable-autohide"),o._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(i){var s,n,a,o=this.options,r=this.element.position(),h=this.element;return this.resizing=!0,/absolute/.test(h.css("position"))?h.css({position:"absolute",top:h.css("top"),left:h.css("left")}):h.is(".ui-draggable")&&h.css({position:"absolute",top:r.top,left:r.left}),this._renderProxy(),s=e(this.helper.css("left")),n=e(this.helper.css("top")),o.containment&&(s+=t(o.containment).scrollLeft()||0,n+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:s,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:h.width(),height:h.height()},this.originalSize=this._helper?{width:h.outerWidth(),height:h.outerHeight()}:{width:h.width(),height:h.height()},this.originalPosition={left:s,top:n},this.sizeDiff={width:h.outerWidth()-h.width(),height:h.outerHeight()-h.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,a=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===a?this.axis+"-resize":a),h.addClass("ui-resizable-resizing"),this._propagate("start",i),!0},_mouseDrag:function(e){var i,s=this.helper,n={},a=this.originalMousePosition,o=this.axis,r=this.position.top,h=this.position.left,l=this.size.width,c=this.size.height,u=e.pageX-a.left||0,d=e.pageY-a.top||0,p=this._change[o];return p?(i=p.apply(this,[e,u,d]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),this.position.top!==r&&(n.top=this.position.top+"px"),this.position.left!==h&&(n.left=this.position.left+"px"),this.size.width!==l&&(n.width=this.size.width+"px"),this.size.height!==c&&(n.height=this.size.height+"px"),s.css(n),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(n)||this._trigger("resize",e,this.ui()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,a,o,r,h,l=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&t.ui.hasScroll(i[0],"left")?0:c.sizeDiff.height,a=s?0:c.sizeDiff.width,o={width:c.helper.width()-a,height:c.helper.height()-n},r=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null,h=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null,l.animate||this.element.css(t.extend(o,{top:h,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!l.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(t){var e,s,n,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,s=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),n>o.minHeight&&(o.minHeight=n),o.maxWidth>s&&(o.maxWidth=s),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),i(t.left)&&(this.position.left=t.left),i(t.top)&&(this.position.top=t.top),i(t.height)&&(this.size.height=t.height),i(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,s=this.size,n=this.axis;return i(t.height)?t.width=t.height*this.aspectRatio:i(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===n&&(t.left=e.left+(s.width-t.width),t.top=null),"nw"===n&&(t.top=e.top+(s.height-t.height),t.left=e.left+(s.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,s=this.axis,n=i(t.width)&&e.maxWidth&&e.maxWidth<t.width,a=i(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=i(t.width)&&e.minWidth&&e.minWidth>t.width,r=i(t.height)&&e.minHeight&&e.minHeight>t.height,h=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,c=/sw|nw|w/.test(s),u=/nw|ne|n/.test(s);return o&&(t.width=e.minWidth),r&&(t.height=e.minHeight),n&&(t.width=e.maxWidth),a&&(t.height=e.maxHeight),o&&c&&(t.left=h-e.minWidth),n&&c&&(t.left=h-e.maxWidth),r&&u&&(t.top=l-e.minHeight),a&&u&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var t,e,i,s,n,a=this.helper||this.element;for(t=0;this._proportionallyResizeElements.length>t;t++){if(n=this._proportionallyResizeElements[t],!this.borderDif)for(this.borderDif=[],i=[n.css("borderTopWidth"),n.css("borderRightWidth"),n.css("borderBottomWidth"),n.css("borderLeftWidth")],s=[n.css("paddingTop"),n.css("paddingRight"),n.css("paddingBottom"),n.css("paddingLeft")],e=0;i.length>e;e++)this.borderDif[e]=(parseInt(i[e],10)||0)+(parseInt(s[e],10)||0);n.css({height:a.height()-this.borderDif[0]-this.borderDif[2]||0,width:a.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).data("ui-resizable"),s=i.options,n=i._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&t.ui.hasScroll(n[0],"left")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-o},l=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,c=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(h,c&&l?{top:c,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var i,s,n,a,o,r,h,l=t(this).data("ui-resizable"),c=l.options,u=l.element,d=c.containment,p=d instanceof t?d.get(0):/parent/.test(d)?u.parent().get(0):d;p&&(l.containerElement=t(p),/document/.test(d)||d===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(i=t(p),s=[],t(["Top","Right","Left","Bottom"]).each(function(t,n){s[t]=e(i.css("padding"+n))}),l.containerOffset=i.offset(),l.containerPosition=i.position(),l.containerSize={height:i.innerHeight()-s[3],width:i.innerWidth()-s[1]},n=l.containerOffset,a=l.containerSize.height,o=l.containerSize.width,r=t.ui.hasScroll(p,"left")?p.scrollWidth:o,h=t.ui.hasScroll(p)?p.scrollHeight:a,l.parentData={element:p,left:n.left,top:n.top,width:r,height:h}))},resize:function(e){var i,s,n,a,o=t(this).data("ui-resizable"),r=o.options,h=o.containerOffset,l=o.position,c=o._aspectRatio||e.shiftKey,u={top:0,left:0},d=o.containerElement;d[0]!==document&&/static/.test(d.css("position"))&&(u=h),l.left<(o._helper?h.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-h.left:o.position.left-u.left),c&&(o.size.height=o.size.width/o.aspectRatio),o.position.left=r.helper?h.left:0),l.top<(o._helper?h.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-h.top:o.position.top),c&&(o.size.width=o.size.height*o.aspectRatio),o.position.top=o._helper?h.top:0),o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top,i=Math.abs((o._helper?o.offset.left-u.left:o.offset.left-u.left)+o.sizeDiff.width),s=Math.abs((o._helper?o.offset.top-u.top:o.offset.top-h.top)+o.sizeDiff.height),n=o.containerElement.get(0)===o.element.parent().get(0),a=/relative|absolute/.test(o.containerElement.css("position")),n&&a&&(i-=Math.abs(o.parentData.left)),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,c&&(o.size.height=o.size.width/o.aspectRatio)),s+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-s,c&&(o.size.width=o.size.height*o.aspectRatio))},stop:function(){var e=t(this).data("ui-resizable"),i=e.options,s=e.containerOffset,n=e.containerPosition,a=e.containerElement,o=t(e.helper),r=o.offset(),h=o.outerWidth()-e.sizeDiff.width,l=o.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(a.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l}),e._helper&&!i.animate&&/static/.test(a.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).data("ui-resizable"),i=e.options,s=function(e){t(e).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseInt(e.width(),10),height:parseInt(e.height(),10),left:parseInt(e.css("left"),10),top:parseInt(e.css("top"),10)})})};"object"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):t.each(i.alsoResize,function(t){s(t)})},resize:function(e,i){var s=t(this).data("ui-resizable"),n=s.options,a=s.originalSize,o=s.originalPosition,r={height:s.size.height-a.height||0,width:s.size.width-a.width||0,top:s.position.top-o.top||0,left:s.position.left-o.left||0},h=function(e,s){t(e).each(function(){var e=t(this),n=t(this).data("ui-resizable-alsoresize"),a={},o=s&&s.length?s:e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(o,function(t,e){var i=(n[e]||0)+(r[e]||0);i&&i>=0&&(a[e]=i||null)}),e.css(a)})};"object"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):t.each(n.alsoResize,function(t,e){h(t,e)})},stop:function(){t(this).removeData("resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).data("ui-resizable"),i=e.options,s=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).data("ui-resizable");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).data("ui-resizable");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e=t(this).data("ui-resizable"),i=e.options,s=e.size,n=e.originalSize,a=e.originalPosition,o=e.axis,r="number"==typeof i.grid?[i.grid,i.grid]:i.grid,h=r[0]||1,l=r[1]||1,c=Math.round((s.width-n.width)/h)*h,u=Math.round((s.height-n.height)/l)*l,d=n.width+c,p=n.height+u,f=i.maxWidth&&d>i.maxWidth,g=i.maxHeight&&p>i.maxHeight,m=i.minWidth&&i.minWidth>d,v=i.minHeight&&i.minHeight>p;i.grid=r,m&&(d+=h),v&&(p+=l),f&&(d-=h),g&&(p-=l),/^(se|s|e)$/.test(o)?(e.size.width=d,e.size.height=p):/^(ne)$/.test(o)?(e.size.width=d,e.size.height=p,e.position.top=a.top-u):/^(sw)$/.test(o)?(e.size.width=d,e.size.height=p,e.position.left=a.left-c):(p-l>0?(e.size.height=p,e.position.top=a.top-u):(e.size.height=l,e.position.top=a.top+n.height-l),d-h>0?(e.size.width=d,e.position.left=a.left-c):(e.size.width=h,e.position.left=a.left+n.width-h))}})})(jQuery);(function(t){t.widget("ui.selectable",t.ui.mouse,{version:"1.10.4",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e,i=this;this.element.addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e=t(i.options.filter,i.element[0]),e.addClass("ui-selectee"),e.each(function(){var e=t(this),i=e.offset();t.data(this,"selectable-item",{element:this,$element:e,left:i.left,top:i.top,right:i.left+e.outerWidth(),bottom:i.top+e.outerHeight(),startselected:!1,selected:e.hasClass("ui-selected"),selecting:e.hasClass("ui-selecting"),unselecting:e.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=e.addClass("ui-selectee"),this._mouseInit(),this.helper=t("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger("start",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var s=t.data(this,"selectable-item");s.startselected=!0,e.metaKey||e.ctrlKey||(s.$element.removeClass("ui-selected"),s.selected=!1,s.$element.addClass("ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",e,{unselecting:s.element}))}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,"selectable-item");return n?(s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass("ui-selected"),n.$element.removeClass(s?"ui-unselecting":"ui-selected").addClass(s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger("selecting",e,{selecting:n.element}):i._trigger("unselecting",e,{unselecting:n.element}),!1):undefined}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,a=this.opos[0],o=this.opos[1],r=e.pageX,l=e.pageY;return a>r&&(i=r,r=a,a=i),o>l&&(i=l,l=o,o=i),this.helper.css({left:a,top:o,width:r-a,height:l-o}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),h=!1;i&&i.element!==s.element[0]&&("touch"===n.tolerance?h=!(i.left>r||a>i.right||i.top>l||o>i.bottom):"fit"===n.tolerance&&(h=i.left>a&&r>i.right&&i.top>o&&l>i.bottom),h?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,s._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");s.$element.removeClass("ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",e,{unselected:s.element})}),t(".ui-selecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");s.$element.removeClass("ui-selecting").addClass("ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",e,{selected:s.element})}),this._trigger("stop",e),this.helper.remove(),!1}})})(jQuery);(function(t){function e(t,e,i){return t>e&&e+i>t}function i(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))}t.widget("ui.sortable",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var t=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?"x"===t.axis||i(this.items[0].item):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_setOption:function(e,i){"disabled"===e?(this.options[e]=i,this.widget().toggleClass("ui-sortable-disabled",!!i)):t.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(s=t(this),!1):undefined}),t.data(e.target,o.widgetName+"-item")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find("*").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==document&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==document&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-t(document).scrollTop()<a.scrollSensitivity?r=t(document).scrollTop(t(document).scrollTop()-a.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<a.scrollSensitivity&&(r=t(document).scrollTop(t(document).scrollTop()+a.scrollSpeed)),e.pageX-t(document).scrollLeft()<a.scrollSensitivity?r=t(document).scrollLeft(t(document).scrollLeft()-a.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<a.scrollSensitivity&&(r=t(document).scrollLeft(t(document).scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&"x"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&s.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+"="),s.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||"id")||"")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||s+l>r&&h>s+l,d="y"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&h>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var i="x"===this.options.axis||e(this.positionAbs.top+this.offset.click.top,t.top,t.height),s="y"===this.options.axis||e(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=i&&s,o=this._getDragVerticalDirection(),a=this._getDragHorizontalDirection();return n?this.floating?a&&"right"===a||"down"===o?2:1:o&&("down"===o?2:1):!1},_intersectsWithSides:function(t){var i=e(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),s=e(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return this.floating&&o?"right"===o&&s||"left"===o&&!s:n&&("down"===n&&i||"up"===n&&!i)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],h=[],l=this._connectWith();if(l&&e)for(s=l.length-1;s>=0;s--)for(o=t(l[s]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&h.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(h.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),s=h.length-1;s>=0;s--)h[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,l=r.length;l>s;s++)h=t(r[s]),h.data(this.widgetName+"-item",a),c.push({item:h,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t("<"+s+">",e.document[0]).addClass(i||e.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tr"===s?e.currentItem.children().each(function(){t("<td>&#160;</td>",e.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(n)}):"img"===s&&n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_contactContainers:function(s){var n,o,a,r,h,l,c,u,d,p,f=null,g=null;for(n=this.containers.length-1;n>=0;n--)if(!t.contains(this.currentItem[0],this.containers[n].element[0]))if(this._intersectsWith(this.containers[n].containerCache)){if(f&&t.contains(this.containers[n].element[0],f.element[0]))continue;f=this.containers[n],g=n}else this.containers[n].containerCache.over&&(this.containers[n]._trigger("out",s,this._uiHash(this)),this.containers[n].containerCache.over=0);if(f)if(1===this.containers.length)this.containers[g].containerCache.over||(this.containers[g]._trigger("over",s,this._uiHash(this)),this.containers[g].containerCache.over=1);else{for(a=1e4,r=null,p=f.floating||i(this.currentItem),h=p?"left":"top",l=p?"width":"height",c=this.positionAbs[h]+this.offset.click[h],o=this.items.length-1;o>=0;o--)t.contains(this.containers[g].element[0],this.items[o].item[0])&&this.items[o].item[0]!==this.currentItem[0]&&(!p||e(this.positionAbs.top+this.offset.click.top,this.items[o].top,this.items[o].height))&&(u=this.items[o].item.offset()[h],d=!1,Math.abs(u-c)>Math.abs(u+this.items[o][l]-c)&&(d=!0,u+=this.items[o][l]),a>Math.abs(u-c)&&(a=Math.abs(u-c),r=this.items[o],this.direction=d?"up":"down"));if(!r&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[g])return;r?this._rearrange(s,r,null,!0):this._rearrange(s,null,this.containers[g].element,!0),this._trigger("change",s,this._uiHash()),this.containers[g]._trigger("change",s,this._uiHash(this)),this.currentContainer=this.containers[g],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[g]._trigger("over",s,this._uiHash(this)),this.containers[g].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return s.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;"parent"===n.containment&&(n.containment=this.helper[0].parentNode),("document"===n.containment||"window"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,t("document"===n.containment?document:window).width()-this.helperProportions.width-this.margins.left,(t("document"===n.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==document&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)("auto"===this._storedCSS[s]||"static"===this._storedCSS[s])&&(this._storedCSS[s]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger("remove",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i("deactivate",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i("out",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,this.cancelHelperRemoval){if(!e){for(this._trigger("beforeStop",t,this._uiHash()),s=0;n.length>s;s++)n[s].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}if(e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null,!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})})(jQuery);(function(e,t){function i(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},e.extend(this._defaults,this.regional[""]),this.dpDiv=a(e("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function a(t){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return t.delegate(i,"mouseout",function(){e(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).removeClass("ui-datepicker-next-hover")}).delegate(i,"mouseover",function(){e.datepicker._isDisabledDatepicker(n.inline?t.parent()[0]:n.input[0])||(e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),e(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).addClass("ui-datepicker-next-hover"))})}function s(t,i){e.extend(t,i);for(var a in i)null==i[a]&&(t[a]=i[a]);return t}e.extend(e.ui,{datepicker:{version:"1.10.4"}});var n,r="datepicker";e.extend(i.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return s(this._defaults,e||{}),this},_attachDatepicker:function(t,i){var a,s,n;a=t.nodeName.toLowerCase(),s="div"===a||"span"===a,t.id||(this.uuid+=1,t.id="dp"+this.uuid),n=this._newInst(e(t),s),n.settings=e.extend({},i||{}),"input"===a?this._connectDatepicker(t,n):s&&this._inlineDatepicker(t,n)},_newInst:function(t,i){var s=t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:s,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?a(e("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(t,i){var a=e(t);i.append=e([]),i.trigger=e([]),a.hasClass(this.markerClassName)||(this._attachments(a,i),a.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),e.data(t,r,i),i.settings.disabled&&this._disableDatepicker(t))},_attachments:function(t,i){var a,s,n,r=this._get(i,"appendText"),o=this._get(i,"isRTL");i.append&&i.append.remove(),r&&(i.append=e("<span class='"+this._appendClass+"'>"+r+"</span>"),t[o?"before":"after"](i.append)),t.unbind("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),a=this._get(i,"showOn"),("focus"===a||"both"===a)&&t.focus(this._showDatepicker),("button"===a||"both"===a)&&(s=this._get(i,"buttonText"),n=this._get(i,"buttonImage"),i.trigger=e(this._get(i,"buttonImageOnly")?e("<img/>").addClass(this._triggerClass).attr({src:n,alt:s,title:s}):e("<button type='button'></button>").addClass(this._triggerClass).html(n?e("<img/>").attr({src:n,alt:s,title:s}):s)),t[o?"before":"after"](i.trigger),i.trigger.click(function(){return e.datepicker._datepickerShowing&&e.datepicker._lastInput===t[0]?e.datepicker._hideDatepicker():e.datepicker._datepickerShowing&&e.datepicker._lastInput!==t[0]?(e.datepicker._hideDatepicker(),e.datepicker._showDatepicker(t[0])):e.datepicker._showDatepicker(t[0]),!1}))},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t,i,a,s,n=new Date(2009,11,20),r=this._get(e,"dateFormat");r.match(/[DM]/)&&(t=function(e){for(i=0,a=0,s=0;e.length>s;s++)e[s].length>i&&(i=e[s].length,a=s);return a},n.setMonth(t(this._get(e,r.match(/MM/)?"monthNames":"monthNamesShort"))),n.setDate(t(this._get(e,r.match(/DD/)?"dayNames":"dayNamesShort"))+20-n.getDay())),e.input.attr("size",this._formatDate(e,n).length)}},_inlineDatepicker:function(t,i){var a=e(t);a.hasClass(this.markerClassName)||(a.addClass(this.markerClassName).append(i.dpDiv),e.data(t,r,i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(t),i.dpDiv.css("display","block"))},_dialogDatepicker:function(t,i,a,n,o){var u,c,h,l,d,p=this._dialogInst;return p||(this.uuid+=1,u="dp"+this.uuid,this._dialogInput=e("<input type='text' id='"+u+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.keydown(this._doKeyDown),e("body").append(this._dialogInput),p=this._dialogInst=this._newInst(this._dialogInput,!1),p.settings={},e.data(this._dialogInput[0],r,p)),s(p.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(p,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(c=document.documentElement.clientWidth,h=document.documentElement.clientHeight,l=document.documentElement.scrollLeft||document.body.scrollLeft,d=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[c/2-100+l,h/2-150+d]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),p.settings.onSelect=a,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),e.blockUI&&e.blockUI(this.dpDiv),e.data(this._dialogInput[0],r,p),this},_destroyDatepicker:function(t){var i,a=e(t),s=e.data(t,r);a.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),e.removeData(t,r),"input"===i?(s.append.remove(),s.trigger.remove(),a.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"===i||"span"===i)&&a.removeClass(this.markerClassName).empty())},_enableDatepicker:function(t){var i,a,s=e(t),n=e.data(t,r);s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),"input"===i?(t.disabled=!1,n.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(a=s.children("."+this._inlineClass),a.children().removeClass("ui-state-disabled"),a.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}))},_disableDatepicker:function(t){var i,a,s=e(t),n=e.data(t,r);s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),"input"===i?(t.disabled=!0,n.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(a=s.children("."+this._inlineClass),a.children().addClass("ui-state-disabled"),a.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}),this._disabledInputs[this._disabledInputs.length]=t)},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]===e)return!0;return!1},_getInst:function(t){try{return e.data(t,r)}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(i,a,n){var r,o,u,c,h=this._getInst(i);return 2===arguments.length&&"string"==typeof a?"defaults"===a?e.extend({},e.datepicker._defaults):h?"all"===a?e.extend({},h.settings):this._get(h,a):null:(r=a||{},"string"==typeof a&&(r={},r[a]=n),h&&(this._curInst===h&&this._hideDatepicker(),o=this._getDateDatepicker(i,!0),u=this._getMinMaxDate(h,"min"),c=this._getMinMaxDate(h,"max"),s(h.settings,r),null!==u&&r.dateFormat!==t&&r.minDate===t&&(h.settings.minDate=this._formatDate(h,u)),null!==c&&r.dateFormat!==t&&r.maxDate===t&&(h.settings.maxDate=this._formatDate(h,c)),"disabled"in r&&(r.disabled?this._disableDatepicker(i):this._enableDatepicker(i)),this._attachments(e(i),h),this._autoSize(h),this._setDate(h,o),this._updateAlternate(h),this._updateDatepicker(h)),t)},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(t){var i,a,s,n=e.datepicker._getInst(t.target),r=!0,o=n.dpDiv.is(".ui-datepicker-rtl");if(n._keyEvent=!0,e.datepicker._datepickerShowing)switch(t.keyCode){case 9:e.datepicker._hideDatepicker(),r=!1;break;case 13:return s=e("td."+e.datepicker._dayOverClass+":not(."+e.datepicker._currentClass+")",n.dpDiv),s[0]&&e.datepicker._selectDay(t.target,n.selectedMonth,n.selectedYear,s[0]),i=e.datepicker._get(n,"onSelect"),i?(a=e.datepicker._formatDate(n),i.apply(n.input?n.input[0]:null,[a,n])):e.datepicker._hideDatepicker(),!1;case 27:e.datepicker._hideDatepicker();break;case 33:e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(n,"stepBigMonths"):-e.datepicker._get(n,"stepMonths"),"M");break;case 34:e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(n,"stepBigMonths"):+e.datepicker._get(n,"stepMonths"),"M");break;case 35:(t.ctrlKey||t.metaKey)&&e.datepicker._clearDate(t.target),r=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&e.datepicker._gotoToday(t.target),r=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,o?1:-1,"D"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(n,"stepBigMonths"):-e.datepicker._get(n,"stepMonths"),"M");break;case 38:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,-7,"D"),r=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,o?-1:1,"D"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(n,"stepBigMonths"):+e.datepicker._get(n,"stepMonths"),"M");break;case 40:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,7,"D"),r=t.ctrlKey||t.metaKey;break;default:r=!1}else 36===t.keyCode&&t.ctrlKey?e.datepicker._showDatepicker(this):r=!1;r&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(i){var a,s,n=e.datepicker._getInst(i.target);return e.datepicker._get(n,"constrainInput")?(a=e.datepicker._possibleChars(e.datepicker._get(n,"dateFormat")),s=String.fromCharCode(null==i.charCode?i.keyCode:i.charCode),i.ctrlKey||i.metaKey||" ">s||!a||a.indexOf(s)>-1):t},_doKeyUp:function(t){var i,a=e.datepicker._getInst(t.target);if(a.input.val()!==a.lastVal)try{i=e.datepicker.parseDate(e.datepicker._get(a,"dateFormat"),a.input?a.input.val():null,e.datepicker._getFormatConfig(a)),i&&(e.datepicker._setDateFromField(a),e.datepicker._updateAlternate(a),e.datepicker._updateDatepicker(a))}catch(s){}return!0},_showDatepicker:function(t){if(t=t.target||t,"input"!==t.nodeName.toLowerCase()&&(t=e("input",t.parentNode)[0]),!e.datepicker._isDisabledDatepicker(t)&&e.datepicker._lastInput!==t){var i,a,n,r,o,u,c;i=e.datepicker._getInst(t),e.datepicker._curInst&&e.datepicker._curInst!==i&&(e.datepicker._curInst.dpDiv.stop(!0,!0),i&&e.datepicker._datepickerShowing&&e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),a=e.datepicker._get(i,"beforeShow"),n=a?a.apply(t,[t,i]):{},n!==!1&&(s(i.settings,n),i.lastVal=null,e.datepicker._lastInput=t,e.datepicker._setDateFromField(i),e.datepicker._inDialog&&(t.value=""),e.datepicker._pos||(e.datepicker._pos=e.datepicker._findPos(t),e.datepicker._pos[1]+=t.offsetHeight),r=!1,e(t).parents().each(function(){return r|="fixed"===e(this).css("position"),!r}),o={left:e.datepicker._pos[0],top:e.datepicker._pos[1]},e.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),e.datepicker._updateDatepicker(i),o=e.datepicker._checkOffset(i,o,r),i.dpDiv.css({position:e.datepicker._inDialog&&e.blockUI?"static":r?"fixed":"absolute",display:"none",left:o.left+"px",top:o.top+"px"}),i.inline||(u=e.datepicker._get(i,"showAnim"),c=e.datepicker._get(i,"duration"),i.dpDiv.zIndex(e(t).zIndex()+1),e.datepicker._datepickerShowing=!0,e.effects&&e.effects.effect[u]?i.dpDiv.show(u,e.datepicker._get(i,"showOptions"),c):i.dpDiv[u||"show"](u?c:null),e.datepicker._shouldFocusInput(i)&&i.input.focus(),e.datepicker._curInst=i))}},_updateDatepicker:function(t){this.maxRows=4,n=t,t.dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t),t.dpDiv.find("."+this._dayOverClass+" a").mouseover();var i,a=this._getNumberOfMonths(t),s=a[1],r=17;t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),s>1&&t.dpDiv.addClass("ui-datepicker-multi-"+s).css("width",r*s+"em"),t.dpDiv[(1!==a[0]||1!==a[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),t.dpDiv[(this._get(t,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),t===e.datepicker._curInst&&e.datepicker._datepickerShowing&&e.datepicker._shouldFocusInput(t)&&t.input.focus(),t.yearshtml&&(i=t.yearshtml,setTimeout(function(){i===t.yearshtml&&t.yearshtml&&t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml),i=t.yearshtml=null},0))},_shouldFocusInput:function(e){return e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&!e.input.is(":focus")},_checkOffset:function(t,i,a){var s=t.dpDiv.outerWidth(),n=t.dpDiv.outerHeight(),r=t.input?t.input.outerWidth():0,o=t.input?t.input.outerHeight():0,u=document.documentElement.clientWidth+(a?0:e(document).scrollLeft()),c=document.documentElement.clientHeight+(a?0:e(document).scrollTop());return i.left-=this._get(t,"isRTL")?s-r:0,i.left-=a&&i.left===t.input.offset().left?e(document).scrollLeft():0,i.top-=a&&i.top===t.input.offset().top+o?e(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>u&&u>s?Math.abs(i.left+s-u):0),i.top-=Math.min(i.top,i.top+n>c&&c>n?Math.abs(n+o):0),i},_findPos:function(t){for(var i,a=this._getInst(t),s=this._get(a,"isRTL");t&&("hidden"===t.type||1!==t.nodeType||e.expr.filters.hidden(t));)t=t[s?"previousSibling":"nextSibling"];return i=e(t).offset(),[i.left,i.top]},_hideDatepicker:function(t){var i,a,s,n,o=this._curInst;!o||t&&o!==e.data(t,r)||this._datepickerShowing&&(i=this._get(o,"showAnim"),a=this._get(o,"duration"),s=function(){e.datepicker._tidyDialog(o)},e.effects&&(e.effects.effect[i]||e.effects[i])?o.dpDiv.hide(i,e.datepicker._get(o,"showOptions"),a,s):o.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?a:null,s),i||s(),this._datepickerShowing=!1,n=this._get(o,"onClose"),n&&n.apply(o.input?o.input[0]:null,[o.input?o.input.val():"",o]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),e.blockUI&&(e.unblockUI(),e("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(t){if(e.datepicker._curInst){var i=e(t.target),a=e.datepicker._getInst(i[0]);(i[0].id!==e.datepicker._mainDivId&&0===i.parents("#"+e.datepicker._mainDivId).length&&!i.hasClass(e.datepicker.markerClassName)&&!i.closest("."+e.datepicker._triggerClass).length&&e.datepicker._datepickerShowing&&(!e.datepicker._inDialog||!e.blockUI)||i.hasClass(e.datepicker.markerClassName)&&e.datepicker._curInst!==a)&&e.datepicker._hideDatepicker()}},_adjustDate:function(t,i,a){var s=e(t),n=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(n,i+("M"===a?this._get(n,"showCurrentAtPos"):0),a),this._updateDatepicker(n))},_gotoToday:function(t){var i,a=e(t),s=this._getInst(a[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(a)},_selectMonthYear:function(t,i,a){var s=e(t),n=this._getInst(s[0]);n["selected"+("M"===a?"Month":"Year")]=n["draw"+("M"===a?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(s)},_selectDay:function(t,i,a,s){var n,r=e(t);e(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(r[0])||(n=this._getInst(r[0]),n.selectedDay=n.currentDay=e("a",s).html(),n.selectedMonth=n.currentMonth=i,n.selectedYear=n.currentYear=a,this._selectDate(t,this._formatDate(n,n.currentDay,n.currentMonth,n.currentYear)))},_clearDate:function(t){var i=e(t);this._selectDate(i,"")},_selectDate:function(t,i){var a,s=e(t),n=this._getInst(s[0]);i=null!=i?i:this._formatDate(n),n.input&&n.input.val(i),this._updateAlternate(n),a=this._get(n,"onSelect"),a?a.apply(n.input?n.input[0]:null,[i,n]):n.input&&n.input.trigger("change"),n.inline?this._updateDatepicker(n):(this._hideDatepicker(),this._lastInput=n.input[0],"object"!=typeof n.input[0]&&n.input.focus(),this._lastInput=null)},_updateAlternate:function(t){var i,a,s,n=this._get(t,"altField");n&&(i=this._get(t,"altFormat")||this._get(t,"dateFormat"),a=this._getDate(t),s=this.formatDate(i,a,this._getFormatConfig(t)),e(n).each(function(){e(this).val(s)}))},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t,i=new Date(e.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),t=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((t-i)/864e5)/7)+1},parseDate:function(i,a,s){if(null==i||null==a)throw"Invalid arguments";if(a="object"==typeof a?""+a:a+"",""===a)return null;var n,r,o,u,c=0,h=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,l="string"!=typeof h?h:(new Date).getFullYear()%100+parseInt(h,10),d=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,p=(s?s.dayNames:null)||this._defaults.dayNames,g=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,m=(s?s.monthNames:null)||this._defaults.monthNames,f=-1,_=-1,v=-1,k=-1,y=!1,b=function(e){var t=i.length>n+1&&i.charAt(n+1)===e;return t&&n++,t},D=function(e){var t=b(e),i="@"===e?14:"!"===e?20:"y"===e&&t?4:"o"===e?3:2,s=RegExp("^\\d{1,"+i+"}"),n=a.substring(c).match(s);if(!n)throw"Missing number at position "+c;return c+=n[0].length,parseInt(n[0],10)},w=function(i,s,n){var r=-1,o=e.map(b(i)?n:s,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)});if(e.each(o,function(e,i){var s=i[1];return a.substr(c,s.length).toLowerCase()===s.toLowerCase()?(r=i[0],c+=s.length,!1):t}),-1!==r)return r+1;throw"Unknown name at position "+c},M=function(){if(a.charAt(c)!==i.charAt(n))throw"Unexpected literal at position "+c;c++};for(n=0;i.length>n;n++)if(y)"'"!==i.charAt(n)||b("'")?M():y=!1;else switch(i.charAt(n)){case"d":v=D("d");break;case"D":w("D",d,p);break;case"o":k=D("o");break;case"m":_=D("m");break;case"M":_=w("M",g,m);break;case"y":f=D("y");break;case"@":u=new Date(D("@")),f=u.getFullYear(),_=u.getMonth()+1,v=u.getDate();break;case"!":u=new Date((D("!")-this._ticksTo1970)/1e4),f=u.getFullYear(),_=u.getMonth()+1,v=u.getDate();break;case"'":b("'")?M():y=!0;break;default:M()}if(a.length>c&&(o=a.substr(c),!/^\s+/.test(o)))throw"Extra/unparsed characters found in date: "+o;if(-1===f?f=(new Date).getFullYear():100>f&&(f+=(new Date).getFullYear()-(new Date).getFullYear()%100+(l>=f?0:-100)),k>-1)for(_=1,v=k;;){if(r=this._getDaysInMonth(f,_-1),r>=v)break;_++,v-=r}if(u=this._daylightSavingAdjust(new Date(f,_-1,v)),u.getFullYear()!==f||u.getMonth()+1!==_||u.getDate()!==v)throw"Invalid date";return u},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return"";var a,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,n=(i?i.dayNames:null)||this._defaults.dayNames,r=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,o=(i?i.monthNames:null)||this._defaults.monthNames,u=function(t){var i=e.length>a+1&&e.charAt(a+1)===t;return i&&a++,i},c=function(e,t,i){var a=""+t;if(u(e))for(;i>a.length;)a="0"+a;return a},h=function(e,t,i,a){return u(e)?a[t]:i[t]},l="",d=!1;if(t)for(a=0;e.length>a;a++)if(d)"'"!==e.charAt(a)||u("'")?l+=e.charAt(a):d=!1;else switch(e.charAt(a)){case"d":l+=c("d",t.getDate(),2);break;case"D":l+=h("D",t.getDay(),s,n);break;case"o":l+=c("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":l+=c("m",t.getMonth()+1,2);break;case"M":l+=h("M",t.getMonth(),r,o);break;case"y":l+=u("y")?t.getFullYear():(10>t.getYear()%100?"0":"")+t.getYear()%100;break;case"@":l+=t.getTime();break;case"!":l+=1e4*t.getTime()+this._ticksTo1970;break;case"'":u("'")?l+="'":d=!0;break;default:l+=e.charAt(a)}return l},_possibleChars:function(e){var t,i="",a=!1,s=function(i){var a=e.length>t+1&&e.charAt(t+1)===i;return a&&t++,a};for(t=0;e.length>t;t++)if(a)"'"!==e.charAt(t)||s("'")?i+=e.charAt(t):a=!1;else switch(e.charAt(t)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":a=!0;break;default:i+=e.charAt(t)}return i},_get:function(e,i){return e.settings[i]!==t?e.settings[i]:this._defaults[i]},_setDateFromField:function(e,t){if(e.input.val()!==e.lastVal){var i=this._get(e,"dateFormat"),a=e.lastVal=e.input?e.input.val():null,s=this._getDefaultDate(e),n=s,r=this._getFormatConfig(e);try{n=this.parseDate(i,a,r)||s}catch(o){a=t?"":a}e.selectedDay=n.getDate(),e.drawMonth=e.selectedMonth=n.getMonth(),e.drawYear=e.selectedYear=n.getFullYear(),e.currentDay=a?n.getDate():0,e.currentMonth=a?n.getMonth():0,e.currentYear=a?n.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(t,i,a){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},n=function(i){try{return e.datepicker.parseDate(e.datepicker._get(t,"dateFormat"),i,e.datepicker._getFormatConfig(t))}catch(a){}for(var s=(i.toLowerCase().match(/^c/)?e.datepicker._getDate(t):null)||new Date,n=s.getFullYear(),r=s.getMonth(),o=s.getDate(),u=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,c=u.exec(i);c;){switch(c[2]||"d"){case"d":case"D":o+=parseInt(c[1],10);break;case"w":case"W":o+=7*parseInt(c[1],10);break;case"m":case"M":r+=parseInt(c[1],10),o=Math.min(o,e.datepicker._getDaysInMonth(n,r));break;case"y":case"Y":n+=parseInt(c[1],10),o=Math.min(o,e.datepicker._getDaysInMonth(n,r))}c=u.exec(i)}return new Date(n,r,o)},r=null==i||""===i?a:"string"==typeof i?n(i):"number"==typeof i?isNaN(i)?a:s(i):new Date(i.getTime());return r=r&&"Invalid Date"==""+r?a:r,r&&(r.setHours(0),r.setMinutes(0),r.setSeconds(0),r.setMilliseconds(0)),this._daylightSavingAdjust(r)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var a=!t,s=e.selectedMonth,n=e.selectedYear,r=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=r.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=r.getMonth(),e.drawYear=e.selectedYear=e.currentYear=r.getFullYear(),s===e.selectedMonth&&n===e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(a?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&""===e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(t){var i=this._get(t,"stepMonths"),a="#"+t.id.replace(/\\\\/g,"\\");t.dpDiv.find("[data-handler]").map(function(){var t={prev:function(){e.datepicker._adjustDate(a,-i,"M")},next:function(){e.datepicker._adjustDate(a,+i,"M")},hide:function(){e.datepicker._hideDatepicker()},today:function(){e.datepicker._gotoToday(a)},selectDay:function(){return e.datepicker._selectDay(a,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return e.datepicker._selectMonthYear(a,this,"M"),!1},selectYear:function(){return e.datepicker._selectMonthYear(a,this,"Y"),!1}};e(this).bind(this.getAttribute("data-event"),t[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t,i,a,s,n,r,o,u,c,h,l,d,p,g,m,f,_,v,k,y,b,D,w,M,C,x,I,N,T,A,E,S,Y,F,P,O,j,K,R,H=new Date,W=this._daylightSavingAdjust(new Date(H.getFullYear(),H.getMonth(),H.getDate())),L=this._get(e,"isRTL"),U=this._get(e,"showButtonPanel"),B=this._get(e,"hideIfNoPrevNext"),z=this._get(e,"navigationAsDateFormat"),q=this._getNumberOfMonths(e),G=this._get(e,"showCurrentAtPos"),J=this._get(e,"stepMonths"),Q=1!==q[0]||1!==q[1],V=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),$=this._getMinMaxDate(e,"min"),X=this._getMinMaxDate(e,"max"),Z=e.drawMonth-G,et=e.drawYear;if(0>Z&&(Z+=12,et--),X)for(t=this._daylightSavingAdjust(new Date(X.getFullYear(),X.getMonth()-q[0]*q[1]+1,X.getDate())),t=$&&$>t?$:t;this._daylightSavingAdjust(new Date(et,Z,1))>t;)Z--,0>Z&&(Z=11,et--);for(e.drawMonth=Z,e.drawYear=et,i=this._get(e,"prevText"),i=z?this.formatDate(i,this._daylightSavingAdjust(new Date(et,Z-J,1)),this._getFormatConfig(e)):i,a=this._canAdjustMonth(e,-1,et,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(L?"e":"w")+"'>"+i+"</span></a>":B?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(L?"e":"w")+"'>"+i+"</span></a>",s=this._get(e,"nextText"),s=z?this.formatDate(s,this._daylightSavingAdjust(new Date(et,Z+J,1)),this._getFormatConfig(e)):s,n=this._canAdjustMonth(e,1,et,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(L?"w":"e")+"'>"+s+"</span></a>":B?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(L?"w":"e")+"'>"+s+"</span></a>",r=this._get(e,"currentText"),o=this._get(e,"gotoCurrent")&&e.currentDay?V:W,r=z?this.formatDate(r,o,this._getFormatConfig(e)):r,u=e.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(e,"closeText")+"</button>",c=U?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(L?u:"")+(this._isInRange(e,o)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+r+"</button>":"")+(L?"":u)+"</div>":"",h=parseInt(this._get(e,"firstDay"),10),h=isNaN(h)?0:h,l=this._get(e,"showWeek"),d=this._get(e,"dayNames"),p=this._get(e,"dayNamesMin"),g=this._get(e,"monthNames"),m=this._get(e,"monthNamesShort"),f=this._get(e,"beforeShowDay"),_=this._get(e,"showOtherMonths"),v=this._get(e,"selectOtherMonths"),k=this._getDefaultDate(e),y="",D=0;q[0]>D;D++){for(w="",this.maxRows=4,M=0;q[1]>M;M++){if(C=this._daylightSavingAdjust(new Date(et,Z,e.selectedDay)),x=" ui-corner-all",I="",Q){if(I+="<div class='ui-datepicker-group",q[1]>1)switch(M){case 0:I+=" ui-datepicker-group-first",x=" ui-corner-"+(L?"right":"left");break;case q[1]-1:I+=" ui-datepicker-group-last",x=" ui-corner-"+(L?"left":"right");break;default:I+=" ui-datepicker-group-middle",x=""}I+="'>"}for(I+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+x+"'>"+(/all|left/.test(x)&&0===D?L?n:a:"")+(/all|right/.test(x)&&0===D?L?a:n:"")+this._generateMonthYearHeader(e,Z,et,$,X,D>0||M>0,g,m)+"</div><table class='ui-datepicker-calendar'><thead>"+"<tr>",N=l?"<th class='ui-datepicker-week-col'>"+this._get(e,"weekHeader")+"</th>":"",b=0;7>b;b++)T=(b+h)%7,N+="<th"+((b+h+6)%7>=5?" class='ui-datepicker-week-end'":"")+">"+"<span title='"+d[T]+"'>"+p[T]+"</span></th>";for(I+=N+"</tr></thead><tbody>",A=this._getDaysInMonth(et,Z),et===e.selectedYear&&Z===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,A)),E=(this._getFirstDayOfMonth(et,Z)-h+7)%7,S=Math.ceil((E+A)/7),Y=6,this.maxRows=Y,F=this._daylightSavingAdjust(new Date(et,Z,1-E)),P=0;Y>P;P++){for(I+="<tr>",O=l?"<td class='ui-datepicker-week-col'>"+this._get(e,"calculateWeek")(F)+"</td>":"",b=0;7>b;b++)j=f?f.apply(e.input?e.input[0]:null,[F]):[!0,""],K=F.getMonth()!==Z,R=K&&!v||!j[0]||$&&$>F||X&&F>X,O+="<td class='"+((b+h+6)%7>=5?" ui-datepicker-week-end":"")+(K?" ui-datepicker-other-month":"")+(F.getTime()===C.getTime()&&Z===e.selectedMonth&&e._keyEvent||k.getTime()===F.getTime()&&k.getTime()===C.getTime()?" "+this._dayOverClass:"")+(R?" "+this._unselectableClass+" ui-state-disabled":"")+(K&&!_?"":" "+j[1]+(F.getTime()===V.getTime()?" "+this._currentClass:"")+(F.getTime()===W.getTime()?" ui-datepicker-today":""))+"'"+(K&&!_||!j[2]?"":" title='"+j[2].replace(/'/g,"&#39;")+"'")+(R?"":" data-handler='selectDay' data-event='click' data-month='"+F.getMonth()+"' data-year='"+F.getFullYear()+"'")+">"+(K&&!_?"&#xa0;":R?"<span class='ui-state-default'>"+F.getDate()+"</span>":"<a class='ui-state-default"+(F.getTime()===W.getTime()?" ui-state-highlight":"")+(F.getTime()===V.getTime()?" ui-state-active":"")+(K?" ui-priority-secondary":"")+"' href='#'>"+F.getDate()+"</a>")+"</td>",F.setDate(F.getDate()+1),F=this._daylightSavingAdjust(F);I+=O+"</tr>"}Z++,Z>11&&(Z=0,et++),I+="</tbody></table>"+(Q?"</div>"+(q[0]>0&&M===q[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),w+=I}y+=w}return y+=c,e._keyEvent=!1,y},_generateMonthYearHeader:function(e,t,i,a,s,n,r,o){var u,c,h,l,d,p,g,m,f=this._get(e,"changeMonth"),_=this._get(e,"changeYear"),v=this._get(e,"showMonthAfterYear"),k="<div class='ui-datepicker-title'>",y="";if(n||!f)y+="<span class='ui-datepicker-month'>"+r[t]+"</span>";else{for(u=a&&a.getFullYear()===i,c=s&&s.getFullYear()===i,y+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",h=0;12>h;h++)(!u||h>=a.getMonth())&&(!c||s.getMonth()>=h)&&(y+="<option value='"+h+"'"+(h===t?" selected='selected'":"")+">"+o[h]+"</option>");y+="</select>"}if(v||(k+=y+(!n&&f&&_?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",n||!_)k+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(l=this._get(e,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(e){var t=e.match(/c[+\-].*/)?i+parseInt(e.substring(1),10):e.match(/[+\-].*/)?d+parseInt(e,10):parseInt(e,10);
return isNaN(t)?d:t},g=p(l[0]),m=Math.max(g,p(l[1]||"")),g=a?Math.max(g,a.getFullYear()):g,m=s?Math.min(m,s.getFullYear()):m,e.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";m>=g;g++)e.yearshtml+="<option value='"+g+"'"+(g===i?" selected='selected'":"")+">"+g+"</option>";e.yearshtml+="</select>",k+=e.yearshtml,e.yearshtml=null}return k+=this._get(e,"yearSuffix"),v&&(k+=(!n&&f&&_?"":"&#xa0;")+y),k+="</div>"},_adjustInstDate:function(e,t,i){var a=e.drawYear+("Y"===i?t:0),s=e.drawMonth+("M"===i?t:0),n=Math.min(e.selectedDay,this._getDaysInMonth(a,s))+("D"===i?t:0),r=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(a,s,n)));e.selectedDay=r.getDate(),e.drawMonth=e.selectedMonth=r.getMonth(),e.drawYear=e.selectedYear=r.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max"),s=i&&i>t?i:t;return a&&s>a?a:s},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,a){var s=this._getNumberOfMonths(e),n=this._daylightSavingAdjust(new Date(i,a+(0>t?t:s[0]*s[1]),1));return 0>t&&n.setDate(this._getDaysInMonth(n.getFullYear(),n.getMonth())),this._isInRange(e,n)},_isInRange:function(e,t){var i,a,s=this._getMinMaxDate(e,"min"),n=this._getMinMaxDate(e,"max"),r=null,o=null,u=this._get(e,"yearRange");return u&&(i=u.split(":"),a=(new Date).getFullYear(),r=parseInt(i[0],10),o=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(r+=a),i[1].match(/[+\-].*/)&&(o+=a)),(!s||t.getTime()>=s.getTime())&&(!n||t.getTime()<=n.getTime())&&(!r||t.getFullYear()>=r)&&(!o||o>=t.getFullYear())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,a){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var s=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(a,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),s,this._getFormatConfig(e))}}),e.fn.datepicker=function(t){if(!this.length)return this;e.datepicker.initialized||(e(document).mousedown(e.datepicker._checkExternalClick),e.datepicker.initialized=!0),0===e("#"+e.datepicker._mainDivId).length&&e("body").append(e.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof t||"isDisabled"!==t&&"getDate"!==t&&"widget"!==t?"option"===t&&2===arguments.length&&"string"==typeof arguments[1]?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof t?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this].concat(i)):e.datepicker._attachDatepicker(this,t)}):e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i))},e.datepicker=new i,e.datepicker.initialized=!1,e.datepicker.uuid=(new Date).getTime(),e.datepicker.version="1.10.4"})(jQuery);(function(t,e){var i="ui-effects-";t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=h(),n=s._rgba=[];return i=i.toLowerCase(),f(l,function(t,a){var o,r=a.re.exec(i),l=r&&a.parse(r),h=a.space||"rgba";return l?(o=s[h](l),s[c[h].cache]=o[c[h].cache],n=s._rgba=o._rgba,!1):e}),n.length?("0,0,0,0"===n.join()&&t.extend(n,a.transparent),s):a[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var a,o="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,l=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],h=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=h.support={},p=t("<p>")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),h.fn=t.extend(h.prototype,{parse:function(n,o,r,l){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(o),o=e);var u=this,d=t.type(n),p=this._rgba=[];return o!==e&&(n=[n,o,r,l],d="array"),"string"===d?this.parse(s(n)||a._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):"object"===d?(n instanceof h?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var a=s.cache;f(s.props,function(t,e){if(!u[a]&&s.to){if("alpha"===t||null==n[t])return;u[a]=s.to(u._rgba)}u[a][e.idx]=i(n[t],e,!0)}),u[a]&&0>t.inArray(null,u[a].slice(0,3))&&(u[a][3]=1,s.from&&(u._rgba=s.from(u[a])))}),this):e},is:function(t){var i=h(t),s=!0,n=this;return f(c,function(t,a){var o,r=i[a.cache];return r&&(o=n[a.cache]||a.to&&a.to(n._rgba)||[],f(a.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===o[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=h(t),n=s._space(),a=c[n],o=0===this.alpha()?h("transparent"):this,r=o[a.cache]||a.to(o._rgba),l=r.slice();return s=s[a.cache],f(a.props,function(t,n){var a=n.idx,o=r[a],h=s[a],c=u[n.type]||{};null!==h&&(null===o?l[a]=h:(c.mod&&(h-o>c.mod/2?o+=c.mod:o-h>c.mod/2&&(o-=c.mod)),l[a]=i((h-o)*e+o,n)))}),this[n](l)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=h(e)._rgba;return h(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,a=t[2]/255,o=t[3],r=Math.max(s,n,a),l=Math.min(s,n,a),h=r-l,c=r+l,u=.5*c;return e=l===r?0:s===r?60*(n-a)/h+360:n===r?60*(a-s)/h+120:60*(s-n)/h+240,i=0===h?0:.5>=u?h/c:h/(2-c),[Math.round(e)%360,i,u,null==o?1:o]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],a=t[3],o=.5>=s?s*(1+i):s+i-s*i,r=2*s-o;return[Math.round(255*n(r,o,e+1/3)),Math.round(255*n(r,o,e)),Math.round(255*n(r,o,e-1/3)),a]},f(c,function(s,n){var a=n.props,o=n.cache,l=n.to,c=n.from;h.fn[s]=function(s){if(l&&!this[o]&&(this[o]=l(this._rgba)),s===e)return this[o].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[o].slice();return f(a,function(t,e){var s=u["object"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=h(c(d)),n[o]=d,n):h(d)},f(a,function(e,i){h.fn[e]||(h.fn[e]=function(n){var a,o=t.type(n),l="alpha"===e?this._hsla?"hsla":"rgba":s,h=this[l](),c=h[i.idx];return"undefined"===o?c:("function"===o&&(n=n.call(this,c),o=t.type(n)),null==n&&i.empty?this:("string"===o&&(a=r.exec(n),a&&(n=c+parseFloat(a[2])*("+"===a[1]?1:-1))),h[i.idx]=n,this[l](h)))})})}),h.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var a,o,r="";if("transparent"!==n&&("string"!==t.type(n)||(a=s(n)))){if(n=h(a||n),!d.rgba&&1!==n._rgba[3]){for(o="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&o&&o.style;)try{r=t.css(o,"backgroundColor"),o=o.parentNode}catch(l){}n=n.blend(r&&"transparent"!==r?r:"_default")}n=n.toRgbaString()}try{e.style[i]=n}catch(l){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=h(e.elem,i),e.end=h(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},h.hook(o),t.cssHooks.borderColor={expand:function(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t}),e}},a=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function i(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,a={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],"string"==typeof n[i]&&(a[t.camelCase(i)]=n[i]);else for(i in n)"string"==typeof n[i]&&(a[i]=n[i]);return a}function s(e,i){var s,n,o={};for(s in i)n=i[s],e[s]!==n&&(a[s]||(t.fx.step[s]||!isNaN(parseFloat(n)))&&(o[s]=n));return o}var n=["add","remove","toggle"],a={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(jQuery.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(e,a,o,r){var l=t.speed(a,o,r);return this.queue(function(){var a,o=t(this),r=o.attr("class")||"",h=l.children?o.find("*").addBack():o;h=h.map(function(){var e=t(this);return{el:e,start:i(this)}}),a=function(){t.each(n,function(t,i){e[i]&&o[i+"Class"](e[i])})},a(),h=h.map(function(){return this.end=i(this.el[0]),this.diff=s(this.start,this.end),this}),o.attr("class",r),h=h.map(function(){var e=this,i=t.Deferred(),s=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,h.get()).done(function(){a(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),l.complete.call(o[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,a){return s?t.effects.animateClass.call(this,{add:i},s,n,a):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,a){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,a):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(i){return function(s,n,a,o,r){return"boolean"==typeof n||n===e?a?t.effects.animateClass.call(this,n?{add:s}:{remove:s},a,o,r):i.apply(this,arguments):t.effects.animateClass.call(this,{toggle:s},n,a,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,a){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,a)}})}(),function(){function s(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function n(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}t.extend(t.effects,{version:"1.10.4",save:function(t,e){for(var s=0;e.length>s;s++)null!==e[s]&&t.data(i+e[s],t[0].style[e[s]])},restore:function(t,s){var n,a;for(a=0;s.length>a;a++)null!==s[a]&&(n=t.data(i+s[a]),n===e&&(n=""),t.css(s[a],n))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},a=document.activeElement;try{a.id}catch(o){a=document.body}return e.wrap(s),(e[0]===a||t.contains(e[0],a))&&t(a).focus(),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).focus()),e},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var a=e.cssUnit(i);a[0]>0&&(n[i]=a[0]*s+a[1])}),n}}),t.fn.extend({effect:function(){function e(e){function s(){t.isFunction(a)&&a.call(n[0]),t.isFunction(e)&&e()}var n=t(this),a=i.complete,r=i.mode;(n.is(":hidden")?"hide"===r:"show"===r)?(n[r](),s()):o.call(n[0],i,s)}var i=s.apply(this,arguments),n=i.mode,a=i.queue,o=t.effects.effect[i.effect];return t.fx.off||!o?n?this[n](i.duration,i.complete):this.each(function(){i.complete&&i.complete.call(this)}):a===!1?this.each(e):this.queue(a||"fx",e)},show:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="show",this.effect.call(this,i)}}(t.fn.show),hide:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="hide",this.effect.call(this,i)}}(t.fn.hide),toggle:function(t){return function(e){if(n(e)||"boolean"==typeof e)return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="toggle",this.effect.call(this,i)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s}})}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}()})(jQuery);(function(t){var e=/up|down|vertical/,i=/up|left|vertical|horizontal/;t.effects.effect.blind=function(s,n){var a,o,r,l=t(this),h=["position","top","bottom","left","right","height","width"],c=t.effects.setMode(l,s.mode||"hide"),u=s.direction||"up",d=e.test(u),p=d?"height":"width",f=d?"top":"left",g=i.test(u),m={},v="show"===c;l.parent().is(".ui-effects-wrapper")?t.effects.save(l.parent(),h):t.effects.save(l,h),l.show(),a=t.effects.createWrapper(l).css({overflow:"hidden"}),o=a[p](),r=parseFloat(a.css(f))||0,m[p]=v?o:0,g||(l.css(d?"bottom":"right",0).css(d?"top":"left","auto").css({position:"absolute"}),m[f]=v?r:o+r),v&&(a.css(p,0),g||a.css(f,r+o)),a.animate(m,{duration:s.duration,easing:s.easing,queue:!1,complete:function(){"hide"===c&&l.hide(),t.effects.restore(l,h),t.effects.removeWrapper(l),n()}})}})(jQuery);(function(t){t.effects.effect.bounce=function(e,i){var s,n,a,o=t(this),r=["position","top","bottom","left","right","height","width"],l=t.effects.setMode(o,e.mode||"effect"),h="hide"===l,c="show"===l,u=e.direction||"up",d=e.distance,p=e.times||5,f=2*p+(c||h?1:0),g=e.duration/f,m=e.easing,v="up"===u||"down"===u?"top":"left",_="up"===u||"left"===u,b=o.queue(),y=b.length;for((c||h)&&r.push("opacity"),t.effects.save(o,r),o.show(),t.effects.createWrapper(o),d||(d=o["top"===v?"outerHeight":"outerWidth"]()/3),c&&(a={opacity:1},a[v]=0,o.css("opacity",0).css(v,_?2*-d:2*d).animate(a,g,m)),h&&(d/=Math.pow(2,p-1)),a={},a[v]=0,s=0;p>s;s++)n={},n[v]=(_?"-=":"+=")+d,o.animate(n,g,m).animate(a,g,m),d=h?2*d:d/2;h&&(n={opacity:0},n[v]=(_?"-=":"+=")+d,o.animate(n,g,m)),o.queue(function(){h&&o.hide(),t.effects.restore(o,r),t.effects.removeWrapper(o),i()}),y>1&&b.splice.apply(b,[1,0].concat(b.splice(y,f+1))),o.dequeue()}})(jQuery);(function(t){t.effects.effect.clip=function(e,i){var s,n,a,o=t(this),r=["position","top","bottom","left","right","height","width"],l=t.effects.setMode(o,e.mode||"hide"),h="show"===l,c=e.direction||"vertical",u="vertical"===c,d=u?"height":"width",p=u?"top":"left",f={};t.effects.save(o,r),o.show(),s=t.effects.createWrapper(o).css({overflow:"hidden"}),n="IMG"===o[0].tagName?s:o,a=n[d](),h&&(n.css(d,0),n.css(p,a/2)),f[d]=h?a:0,f[p]=h?0:a/2,n.animate(f,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){h||o.hide(),t.effects.restore(o,r),t.effects.removeWrapper(o),i()}})}})(jQuery);(function(t){t.effects.effect.drop=function(e,i){var s,n=t(this),a=["position","top","bottom","left","right","opacity","height","width"],o=t.effects.setMode(n,e.mode||"hide"),r="show"===o,l=e.direction||"left",h="up"===l||"down"===l?"top":"left",c="up"===l||"left"===l?"pos":"neg",u={opacity:r?1:0};t.effects.save(n,a),n.show(),t.effects.createWrapper(n),s=e.distance||n["top"===h?"outerHeight":"outerWidth"](!0)/2,r&&n.css("opacity",0).css(h,"pos"===c?-s:s),u[h]=(r?"pos"===c?"+=":"-=":"pos"===c?"-=":"+=")+s,n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===o&&n.hide(),t.effects.restore(n,a),t.effects.removeWrapper(n),i()}})}})(jQuery);(function(t){t.effects.effect.explode=function(e,i){function s(){b.push(this),b.length===u*d&&n()}function n(){p.css({visibility:"visible"}),t(b).remove(),g||p.hide(),i()}var a,o,r,l,h,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=t.effects.setMode(p,e.mode||"hide"),g="show"===f,m=p.show().css("visibility","hidden").offset(),v=Math.ceil(p.outerWidth()/d),_=Math.ceil(p.outerHeight()/u),b=[];for(a=0;u>a;a++)for(l=m.top+a*_,c=a-(u-1)/2,o=0;d>o;o++)r=m.left+o*v,h=o-(d-1)/2,p.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-o*v,top:-a*_}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:v,height:_,left:r+(g?h*v:0),top:l+(g?c*_:0),opacity:g?0:1}).animate({left:r+(g?0:h*v),top:l+(g?0:c*_),opacity:g?1:0},e.duration||500,e.easing,s)}})(jQuery);(function(t){t.effects.effect.fade=function(e,i){var s=t(this),n=t.effects.setMode(s,e.mode||"toggle");s.animate({opacity:n},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}})(jQuery);(function(t){t.effects.effect.fold=function(e,i){var s,n,a=t(this),o=["position","top","bottom","left","right","height","width"],r=t.effects.setMode(a,e.mode||"hide"),l="show"===r,h="hide"===r,c=e.size||15,u=/([0-9]+)%/.exec(c),d=!!e.horizFirst,p=l!==d,f=p?["width","height"]:["height","width"],g=e.duration/2,m={},v={};t.effects.save(a,o),a.show(),s=t.effects.createWrapper(a).css({overflow:"hidden"}),n=p?[s.width(),s.height()]:[s.height(),s.width()],u&&(c=parseInt(u[1],10)/100*n[h?0:1]),l&&s.css(d?{height:0,width:c}:{height:c,width:0}),m[f[0]]=l?n[0]:c,v[f[1]]=l?n[1]:0,s.animate(m,g,e.easing).animate(v,g,e.easing,function(){h&&a.hide(),t.effects.restore(a,o),t.effects.removeWrapper(a),i()})}})(jQuery);(function(t){t.effects.effect.highlight=function(e,i){var s=t(this),n=["backgroundImage","backgroundColor","opacity"],a=t.effects.setMode(s,e.mode||"show"),o={backgroundColor:s.css("backgroundColor")};"hide"===a&&(o.opacity=0),t.effects.save(s,n),s.show().css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(o,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===a&&s.hide(),t.effects.restore(s,n),i()}})}})(jQuery);(function(t){t.effects.effect.pulsate=function(e,i){var s,n=t(this),a=t.effects.setMode(n,e.mode||"show"),o="show"===a,r="hide"===a,l=o||"hide"===a,h=2*(e.times||5)+(l?1:0),c=e.duration/h,u=0,d=n.queue(),p=d.length;for((o||!n.is(":visible"))&&(n.css("opacity",0).show(),u=1),s=1;h>s;s++)n.animate({opacity:u},c,e.easing),u=1-u;n.animate({opacity:u},c,e.easing),n.queue(function(){r&&n.hide(),i()}),p>1&&d.splice.apply(d,[1,0].concat(d.splice(p,h+1))),n.dequeue()}})(jQuery);(function(t){t.effects.effect.puff=function(e,i){var s=t(this),n=t.effects.setMode(s,e.mode||"hide"),a="hide"===n,o=parseInt(e.percent,10)||150,r=o/100,l={height:s.height(),width:s.width(),outerHeight:s.outerHeight(),outerWidth:s.outerWidth()};t.extend(e,{effect:"scale",queue:!1,fade:!0,mode:n,complete:i,percent:a?o:100,from:a?l:{height:l.height*r,width:l.width*r,outerHeight:l.outerHeight*r,outerWidth:l.outerWidth*r}}),s.effect(e)},t.effects.effect.scale=function(e,i){var s=t(this),n=t.extend(!0,{},e),a=t.effects.setMode(s,e.mode||"effect"),o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"hide"===a?0:100),r=e.direction||"both",l=e.origin,h={height:s.height(),width:s.width(),outerHeight:s.outerHeight(),outerWidth:s.outerWidth()},c={y:"horizontal"!==r?o/100:1,x:"vertical"!==r?o/100:1};n.effect="size",n.queue=!1,n.complete=i,"effect"!==a&&(n.origin=l||["middle","center"],n.restore=!0),n.from=e.from||("show"===a?{height:0,width:0,outerHeight:0,outerWidth:0}:h),n.to={height:h.height*c.y,width:h.width*c.x,outerHeight:h.outerHeight*c.y,outerWidth:h.outerWidth*c.x},n.fade&&("show"===a&&(n.from.opacity=0,n.to.opacity=1),"hide"===a&&(n.from.opacity=1,n.to.opacity=0)),s.effect(n)},t.effects.effect.size=function(e,i){var s,n,a,o=t(this),r=["position","top","bottom","left","right","width","height","overflow","opacity"],l=["position","top","bottom","left","right","overflow","opacity"],h=["width","height","overflow"],c=["fontSize"],u=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],d=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],p=t.effects.setMode(o,e.mode||"effect"),f=e.restore||"effect"!==p,g=e.scale||"both",m=e.origin||["middle","center"],v=o.css("position"),_=f?r:l,b={height:0,width:0,outerHeight:0,outerWidth:0};"show"===p&&o.show(),s={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},"toggle"===e.mode&&"show"===p?(o.from=e.to||b,o.to=e.from||s):(o.from=e.from||("show"===p?b:s),o.to=e.to||("hide"===p?b:s)),a={from:{y:o.from.height/s.height,x:o.from.width/s.width},to:{y:o.to.height/s.height,x:o.to.width/s.width}},("box"===g||"both"===g)&&(a.from.y!==a.to.y&&(_=_.concat(u),o.from=t.effects.setTransition(o,u,a.from.y,o.from),o.to=t.effects.setTransition(o,u,a.to.y,o.to)),a.from.x!==a.to.x&&(_=_.concat(d),o.from=t.effects.setTransition(o,d,a.from.x,o.from),o.to=t.effects.setTransition(o,d,a.to.x,o.to))),("content"===g||"both"===g)&&a.from.y!==a.to.y&&(_=_.concat(c).concat(h),o.from=t.effects.setTransition(o,c,a.from.y,o.from),o.to=t.effects.setTransition(o,c,a.to.y,o.to)),t.effects.save(o,_),o.show(),t.effects.createWrapper(o),o.css("overflow","hidden").css(o.from),m&&(n=t.effects.getBaseline(m,s),o.from.top=(s.outerHeight-o.outerHeight())*n.y,o.from.left=(s.outerWidth-o.outerWidth())*n.x,o.to.top=(s.outerHeight-o.to.outerHeight)*n.y,o.to.left=(s.outerWidth-o.to.outerWidth)*n.x),o.css(o.from),("content"===g||"both"===g)&&(u=u.concat(["marginTop","marginBottom"]).concat(c),d=d.concat(["marginLeft","marginRight"]),h=r.concat(u).concat(d),o.find("*[width]").each(function(){var i=t(this),s={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};f&&t.effects.save(i,h),i.from={height:s.height*a.from.y,width:s.width*a.from.x,outerHeight:s.outerHeight*a.from.y,outerWidth:s.outerWidth*a.from.x},i.to={height:s.height*a.to.y,width:s.width*a.to.x,outerHeight:s.height*a.to.y,outerWidth:s.width*a.to.x},a.from.y!==a.to.y&&(i.from=t.effects.setTransition(i,u,a.from.y,i.from),i.to=t.effects.setTransition(i,u,a.to.y,i.to)),a.from.x!==a.to.x&&(i.from=t.effects.setTransition(i,d,a.from.x,i.from),i.to=t.effects.setTransition(i,d,a.to.x,i.to)),i.css(i.from),i.animate(i.to,e.duration,e.easing,function(){f&&t.effects.restore(i,h)})})),o.animate(o.to,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){0===o.to.opacity&&o.css("opacity",o.from.opacity),"hide"===p&&o.hide(),t.effects.restore(o,_),f||("static"===v?o.css({position:"relative",top:o.to.top,left:o.to.left}):t.each(["top","left"],function(t,e){o.css(e,function(e,i){var s=parseInt(i,10),n=t?o.to.left:o.to.top;return"auto"===i?n+"px":s+n+"px"})})),t.effects.removeWrapper(o),i()}})}})(jQuery);(function(t){t.effects.effect.shake=function(e,i){var s,n=t(this),a=["position","top","bottom","left","right","height","width"],o=t.effects.setMode(n,e.mode||"effect"),r=e.direction||"left",l=e.distance||20,h=e.times||3,c=2*h+1,u=Math.round(e.duration/c),d="up"===r||"down"===r?"top":"left",p="up"===r||"left"===r,f={},g={},m={},v=n.queue(),_=v.length;for(t.effects.save(n,a),n.show(),t.effects.createWrapper(n),f[d]=(p?"-=":"+=")+l,g[d]=(p?"+=":"-=")+2*l,m[d]=(p?"-=":"+=")+2*l,n.animate(f,u,e.easing),s=1;h>s;s++)n.animate(g,u,e.easing).animate(m,u,e.easing);n.animate(g,u,e.easing).animate(f,u/2,e.easing).queue(function(){"hide"===o&&n.hide(),t.effects.restore(n,a),t.effects.removeWrapper(n),i()}),_>1&&v.splice.apply(v,[1,0].concat(v.splice(_,c+1))),n.dequeue()}})(jQuery);(function(t){t.effects.effect.slide=function(e,i){var s,n=t(this),a=["position","top","bottom","left","right","width","height"],o=t.effects.setMode(n,e.mode||"show"),r="show"===o,l=e.direction||"left",h="up"===l||"down"===l?"top":"left",c="up"===l||"left"===l,u={};t.effects.save(n,a),n.show(),s=e.distance||n["top"===h?"outerHeight":"outerWidth"](!0),t.effects.createWrapper(n).css({overflow:"hidden"}),r&&n.css(h,c?isNaN(s)?"-"+s:-s:s),u[h]=(r?c?"+=":"-=":c?"-=":"+=")+s,n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===o&&n.hide(),t.effects.restore(n,a),t.effects.removeWrapper(n),i()}})}})(jQuery);(function(t){t.effects.effect.transfer=function(e,i){var s=t(this),n=t(e.to),a="fixed"===n.css("position"),o=t("body"),r=a?o.scrollTop():0,l=a?o.scrollLeft():0,h=n.offset(),c={top:h.top-r,left:h.left-l,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(e.className).css({top:u.top-r,left:u.left-l,height:s.innerHeight(),width:s.innerWidth(),position:a?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),i()})}})(jQuery);
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/js/datepicker/datepicker-de.js";
(function(factory){
if(typeof define==="function"&&define.amd){
define(["../widgets/datepicker"],factory);
}else{
factory(jQuery.datepicker);
}
}(function(datepicker){
datepicker.regional.de={
closeText:"Schließen",
prevText:"&#x3C;Zurück",
nextText:"Vor&#x3E;",
currentText:"Heute",
monthNames:["Januar","Februar","März","April","Mai","Juni",
"Juli","August","September","Oktober","November","Dezember"],
monthNamesShort:["Jan","Feb","Mär","Apr","Mai","Jun",
"Jul","Aug","Sep","Okt","Nov","Dez"],
dayNames:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],
dayNamesShort:["So","Mo","Di","Mi","Do","Fr","Sa"],
dayNamesMin:["So","Mo","Di","Mi","Do","Fr","Sa"],
weekHeader:"KW",
dateFormat:"dd.mm.yy",
firstDay:1,
isRTL:false,
showMonthAfterYear:false,
yearSuffix:""};
datepicker.setDefaults(datepicker.regional.de);
return datepicker.regional.de;
}));
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/js/multiple-select/multiple-select.js";
(function($){
'use strict';
var sprintf=function(str){
var args=arguments,
flag=true,
i=1;
str=str.replace(/%s/g,function(){
var arg=args[i++];
if(typeof arg==='undefined'){
flag=false;
return'';
}
return arg;
});
return flag?str:'';
};
var removeDiacritics=function(str){
var defaultDiacriticsRemovalMap=[
{'base':'A','letters':/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},
{'base':'AA','letters':/[\uA732]/g},
{'base':'AE','letters':/[\u00C6\u01FC\u01E2]/g},
{'base':'AO','letters':/[\uA734]/g},
{'base':'AU','letters':/[\uA736]/g},
{'base':'AV','letters':/[\uA738\uA73A]/g},
{'base':'AY','letters':/[\uA73C]/g},
{'base':'B','letters':/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},
{'base':'C','letters':/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},
{'base':'D','letters':/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},
{'base':'DZ','letters':/[\u01F1\u01C4]/g},
{'base':'Dz','letters':/[\u01F2\u01C5]/g},
{'base':'E','letters':/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},
{'base':'F','letters':/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},
{'base':'G','letters':/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},
{'base':'H','letters':/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},
{'base':'I','letters':/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},
{'base':'J','letters':/[\u004A\u24BF\uFF2A\u0134\u0248]/g},
{'base':'K','letters':/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},
{'base':'L','letters':/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},
{'base':'LJ','letters':/[\u01C7]/g},
{'base':'Lj','letters':/[\u01C8]/g},
{'base':'M','letters':/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},
{'base':'N','letters':/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},
{'base':'NJ','letters':/[\u01CA]/g},
{'base':'Nj','letters':/[\u01CB]/g},
{'base':'O','letters':/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},
{'base':'OI','letters':/[\u01A2]/g},
{'base':'OO','letters':/[\uA74E]/g},
{'base':'OU','letters':/[\u0222]/g},
{'base':'P','letters':/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},
{'base':'Q','letters':/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},
{'base':'R','letters':/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},
{'base':'S','letters':/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},
{'base':'T','letters':/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},
{'base':'TZ','letters':/[\uA728]/g},
{'base':'U','letters':/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},
{'base':'V','letters':/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},
{'base':'VY','letters':/[\uA760]/g},
{'base':'W','letters':/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},
{'base':'X','letters':/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},
{'base':'Y','letters':/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},
{'base':'Z','letters':/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},
{'base':'a','letters':/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},
{'base':'aa','letters':/[\uA733]/g},
{'base':'ae','letters':/[\u00E6\u01FD\u01E3]/g},
{'base':'ao','letters':/[\uA735]/g},
{'base':'au','letters':/[\uA737]/g},
{'base':'av','letters':/[\uA739\uA73B]/g},
{'base':'ay','letters':/[\uA73D]/g},
{'base':'b','letters':/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},
{'base':'c','letters':/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},
{'base':'d','letters':/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},
{'base':'dz','letters':/[\u01F3\u01C6]/g},
{'base':'e','letters':/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},
{'base':'f','letters':/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},
{'base':'g','letters':/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},
{'base':'h','letters':/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},
{'base':'hv','letters':/[\u0195]/g},
{'base':'i','letters':/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},
{'base':'j','letters':/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},
{'base':'k','letters':/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},
{'base':'l','letters':/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},
{'base':'lj','letters':/[\u01C9]/g},
{'base':'m','letters':/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},
{'base':'n','letters':/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},
{'base':'nj','letters':/[\u01CC]/g},
{'base':'o','letters':/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},
{'base':'oi','letters':/[\u01A3]/g},
{'base':'ou','letters':/[\u0223]/g},
{'base':'oo','letters':/[\uA74F]/g},
{'base':'p','letters':/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},
{'base':'q','letters':/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},
{'base':'r','letters':/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},
{'base':'s','letters':/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},
{'base':'t','letters':/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},
{'base':'tz','letters':/[\uA729]/g},
{'base':'u','letters':/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},
{'base':'v','letters':/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},
{'base':'vy','letters':/[\uA761]/g},
{'base':'w','letters':/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},
{'base':'x','letters':/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},
{'base':'y','letters':/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},
{'base':'z','letters':/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}
];
for(var i=0;i<defaultDiacriticsRemovalMap.length;i++){
str=str.replace(defaultDiacriticsRemovalMap[i].letters,defaultDiacriticsRemovalMap[i].base);
}
return str;
};
function MultipleSelect($el,options){
var that=this,
name=$el.attr('name')||options.name||'';
this.options=options;
this.$el=$el.hide();
this.$label=this.$el.closest('label');
if(this.$label.length===0&&this.$el.attr('id')){
this.$label=$(sprintf('label[for="%s"]',this.$el.attr('id').replace(/:/g,'\\:')));
}
this.$parent=$(sprintf(
'<div class="ms-parent %s" %s/>',
$el.attr('class')||'',
sprintf('title="%s"',$el.attr('title'))));
this.$choice=$(sprintf([
'<button type="button" class="ms-choice">',
'<span class="placeholder">%s</span>',
'<div></div>',
'</button>'
].join(''),
this.options.placeholder));
this.$drop=$(sprintf('<div class="ms-drop %s"%s></div>',
this.options.position,
sprintf(' style="width: %s"',this.options.dropWidth)));
this.$el.after(this.$parent);
this.$parent.append(this.$choice);
this.$parent.append(this.$drop);
if(this.$el.prop('disabled')){
this.$choice.addClass('disabled');
}
this.$parent.css('width',
this.options.width||
this.$el.css('width')||
this.$el.outerWidth()+20);
this.selectAllName='data-name="selectAll'+name+'"';
this.selectGroupName='data-name="selectGroup'+name+'"';
this.selectItemName='data-name="selectItem'+name+'"';
if(!this.options.keepOpen){
$(document).click(function(e){
if($(e.target)[0]===that.$choice[0]||
$(e.target).parents('.ms-choice')[0]===that.$choice[0]){
return;
}
if(($(e.target)[0]===that.$drop[0]||
$(e.target).parents('.ms-drop')[0]!==that.$drop[0]&&e.target!==$el[0])&&
that.options.isOpen){
that.close();
}
});
}
}
MultipleSelect.prototype={
constructor:MultipleSelect,
init:function(){
var that=this,
$ul=$('<ul></ul>');
this.$drop.html('');
if(this.options.filter){
this.$drop.append([
'<div class="ms-search">',
'<input type="text" autocomplete="off" autocorrect="off" autocapitilize="off" spellcheck="false">',
'</div>'].join('')
);
}
if(this.options.selectAll&&!this.options.single){
$ul.append([
'<li class="ms-select-all">',
'<label>',
sprintf('<input type="checkbox" %s /> ',this.selectAllName),
this.options.selectAllDelimiter[0],
this.options.selectAllText,
this.options.selectAllDelimiter[1],
'</label>',
'</li>'
].join(''));
}
$.each(this.$el.children(),function(i,elm){
$ul.append(that.optionToHtml(i,elm));
});
$ul.append(sprintf('<li class="ms-no-results">%s</li>',this.options.noMatchesFound));
this.$drop.append($ul);
this.$drop.find('ul').css('max-height',this.options.maxHeight+'px');
this.$drop.find('.multiple').css('width',this.options.multipleWidth+'px');
this.$searchInput=this.$drop.find('.ms-search input');
this.$selectAll=this.$drop.find('input['+this.selectAllName+']');
this.$selectGroups=this.$drop.find('input['+this.selectGroupName+']');
this.$selectItems=this.$drop.find('input['+this.selectItemName+']:enabled');
this.$disableItems=this.$drop.find('input['+this.selectItemName+']:disabled');
this.$noResults=this.$drop.find('.ms-no-results');
this.events();
this.updateSelectAll(true);
this.update(true);
if(this.options.isOpen){
this.open();
}
},
optionToHtml:function(i,elm,group,groupDisabled){
var that=this,
$elm=$(elm),
classes=$elm.attr('class')||'',
title=sprintf('title="%s"',$elm.attr('title')),
multiple=this.options.multiple?'multiple':'',
disabled,
type=this.options.single?'radio':'checkbox';
if($elm.is('option')){
var value=$elm.val(),
text=that.options.textTemplate($elm),
selected=$elm.prop('selected'),
style=sprintf('style="%s"',this.options.styler(value)),
$el;
disabled=groupDisabled||$elm.prop('disabled');
$el=$([
sprintf('<li class="%s %s" %s %s>',multiple,classes,title,style),
sprintf('<label class="%s">',disabled?'disabled':''),
sprintf('<input type="%s" %s%s%s%s>',
type,this.selectItemName,
selected?' checked="checked"':'',
disabled?' disabled="disabled"':'',
sprintf(' data-group="%s"',group)),
text,
'</label>',
'</li>'
].join(''));
$el.find('input').val(value);
return $el;
}
if($elm.is('optgroup')){
var label=that.options.labelTemplate($elm),
$group=$('<div/>');
group='group_'+i;
disabled=$elm.prop('disabled');
$group.append([
'<li class="group">',
sprintf('<label class="optgroup %s" data-group="%s">',disabled?'disabled':'',group),
this.options.hideOptgroupCheckboxes||this.options.single?'':
sprintf('<input type="checkbox" %s %s>',
this.selectGroupName,disabled?'disabled="disabled"':''),
label,
'</label>',
'</li>'
].join(''));
$.each($elm.children(),function(i,elm){
$group.append(that.optionToHtml(i,elm,group,disabled));
});
return $group.html();
}
},
events:function(){
var that=this,
toggleOpen=function(e){
e.preventDefault();
that[that.options.isOpen?'close':'open']();
};
if(this.$label){
this.$label.off('click').on('click',function(e){
if(e.target.nodeName.toLowerCase()!=='label'||e.target!==this){
return;
}
toggleOpen(e);
if(!that.options.filter||!that.options.isOpen){
that.focus();
}
e.stopPropagation();
});
}
this.$choice.off('click').on('click',toggleOpen)
.off('focus').on('focus',this.options.onFocus)
.off('blur').on('blur',this.options.onBlur);
this.$parent.off('keydown').on('keydown',function(e){
switch(e.which){
case 27:
that.close();
that.$choice.focus();
break;
}
});
this.$searchInput.off('keydown').on('keydown',function(e){
if(e.keyCode===9&&e.shiftKey){
that.close();
}
}).off('keyup').on('keyup',function(e){
if(that.options.filterAcceptOnEnter&&(e.which===13||e.which==32)&&that.$searchInput.val()){
that.$selectAll.click();
that.close();
that.focus();
return;
}
that.filter();
});
this.$selectAll.off('click').on('click',function(){
var checked=$(this).prop('checked'),
$items=that.$selectItems.filter(':visible');
if($items.length===that.$selectItems.length){
that[checked?'checkAll':'uncheckAll']();
}else{
that.$selectGroups.prop('checked',checked);
$items.prop('checked',checked);
that.options[checked?'onCheckAll':'onUncheckAll']();
that.update();
}
});
this.$selectGroups.off('click').on('click',function(){
var group=$(this).parent().attr('data-group'),
$items=that.$selectItems.filter(':visible'),
$children=$items.filter(sprintf('[data-group="%s"]',group)),
checked=$children.length!==$children.filter(':checked').length;
$children.prop('checked',checked);
that.updateSelectAll();
that.update();
that.options.onOptgroupClick({
label:$(this).parent().text(),
checked:checked,
children:$children.get(),
instance:that
});
});
this.$selectItems.off('click').on('click',function(){
that.updateSelectAll();
that.update();
that.updateOptGroupSelect();
that.options.onClick({
label:$(this).parent().text(),
value:$(this).val(),
checked:$(this).prop('checked'),
instance:that
});
if(that.options.single&&that.options.isOpen&&!that.options.keepOpen){
that.close();
}
if(that.options.single){
var clickedVal=$(this).val();
that.$selectItems.filter(function(){
return $(this).val()!==clickedVal;
}).each(function(){
$(this).prop('checked',false);
});
that.update();
}
});
},
open:function(){
if(this.$choice.hasClass('disabled')){
return;
}
this.options.isOpen=true;
this.$choice.find('>div').addClass('open');
this.$drop[this.animateMethod('show')]();
this.$selectAll.parent().show();
this.$noResults.hide();
if(!this.$el.children().length){
this.$selectAll.parent().hide();
this.$noResults.show();
}
if(this.options.container){
var offset=this.$drop.offset();
this.$drop.appendTo($(this.options.container));
this.$drop.offset({
top:offset.top,
left:offset.left
});
}
if(this.options.filter){
this.$searchInput.val('');
this.$searchInput.focus();
this.filter();
}
this.options.onOpen();
},
close:function(){
this.options.isOpen=false;
this.$choice.find('>div').removeClass('open');
this.$drop[this.animateMethod('hide')]();
if(this.options.container){
this.$parent.append(this.$drop);
this.$drop.css({
'top':'auto',
'left':'auto'
});
}
this.options.onClose();
},
animateMethod:function(method){
var methods={
show:{
fade:'fadeIn',
slide:'slideDown'
},
hide:{
fade:'fadeOut',
slide:'slideUp'
}
};
return methods[method][this.options.animate]||method;
},
update:function(isInit){
var selects=this.options.displayValues?this.getSelects():this.getSelects('text'),
$span=this.$choice.find('>span'),
sl=selects.length;
if(sl===0){
$span.addClass('placeholder').html(this.options.placeholder);
}else if(this.options.allSelected&&sl===this.$selectItems.length+this.$disableItems.length){
$span.removeClass('placeholder').html(this.options.allSelected);
}else if(this.options.ellipsis&&sl>this.options.minimumCountSelected){
$span.removeClass('placeholder').text(selects.slice(0,this.options.minimumCountSelected)
.join(this.options.delimiter)+'...');
}else if(this.options.countSelected&&sl>this.options.minimumCountSelected){
$span.removeClass('placeholder').html(this.options.countSelected
.replace('#',selects.length)
.replace('%',this.$selectItems.length+this.$disableItems.length));
}else{
$span.removeClass('placeholder').text(selects.join(this.options.delimiter));
}
if(this.options.addTitle){
$span.prop('title',this.getSelects('text'));
}
this.$el.val(this.getSelects()).trigger('change');
this.$drop.find('li').removeClass('selected');
this.$drop.find('input:checked').each(function(){
$(this).parents('li').first().addClass('selected');
});
if(!isInit){
this.$el.trigger('change');
}
},
updateSelectAll:function(isInit){
var $items=this.$selectItems;
if(!isInit){
$items=$items.filter(':visible');
}
this.$selectAll.prop('checked',$items.length&&
$items.length===$items.filter(':checked').length);
if(!isInit&&this.$selectAll.prop('checked')){
this.options.onCheckAll();
}
},
updateOptGroupSelect:function(){
var $items=this.$selectItems.filter(':visible');
$.each(this.$selectGroups,function(i,val){
var group=$(val).parent().attr('data-group'),
$children=$items.filter(sprintf('[data-group="%s"]',group));
$(val).prop('checked',$children.length&&
$children.length===$children.filter(':checked').length);
});
},
getSelects:function(type){
var that=this,
texts=[],
values=[];
this.$drop.find(sprintf('input[%s]:checked',this.selectItemName)).each(function(){
texts.push($(this).parents('li').first().text());
values.push($(this).val());
});
if(type==='text'&&this.$selectGroups.length){
texts=[];
this.$selectGroups.each(function(){
var html=[],
text=$.trim($(this).parent().text()),
group=$(this).parent().data('group'),
$children=that.$drop.find(sprintf('[%s][data-group="%s"]',that.selectItemName,group)),
$selected=$children.filter(':checked');
if(!$selected.length){
return;
}
html.push('[');
html.push(text);
if($children.length>$selected.length){
var list=[];
$selected.each(function(){
list.push($(this).parent().text());
});
html.push(': '+list.join(', '));
}
html.push(']');
texts.push(html.join(''));
});
}
return type==='text'?texts:values;
},
setSelects:function(values){
var that=this;
this.$selectItems.prop('checked',false);
this.$disableItems.prop('checked',false);
$.each(values,function(i,value){
that.$selectItems.filter(sprintf('[value="%s"]',value)).prop('checked',true);
that.$disableItems.filter(sprintf('[value="%s"]',value)).prop('checked',true);
});
this.$selectAll.prop('checked',this.$selectItems.length===
this.$selectItems.filter(':checked').length+this.$disableItems.filter(':checked').length);
$.each(that.$selectGroups,function(i,val){
var group=$(val).parent().attr('data-group'),
$children=that.$selectItems.filter('[data-group="'+group+'"]');
$(val).prop('checked',$children.length&&
$children.length===$children.filter(':checked').length);
});
this.update();
},
enable:function(){
this.$choice.removeClass('disabled');
},
disable:function(){
this.$choice.addClass('disabled');
},
checkAll:function(){
this.$selectItems.prop('checked',true);
this.$selectGroups.prop('checked',true);
this.$selectAll.prop('checked',true);
this.update();
this.options.onCheckAll();
},
uncheckAll:function(){
this.$selectItems.prop('checked',false);
this.$selectGroups.prop('checked',false);
this.$selectAll.prop('checked',false);
this.update();
this.options.onUncheckAll();
},
focus:function(){
this.$choice.focus();
this.options.onFocus();
},
blur:function(){
this.$choice.blur();
this.options.onBlur();
},
refresh:function(){
this.init();
},
filter:function(){
var that=this,
text=$.trim(this.$searchInput.val()).toLowerCase();
if(text.length===0){
this.$selectAll.parent().show();
this.$selectItems.parent().show();
this.$disableItems.parent().show();
this.$selectGroups.parent().show();
this.$noResults.hide();
}else{
this.$selectItems.each(function(){
var $parent=$(this).parent();
$parent[removeDiacritics($parent.text().toLowerCase()).indexOf(removeDiacritics(text))<0?'hide':'show']();
});
this.$disableItems.parent().hide();
this.$selectGroups.each(function(){
var $parent=$(this).parent();
var group=$parent.attr('data-group'),
$items=that.$selectItems.filter(':visible');
$parent[$items.filter(sprintf('[data-group="%s"]',group)).length?'show':'hide']();
});
if(this.$selectItems.parent().filter(':visible').length){
this.$selectAll.parent().show();
this.$noResults.hide();
}else{
this.$selectAll.parent().hide();
this.$noResults.show();
}
}
this.updateOptGroupSelect();
this.updateSelectAll();
this.options.onFilter(text);
}
};
$.fn.multipleSelect=function(){
var option=arguments[0],
args=arguments,
value,
allowedMethods=[
'getSelects','setSelects',
'enable','disable',
'open','close',
'checkAll','uncheckAll',
'focus','blur',
'refresh','close'
];
this.each(function(){
var $this=$(this),
data=$this.data('multipleSelect'),
options=$.extend({},$.fn.multipleSelect.defaults,
$this.data(),typeof option==='object'&&option);
if(!data){
data=new MultipleSelect($this,options);
$this.data('multipleSelect',data);
}
if(typeof option==='string'){
if($.inArray(option,allowedMethods)<0){
throw'Unknown method: '+option;
}
value=data[option](args[1]);
}else{
data.init();
if(args[1]){
value=data[args[1]].apply(data,[].slice.call(args,2));
}
}
});
return typeof value!=='undefined'?value:this;
};
$.fn.multipleSelect.defaults={
name:'',
isOpen:false,
placeholder:'',
selectAll:true,
selectAllDelimiter:['[',']'],
minimumCountSelected:3,
ellipsis:false,
multiple:false,
multipleWidth:80,
single:false,
filter:false,
width:undefined,
dropWidth:undefined,
maxHeight:250,
container:null,
position:'bottom',
keepOpen:false,
animate:'none',
displayValues:false,
delimiter:', ',
addTitle:false,
filterAcceptOnEnter:false,
hideOptgroupCheckboxes:false,
selectAllText:'Select all',
allSelected:'All selected',
countSelected:'# of % selected',
noMatchesFound:'No matches found',
styler:function(){
return false;
},
textTemplate:function($elm){
return $elm.html();
},
labelTemplate:function($elm){
return $elm.attr('label');
},
onOpen:function(){
return false;
},
onClose:function(){
return false;
},
onCheckAll:function(){
return false;
},
onUncheckAll:function(){
return false;
},
onFocus:function(){
return false;
},
onBlur:function(){
return false;
},
onOptgroupClick:function(){
return false;
},
onClick:function(){
return false;
},
onFilter:function(){
return false;
}
};
})(jQuery);
var tvmDatepicker=function(config){
var tvmId=config.id;
var eventId=tvm.getQueryParameter('eventId');
var start=new Date();
var end=new Date();
end.setMonth(end.getMonth()+1,0);
var categories={};
var tags={};
var events=[];
var offset=0;
var limit=config.limit!=null?Number(config.limit):10;
var showCalendar=JSON.parse(config.showCalendar);
var showFilter=JSON.parse(config.showFilter);
var addDays=function(diff){
start=$('#'+tvmId+' .tvm-picker__datepicker').datepicker("getDate");
var currentMonth=start.getMonth();
start.setDate(start.getDate()+diff);
end=new Date(start);
if(currentMonth!=start.getMonth()){
loadEvents(start,end,function(){
showEventsFor(start,end);
refreshSelects();
});
}else{
clearEventlist();
showEventsFor(start,end);
}
};
var addMonths=function(diff){
start=$('#'+tvmId+' .tvm-picker__datepicker').datepicker("getDate");
start.setMonth(start.getMonth()+diff,1);
end=new Date(start);
end.setMonth(end.getMonth()+1,0);
loadEvents(start,end,function(){
showEventsFor(start,end);
refreshSelects();
});
};
var addRangeToUrl=function(url,start,end){
if(url){
return withJoiner(url)+'start='+start+(end!=null?'&end='+end:'');
}
};
var addDateRangeToUrl=function(url,start,end){
var from=new Date(start);
from.setMonth(from.getMonth()-1,1);
from=$.datepicker.formatDate('yy-mm-dd',from);
var to=new Date(start);
if(end!=null){
to=new Date(end);
}
to.setMonth(to.getMonth()+2,0);
to=$.datepicker.formatDate('yy-mm-dd',to);
return addRangeToUrl(url,from,to);
};
var clearEventlist=function(){
$('#'+tvmId+' .tvm-picker__event-list').html('');
$('#'+tvmId+' .more-results').removeClass('tvm-more-results--is-visible');
};
var create=function(){
loadEvents(start,end,function(){
createUI();
registerEventHandler();
showEventsFor(start,null);
});
};
var createOptions=function(items,selectedIds){
var options=[];
for(key in items){
var value=key.substring(key.indexOf(':')+1);
var $opt=$('<option />',{
value:value,
text:items[key]
});
if(selectedIds!=null&&selectedIds.indexOf(value)>=0){
$opt.prop("selected",true);
}
options.push($opt);
}
return options;
};
var createUI=function(){
if(showCalendar){
$('#'+tvmId+' .tvm-picker__datepicker').datepicker(
{
dateFormat:'dd/mm/yy',
beforeShowDay:highlightDays,
onSelect:function(dateStr){
start=$(this).datepicker('getDate');
end=new Date(start);
loadEvents(start,end,function(){showEventsFor(start,end);refreshSelects();});
},
showOtherMonths:true,
selectOtherMonths:true
},
$.datepicker.regional['de']
);
$('#'+tvmId+' .tvm-picker__today-link').addClass('disabled');
}else{
$('#'+tvmId+' .tvm-picker__datepicker').datepicker();
}
if(showFilter){
$('#'+tvmId+' .tvm-picker__daterange-picker').datepicker({
nextText:'Nächster Monat',
onSelect:function(dateStr,picker){
if("from"==picker.input[0].name){
$('#'+tvmId+' input.tvm-picker__daterange-picker[name=to]').datepicker('option','minDate',$(this).datepicker('getDate'));
}
filterChange(true);
},
prevText:'Vorheriger Monat',
showOtherMonths:true,
selectOtherMonths:true
});
refreshSelects();
}
};
var filterChange=function(refresh){
start=showFilter?$('#'+tvmId+' input.tvm-picker__daterange-picker[name=from]').datepicker('getDate'):null;
if(start==null){
start=new Date();
}
end=showFilter?$('#'+tvmId+' input.tvm-picker__daterange-picker[name=to]').datepicker('getDate'):null;
loadEvents(start,end,function(){showEventsFor(start,end);if(refresh){refreshSelects();}});
};
var highlightDays=function(date){
for(var i=0;i<events.length;i++){
if(new Date(events[i].start).toString().substr(0,16)==date.toString().substr(0,16)){
return[true,'highlight'];
}
if(new Date(events[i].start).getTime()<=date.getTime()&&new Date(events[i].end).getTime()>date.getTime()){
return[true,'highlight'];
}
}
return[true,''];
};
var loadEvents=function(start,end,callback){
var url=addDateRangeToUrl($('#'+tvmId+' .tvm-picker__datepicker').attr('data-source'),start,end);
if(showFilter){
url+='&weekends='+$('#'+tvmId+' .tvm-picker__weekends-only').is(':checked');
var categoryIds=$('#'+tvmId+' select.tvm-picker__selector-categories').val();
if(categoryIds){
categoryIds.forEach(function(value,index){
url+='&categoryId='+value;
});
}
var tagIds=$('#'+tvmId+' select.tvm-picker__selector-tags').val();
if(tagIds){
tagIds.forEach(function(value,index){
url+='&tagId='+value;
});
}
}
if(eventId){
url=withJoiner($('#'+tvmId+' .tvm-picker__datepicker').attr('data-source'));
url+='eventId='+eventId;
}
categories={};
tags={};
events=[];
offset=0;
clearEventlist();
$.ajax({
url:url
}).done(function(data){
$(data).each(function(index,item){
events.push(item);
if(item.category){
categories[item.category.href]=item.category.name;
}
if(item.tags){
$(item.tags).each(function(index,item){
tags[item.href]=item.name;
});
}
});
}).always(function(){
$('#'+tvmId+' .tvm-picker__datepicker').datepicker('refresh');
callback();
});
};
var multipleSelectOptions={
allSelected:'Alle ausgewählt',
countSelected:'# von % ausgewählt',
filter:true,
minimumCountSelected:1,
placeholder:'Keine ausgewählt',
position:'top',
selectAll:false,
onClick:function(item){
filterChange(false);
}
};
var refreshSelects=function(){
var categoryIds=$('#'+tvmId+' select.tvm-picker__selector-categories').val();
$('#'+tvmId+' select.tvm-picker__selector-categories').empty().append(createOptions(categories,categoryIds)).multipleSelect(multipleSelectOptions,'refresh');
$('#'+tvmId+' select.tvm-picker__selector-categories').multipleSelect(Object.keys(categories).length==0?'disable':'enable');
var tagIds=$('#'+tvmId+' select.tvm-picker__selector-tags').val();
$('#'+tvmId+' select.tvm-picker__selector-tags').empty().append(createOptions(tags,tagIds)).multipleSelect(multipleSelectOptions,'refresh');
$('#'+tvmId+' select.tvm-picker__selector-tags').multipleSelect(Object.keys(tags).length==0?'disable':'enable');
};
var registerEventHandler=function(){
$('#'+tvmId+' .tvm-picker__today .tvm-picker__prev-link').click(function(event){
event.preventDefault();
addDays(-1);
});
$('#'+tvmId+' .tvm-picker__today .tvm-picker__next-link').click(function(event){
event.preventDefault();
addDays(1);
});
$('#'+tvmId+' .tvm-picker__month .tvm-picker__prev-link').click(function(event){
event.preventDefault();
addMonths(-1);
});
$('#'+tvmId+' .tvm-picker__month .tvm-picker__next-link').click(function(event){
event.preventDefault();
addMonths(1);
});
$('#'+tvmId+' .tvm-picker__right').on("swiperight",function(){
addMonths(-1);
});
$('#'+tvmId+' .tvm-picker__right').on("swipeleft",function(){
addMonths(1);
});
$('#'+tvmId+' .tvm-picker__reset-link').click(function(event){
resetFilter();
setDate(new Date());
filterChange(true);
});
$('#'+tvmId+' .tvm-picker__today-link').click(function(event){
event.preventDefault();
if($(this).hasClass('disabled')){
return;
}
start=new Date();
end=new Date(start);
loadEvents(start,end,function(){$('#'+tvmId+' .tvm-picker__today-link').addClass('disabled');showEventsFor(start,end);refreshSelects();});
});
$('#'+tvmId+' .tvm-picker__weekends-only').change(function(event){
event.preventDefault();
filterChange(true);
});
$('#'+tvmId+' .more-results').click(function(event){
offset+=limit;
showEventsFor(start,null);
$(this).removeClass('tvm-more-results--is-visible');
});
$('#'+tvmId+' .tvm-picker__daterange-from .tvm-picker__daterange-link').click(function(event){
$('#'+tvmId+' input.tvm-picker__daterange-picker[name=from]').datepicker('show');
});
$('#'+tvmId+' .tvm-picker__daterange-to .tvm-picker__daterange-link').click(function(event){
$('#'+tvmId+' input.tvm-picker__daterange-picker[name=to]').datepicker('show');
});
};
var resetFilter=function(date){
$('#'+tvmId+' .tvm-picker__weekends-only').attr("checked",false);
$('#'+tvmId+' .tvm-picker__daterange-picker').datepicker("setDate",null);
$('#'+tvmId+' .tvm-picker__selector select').multipleSelect('uncheckAll');
}
var setDate=function(date){
if(showCalendar){
$('#'+tvmId+' .tvm-picker__date').html($.datepicker.formatDate('MM yy',date));
$('#'+tvmId+' .tvm-picker__datepicker').datepicker("setDate",date);
$('#'+tvmId+' .tvm-picker__today-link').removeClass('disabled');
}
if(showFilter){
$('#'+tvmId+' input.tvm-picker__daterange-picker[name=from]').datepicker('setDate',date);
$('#'+tvmId+' input.tvm-picker__daterange-picker[name=to]').datepicker('option','minDate',date);
$('#'+tvmId+' .tvm-picker__currentdate-day').html($.datepicker.formatDate('DD',date));
$('#'+tvmId+' .tvm-picker__currentdate-date').html($.datepicker.formatDate('dd. MM',date));
}
};
var showEventsFor=function(start,end){
setDate(start);
start=$.datepicker.formatDate('yy-mm-dd',start);
var from=showFilter?$('#'+tvmId+' input.tvm-picker__daterange-picker[name=from]').datepicker('getDate'):null;
if(from!=null){
from=$.datepicker.formatDate('yy-mm-dd',from);
if(from>start){
start=from;
}
}
if(end!=null){
end=$.datepicker.formatDate('yy-mm-dd',end);
}
var to=showFilter?$('#'+tvmId+' input.tvm-picker__daterange-picker[name=to]').datepicker('getDate'):null;
if(to!=null){
to=$.datepicker.formatDate('yy-mm-dd',to);
if(end==null||to<end){
end=to;
}
}
var url=addRangeToUrl($('#'+tvmId+' .tvm-picker__datepicker').attr('data-event-list'),start,end);
if(!url){
return;
}
if(showFilter){
url+='&weekends='+$('#'+tvmId+' .tvm-picker__weekends-only').is(':checked');
var categoryIds=$('#'+tvmId+' select.tvm-picker__selector-categories').val();
if(categoryIds){
categoryIds.forEach(function(value,index){
url+='&categoryId='+value;
});
}
var tagIds=$('#'+tvmId+' select.tvm-picker__selector-tags').val();
if(tagIds){
tagIds.forEach(function(value,index){
url+='&tagId='+value;
});
}
}
url+='&offset='+offset;
if(eventId){
url=withJoiner($('#'+tvmId+' .tvm-picker__datepicker').attr('data-event-list'));
url+='eventId='+eventId+'&listItem=true';
}
$.ajax({
url:url
}).done(function(data){
$('#'+tvmId+' .tvm-picker__event-list').append(data);
$('#'+tvmId+' .tvm-picker__event-list .event .link').each(function(index,item){
tvm.addFancyBox(item);
});
$('#'+tvmId+' .tvm-picker__event-list .event .name a').each(function(index,item){
tvm.addFancyBox(item);
});
if(eventId){
$('#'+tvmId+' [data-id="'+eventId+'"] .link').each(function(index,item){
$(item).trigger('click');
eventId=null;
});
}
if($(data).size()>=limit){
$('#'+tvmId+' .more-results').addClass('tvm-more-results--is-visible');
}
}).fail(function(){
clearEventlist();
});
};
var withJoiner=function(url){
return url+(url.indexOf('?')>=0?'&':'?');
};
create();
};
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/js/fullcalendar.js";
var tvmFullcalendar=function(){
var create=function(){
$(".tvm-calendar__fullCalendar").each(function(){
var fullCalendar=$(this);
var eventSourceUrl=fullCalendar.data("source");
var displayDate=fullCalendar.data("displayDate");
var eventId=fullCalendar.data("eventId");
var eventListUrl=fullCalendar.data("eventList");
fullCalendar.fullCalendar({
events:eventSourceUrl,
header:{
left:'title',
center:'today,month,agendaWeek,agendaDay',
right:'prev,next'
},
firstDay:1,
lang:'de',
eventAfterRender:function(event,element,view){
element=$(element);
element.prop('title',event.name);
var start=new Date(event.start).toJSON().substring(0,10);
element.prop('href',eventListUrl+'&eventId='+event.id);
if(event.imageSrc){
element.addClass('white');
}
tvm.addFancyBox(element);
if(eventId==event.id){
element.trigger('click');
}
},
eventAfterAllRender:function(view){
}
});
if(displayDate){
fullCalendar.fullCalendar('gotoDate',displayDate);
}
});
var eventId=tvm.getQueryParameter('eventId');
if(eventId){
tvm.showEvent(eventId);
}
};
create();
};
if(!window.tvm)window.tvm={};
tvm.getQueryParameter=function(name){
var queryString=document.location.href.split('\?')[1];
if(queryString){
var queryObject=queryString.split("&").map(function(n){
return n=n.split("="),this[n[0]]=n[1],this
}.bind({}))[0];
var value=queryObject[name];
return value;
}
return'';
};
tvm.addFancyBox=function(item){
var $item=$(item);
if(!$item.hasClass('fancybox.ajax')){
$item.addClass('fancybox.ajax');
$item.fancybox({
autosize:false,
width:1000,
padding:0,
href:$item.data('fancybox-href'),
afterShow:function(){
var $closebox=$('.fancybox-close');
if($(item).hasClass('white')){
$closebox.addClass('white');
}
$closebox.prop('title','Schließen');
new Clipboard('.fancybox-inner .tvm-event .socialbar .copy .link');
}
});
}
};
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/tvm/social/:module.js";
jQuery(function($){
function initializeEventForm(){
var $eventForm=$(this);
$eventForm.find('[data-chosen]').each(function(){
var $select=$(this);
var chosenData=$select.data("chosen");
var chosenOptions=typeof chosenData==='string'?JSON.parse(chosenData):chosenData;
$select.chosen(chosenOptions);
});
$eventForm.find('.image-widget').each(function(){
var $widget=$(this);
var $image=$widget.find('img');
var $delete=$widget.find('.image-delete');
var $file=$widget.find('.image-file');
var imageSrc=$image.attr('src');
var imageBlobURL;
$file
.hide()
.on('change',function(){
var fileList=this.files;
if(fileList.length>0){
if(imageBlobURL){
URL.revokeObjectURL(imageBlobURL);
}
imageSrc=imageBlobURL=URL.createObjectURL(fileList[0]);
$image.attr('src',imageSrc);
}
});
$delete.on('change',function(){
if($delete.is(':checked')){
$image.addClass('will-delete');
}else{
$image.removeClass('will-delete')
}
});
$image
.on('click',function(){
$file.trigger('click');
});
});
function setupTimeVisibility(){
var $wholeDayInput=$(this);
var $form=$wholeDayInput.closest('form');
var $startTimeWrapper=$form.find('.startTimeWrapper');
var $endTimeWrapper=$form.find('.endTimeWrapper');
function show($collection){
$collection
.removeClass('hidden')
.find('input')
.removeAttr('disabled');
}
function hide($collection){
$collection
.addClass('hidden')
.find('input')
.attr('disabled',true);
}
if($wholeDayInput.is(':checked')){
hide($startTimeWrapper);
hide($endTimeWrapper);
}else{
show($startTimeWrapper);
show($endTimeWrapper);
}
}
$eventForm.find('.wholeDayInput')
.on('change',setupTimeVisibility)
.each(setupTimeVisibility);
}
$('[data-id="eventForm"]').each(initializeEventForm);
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/advanced/structuredData/social/:module.js";
jQuery(function($){
function initializeOrganisationForm(){
var $organisationForm=$(this);
$organisationForm.find('[data-chosen]').each(function(){
var $select=$(this);
var chosenData=$select.data("chosen");
var chosenOptions=typeof chosenData==='string'?JSON.parse(chosenData):chosenData;
$select.chosen(chosenOptions);
});
$organisationForm.find('.image-widget').each(function(){
var $widget=$(this);
var $image=$widget.find('img');
var $delete=$widget.find('.image-delete');
var $file=$widget.find('.image-file');
var imageSrc=$image.attr('src');
var imageBlobURL;
$file
.hide()
.on('change',function(){
var fileList=this.files;
if(fileList.length>0){
if(imageBlobURL){
URL.revokeObjectURL(imageBlobURL);
}
imageSrc=imageBlobURL=URL.createObjectURL(fileList[0]);
$image.attr('src',imageSrc);
}
});
$delete.on('change',function(){
if($delete.is(':checked')){
$image.addClass('will-delete');
}else{
$image.removeClass('will-delete')
}
});
$image
.on('click',function(){
$file.trigger('click');
});
});
}
$('[data-id="organisationForm"]').each(initializeOrganisationForm);
});
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/layout/metropolis/integration/bim/:module.js";
var BIM;
(function(BIM){
BIM.angularModule=angular.module('bimApp',['searchAggregator2App']);
BIM.angularModule.directive('bimResultPage',[
'sa2AdapterService',
function(adapterService){
return{
restrict:'A',
scope:true,
link:function($scope,element,attrs){
$scope.pageCount=1;
$scope.elementId='#'+attrs.id;
var filterElement=$($scope.elementId).find('select[name=filter]');
var queryElement=$($scope.elementId).find('input[name=query]');
var doLoad=function(){
var filter=filterElement&&filterElement.val()!==undefined?filterElement.val():'';
var query=queryElement&&queryElement.val()!==undefined?queryElement.val():'';
var limit=Number($($scope.elementId).attr('data-limit'));
var offset=$scope.pageCount*limit;
var url=attrs.bimResultPage.replace('\{filter\}',filter).replace('\{query\}',query).replace('\{offset\}',offset);
if($scope.page==url){
return;
}
var visible=$($scope.elementId+'-result').children().last().visible(true);
if(!visible&&offset!=0){
return;
}
if($scope.jqxhr){
if(offset>0){
return;
}
if(query){
$scope.jqxhr.abort();
}
}
$scope.pageCount=$scope.pageCount+1;
$scope.page=url;
$($scope.elementId).children('.more-results').hide();
$($scope.elementId).children('.no-results').hide();
$($scope.elementId).children('.nomore-results').hide();
$($scope.elementId).children('.loading').show();
if(query||filter){
queryElement.siblings('.loading').css('display','inline-block');
}
$scope.jqxhr=$.ajax($scope.page)
.done(function(data,textStatus,jqXHR){
var newElements=$(data);
if(offset==0){
$($scope.elementId+'-result').empty();
}
$($scope.elementId+'-result').append(newElements);
if(newElements.length>0){
if(newElements.length>=limit&&!filter){
$($scope.elementId).children('.more-results').css('display','block');
}
$('body').trigger("bimResultPage.load");
$('body').trigger("bimSearchPage.load");
}
else{
if(query||filter){
if(offset>0){
$($scope.elementId).children('.nomore-results').show();
}
else{
$($scope.elementId).children('.no-results').show();
}
}
else{
$($scope.elementId).children('.nomore-results').show();
}
}
})
.fail(function(jqXHR,textStatus,errorThrown){
console.log(jqXHR.status+' '+textStatus);
if(jqXHR.status>=400){
$scope.page='';
$($scope.elementId).children('.nomore-results').show();
}
})
.always(function(){
$scope.jqxhr=null;
queryElement.siblings('.loading').hide();
$($scope.elementId).children('.loading').hide();
});
};
var timeout=null;
queryElement.on('keyup',function(event,tab){
if(timeout){
clearTimeout(timeout);
}
var keyCode=event.which||event.keyCode;
timeout=setTimeout(function(){
$scope.pageCount=0;
doLoad();
},keyCode==13?0:500);
});
filterElement.on('change',function(event,tab){
$scope.pageCount=0;
doLoad();
});
$(window).on('scroll',function(){
var disableMoreResults=JSON.parse($($scope.elementId).attr('data-disable-moreresults'));
var scrollTop=$(window).scrollTop();
if(scrollTop>$scope.lastScrollTop){
if($scope.pageCount<3&&!queryElement.val()&&!filterElement.val()){
if(disableMoreResults){
return;
}
doLoad();
}
}
$scope.lastScrollTop=scrollTop;
});
$($scope.elementId).children('.more-results').on('click',function(event,tab){
$(this).hide();
doLoad();
});
}
};
}
]);
BIM.angularModule.directive('bimEntryIndex',[
'sa2AdapterService',
function(adapterService){
return{
restrict:'E',
scope:true,
template:"\n<p ng-show=\"loading\"><i class=\"fa fa-spinner fa-pulse\"></i> lade Leistungen &hellip;</p>\n<p ng-if=\"!loading && !result.items.length\">Es existieren keine Leistungen unter {{ letter }}</p>\n<ul ng-hide=\"!result\">\n\t<li ng-repeat=\"item in result.items\">\n\t\t<a ng-href=\"{{ generateUrl(item) }}\" ng-click=\"open(item)\" title=\"{{ item.name }}\">{{ item.name }}</a> \n\t</li>\n</ul>\n<ul ng-if=\"result.totalCount > 0\"\n\tclass=\"pagination\">\n\t<li class=\"arrow\" ng-class=\"{'unavailable': loading || page &lt;= 1}\">\n\t\t<a href=\"#page[-]\"\n\t\t   onclick=\"return false;\"\n\t\t   ng-click=\"switchPage(page - 1)\">&laquo;</a>\n\t</li>\n\n\t<li ng-if=\"page &gt; (paginationScope + 1)\" ng-class=\"{'unavailable': loading}\">\n\t\t<a href=\"#page[1]\"\n\t\t   onclick=\"return false;\"\n\t\t   ng-click=\"switchPage(1)\">\n\t\t\t1\n\t\t</a>\n\t</li>\n\n\t<li ng-if=\"page &gt; (paginationScope + 2)\" class=\"unavailable\">\n\t\t<a href=\"#\" onclick=\"return false;\">&hellip;</a>\n\t</li>\n\n\t<li ng-repeat=\"p in determinePages(page, pages)\"\n\t\tng-class=\"{'current': p == page, 'unavailable': loading}\">\n\t\t<a ng-href=\"#page[{{ p }}]\"\n\t\t   onclick=\"return false;\"\n\t\t   ng-click=\"switchPage(p)\">\n\t\t\t{{ p }}\n\t\t</a>\n\t</li>\n\n\t<li ng-if=\"page &lt; (pages - (paginationScope + 1))\" class=\"unavailable\">\n\t\t<a href=\"#\" onclick=\"return false;\">&hellip;</a>\n\t</li>\n\n\t<li ng-if=\"page &lt; (pages - paginationScope)\" ng-class=\"{'unavailable': loading}\">\n\t\t<a ng-href=\"#page[{{ pages }}]\"\n\t\t   onclick=\"return false;\"\n\t\t   ng-click=\"switchPage(pages)\">\n\t\t\t{{ pages }}\n\t\t</a>\n\t</li>\n\n\t<li class=\"arrow\" ng-class=\"{'unavailable': loading || page &gt;= pages}\">\n\t\t<a href=\"#page[+]\"\n\t\t   onclick=\"return false;\"\n\t\t   ng-click=\"switchPage(page + 1)\">\n\t\t\t&raquo;\n\t\t</a>\n\t</li>\n\n\t<li>{{ result.totalCount }} Leistungen</li>\n</ul>\n",
link:function compile($scope,element,attrs){
var endpoint=attrs.endpoint;
var letter=attrs.letter;
var urlPattern=attrs.urlPattern;
var baseRGS=attrs.baseRgs;
if(!endpoint){
throw"Attribute <bim-entry-index endpoint=\"...\"> is mandatory";
}
if(!letter){
throw"Attribute <bim-entry-index letter=\"...\"> is mandatory";
}
if(!urlPattern){
throw"Attribute <bim-entry-index url-pattern=\"...\"> is mandatory";
}
var container=element.parent('[id^="entryIndex"]');
var doLoad=function(){
if($scope.loading){
return;
}
$scope.loading=true;
var options={
offset:($scope.page-1)*$scope.perPage,
limit:$scope.perPage,
filterQueries:[
{field:'name',value:letter+'*'}
],
sortFields:[
{field:'name'}
],
onlyCustomFields:["name"]
};
if($scope.chosenPlace.rgs){
(options.filterQueries||(options.filterQueries=[])).push({
field:'rgs',
value:$scope.chosenPlace.rgs,
recursive:true
});
}
else if(baseRGS){
(options.filterQueries||(options.filterQueries=[])).push({
field:'rgs',
value:baseRGS,
recursive:true
});
}
adapterService
.query(endpoint,'entry',undefined,options)
.then(function(result){
$scope.result=result;
$scope.pages=Math.ceil(result.totalCount/$scope.perPage);
$scope.loading=false;
})
.catch(function(error){
$scope.result=null;
$scope.loading=false;
});
};
$scope.$watch("chosenPlace.rgs",function(newValue){
if(container.hasClass('active')){
doLoad();
}
});
$scope.letter=letter;
$scope.urlPattern=urlPattern;
$scope.generateUrl=function(item){
if(item.self.id.match(":topic:")){
return"javascript:void(0);";
}
return urlPattern
.replace('%id%',encodeURIComponent(item.self.id))
.replace('%name%',ionas.normalizeName(item.name));
};
$scope.open=function(item){
if(item.self.id.match(":topic:")){
$scope.sa2search.query=item.name+" ["+item.self.id+"]";
return false;
}
return true;
};
$scope.switchPage=function(page){
if($scope.loading
||!$scope.result
||page<1
||page>Math.ceil($scope.result.totalCount/$scope.perPage)){
return;
}
$scope.page=page;
doLoad();
};
$scope.page=1;
$scope.perPage=15;
$scope.pages=1;
$scope.paginationScope=1;
$scope.determinePages=function(page,pages){
var min=Math.max(page-$scope.paginationScope,1);
var max=Math.min(page+$scope.paginationScope,pages);
var numbers=[];
for(var number=min;number<=max;number++){
numbers.push(number);
}
return numbers;
};
$scope.loading=false;
if(container.hasClass('active')){
doLoad();
}
container.on('toggled',function(event,tab){
doLoad();
});
}
};
}
]);
BIM.angularModule.config([
'$compileProvider',
function($compileProvider){
$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|javascript):/);
}
]);
})(BIM||(BIM={}));
if(!window.bim)window.bim={};
bim.queryTabContentIsActive=false;
bim.queryTabContent=function(element){
if(bim.queryTabContentIsActive){
return;
}
var id=$(element).attr('href');
$(element).parent().siblings().removeClass('is-active');
$(element).parent().addClass('is-active');
$(id).siblings().removeClass('is-active');
$(id).addClass('is-active');
$(id).children('.loading').show();
if($(id).children('.loading').length>0){
bim.queryTabContentIsActive=true;
var filterElement=$('#'+$(element).parent().parent().attr('data-id')).find('select[name=filter]');
var filter=filterElement&&filterElement.val()!==undefined?filterElement.val():'';
var queryElement=$('#'+$(element).parent().parent().attr('data-id')).find('input[name=query]');
var query=queryElement&&queryElement.val()!==undefined?queryElement.val():'';
var url=$(element).parents('ul').attr('data-bim-url').replace('{filter}',filter).replace('{query}',query).replace('{index}',element.attr('data-bim-index'));
var jqxhr=$.ajax(url)
.done(function(data,textStatus,jqXHR){
$(id).empty().append($(data).children());
if(typeof PictureSwitcher!=='undefined'&&PictureSwitcher!==null){
PictureSwitcher().init();
}
})
.fail(function(jqXHR,textStatus,errorThrown){
console.log(jqXHR.status+' '+textStatus);
})
.always(function(){
$(id).children('.loading').remove();
bim.queryTabContentIsActive=false;
});
}
};
bim.jqxhr=function(pseudofile,id,showMoreResults){
$('#'+id).children('.more-results').hide();
$('#'+id).children('.no-results').hide();
$('#'+id).children('.no-results-no-regio').hide();
$('#'+id+'-loading').show();
$('#'+id+'-callout').remove();
var jqxhr=$.ajax(pseudofile)
.done(function(data,textStatus,jqXHR){
if($(data).length==0){
$('#'+id+'-result').hide();
$('ul[data-id="'+id+'"]').hide();
if(document.cookie.indexOf("chosenPlace=")>=0){
$(".no-results-no-regio").hide();
$(".no-results").show();
}else{
$(".no-results-no-regio").show();
$(".no-results").hide();
}
}else{
$('#'+id+'-result').show();
if(/-list.html/.test(pseudofile)){
$('#'+id+'-result').append(data);
if($.parseJSON(showMoreResults)){
$('#'+id).children('.more-results').css('display','block');
}
}
if(/-index.html/.test(pseudofile)){
$('#'+id+'-component').empty().append(data);
}
if(/-filter-options.html/.test(pseudofile)){
$('select[data-id="'+id+'"]').html(data);
$('select[data-id="'+id+'"]').trigger("chosen:updated");
}
$(document).foundation();
if(typeof PictureSwitcher!=='undefined'&&PictureSwitcher!==null){
PictureSwitcher().init();
}
}
})
.fail(function(jqXHR,textStatus,errorThrown){
$('#'+id+'-callout').remove();
$("<div id='"+id+"-callout' class='callout'>Fehler beim Laden der Ergebnisse. Bitte laden Sie die Seite erneut.</div>").insertBefore($('#'+id+'-loading'));
console.log(jqXHR.status+' '+textStatus);
})
.always(function(){
$('#'+id+'-loading').hide();
});
};
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/tracker/universal/:module.js";
(function(){
function doNotTrack(active){
if(active){
document.cookie="DNT=1; path="+ionasInfo.context+"; expires=Thu, 31 Dec 2099 23:59:59 UTC"
}else{
document.cookie="DNT=; path="+ionasInfo.context+"; expires=Thu, 31 Dec 2099 23:59:59 UTC"
}
}
window.ionasDoNotTrack=function(){
doNotTrack(true);
alert("Der Opt-Out-Cookie wurde gesetzt, sofern Ihre Browsereinstellungen dieses unterstützen.");
};
}());
window.currentSourceFile="/sv_oberursel/:res/js/main.js";
window.currentSourceFile="/sv_oberursel/:res/js/main.js.:super";
window.currentSourceFile="/sv_oberursel/:res/js/settings.js";
window.currentSourceFile="/sv_oberursel/:res/js/metropolis_base.js";
window.currentSourceFile="/sv_oberursel/:res/modules/common/common/integration/sa2/js/SearchAggregator2.js";
var __extends=(this&&this.__extends)||(function(){
var extendStatics=Object.setPrototypeOf||
({__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;})||
function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};
return function(d,b){
extendStatics(d,b);
function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());
};
})();
var SearchAggregator2;
(function(SearchAggregator2){
var Endpoint=(function(){
function Endpoint(id,url){
this._id=id;
this._url=url;
}
Object.defineProperty(Endpoint.prototype,"id",{
get:function(){
return this._id;
},
enumerable:true,
configurable:true
});
Object.defineProperty(Endpoint.prototype,"url",{
get:function(){
return this._url;
},
enumerable:true,
configurable:true
});
return Endpoint;
}());
SearchAggregator2.Endpoint=Endpoint;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureAdapterService(app){
app.service('sa2AdapterService',['$http','$q','$window',function($http,$q,$window){
var self=this;
var endpoints={};
var started=false;
var prefetchQueue=[];
self.getEndpoints=function(){
return endpoints;
};
self.addEndpoint=function(endpoint){
if(!endpoint){
throw"SA2 endpoint cannot be empty";
}
if(endpoints[endpoint.id]){
throw"SA2 endpoint \"%id%\" is already configured"
.replace('%id%',endpoint.id);
}
endpoints[endpoint.id]=endpoint;
};
self.start=function(){
started=true;
var self=this;
prefetchQueue.forEach(function(queueItem){
self.query(queueItem.endpointId,queueItem.type,queueItem.query,queueItem.options)
.then(function(result){
queueItem.deferred.resolve(result);
});
});
};
var enqueueQuery=function(endpointId,type,query,options,deferred){
prefetchQueue.push({
endpointId:endpointId,
type:type,
query:query,
options:options,
deferred:deferred
});
};
var doQuery=function(endpointId,type,query,options,deferred){
var endpoint=endpoints[endpointId];
if(!endpoint){
throw"SA2 endpoint \"%id%\" does not exist"
.replace('%id%',endpointId);
}
var postData={
"type":type,
"query":query,
"offset":options.offset||0,
"limit":options.limit||null,
"sortFields":options.sortFields||null,
"filterQueries":options.filterQueries||null,
"facetQueries":options.facetQueries||null,
"onlyCustomFields":options.onlyCustomFields||null
};
var config={headers:{}};
if(endpoint.url.indexOf(":sa2-search")>=0){
config.headers['X-Ionas3-Session']=$window.ionasInfo.session;
}
if(options.canceler){
config.timeout=options.canceler;
}
$http.post(endpoint.url,postData,config).then(function(resp){
deferred.resolve(resp.data);
},function(resp){
deferred.reject(resp);
});
};
self.query=function(endpointId,type,query,options){
if(!query){
query=null;
}
if(!options){
options={};
}
var deferred=$q.defer();
if(started){
doQuery(endpointId,type,query,options,deferred);
}
else{
enqueueQuery(endpointId,type,query,options,deferred);
}
return deferred.promise;
};
}]);
}
SearchAggregator2.configureAdapterService=configureAdapterService;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
var SearchState=(function(){
function SearchState(query,filter,page){
this._query=null;
this._filter=null;
this._page=1;
this._query=query||null;
this._filter=filter||null;
this._page=page||1;
}
Object.defineProperty(SearchState.prototype,"query",{
get:function(){
return this._query;
},
set:function(value){
this._query=value;
},
enumerable:true,
configurable:true
});
Object.defineProperty(SearchState.prototype,"filter",{
get:function(){
return this._filter;
},
set:function(value){
this._filter=value;
},
enumerable:true,
configurable:true
});
Object.defineProperty(SearchState.prototype,"page",{
get:function(){
return this._page;
},
set:function(value){
this._page=value&&value>0?value:1;
},
enumerable:true,
configurable:true
});
return SearchState;
}());
SearchAggregator2.SearchState=SearchState;
var Request=(function(_super){
__extends(Request,_super);
function Request(){
var _this=_super!==null&&_super.apply(this,arguments)||this;
_this._queryFields=null;
_this._onlyCustomFields=null;
return _this;
}
Request.fromSearchState=function(searchState){
return new Request(searchState.query,searchState.filter,searchState.page);
};
Object.defineProperty(Request.prototype,"queryFields",{
get:function(){
return this._queryFields;
},
set:function(value){
this._queryFields=value;
},
enumerable:true,
configurable:true
});
Object.defineProperty(Request.prototype,"onlyCustomFields",{
get:function(){
return this._onlyCustomFields;
},
set:function(value){
this._onlyCustomFields=value;
},
enumerable:true,
configurable:true
});
return Request;
}(SearchState));
SearchAggregator2.Request=Request;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
SearchAggregator2.EVENT_INIT='sa2.init';
SearchAggregator2.EVENT_SWITCH_PAGE='sa2.switchPage';
var AutoInitLock=(function(){
function AutoInitLock(callback){
this.released=false;
this.callback=callback;
}
AutoInitLock.prototype.release=function(){
if(this.released){
return;
}
this.released=true;
this.callback(this);
};
AutoInitLock.prototype.isReleased=function(){
return this.released;
};
return AutoInitLock;
}());
SearchAggregator2.AutoInitLock=AutoInitLock;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureLocationService(app){
app.service('sa2LocationService',['$location',function($location){
var self=this;
var _filterFieldNames=[];
var _titlePattern='Suche nach %query% | %pageTitle%';
var _pageTitle=$('title').text();
self._setFilterFieldNames=function(filterFieldNames){
_filterFieldNames=filterFieldNames;
};
self._setTitlePattern=function(titlePattern){
_titlePattern=titlePattern;
};
self._setPageTitle=function(pageTitle){
_pageTitle=pageTitle;
};
self.read=function(){
var search=$location.search();
var query=search['q']||null;
var filter={};
var filterCount=0;
_filterFieldNames.forEach(function(fieldName){
if(search[fieldName]){
filter[fieldName]=search[fieldName];
filterCount++;
}
});
if(!query&&!filterCount){
return null;
}
return new SearchAggregator2.SearchState(query,filter);
};
self.write=function(state){
var search={
'q':state.query
};
_filterFieldNames.forEach(function(fieldName){
if(state.filter[fieldName]){
search[fieldName]=state.filter[fieldName];
}
});
$location.search(search);
};
self.resetTitle=function(){
$('title').text(_pageTitle);
};
self.updateTitle=function(state){
if(!state){
self.resetTitle();
return;
}
var title=_titlePattern
.replace('%query%',state.query)
.replace('%pageTitle%',_pageTitle);
_filterFieldNames.forEach(function(fieldName){
title=title.replace('%'+fieldName+'%',state.filter[fieldName]);
});
$('title').text(title);
};
}]);
}
SearchAggregator2.configureLocationService=configureLocationService;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureSearchService(app){
app.service('sa2SearchService',['$q','sa2AdapterService',function($q,adapterService){
var self=this;
var _resultSets={};
var _doSearchTimeout=null;
var _queryTransformers=[];
var _delaySearchListeners=[];
var _startSearchListeners=[];
var _finishSearchListeners=[];
var _failedSearchListeners=[];
var _completeSearchListeners=[];
var _clearResultListeners=[];
self._getResultSets=function(){
return _resultSets;
};
self._setResultSets=function(resultSets){
for(var key in _resultSets){
delete _resultSets[key];
}
for(var key in resultSets){
_resultSets[key]=resultSets[key];
}
};
self._addResultSet=function(key,resultSet){
_resultSets[key]=resultSet;
};
self.doSearchForResultSet=function(request,resultSet){
if(resultSet.queryRequest){
resultSet.queryCanceler.reject(new SearchAggregator2.Error(0,"abort"));
resultSet.queryCanceler=null;
resultSet.queryRequest=null;
}
_queryTransformers.forEach(function(transformer){
request=transformer(request,resultSet);
});
resultSet.queryCanceler=$q.defer();
var options={
limit:resultSet.perPage,
offset:(request.page-1)*resultSet.perPage,
sortFields:resultSet.sortFields,
filterQueries:JSON.parse(JSON.stringify(resultSet.filterQueries))||[],
facetQueries:[],
canceler:resultSet.queryCanceler.promise
};
for(var key in request.filter){
var keyFilter=$.grep(options.filterQueries,function(e){return e.field==key;});
var otherFilters=$.grep(options.filterQueries,function(e){return e.field!=key;});
var value=request.filter[key];
if(value instanceof Array){
if(keyFilter.length==1){
keyFilter[0].values=request.filter[key];
otherFilters.push(keyFilter[0]);
options.filterQueries=otherFilters;
}
else{
options.filterQueries.push({
field:key,
values:request.filter[key]
});
}
}
else{
if(keyFilter.length==1){
keyFilter[0].value=request.filter[key];
otherFilters.push(keyFilter[0]);
options.filterQueries=otherFilters;
}
else{
options.filterQueries.push({
field:key,
value:request.filter[key]
});
}
}
}
for(var key in options.filterQueries){
if(undefined===options.filterQueries[key]
||undefined===options.filterQueries[key].value
&&undefined===options.filterQueries[key].values){
delete options.filterQueries[key];
}
options.filterQueries=options.filterQueries.filter(function(e){return null!==e;});
}
_startSearchListeners.forEach(function(listener){
listener(request,resultSet);
});
if(!request.query&&!options.filterQueries.length&&!options.facetQueries.length){
self.clearResult(resultSet);
return;
}
resultSet.queryRequest=adapterService.query(resultSet.endpoint.id,resultSet.type,request.query,options);
resultSet.queryRequest.then(function(result){
resultSet.result=result;
resultSet.error=null;
resultSet.queryCanceler=null;
resultSet.queryRequest=null;
_finishSearchListeners.forEach(function(listener){
listener(request,resultSet,result);
});
_completeSearchListeners.forEach(function(listener){
listener(request,resultSet,result);
});
},function(error){
resultSet.result=null;
resultSet.error=error;
resultSet.queryCanceler=null;
resultSet.queryRequest=null;
_failedSearchListeners.forEach(function(listener){
listener(request,resultSet);
});
_completeSearchListeners.forEach(function(listener){
listener(request,resultSet);
});
});
};
self.doSearch=function(request){
clearTimeout(_doSearchTimeout);
for(var key in _resultSets){
self.doSearchForResultSet(request,_resultSets[key]);
}
};
self.delaySearch=function(request){
clearTimeout(_doSearchTimeout);
if(!request.query){
return;
}
_delaySearchListeners.forEach(function(listener){
listener(request);
});
_doSearchTimeout=setTimeout(function(){
self.doSearch(request);
},500);
};
self.clearResults=function(){
clearTimeout(_doSearchTimeout);
for(var key in _resultSets){
self.clearResult(_resultSets[key]);
}
};
self.clearResult=function(resultSet){
resultSet.result=null;
_clearResultListeners.forEach(function(listener){
listener(resultSet);
});
};
self.registerQueryTransformer=function(transformer){
_queryTransformers.push(transformer);
};
self.registerDelaySearchListener=function(listener){
_delaySearchListeners.push(listener);
};
self.registerStartSearchListener=function(listener){
_startSearchListeners.push(listener);
};
self.registerFinishSearchListener=function(listener){
_finishSearchListeners.push(listener);
};
self.registerFailedSearchListener=function(listener){
_failedSearchListeners.push(listener);
};
self.registerCompleteSearchListener=function(listener){
_completeSearchListeners.push(listener);
};
self.registerClearResultListener=function(listener){
_clearResultListeners.push(listener);
};
}]);
}
SearchAggregator2.configureSearchService=configureSearchService;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureAutocompleteDirective(app){
app.directive('sa2Autocomplete',['$filter',function($filter){
return{
require:['^^sa2Field'],
restrict:'E',
scope:true,
compile:function compile(element){
var children=element.children();
var template=angular.element("\n<ul class=\"sa2-autocomplete-list\" ng-hide=\"!_isVisible()\" ng-mouseenter=\"_setMouseOver(true)\" ng-mouseleave=\"_setMouseOver(false)\">\n\t<li class=\"sa2-autocomplete-item\"\n\t    ng-repeat=\"item in _visibleElements\"\n\t    ng-class=\"{'sa2-autocomplete-item-hover': _isHovered($index)}\"\n\t    ng-click=\"_selectItem(item)\"\n\t    sa2-autocomplete-item-index=\"{{ $index }}\"></li>\n\t<li class=\"sa2-autocomplete-more-indicator\" ng-show=\"_visibleElements.length < _total\">{{ _total - _visibleElements.length }} weitere&hellip;</li>\n</ul>\n");
if(children.length){
template.find('li.sa2-autocomplete-item')
.empty()
.append(children);
}
element.html('');
element.append(template);
return function postLink($scope,element,attrs,controllers){
var fieldController=controllers[0];
var parent=$scope.$parent;
var elementsName=attrs['elements'];
var elements=[];
if(!elementsName){
throw"<sa2-autocomplete elements=\"...\"> attribute is mandatory";
}
var transformer=attrs['transformer'];
var postFilter=attrs['postFilter'];
var limitFunction=attrs['limitFunction'];
var filterValue;
$scope._focused=false;
$scope._mouseOver=false;
$scope._visible=false;
$scope._visibleElements=[];
fieldController.registerFocusListener(function(focused){
setTimeout(function(){
$scope._focused=focused;
$scope._visible=$scope._focused||$scope._mouseOver;
$scope.$applyAsync();
},100);
});
function doFilter(){
var visibleElements;
if(filterValue){
visibleElements=$filter('filter')(elements,filterValue);
}
else{
visibleElements=elements;
}
if(postFilter){
visibleElements=$scope.$parent[postFilter](visibleElements,filterValue);
}
$scope._total=visibleElements.length;
if(limitFunction){
visibleElements=$scope.$parent[limitFunction](visibleElements,filterValue);
}
else{
visibleElements=$filter('limitTo')(visibleElements,5);
}
$scope._visibleElements=visibleElements;
$scope._hoverIndex=-1;
$scope.$applyAsync();
}
$scope._hoverIndex=-1;
$scope._setMouseOver=function(mouseOver){
$scope._mouseOver=mouseOver;
$scope._visible=$scope._focused||$scope._mouseOver;
$scope.$applyAsync();
};
$scope._isVisible=function(){
return $scope._visible&&$scope._visibleElements.length>0;
};
$scope._isHovered=function(index){
return $scope._hoverIndex==index;
};
$scope._selectItem=function(item){
if(transformer){
item=$scope.$parent[transformer](item);
}
fieldController.setValue(item);
$scope._setMouseOver(false);
};
parent.$watch(elementsName,function(newValue){
elements=newValue||[];
doFilter();
});
fieldController.registerChangeListener(function(name,newValue,oldValue){
filterValue=newValue;
doFilter();
});
fieldController.registerCtrlKeyListener(function(event){
switch(event.keyCode){
case 13:
if($scope._hoverIndex>-1&&$scope._visibleElements[$scope._hoverIndex]){
var item=$scope._visibleElements[$scope._hoverIndex];
$scope._selectItem(item);
}
break;
case 38:
$scope._hoverIndex--;
break;
case 40:
$scope._hoverIndex++;
break;
default:
return;
}
if($scope._hoverIndex<-1){
$scope._hoverIndex=Math.min(4,$scope._visibleElements.length-1);
}
else if($scope._hoverIndex>4||$scope._hoverIndex>=$scope._visibleElements.length){
$scope._hoverIndex=-1;
}
event.preventDefault();
$scope.$applyAsync();
});
};
}
};
}]);
}
SearchAggregator2.configureAutocompleteDirective=configureAutocompleteDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureEndpointDirective(app){
app.directive('sa2Endpoint',function(){
return{
require:['^sa2Search'],
restrict:'AE',
link:function($scope,element,attrs,controllers){
var controller=controllers[0];
var id;
var url;
if(attrs.sa2Endpoint){
id='default';
url=attrs.sa2Endpoint;
}
else{
id=attrs.id;
url=attrs.url;
}
if(!id){
throw"<sa2-endpoint id=\"...\"> attribute is mandatory";
}
if(!url){
throw"<sa2-endpoint url=\"...\"> attribute is mandatory";
}
controller.addEndpoint(id,url);
}
};
});
}
SearchAggregator2.configureEndpointDirective=configureEndpointDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureFieldDirective(app){
app.directive('sa2Field',function(){
return{
require:['^sa2Search','sa2Field'],
restrict:'AE',
transclude:true,
scope:true,
template:'<ng-transclude></ng-transclude>',
controller:function($scope){
var self=this;
$scope._changeListeners=[];
$scope._ctrlKeyListeners=[];
$scope._focusListeners=[];
$scope.fieldName='unknown';
self.getFieldName=function(){
return $scope.fieldName;
};
self.setFieldName=function(name){
$scope.fieldName=name;
};
self.registerChangeListener=function(listener){
$scope._changeListeners.push(listener);
};
self.registerCtrlKeyListener=function(listener){
$scope._ctrlKeyListeners.push(listener);
};
self.triggerCtrlKeyEvent=function(event){
$scope._ctrlKeyListeners.forEach(function(listener){
listener(event);
});
};
self.registerFocusListener=function(listener){
$scope._focusListeners.push(listener);
};
self.triggerFocusListener=function(focused){
$scope._focusListeners.forEach(function(listener){
listener(focused);
});
};
self.setValue=function(value){
$scope._setter(value);
};
},
link:function($scope,element,attrs,controllers){
var searchController=controllers[0];
var fieldController=controllers[1];
$scope._setter=function(value){
if('query'==$scope.fieldName){
searchController.setQuery(value);
}
else{
searchController.setFilter($scope.fieldName,value);
}
};
searchController.addField($scope.fieldName,fieldController);
searchController.registerChangeListener(function(name,oldValue,newValue){
if($scope.fieldName==name){
$scope._changeListeners.forEach(function(listener){
listener(name,oldValue,newValue);
});
}
});
}
};
});
}
SearchAggregator2.configureFieldDirective=configureFieldDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureModelDirective(app){
app.directive('sa2Model',function(){
return{
require:['^sa2Search','^sa2Field'],
restrict:'A',
scope:true,
link:function compile($scope,element,attrs,controllers){
var searchController=controllers[0];
var fieldController=controllers[1];
var fieldName=$scope.fieldName=attrs.sa2Model;
if($scope.fieldName){
fieldController.setFieldName($scope.fieldName);
}
else{
fieldName=$scope.fieldName=fieldController.getFieldName();
}
$scope.$watch('fieldName',function(newValue){
if(fieldName!=newValue){
$scope.fieldName=fieldName;
}
});
var previousValue=element.val();
fieldController.registerChangeListener(function(name,newValue,oldValue){
element.val(newValue);
});
element.on('focus',function(){
fieldController.triggerFocusListener(true);
});
element.on('blur',function(){
fieldController.triggerFocusListener(false);
});
element.on('keydown',function(event){
switch(event.keyCode){
case 13:
case 37:
case 38:
case 39:
case 40:
fieldController.triggerCtrlKeyEvent(event);
}
});
element.on('keyup',function(event){
var newValue=element.val();
if(previousValue!=newValue){
previousValue=element.val();
if('query'==$scope.fieldName){
searchController.setQuery(newValue);
}
else{
searchController.setFilter($scope.fieldName,newValue);
}
}
});
element.on('change',function(event){
var newValue=element.val();
if(previousValue!=newValue){
if('query'==$scope.fieldName){
searchController.setQuery(newValue);
}
else{
searchController.setFilter($scope.fieldName,newValue);
}
}
});
}
};
});
}
SearchAggregator2.configureModelDirective=configureModelDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configurePreloadDirective(app){
app.directive('sa2Preload',['$filter','sa2AdapterService',function($filter,sa2AdapterService){
return{
require:['^^sa2Search'],
restrict:'E',
link:function compile($scope,element,attrs,controllers){
var model=attrs['model'];
var endpoint=attrs['endpoint'];
var type=attrs['type'];
var query=attrs['query'];
var transformer=attrs['transformer'];
var orderBy=attrs['orderBy'];
if(!endpoint){
throw"<sa2-preload endpoint=\"...\"> attribute is mandatory";
}
if(!type){
throw"<sa2-preload type=\"...\"> attribute is mandatory";
}
var controller=controllers[0];
var lock=controller.preventAutoInit();
var $rootScope=$scope.$root;
sa2AdapterService.query(endpoint,type,query).then(function(result){
var items=result.items;
if(transformer){
items=$scope[transformer](items);
}
if(orderBy){
items=$filter('orderBy')(items,orderBy);
}
$rootScope[model]=items;
$rootScope.$applyAsync();
lock.release();
});
}
};
}]);
}
SearchAggregator2.configurePreloadDirective=configurePreloadDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
var ResultSet=(function(){
function ResultSet(endpoint,type,perPage,filterQueries,sortFields){
this._endpoint=endpoint;
this._type=type;
this._perPage=perPage;
this._filterQueries=filterQueries;
this._sortFields=sortFields;
this._pages=0;
this._page=0;
this._result=null;
this._error=null;
this._queryCanceler=null;
this._queryRequest=null;
}
Object.defineProperty(ResultSet.prototype,"endpoint",{
get:function(){
return this._endpoint;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"type",{
get:function(){
return this._type;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"perPage",{
get:function(){
return this._perPage;
},
set:function(perPage){
this._perPage=perPage;
this.calculatePages();
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"filterQueries",{
get:function(){
return this._filterQueries;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"sortFields",{
get:function(){
return this._sortFields;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"pages",{
get:function(){
return this._pages;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"page",{
get:function(){
return this._page;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"result",{
get:function(){
return this._result;
},
set:function(result){
this._result=result;
this.calculatePages();
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"queryCanceler",{
get:function(){
return this._queryCanceler;
},
set:function(queryCanceler){
this._queryCanceler=queryCanceler;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"queryRequest",{
get:function(){
return this._queryRequest;
},
set:function(queryRequest){
this._queryRequest=queryRequest;
},
enumerable:true,
configurable:true
});
Object.defineProperty(ResultSet.prototype,"error",{
get:function(){
return this._error;
},
set:function(value){
this._error=value;
},
enumerable:true,
configurable:true
});
ResultSet.prototype.calculatePages=function(){
if(this._result){
this._pages=Math.ceil(this._result.totalCount/this._perPage);
this._page=Math.min(Math.max(1,Math.floor(this._result.offset/this._perPage)+1),this.pages);
}
else{
this._pages=0;
this._page=0;
}
};
return ResultSet;
}());
SearchAggregator2.ResultSet=ResultSet;
var Error=(function(){
function Error(status,message){
this._status=status;
this._message=message;
}
Object.defineProperty(Error.prototype,"status",{
get:function(){
return this._status;
},
set:function(value){
this._status=value;
},
enumerable:true,
configurable:true
});
Object.defineProperty(Error.prototype,"message",{
get:function(){
return this._message;
},
set:function(value){
this._message=value;
},
enumerable:true,
configurable:true
});
return Error;
}());
SearchAggregator2.Error=Error;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureResultSetDirective(app){
app.directive('sa2ResultSet',function(){
return{
require:['^sa2Search'],
restrict:'E',
link:function($scope,element,attrs,controllers){
var controller=controllers[0];
var endpointId=attrs.endpoint;
var type=attrs.type;
var perPage=parseInt(attrs.perPage)||15;
var filterQueries=attrs.filterQueries;
var sortFields=attrs.sortFields;
if(!endpointId){
throw"<sa2-result-set endpoint=\"...\"> attribute is mandatory";
}
if(!type){
throw"<sa2-result-set type=\"...\"> attribute is mandatory";
}
controller.addResultSet(endpointId,type,perPage,filterQueries,sortFields);
}
};
});
}
SearchAggregator2.configureResultSetDirective=configureResultSetDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureSearchDirective(app){
app.directive('sa2Search',[
'sa2AdapterService',
'sa2LocationService',
'sa2SearchService',
function(adapterService,locationService,searchService){
return{
require:['sa2Search'],
restrict:'AE',
transclude:true,
template:'<ng-transclude></ng-transclude>',
controller:function($scope){
var self=this;
var globalScope=$scope.$new(true);
var filterScope=$scope.$new(true);
$scope.sa2search=globalScope;
globalScope.endpoints=adapterService.getEndpoints();
globalScope.query=null;
globalScope.filter=filterScope;
globalScope.resultIsOutdated=false;
globalScope.searchIsInProgress=false;
globalScope.searchesInProgress=0;
globalScope.resultSets=searchService._getResultSets();
globalScope.totalCount=0;
globalScope.limitExceeded=false;
var updateFromLocation=function(){
var searchState=locationService.read();
if(searchState){
self.setQuery(searchState.query);
for(var key in searchState.filter){
var value=searchState.filter[key];
self.setFilter(key,value);
}
}
else{
self.setQuery("");
globalScope.filterFieldNames.forEach(function(filterName){
self.setFilter(filterName,"");
});
}
};
var autoInitFunction=function(){
if(globalScope._autoInitDone){
return;
}
for(var index=0;index<globalScope._autoInitLocks.length;index++){
if(!globalScope._autoInitLocks[index].isReleased()){
return;
}
}
globalScope._autoInitDone=true;
updateFromLocation();
globalScope.$root.$on('$locationChangeSuccess',updateFromLocation);
$scope.$emit(SearchAggregator2.EVENT_INIT,globalScope);
};
globalScope._endpointDeclarations=[];
globalScope._resultSetDeclarations=[];
globalScope._fieldControllers={};
globalScope._autoInitDone=false;
globalScope._autoInitFunction=autoInitFunction;
globalScope._autoInitLocks=[];
var changeListeners=globalScope._changeListeners=[];
globalScope.$watch('query',function(newValue,oldValue){
changeListeners.forEach(function(listener){
listener('query',newValue,oldValue);
});
});
self.addEndpoint=function(id,url){
globalScope._endpointDeclarations.push({id:id,url:url});
};
self.addResultSet=function(endpointId,type,perPage,filterQueries,sortFields){
globalScope._resultSetDeclarations.push({
endpoint:endpointId,
type:type,
perPage:perPage,
filterQueries:filterQueries,
sortFields:sortFields
});
};
self.addField=function(name,controller){
globalScope._fieldControllers[name]=controller;
globalScope.fieldNames=Object.keys(globalScope._fieldControllers);
globalScope.filterFieldNames=Object.keys(globalScope._fieldControllers).filter(function(fieldName){
return'q'!=fieldName&&'query'!=fieldName;
});
locationService._setFilterFieldNames(globalScope.filterFieldNames);
if('query'!=name){
filterScope.$watch(name,function(newValue,oldValue){
changeListeners.forEach(function(listener){
listener(name,newValue,oldValue);
});
});
}
controller.registerCtrlKeyListener(function(event){
if(13==event.keyCode){
locationService.write(self.getCurrentState());
$scope.$applyAsync();
}
});
controller.registerFocusListener(function(focused){
if(!focused){
locationService.write(self.getCurrentState());
$scope.$applyAsync();
}
});
};
self.registerChangeListener=function(listener){
changeListeners.push(listener);
};
self.getQuery=function(){
return globalScope.query;
};
self.setQuery=function(query){
if(globalScope.query==query){
return;
}
globalScope.query=query;
$scope.$applyAsync();
};
self.getFilter=function(name){
return filterScope[name];
};
self.setFilter=function(name,value){
if(filterScope[name]==value){
return;
}
filterScope[name]=value;
$scope.$applyAsync();
};
self.setCurrentState=function(searchState){
globalScope.query=searchState.query;
globalScope.filterFieldNames.forEach(function(fieldName){
globalScope.filter[fieldName]=searchState.filter[fieldName];
});
};
self.getCurrentState=function(){
var filter={};
globalScope.filterFieldNames.forEach(function(fieldName){
filter[fieldName]=globalScope.filter[fieldName];
});
return new SearchAggregator2.SearchState(globalScope.query,filter);
};
self.preventAutoInit=function(){
var lock=new SearchAggregator2.AutoInitLock(function(){
globalScope._autoInitFunction();
});
globalScope._autoInitLocks.push(lock);
return lock;
};
},
link:function($scope,element,attrs,controllers){
var controller=controllers[0];
var globalScope=$scope.sa2search;
var filterScope=globalScope.filter;
if(attrs.sa2TitlePattern){
locationService._setTitlePattern(attrs.sa2TitlePattern);
}
if(attrs.sa2PageTitle){
locationService._setPageTitle(attrs.sa2PageTitle);
}
globalScope._endpointDeclarations.forEach(function(declaration){
var endpoint=new SearchAggregator2.Endpoint(declaration.id,declaration.url);
adapterService.addEndpoint(endpoint);
});
var endpoints=adapterService.getEndpoints();
var resultSets={};
globalScope._resultSetDeclarations.forEach(function(declaration){
var endpoint=endpoints[declaration.endpoint];
if(!endpoint){
throw"Endpoint \"%endpoint%\" for result set type \"%type%\" is not configured"
.replace("%endpoint%",declaration.endpoint)
.replace("%type%",declaration.type);
}
var sortFields=declaration.sortFields?jQuery.parseJSON(declaration.sortFields.replace(/'/g,'"')):null;
var filterQueries=declaration.filterQueries?jQuery.parseJSON(declaration.filterQueries.replace(/'/g,'"')):null;
var resultSet=new SearchAggregator2.ResultSet(endpoint,declaration.type,declaration.perPage,filterQueries,sortFields);
var key=endpoint.id+":"+resultSet.type;
resultSets[key]=resultSet;
});
searchService._setResultSets(resultSets);
globalScope.getCurrentState=function(){
return controller.getCurrentState();
};
var determineSearchIsInProgress=function(){
globalScope.searchesInProgress=0;
var resultSets=searchService._getResultSets();
for(var key in resultSets){
var resultSet=resultSets[key];
if(resultSet.queryRequest){
globalScope.searchesInProgress++;
}
}
globalScope.searchIsInProgress=globalScope.searchesInProgress>0;
if(!globalScope.searchIsInProgress){
globalScope.resultIsOutdated=false;
}
};
if(attrs.sa2QueryTransformer){
searchService.registerQueryTransformer(function(searchState){
return $scope[attrs.sa2QueryTransformer](searchState);
});
}
searchService.registerDelaySearchListener(function(){
globalScope.resultIsOutdated=true;
});
searchService.registerStartSearchListener(function(){
globalScope.resultIsOutdated=true;
determineSearchIsInProgress();
});
searchService.registerCompleteSearchListener(function(){
determineSearchIsInProgress();
globalScope.totalCount=0;
globalScope.limitExceeded=false;
var resultSets=searchService._getResultSets();
for(var key in resultSets){
var resultSet=resultSets[key];
if(!resultSet.queryRequest&&resultSet.result){
if(resultSet.result.totalCount>resultSet.perPage){
globalScope.totalCount+=resultSet.perPage;
globalScope.limitExceeded=true;
}
else{
globalScope.totalCount+=resultSet.result.totalCount;
}
}
}
});
searchService.registerClearResultListener(function(){
determineSearchIsInProgress();
});
globalScope.switchPage=function(resultSet,page){
if(page<1||page>resultSet.pages){
return;
}
var state=controller.getCurrentState();
state.page=page;
searchService.doSearchForResultSet(SearchAggregator2.Request.fromSearchState(state),resultSet);
globalScope.$emit(SearchAggregator2.EVENT_SWITCH_PAGE,resultSet,state);
};
controller.registerChangeListener(function(){
var state=controller.getCurrentState();
if(state&&state.query&&state.query.length>=3){
searchService.delaySearch(SearchAggregator2.Request.fromSearchState(state));
}
else{
globalScope.totalCount=0;
globalScope.limitExceeded=false;
searchService.clearResults();
$scope.$applyAsync();
}
});
adapterService.start();
globalScope._autoInitFunction();
}
};
}
]);
}
SearchAggregator2.configureSearchDirective=configureSearchDirective;
})(SearchAggregator2||(SearchAggregator2={}));
var SearchAggregator2;
(function(SearchAggregator2){
function configureApp(app){
SearchAggregator2.configureAdapterService(app);
SearchAggregator2.configureLocationService(app);
SearchAggregator2.configureSearchService(app);
SearchAggregator2.configureAutocompleteDirective(app);
SearchAggregator2.configureEndpointDirective(app);
SearchAggregator2.configureFieldDirective(app);
SearchAggregator2.configureModelDirective(app);
SearchAggregator2.configurePreloadDirective(app);
SearchAggregator2.configureResultSetDirective(app);
SearchAggregator2.configureSearchDirective(app);
}
SearchAggregator2.configureApp=configureApp;
})(SearchAggregator2||(SearchAggregator2={}));
var searchAggregator2App=angular.module('searchAggregator2App',['ngSanitize']);
SearchAggregator2.configureApp(searchAggregator2App);
searchAggregator2App.controller('searchAggregator2Controller',function(){
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/vendor/scrollax.min.js";
(function(e){"function"===typeof define&&define.amd?define(["jquery"],e):"undefined"!==typeof exports?module.exports=e(require("jquery")):e(jQuery)})(function(e){function W(a){if(console&&console.warn)console.warn("Scrollax: "+a);else throw"Scrollax: "+a;}function ka(a){var g=!!("pageYOffset"in a);return{width:g?window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth:a.offsetWidth,height:g?window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight:
a.offsetHeight,left:a[g?"pageXOffset":"scrollLeft"],top:a[g?"pageYOffset":"scrollTop"]}}function X(a){return(a=a.data("scrollax"))&&eval("({"+a+"})")||{}}function Y(a){var g,c;return!!(a&&"object"===typeof a&&"object"===typeof a.window&&a.window==a&&a.setTimeout&&a.alert&&(g=a.document)&&"object"===typeof g&&(c=g.defaultView||g.parentWindow)&&"object"===typeof c&&c==a)}var v=Array.prototype,C=v.push,Z=v.splice,aa=Object.prototype.hasOwnProperty,la=/[-+]?\d+(\.\d+)?/g,ma="translateX translateY rotate rotateX rotateY rotateZ skewX skewY scaleX scaleY".split(" "),
ba=e(window),ca=e(document.body),da,ea,L,M,N,q=function(a,g,c){function k(){O=fa?ca.find(ga):P.find(ga);x.length=0;r=!!t.horizontal;O.each(na);d();t.performanceTrick&&(F=fa?ca:P);u("load");return f}function l(){G&&(G=clearTimeout(G));G=setTimeout(function(){f.reload()})}function d(){var ha=x.length;t.performanceTrick&&F&&(clearTimeout(ia),Q||(F.addClass("scrollax-performance"),Q=!0),ia=setTimeout(function(){F.removeClass("scrollax-performance");Q=!1},100));if(ha){H=ka(a);for(var c=0;c<ha;c++)I=x[c],
y=L(I.element,a),0>y[r?"right":"bottom"]||y[r?"left":"top"]>H[r?"width":"height"]||(ja=I.options,R=ja.offset||t.offset||0,J=y[r?"right":"bottom"],z=y[r?"width":"height"],A=(z-J+R)/z,0>A&&(J=y[r?"left":"top"],z=H[r?"width":"height"],A=-1+(z-J+R)/z),1<A||-1>A||b(I,A,r));u("scroll",H)}}function b(a,b){S=a.parallaxElements;var c=S.length;if(c)for(var f=0;f<c;f++){T=S[f];var g=oa=T.element,d=b;U=T.properties||(r?{translateX:"100%"}:{translateY:"100%"});D="";for(B in U){n=U[B];if("number"===typeof n)n*=
d;else if("string"===typeof n)for(K=n.match(la),m=0,E=K.length;m<E;m++)n=n.replace(K[m],parseFloat(K[m]*d));if(-1!==e.inArray(B,ma))D+=B+"("+n+")";else{var k=g.style,l=B,h;"opacity"===B?(h=0>d?1+n:1-n,h=0>h?0:1<h?1:h):h=n;k[l]=h}}D&&(g.style[da]=ea+D)}}function pa(a){return"undefined"!==typeof a?"number"!==typeof a&&"string"!==typeof a||""===a||isNaN(a)?O.index(a):0<=a&&a<x.length?a:-1:-1}function u(a,b){if(h[a]){E=h[a].length;for(m=V.length=0;m<E;m++)C.call(V,h[a][m]);for(m=0;m<E;m++)V[m].call(f,
a,b)}}function p(a,b){for(var c=0,f=h[a].length;c<f;c++)if(h[a][c]===b)return c;return-1}var f=this,P=a&&e(a).eq(0)||ba,w=q.instances,v=null;a=P[0];e.each(w,function(b,c){b&&b.frame===a&&(v=!0)});if(!a||v)v?W("Scrollax: Scrollax has been initialized for this frame!"):W("Scrollax: Frame is not available!");else{var t=e.extend({},q.defaults,g),x=[],O=null,ga=t.parentSelector||"[data-scrollax-parent]",qa=t.elementsSelector||"[data-scrollax]",h={},V=[],G,fa=Y(a),m,E,F,ia,Q,H,r,R,y,I,ja,A,J,z,S,T,oa,U,
B,n,D,K;f.frame=a;f.options=t;f.parents=x;f.initialized=!1;f.reload=k;var na=function(a,b){var c=e(b),f=X(e(b)),d={};d.element=b;d.options=f;d.parallaxElements=[];c.find(qa).each(function(a,b){var c=X(e(b));c.element=b;C.call(d.parallaxElements,c)});C.call(x,d)};f.scroll=d;f.getIndex=pa;f.one=function(a,b){function c(){b.apply(f,arguments);f.off(a,c)}f.on(a,c);return f};f.on=function(a,b){if("object"===typeof a)for(var c in a){if(aa.call(a,c))f.on(c,a[c])}else if("function"===typeof b){c=a.split(" ");
for(var d=0,g=c.length;d<g;d++)h[c[d]]=h[c[d]]||[],-1===p(c[d],b)&&C.call(h[c[d]],b)}else if("array"===typeof b)for(c=0,d=b.length;c<d;c++)f.on(a,b[c]);return f};f.off=function(a,c){if(c instanceof Array)for(var b=0,d=c.length;b<d;b++)f.off(a,c[b]);else for(var b=a.split(" "),d=0,g=b.length;d<g;d++)if(h[b[d]]=h[b[d]]||[],"undefined"===typeof c)h[b[d]].length=0;else{var k=p(b[d],c);-1!==k&&Z.call(h[b[d]],k,1)}return f};f.set=function(a,b){e.isPlainObject(a)?e.extend(t,a):aa.call(t,a)&&(t[a]=b);k();
return f};f.destroy=function(){N(window,"resize",l);N(a,"scroll",d);e.each(w,function(b,c){b&&b.frame===a&&Z.call(q.instances,c,1)});x.length=0;f.initialized=!1;u("destroy");return f};f.init=function(){if(!f.initialized)return f.on(c),k(),M(window,"resize",l),M(a,"scroll",d),C.call(q.instances,f),f.initialized=!0,u("initialized"),f}}};q.instances=[];(function(){var a,g,c,k,l,d,b,e;L=function(u,p){g=u.ownerDocument||u;c=g.documentElement;k=Y(p)?p:g.defaultView||window;p=p&&p!==g?p:c;l=(k.pageYOffset||
c.scrollTop)-c.clientTop;d=(k.pageXOffset||c.scrollLeft)-c.clientLeft;b={top:0,left:0};if(u&&u.getBoundingClientRect){var f={},q=u.getBoundingClientRect();for(a in q)f[a]=q[a];b=f;b.width=b.right-b.left;b.height=b.bottom-b.top}else return null;if(p===k)return b;b.top+=l;b.left+=d;b.right+=d;b.bottom+=l;if(p===c)return b;e=L(p);b.left-=e.left;b.right-=e.left;b.top-=e.top;b.bottom-=e.top;return b}})();(function(){function a(){this.returnValue=!1}function g(){this.cancelBubble=!0}M=window.addEventListener?
function(a,g,e,d){a.addEventListener(g,e,d||!1);return e}:function(c,e,l){var d=e+l;c[d]=c[d]||function(){var b=window.event;b.target=b.srcElement;b.preventDefault=a;b.stopPropagation=g;l.call(c,b)};c.attachEvent("on"+e,c[d]);return l};N=window.removeEventListener?function(a,g,e,d){a.removeEventListener(g,e,d||!1);return e}:function(a,g,e){var d=g+e;a.detachEvent("on"+g,a[d]);try{delete a[d]}catch(b){a[d]=void 0}return e}})();(function(){function a(a){for(var e=0,d=g.length;e<d;e++){var b=g[e]?g[e]+
a.charAt(0).toUpperCase()+a.slice(1):a;if(null!=c.style[b])return b}}var g=["","webkit","moz","ms","o"],c=document.createElement("div");da=a("transform");ea=a("perspective")?"translateZ(0) ":""})();q.defaults={horizontal:!1,offset:0,parentSelector:null,elementsSelector:null,performanceTrick:!1};window.Scrollax=q;e.fn.Scrollax=function(a,g){var c,k;if(!e.isPlainObject(a)){if("string"===typeof a||!1===a)c=!1===a?"destroy":a,k=slice.call(arguments,1);a={}}return this.each(function(l,d){var b=e.data(d,
"scrollax");b||c?b&&c&&b[c]&&b[c].apply(b,k):e.data(d,"scrollax",(new q(d,a,g)).init())})};e.Scrollax=function(a,e){ba.Scrollax(a,e)};var v=document.head||document.getElementsByTagName("head")[0],w=document.createElement("style");w.type="text/css";w.styleSheet?w.styleSheet.cssText=".scrollax-performance, .scrollax-performance *, .scrollax-performance *:before, .scrollax-performance *:after { pointer-events: none !important; -webkit-animation-play-state: paused !important; animation-play-state: paused !important; };":
w.appendChild(document.createTextNode(".scrollax-performance, .scrollax-performance *, .scrollax-performance *:before, .scrollax-performance *:after { pointer-events: none !important; -webkit-animation-play-state: paused !important; animation-play-state: paused !important; };"));v.appendChild(w);return q});
window.currentSourceFile="/sv_oberursel/:res/js/shame.js";
(function(){
$(function(){
var $html=$(document.documentElement);
function setMediaQueryOnly(){
$html.removeClass("small-only-mq medium-only-mq large-only-mq xlarge-only-mq");
if(Foundation.MediaQuery.atLeast('xlarge')){
$html.addClass("xlarge-only-mq");
return;
}
if(Foundation.MediaQuery.atLeast('large')){
$html.addClass("large-only-mq");
return;
}
if(Foundation.MediaQuery.atLeast('medium')){
$html.addClass("medium-only-mq");
return;
}
if(Foundation.MediaQuery.atLeast('small')){
$html.addClass("small-only-mq");
return;
}
}
function setMediaQueryAtLeast(){
$html.removeClass("small-up-mq medium-up-mq large-up-mq xlarge-up-mq");
if(Foundation.MediaQuery.atLeast('xlarge')){
$html.addClass("xlarge-up-mq");
}
if(Foundation.MediaQuery.atLeast('large')){
$html.addClass("large-up-mq");
}
if(Foundation.MediaQuery.atLeast('medium')){
$html.addClass("medium-up-mq");
}
if(Foundation.MediaQuery.atLeast('small')){
$html.addClass("small-up-mq");
}
}
window.getGridConfig=function(column){
var columnClass=column.attr("class");
var columnWidths={
small:12,
medium:12,
large:12,
xlarge:12
}
var regex=/(small)-([1-9]+[0-2]?)/g;
var small_query_width_arr=regex.exec(columnClass);
if(small_query_width_arr!=null){
columnWidths.small=small_query_width_arr[2];
columnWidths.medium=small_query_width_arr[2];
columnWidths.large=small_query_width_arr[2];
columnWidths.xlarge=small_query_width_arr[2];
}
var regex=/(medium)-([1-9]+[0-2]?)/g;
var medium_query_width_arr=regex.exec(columnClass);
if(medium_query_width_arr!=null){
columnWidths.medium=medium_query_width_arr[2];
columnWidths.large=medium_query_width_arr[2];
columnWidths.xlarge=medium_query_width_arr[2];
}
var regex=/(large)-([1-9]+[0-2]?)/g;
var large_query_width_arr=regex.exec(columnClass);
if(large_query_width_arr!=null){
columnWidths.large=large_query_width_arr[2];
columnWidths.xlarge=large_query_width_arr[2];
}
var regex=/(xlarge)-([1-9]+[0-2]?)/g;
var xlarge_query_width_arr=regex.exec(columnClass);
if(xlarge_query_width_arr!=null){
columnWidths.xlarge=xlarge_query_width_arr[2];
}
return columnWidths;
}
var mediaQueryOrders=['small-up-mq','medium-up-mq','large-up-mq','xlarge-up-mq'];
function getRelevantMediaquery(breakpoints){
var max=-1;
for(var i=0;i<breakpoints.length;i++){
var val=breakpoints[i];
if($html.hasClass(val)){
if(val.indexOf("-only")!==-1){
return val;
}
index=mediaQueryOrders.indexOf(val);
if(index>max){
max=index;
}
}
}
return max>-1?mediaQueryOrders[max]:null;
}
var lastMediaQuery=null;
function onResize(){
setMediaQueryOnly();
setMediaQueryAtLeast();
lastMediaQuery=Foundation.MediaQuery.current;
}
$(window).resize(function(){
onResize();
});
function checkRowWithHeadline(){
if($('body.mode-editor').length)
return;
$('.main-column__headline').each(function(i,obj){
if(!$(this).hasClass('main-column__headline--empty')){
$(this).closest(".row").addClass("has-main-column-headline");
}
});
}
function detectIE11(){
if(!(window.ActiveXObject)&&"ActiveXObject"in window){
$("html").addClass("ie11");
}
}
detectIE11();
onResize();
checkRowWithHeadline();
$.Scrollax();
});
})();
var Metropolis;
(function(Metropolis){
function filterClasses(classPatterns,classes){
var classesArray=classes.split(" ");
var classesToRemove=[];
for(var i=0;i<classesArray.length;i++){
for(var j=0;j<classPatterns.length;j++){
if(classesArray[i].indexOf(classPatterns[j])!==-1){
classesToRemove.push(classesArray[i]);
}
}
}
return classesToRemove.join(" ");
}
Metropolis.filterClasses=filterClasses;
function generateSpaces(options){
var defaultOptions={
el:null,
generateUpClasses:true,
cssClassTemplate:'space-%SPACE%',
sizes:[
{
name:'small',
max:600
},
{
name:'medium',
min:601,
max:800,
},
{
name:'large',
min:801,
max:1064
},
{
name:'xlarge',
min:1065
}
],
considerPadding:true,
considerMargin:true
};
var completeOptions=$.extend({},defaultOptions,options);
var classesToRemove=[];
var handleSizeClasses=function(index,el){
if(index<0||index>=completeOptions.sizes.length){
return;
}
var name=completeOptions.sizes[index].name;
var sizeQueryOnly=completeOptions.cssClassTemplate.replace('%SPACE%',name+"-only");
if(el.hasClass(sizeQueryOnly))
return;
el.removeClass(classesToRemove.join(" "));
el.addClass(sizeQueryOnly);
if(!completeOptions.generateUpClasses)
return;
for(var i=0;i<=index;i++){
el.addClass(completeOptions.cssClassTemplate.replace('%SPACE%',completeOptions.sizes[i].name+'-up'));
}
};
var generate=function(){
var sizes=completeOptions.sizes;
for(var i=0;i<sizes.length;i++){
if(completeOptions.generateUpClasses){
classesToRemove.push(completeOptions.cssClassTemplate.replace('%SPACE%',sizes[i].name+"-up"));
}
classesToRemove.push(completeOptions.cssClassTemplate.replace('%SPACE%',sizes[i].name+"-only"));
}
completeOptions.el.each(function(i,obj){
var width=-1;
if(completeOptions.considerPadding&&completeOptions.considerMargin)
width=$(obj).outerWidth(true);
if(completeOptions.considerPadding&&!completeOptions.considerMargin)
width=$(obj).outerWidth(false);
if(!completeOptions.considerPadding&&!completeOptions.considerMargin)
width=$(obj).width();
for(var i_1=0;i_1<sizes.length;i_1++){
var min=sizes[i_1].min;
var max=sizes[i_1].max;
var name_1=sizes[i_1].name;
if(min!==undefined&&max!==undefined){
if(width>=min&&width<=max){
handleSizeClasses(i_1,$(obj));
}
}
if(min===undefined&&max!==undefined){
if(width<=max){
handleSizeClasses(i_1,$(obj));
}
}
if(min!==undefined&&max===undefined){
if(width>=min){
handleSizeClasses(i_1,$(obj));
}
}
}
});
};
generate();
}
Metropolis.generateSpaces=generateSpaces;
function mayScrollToContent(){
window.addEventListener("load",function(){
if($('.stage-area').is(':visible')){
var body=document.body;
if(body.classList.contains('mode-editor')
||body.classList.contains('ot-common.common.ionas.core:root')
||body.classList.contains('ot-common.common.ionas.core:site-root')
||body.classList.contains('ot-common.common.ionas.core:language-root')
||Metropolis.Morphsearch.isOpen()
||body.scrollTop>0
||document.documentElement.scrollTop>0){
return;
}
if($('.stage-text').text().trim()){
return;
}
Metropolis.scrollToContent();
}
});
}
Metropolis.mayScrollToContent=mayScrollToContent;
function scrollToContent(){
var height=0;
var $header=$('#header');
var $subnav=$('.subnav');
var $stickyBreadcrumb=$('[data-sticky-breadcrumb]');
if($header.length>0){
height+=$header.height();
}
if($subnav.length>0){
height+=$subnav.height();
}
if($stickyBreadcrumb.length>0){
height+=$stickyBreadcrumb.height();
}
$('html, body').animate({scrollTop:($('main').offset().top-height-60)},500);
}
Metropolis.scrollToContent=scrollToContent;
function headerScrollResize(offset,cssClass){
var cssClass=cssClass||'header-offset-top-trigger';
$(function(){
Metropolis.handleHeaderResize(offset,cssClass);
});
$(window).scroll(function(){
Metropolis.handleHeaderResize(offset,cssClass);
});
}
Metropolis.headerScrollResize=headerScrollResize;
function handleHeaderResize(offset,cssClass){
var $header=$('.header');
if($(document).scrollTop()>offset){
if(!$header.hasClass(cssClass)){
$header.addClass(cssClass);
$('body').trigger("header-offset-top-trigger");
}
}
else{
if($header.hasClass(cssClass))
$header.removeClass(cssClass);
}
}
Metropolis.handleHeaderResize=handleHeaderResize;
})(Metropolis||(Metropolis={}));
if(!Element.prototype.matches){
Element.prototype.matches=
Element.prototype.matchesSelector||
Element.prototype.mozMatchesSelector||
Element.prototype.msMatchesSelector||
Element.prototype.oMatchesSelector||
Element.prototype.webkitMatchesSelector||
function(selector){
var matches=(this.document||this.ownerDocument).querySelectorAll(selector),index=matches.length;
while(--index>=0&&matches.item(index)!==this)
;
return index>-1;
};
}
var Metropolis;
(function(Metropolis){
var Polyfill;
(function(Polyfill){
var ObjectFit;
(function(ObjectFit){
ObjectFit.APPLIED_EVENT="metropolis:polyfill:object-fit:applied";
var SVG_NS="http://www.w3.org/2000/svg";
var XLINK_NS="http://www.w3.org/1999/xlink";
var OBJECT_POSITION_PATTERN=/object-position:\s*(\d+\.\d+|\.?\d+)%\s+(\d+\.\d+|\.?\d+)%/;
function hasObjectFitSupport(){
var styles=(new Image()).style;
return styles&&undefined!==styles.objectFit;
}
var selectors=[];
function findSelectors(){
selectors=[];
for(var styleSheetIndex=0;styleSheetIndex<document.styleSheets.length;styleSheetIndex++){
var styleSheet=document.styleSheets.item(styleSheetIndex);
try{
if(styleSheet.cssRules){
for(var ruleIndex=0;ruleIndex<styleSheet.cssRules.length;ruleIndex++){
try{
var rule=styleSheet.cssRules.item(ruleIndex);
if(rule.selectorText&&-1!==rule.selectorText.indexOf(".-object-fit-cover-hook ")){
selectors.push(rule.selectorText.replace(/.-object-fit-cover-hook /g,""));
}
}
catch(e){
(console.warn||console.log)(e);
}
}
}
}
catch(e){
(console.warn||console.log)(e);
}
}
}
function isNecessary(image){
return"img"===image.tagName.toLowerCase()
&&!image.classList.contains("i4-object-fit-polyfill")
&&(!image.hasAttribute("data-src")
||image.hasAttribute("src")&&!image.getAttribute("src").match("^data:"));
}
function init(){
if(hasObjectFitSupport()){
return;
}
findSelectors();
applyOnAll(document);
var observer=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
if(mutation.target instanceof Element){
applyOnAll(mutation.target.parentElement||mutation.target);
}
});
});
observer.observe(document.body,{
childList:true,
attributes:true,
characterData:false,
subtree:true
});
}
ObjectFit.init=init;
function applyOnAll(root){
if(!selectors.length){
return;
}
var images=root.querySelectorAll(selectors.join(","));
var _loop_1=function(index){
var image=images.item(index);
if(!isNecessary(image)){
return"continue";
}
if(image.complete){
Metropolis.Polyfill.ObjectFit.apply(image);
}
else{
image.style.visibility="hidden";
image.addEventListener("load",function(){
Metropolis.Polyfill.ObjectFit.apply(image);
});
}
};
for(var index=0;index<images.length;index++){
_loop_1(index);
}
}
ObjectFit.applyOnAll=applyOnAll;
function apply(htmlImage){
try{
var width=htmlImage.naturalWidth;
var height=htmlImage.naturalHeight;
var src=htmlImage.src;
if(!width||!height||!src){
return;
}
var preserveAspectRatioAlign="xMidYMid";
var style=htmlImage.getAttribute("style")||"";
var objectPosition=OBJECT_POSITION_PATTERN.exec(style);
if(objectPosition){
var xPosition=parseFloat(objectPosition[1]);
var yPosition=parseFloat(objectPosition[2]);
if(xPosition<=40){
preserveAspectRatioAlign="xMin";
}
else if(xPosition>=60){
preserveAspectRatioAlign="xMax";
}
else{
preserveAspectRatioAlign="xMid";
}
if(yPosition<=40){
preserveAspectRatioAlign+="YMin";
}
else if(yPosition>=60){
preserveAspectRatioAlign+="YMax";
}
else{
preserveAspectRatioAlign+="YMid";
}
}
var svgImage=document.createElementNS(SVG_NS,"image");
svgImage.setAttributeNS(XLINK_NS,"xlink:href",src);
svgImage.setAttribute("src",src);
svgImage.setAttribute("width",width.toString());
svgImage.setAttribute("height",height.toString());
svgImage.setAttribute("x","0");
svgImage.setAttribute("y","0");
svgImage.setAttribute("preserveAspectRatio",preserveAspectRatioAlign+" slice");
var svg_1=document.createElementNS(SVG_NS,"svg");
var attributes=htmlImage.attributes;
for(var index=0;index<attributes.length;index++){
var attribute=attributes.item(index);
if("style"==attribute.name
||"src"==attribute.name
||"srcset"==attribute.name
||"sizes"==attribute.name){
continue;
}
svg_1.setAttribute(attribute.name,attribute.value);
}
svg_1.setAttribute("version","1.1");
svg_1.removeAttribute("width");
svg_1.removeAttribute("height");
svg_1.setAttribute("viewBox","0 0 "+width+" "+height);
svg_1.setAttribute("preserveAspectRatio",preserveAspectRatioAlign+" slice");
svg_1.appendChild(svgImage);
svg_1.classList.add("i4-object-fit-polyfill");
htmlImage.parentElement.insertBefore(svg_1,htmlImage);
htmlImage.parentElement.removeChild(htmlImage);
svg_1.style.visibility="";
svg_1.style.zoom="1";
var event_1=document.createEvent("Event");
event_1.initEvent(ObjectFit.APPLIED_EVENT,true,true);
event_1.image=htmlImage;
svg_1.dispatchEvent(event_1);
setTimeout(function(){
svg_1.style.zoom="";
},100);
}
catch(e){
(console.error||console.log)("Failed to apply object-fit polyfill",htmlImage,e);
}
}
ObjectFit.apply=apply;
})(ObjectFit=Polyfill.ObjectFit||(Polyfill.ObjectFit={}));
})(Polyfill=Metropolis.Polyfill||(Metropolis.Polyfill={}));
})(Metropolis||(Metropolis={}));
var Metropolis;
(function(Metropolis){
var Utils;
(function(Utils){
var EnvironmentChecker;
(function(EnvironmentChecker){
function init(){
var deviceAgent=navigator.userAgent.toLowerCase();
var agentID=deviceAgent.match(/(iphone|ipod|ipad)/);
if(agentID){
$('html').addClass('ios');
}
}
EnvironmentChecker.init=init;
})(EnvironmentChecker=Utils.EnvironmentChecker||(Utils.EnvironmentChecker={}));
})(Utils=Metropolis.Utils||(Metropolis.Utils={}));
})(Metropolis||(Metropolis={}));
var Metropolis;
(function(Metropolis){
var Morphsearch;
(function(Morphsearch){
var _title;
var _pageTitle;
var _morphsearch;
var _searchButton;
var _input;
var _closeButton;
var _body;
var _htmlAndBody;
function toggle(){
if(_morphsearch.hasClass('open')){
close();
}
else{
open();
}
}
Morphsearch.toggle=toggle;
function open(){
if(!_morphsearch.hasClass('open')){
_title=document.title;
_body.css('overflow-y','hidden');
_morphsearch.addClass('open');
_htmlAndBody.animate({scrollTop:0},"slow");
if($('#header').length>0){
var headerHeight=$('#header').height();
_morphsearch.css("top",headerHeight);
_morphsearch.css("min-height",'calc(100% - '+headerHeight+'px)');
}
setTimeout(function(){
_input.focus();
},500);
}
}
Morphsearch.open=open;
function close(){
if(_morphsearch.hasClass('open')){
document.title=_title;
_input.blur();
_body.css('overflow-y','scroll');
_morphsearch.removeClass('open');
window.history.replaceState({},document.title,document.location.search.replace(/q=[^&]*/,''));
}
}
Morphsearch.close=close;
function isOpen(){
return _morphsearch.hasClass("open");
}
Morphsearch.isOpen=isOpen;
function isClosed(){
return!_morphsearch.hasClass("open");
}
Morphsearch.isClosed=isClosed;
function titleModifier(){
var value=_input.val();
if(value){
var pattern="Suche nach \x22{keyword}\x22 | {pageTitle}";
document.title=pattern
.replace("{keyword}",value)
.replace("{title}",_title)
.replace("{pageTitle}",_pageTitle);
}
else{
document.title=_title;
}
}
function getQueryParameter(name){
var queryString=document.location.href.split('\?')[1];
if(queryString){
var parameters=queryString.split("&");
for(var index=0;index<parameters.length;index++){
var parameter=parameters[index];
var parts=parameter.split("=",2);
if(name==parts[0]){
return 2==parts.length?parts[1]:"";
}
}
}
return undefined;
}
function init(){
_title=document.title;
_pageTitle=(function(){
var parts=document.title.split("|");
return parts&&parts.length?(""+parts.pop()).trim():document.title;
})();
_morphsearch=$('#morphsearch');
_searchButton=$('.search-button');
_input=$('input.morphsearch-input');
_closeButton=$('span.morphsearch-close');
_body=$(document.body);
_htmlAndBody=$([document.documentElement,document.body]);
if(undefined!==getQueryParameter('q')){
toggle();
titleModifier();
}
_searchButton.click(toggle);
_closeButton.click(toggle);
_input.keyup(titleModifier);
$(document).keydown(function(ev){
var keyCode=ev.keyCode||ev.which;
if(keyCode===27&&_morphsearch.hasClass('open')){
toggle();
}
});
}
Morphsearch.init=init;
})(Morphsearch=Metropolis.Morphsearch||(Metropolis.Morphsearch={}));
})(Metropolis||(Metropolis={}));
var Metropolis;
(function(Metropolis){
var modules=['searchAggregator2App'];
try{
angular.module('bimApp');
modules.push('bimApp');
}
catch(e){
}
try{
angular.module('risApp');
modules.push('risApp');
}
catch(e){
}
try{
angular.module('structuredDataApp');
modules.push('structuredDataApp');
}
catch(e){
}
Metropolis.App=angular.module('metropolisApp',modules);
Metropolis.App.directive('searchEntryUrlPattern',function(){
return{
restrict:'A',
link:function($scope,element,attrs){
$scope.entryUrlPattern=attrs.searchEntryUrlPattern;
}
};
});
Metropolis.App.directive('searchDepartmentUrlPattern',function(){
return{
restrict:'A',
link:function($scope,element,attrs){
$scope.departmentUrlPattern=attrs.searchDepartmentUrlPattern;
}
};
});
Metropolis.App.directive('searchEmployeeUrlPattern',function(){
return{
restrict:'A',
link:function($scope,element,attrs){
$scope.employeeUrlPattern=attrs.searchEmployeeUrlPattern;
}
};
});
Metropolis.App.directive('searchWittichUrlPattern',function(){
return{
restrict:'A',
link:function($scope,element,attrs){
$scope.wittichUrlPattern=attrs.searchWittichUrlPattern;
}
};
});
Metropolis.App.directive('mobilePlaceholder',function(){
return{
restrict:'A',
link:function($scope,element,attrs){
var placeholder=element.attr('placeholder');
if(window.matchMedia){
var mq=window.matchMedia("(max-width: 639px)");
var listener=function(){
if(mq.matches){
element.attr('placeholder',attrs.mobilePlaceholder);
}
else{
element.attr('placeholder',placeholder);
}
};
window.addEventListener('resize',listener,true);
listener();
}
}
};
});
Metropolis.App.filter('generateUrl',function(){
return function(item,urlPattern){
return urlPattern
.replace('%id%',item.self.id)
.replace('%name%',ionas.normalizeName(item.name).toLowerCase());
};
});
Metropolis.App.filter('removeHTMLTags',function(){
return function(text){
return text?String(text).replace(/<[^>]+>/gm,''):'';
};
});
Metropolis.App.filter('processHilight',['$sce',function($sce){
var protectedTagName="i4-hilight";
var displayTagName="em";
return function(text){
function replaceTag(expression,slash,tagName){return tagName===protectedTagName?'<'+slash+displayTagName+'>':'';}
return text?$sce.trustAsHtml(String(text).replace(/<(\/?)([^>]+)>/gm,replaceTag)):'';
};
}]);
Metropolis.App.filter('reverse',function(){
return function(items){
return items.slice().reverse();
};
});
Metropolis.App.filter('withoutLast',function(){
return function(items){
return items.length>1?items.slice(0,items.length-1):[];
};
});
Metropolis.App.controller('appController',['$scope','$sce','sa2SearchService',
function($scope,$sce,searchService){
$scope.currentTab=null;
$scope.preferredTab=null;
$scope.tabIsLoadingStatus={};
searchService.registerStartSearchListener(function(searchState,resultSet){
$scope.tabIsLoadingStatus[resultSet.type]=true;
});
searchService.registerFinishSearchListener(function(searchState,resultSet,result){
for(var index=0;index<result.items.length;index++){
result.items[index].description=$sce.trustAsHtml(result.items[index].description);
}
if($scope.preferredTab){
if($scope.preferredTab==resultSet.type){
if(result.items.length>0){
$scope.currentTab=$scope.preferredTab;
return;
}
}
else{
return;
}
}
var sa2search=$scope.sa2search;
var resultSets=sa2search.resultSets;
var resultSetNames=Object.keys(resultSets);
for(var index_1=0;index_1<resultSetNames.length;index_1++){
var resultSetName=resultSetNames[index_1];
var resultSet_1=sa2search.resultSets[resultSetName];
$scope.tabIsLoadingStatus[resultSet_1.type]=false;
if($scope.tabIsLoadingStatus[resultSet_1.type]||!resultSet_1.result){
break;
}
if(resultSet_1.result.totalCount>0){
$scope.currentTab=resultSet_1.type;
break;
}
}
});
$scope.showTab=function(tab){
$scope.currentTab=tab;
$scope.preferredTab=tab;
if(tab=="department"||tab=="employee"){
window.setTimeout(function(){
$('body').trigger('Bim-card.ready');
},100);
}
};
}
]);
Metropolis.App.config([
'$locationProvider',
function($locationProvider){
$locationProvider.html5Mode({
enabled:true,
requireBase:false,
rewriteLinks:false
});
$locationProvider.hashPrefix('!');
var $getFunction=$locationProvider.$get[5];
$locationProvider.$get=['$rootScope','$browser','$sniffer','$rootElement','$window',
function($rootScope,$browser,$sniffer,$rootElement,$window){
var $location=$getFunction($rootScope,$browser,$sniffer,$rootElement,$window);
function urlWithDecodedHash(url){
var splitUrl=url.split('#');
if(splitUrl.length>1){
splitUrl[1]=decodeURIComponent(splitUrl[1]);
return splitUrl[0]+'#'+splitUrl[1];
}
return url;
}
var urlFunction=$location.url;
$location.url=function(url){
if(url===undefined){
return urlWithDecodedHash(urlFunction.call($location));
}
else{
return urlFunction.call(url);
}
};
var absUrlFunction=$location.absUrl;
$location.absUrl=function(){
return urlWithDecodedHash(absUrlFunction.call($location));
};
return $location;
}];
}
]);
})(Metropolis||(Metropolis={}));
var metropolisApp=Metropolis.App;
var Metropolis;
(function(Metropolis){
var Components;
(function(Components){
var Pegasus;
(function(Pegasus){
var Accordion;
(function(Accordion){
var $window=jQuery(window);
function scrollContentIntoView(content){
var prev=content.prev();
var offset=(prev.is(".accordion-title")?prev:content).offset();
var contentTop=offset.top;
var scrollTop=$window.scrollTop();
var scrollOffset=0;
if($("#header").length){
scrollOffset+=$("#header").height();
}
if($(".subnav").length){
scrollOffset+=$(".subnav").height();
}
if($(".main-top__breadcrumbs").length){
scrollOffset+=$(".breadcrumbs").height();
}
var scrollMin=scrollTop+scrollOffset;
var scrollMax=scrollTop+($window.height()/2);
if(contentTop<scrollMin||contentTop>scrollMax){
$([document.documentElement,document.body]).animate({"scrollTop":contentTop-scrollOffset},300);
}
}
Accordion.scrollContentIntoView=scrollContentIntoView;
function downListener(event,content){
var options={
disableDownlistener:false
};
$(document.body).trigger('beforeDownlistener.accordion.metropolis',options);
if(!options.disableDownlistener)
scrollContentIntoView(content);
}
$(document.body).on("click.zf.accordion",function(event){
var container=jQuery(event.target).closest("[data-accordion]");
if(container.length&&!container.prop("scrollContentIntoView")){
container.prop("scrollContentIntoView",true);
container.on("down.zf.accordion",downListener);
}
});
})(Accordion=Pegasus.Accordion||(Pegasus.Accordion={}));
})(Pegasus=Components.Pegasus||(Components.Pegasus={}));
})(Components=Metropolis.Components||(Metropolis.Components={}));
})(Metropolis||(Metropolis={}));
var Metropolis;
(function(Metropolis){
var Components;
(function(Components){
var Pegasus;
(function(Pegasus){
var GoogleMaps;
(function(GoogleMaps){
var Map=(function(){
function Map(element,options){
this.markers=[];
this.options=options||{};
var lat=this.options.lat?this.options.lat:51.0782675;
var long=this.options.lng?this.options.lng:5.9676316;
var zoom=this.options.zoom?this.options.zoom:10;
var placeId=this.options.placeId?this.options.placeId:undefined;
var markerIcon=this.options.markerIcon||"";
var displayInfoWindow=undefined===this.options.displayInfoWindow
||this.options.displayInfoWindow;
var mapTypeId=this.options.mapTypeId||"roadmap";
this.gmap=new google.maps.Map(element,{
center:{lat:lat,lng:long},
zoom:zoom,
scrollwheel:false
});
this.gmap.setMapTypeId(mapTypeId);
if(placeId){
this.addPlace(placeId,markerIcon,displayInfoWindow);
}
}
Map.prototype.addPlace=function(placeId,markerIcon,displayInfoWindow){
var service=new google.maps.places.PlacesService(this.gmap);
service.getDetails({placeId:placeId},function(result,status){
if(status==google.maps.places.PlacesServiceStatus.OK){
this.addMarker(result,markerIcon,displayInfoWindow);
this.fitBounds([result]);
}
}.bind(this));
};
Map.prototype.addSearch=function(input,listener){
var searchBox=new google.maps.places.SearchBox(input);
this.gmap.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
this.gmap.addListener('bounds_changed',function(){
searchBox.setBounds(this.gmap.getBounds());
}.bind(this));
searchBox.addListener('places_changed',function(){
var places=searchBox.getPlaces();
if(places.length==0){
return;
}
this.markers.forEach(function(marker){
marker.setMap(null);
});
this.markers=[];
places.forEach(function(result,index){
var marker=this.addMarker(result);
marker.addListener('click',function(){
listener(result,marker);
});
if(index==0){
listener(result,marker);
}
}.bind(this));
this.fitBounds(places);
}.bind(this));
};
Map.prototype.addMarker=function(result,markerIcon,displayInfoWindow){
var place={
location:result.geometry.location,
placeId:result.place_id
};
var marker=new google.maps.Marker({
map:this.gmap,
place:place,
position:{lat:result.geometry.location.lat(),lng:result.geometry.location.lng()},
icon:markerIcon
});
var infoWindow=new google.maps.InfoWindow({
content:'<h4>'+result.name+'</h4>'
+'<div>'+result.formatted_address+'</div>'
+'<div style="border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); margin-top: 9px; padding-top: 10px;">'
+'<a href="'+result.url+'" target="_blank" class="no-ext-link-icon">'
+'<i class="fa fa-fw fa-globe"></i> Standortdetails / Route planen'
+'</a>'
+'</div>'
});
if(displayInfoWindow&&document.body.clientWidth>=768){
infoWindow.open(this.gmap,marker);
}
if(displayInfoWindow){
marker.addListener('click',function(){
infoWindow.open(this.gmap,marker);
}.bind(this));
}
else{
marker.addListener('click',function(){
window.open(result.url);
});
}
this.markers.push(marker);
return marker;
};
Map.prototype.fitBounds=function(places){
var bounds=new google.maps.LatLngBounds();
places.forEach(function(result){
if(result.geometry.viewport){
bounds.union(result.geometry.viewport);
}
else{
bounds.extend(result.geometry.location);
}
});
this.gmap.fitBounds(bounds);
};
return Map;
}());
GoogleMaps.Map=Map;
})(GoogleMaps=Pegasus.GoogleMaps||(Pegasus.GoogleMaps={}));
})(Pegasus=Components.Pegasus||(Components.Pegasus={}));
})(Components=Metropolis.Components||(Metropolis.Components={}));
})(Metropolis||(Metropolis={}));
var Metropolis;
(function(Metropolis){
var Components;
(function(Components){
var Pegasus;
(function(Pegasus){
var OpeningHours;
(function(OpeningHours){
function apply(id){
var $el=$('.'+id);
if(!$el.length)
return;
$el.filter(".opening-hours__expandable").click(function(){
if($(this).hasClass("opening-hours__collapsed")){
this.classList.remove('opening-hours__collapsed');
this.classList.add('opening-hours__expanded');
}
else{
this.classList.remove('opening-hours__expanded');
this.classList.add('opening-hours__collapsed');
}
});
}
OpeningHours.apply=apply;
function init(){
$('body').on("openingHours.ready",function(event,data){
apply(data.id);
});
}
OpeningHours.init=init;
})(OpeningHours=Pegasus.OpeningHours||(Pegasus.OpeningHours={}));
})(Pegasus=Components.Pegasus||(Components.Pegasus={}));
})(Components=Metropolis.Components||(Metropolis.Components={}));
})(Metropolis||(Metropolis={}));
$(document).ready(function(){
Metropolis.Polyfill.ObjectFit.init();
Metropolis.Morphsearch.init();
Metropolis.Components.Pegasus.OpeningHours.init();
Metropolis.Utils.EnvironmentChecker.init();
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/contrast-switch.js";
$(function(){
if($(".contrast-switch").length==0)
return;
var cookies;
function readCookie(name,c,C,i){
if(cookies){
return cookies[name];
}
c=document.cookie.split('; ');
cookies={};
for(i=c.length-1;i>=0;i--){
C=c[i].split('=');
cookies[C[0]]=C[1];
}
return cookies[name];
}
var isHighContrast=readCookie('highContrast');
$(".contrast-switch").on("click",function(){
$("html").toggleClass("high-contrast");
if($("html").is(".high-contrast")){
document.cookie='highContrast=true; path='+ionasInfo.context+'; expires=Fri, 31 Dec 9999 23:59:59 GMT';
$("*").each(function(){
if($(this).is(".contrast-switch-outer"))
return true;
var bgColor=window.getComputedStyle($(this).get(0),null).getPropertyValue("background-color");
var split=bgColor.split("(")[1].split(")")[0].split(",");
if(split.length<3)
return;
var alpha=1;
if(split.length==4){
alpha=split[3].trim();
if(alpha==="0"){
alpha=0;
}
}
if(alpha===0)
return true;
var r=parseInt(split[0].trim());
var g=parseInt(split[1].trim());
var b=parseInt(split[2].trim());
if(r==255&&g==255&&b==255)
return true;
$(this).addClass("high-contrast-background");
});
}else{
document.cookie='highContrast=; path='+ionasInfo.context+'; expires=Fri, 31 Dec 9999 23:59:59 GMT';
$(".high-contrast-background").removeClass("high-contrast-background");
}
$(window).trigger("resize");
});
if(isHighContrast=="true"){
$(".contrast-switch").trigger("click");
}
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/anchor.js";
(function(){
function init(){
if($("body.mode-editor").length>0)
return;
var $anchorLinks=$("a[href*='/#']");
$anchorLinks.each(function(i){
var hash=$(this).get(0).hash;
if(hash){
hash=hash.substr(1);
var $target=$("#"+hash);
if($target.length==1){
var $anchor=$("<div class='anchor'></div>");
$target.prepend($anchor);
$(this).data("hash",hash);
$(this).on("click",function(){
var $_this=$(this);
setTimeout(function(){
var hash=$_this.data("hash");
var $anchor=$("#"+hash).children(".anchor").first();
var anchorHeight=0;
var headerHeight=$("#header").outerHeight();
anchorHeight+=headerHeight;
var $stickyBreadcrumb=$("[data-sticky-breadcrumb]");
if($stickyBreadcrumb.length>0){
if($stickyBreadcrumb.is(".is-stuck")){
anchorHeight+=$stickyBreadcrumb.height();
}
}
$anchor.height(anchorHeight);
$anchor.css("top",-anchorHeight);
},100);
});
}
}
});
}
$(window).on("load",function(){
init();
});
})();
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/greedy.js";
$(function(){
function Greedy(target){
var $target=target;
var timeoutSet=false;
var $hiddenItemsContainer;
var $hiddenItems;
var $toggleButton;
var activeSelector=null;
var hiddenItemsOptions;
function isWrapping(){
var $item=$target.children().nextUntil(".hidden-item").last().children("a");
if($item.length===0){
return false;
}
if($item.position().top>0){
return true;
}
return false;
}
function checkWrap(){
if(!timeoutSet){
timeoutSet=true;
var intervalId=setInterval(checkWrap,30);
setTimeout(function(){
clearInterval(intervalId);
timeoutSet=false;
},1000);
}
$target.children().removeClass("hidden-item");
$hiddenItems.find(".visible").removeClass("visible");
$hiddenItemsContainer.removeClass("visible");
while(isWrapping()){
var $wrappingItem=$target.children().nextUntil(".hidden-item").last();
$wrappingItem.addClass("hidden-item");
$hiddenItemsContainer.addClass("visible");
$hiddenItems.children().nextUntil(".visible").last().addClass("visible");
}
}
function onResize(){
checkWrap();
}
function init2(){
var $clonedItems=$target.children().clone(true,true);
$clonedItems.attr("class",hiddenItemsOptions.liClass);
$clonedItems.find("a").attr("class",hiddenItemsOptions.linkClass);
$clonedItems.appendTo($hiddenItems);
$hiddenItems.appendTo($hiddenItemsContainer);
$hiddenItemsContainer.on("mouseenter",function(){
$(this).addClass("is-open");
}).on("mouseleave",function(){
$(this).removeClass("is-open");
});
$(window).on("resize",function(){
onResize();
});
onResize();
if(activeSelector!==null){
if($hiddenItems.find(activeSelector).length>0&&$hiddenItems.find(activeSelector).is(".visible")){
$hiddenItemsContainer.addClass("has-active-item");
}
}
}
function init(){
$("[data-greedy-hidden-items-target-id]").each(function(){
if($(this).attr("data-greedy-hidden-items-target-id")==$target.attr("id")){
$hiddenItemsContainer=$(this);
}
});
hiddenItemsOptions=$hiddenItemsContainer.data("greedy-hidden-items-options");
$toggleButton=$hiddenItemsContainer.find("[data-greedy-hidden-items-toggle]");
activeSelector=$toggleButton.attr("data-greedy-active-selector");
$hiddenItems=$("<ul/>").addClass(hiddenItemsOptions.ulClass);
if($target.is("[data-greedy-callback]")){
var event=$target.attr("data-greedy-callback");
$target.on(event,function(e,data){
init2();
});
return;
}else{
init2();
}
}
init();
}
var target=$('body')[0];
var observer=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
for(var i=0;i<mutation.addedNodes.length;i++){
var $addedNode=$(mutation.addedNodes[i]);
var $target=null;
if($addedNode.is("[data-greedy]")){
$target=$addedNode;
}
if($target!==null&&$target.length>0){
Greedy($target);
}
}
});
});
var config={attributes:false,childList:true,characterData:false,subtree:true};
observer.observe(target,config);
$("[data-greedy]").each(function(i,el){
Greedy($(this));
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/navigation/navigation.js";
var MetropolisNavigation=(function(){
var TIMEOUT=300;
var public={};
public.expandedSelector=".nav__item--is-expanded.expanded";
public.expandedClass="nav__item--is-expanded expanded";
var _this=public;
public.outsideClickHandlerListItems=function(e,items){
items.each(function(i,obj){
if(!$(this).is(e.target)&&$(this).has(e.target).length===0){
_this.closeSubmenu($(this));
}
});
}
public.toggleSubmenu=function(el){
if(_this.isSubmenuOpened(el)){
_this.closeSubmenu(el);
}else{
_this.openSubmenu(el);
}
}
public.isSubmenuOpened=function(el){
return el.hasClass(_this.expandedClass);
}
public.openSubmenu=function(el){
public.closeAllSubmenusExcept(el.parents('.nav__item--has-children'));
if(el.hasClass(_this.expandedClass))
return;
el.addClass(_this.expandedClass);
el.trigger('MetropolisNavigation.submenu.open');
}
public.closeSubmenu=function(el){
if(!el.hasClass(_this.expandedClass))
return;
el.removeClass(_this.expandedClass);
el.trigger('MetropolisNavigation.submenu.close');
}
public.closeAllSubmenusExcept=function(keepOpen){
var submenus=$(public.expandedSelector);
if(keepOpen){
submenus=submenus.not(keepOpen);
}
submenus.removeClass(_this.expandedClass);
}
public.createDuplicateMobileLink=function(){
_this.$parentItems.each(function(i,obj){
var $link=$(this).children('a');
var $ul=$(this).children('ul');
var $liCopy=$ul.children().first().clone();
$liCopy.children('ul').remove();
var $newLink=$liCopy.children('a');
$newLink.html("<span>"+$link.text()+"</span>");
$newLink.attr('href',$link.attr('href'));
$newLink.addClass('nav__link--is-duplicate duplicate-link');
$liCopy.addClass('duplicate-link nav__item--is-duplicate');
$newLink.removeClass('nav__link--has-redirect has-redirect');
$liCopy.removeClass('nav__item--has-redirect has-redirect');
$liCopy.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-trail'],classes);
});
$newLink.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-trail'],classes);
});
$liCopy.addClass(Metropolis.filterClasses(['has-redirect'],$link.parent().attr('class')));
$newLink.addClass(Metropolis.filterClasses(['has-redirect'],$link.attr('class')));
$liCopy.prependTo($ul);
});
_this.$parentItems.each(function(i,obj){
var $ul=$(this).children('ul');
var $liCopy=$ul.children('li').eq(1).clone();
$liCopy.children('ul').remove();
var $link=$liCopy.children('a');
$link.html("<span>"+"Zurück"+"</span>");
$link.attr('href','#');
$link.addClass('nav__back-link');
$link.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-duplicate','duplicate-link','is-trail'],classes);
});
$liCopy.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-duplicate','duplicate-link','is-trail'],classes);
});
$liCopy.addClass('nav__back-link-item');
$liCopy.prependTo($ul);
});
};
public.init=function(){
if(public.isInitialized!==undefined)
return;
public.isInitialized=true;
$(document).ready(function(){
public.$topLevelLinks=$('.nav__link-level-1');
public.$parentItems=$('.nav__item--has-children');
public.$parentLinks=$('.nav__link--has-children');
public.$parentLinks.on('click',function(e){
e.preventDefault();
var $parentItem=$(this).parent('.nav__item--has-children');
public.toggleSubmenu($parentItem);
});
$(document).on('focusin',function(e){
if(window.whatInput.ask()==='keyboard'){
var $parentItem=$(e.target).closest('.nav__item--has-children');
if($parentItem.length===0){
public.closeAllSubmenusExcept();
}else{
public.openSubmenu($parentItem);
}
}
});
$('.goto-first-menuitem').on('click',function(e){
e.preventDefault();
$('.goto-last-menuitem').each(function(){setTimeout(this.focus.bind(this),TIMEOUT);});
});
$('.goto-last-menuitem').on('click',function(e){
e.preventDefault();
$('.goto-first-menuitem').each(function(){setTimeout(this.focus.bind(this),TIMEOUT);});
});
$('.i4-hidden-accessible').each(function(){
var $i4HiddenAccessible=$(this);
$i4HiddenAccessible.on('focusin',function(){$i4HiddenAccessible.addClass('active');});
$i4HiddenAccessible.on('focusout',function(){$i4HiddenAccessible.removeClass('active');});
});
public.createDuplicateMobileLink();
});
};
return public;
})();
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/mega-menu.js";
var MetropolisMegaMenu=(function(){
var $target;
var options={
hasHighlightedPrimaryLink:false,
openOnClick:false
};
var $overlay;
var $overlayInner;
var $menuContainer;
var $menuTop;
var layoutClassesArr=[];
var initialized=false;
var hoverTimeout=1000;
var overlayCloseTimeoutId=null;
function isInViewport(el){
var $el=el;
var rect=$el.get(0).getBoundingClientRect();
return rect.right<=window.innerWidth;
}
function flyoutIntersectHandler(el){
var $el=el;
$el.removeClass("to-left");
if(!isInViewport($el)){
$el.addClass("to-left");
}
}
function isTouch(){
return whatInput.ask()=='touch'||whatInput.ask('loose')=='touch';
}
function isMouse(){
return whatInput.ask()=='mouse'||whatInput.ask('loose')=='mouse';
}
var primaryMenuItemTimeoutId=null;
function primaryMenuHandler(){
$("[data-header-primary-menu-item]").on("mouseenter focusin",function(e){
if(!isMouse()||options.openOnClick||$("body").is(".mode-editor"))
return;
var $primaryLink=$(this).children("a");
var relationId=$primaryLink.attr("data-relation-id");
if($overlay.is("[data-current-relation-id='"+relationId+"']")){
return;
}
if($overlay.find(".relation-id-"+relationId).length>0){
$overlay.attr("data-current-relation-id",relationId);
clearTimeout(primaryMenuItemTimeoutId);
var $this=$(this);
primaryMenuItemTimeoutId=setTimeout(function(){
$overlay.find('.item-is-visible').removeClass('item-is-visible');
$overlay.find(".relation-id-"+relationId).addClass("item-is-visible");
$this.addClass("expanded");
$primaryLink.addClass("expanded");
openOverlay();
},300);
}else{
closeOverlay();
}
}).on("mouseleave focusout",function(e){
if(!isMouse()||options.openOnClick||$("body").is(".mode-editor"))
return;
clearTimeout(primaryMenuItemTimeoutId);
var $primaryLink=$(this).children("a");
if($overlay.has(e.relatedTarget).length>0){
return;
}
$(this).removeClass("expanded");
$(this).children("a").removeClass("expanded");
});
$("[data-header-primary-menu-link]").on("click",function(e){
if(!isTouch()&&!options.openOnClick&&!$("body").is(".mode-editor"))
return;
var relationId=$(this).attr("data-relation-id");
if($overlay.find(".relation-id-"+relationId).length>0){
e.preventDefault();
$overlay.find('.item-is-visible').removeClass('item-is-visible');
$overlay.find(".relation-id-"+relationId).addClass("item-is-visible");
$("[data-header-primary-menu-link]").not(this).removeClass("expanded");
$("[data-header-primary-menu-item]").not(this).removeClass("expanded");
if($(this).hasClass("expanded")){
$(this).parent().removeClass("expanded");
$(this).removeClass("expanded");
closeOverlay();
}else{
$(this).parent().addClass("expanded");
$(this).addClass("expanded");
openOverlay();
}
}
});
}
function submenuHandler(){
$(".mega-menu__item-level-1-up.has-children").on("mouseenter",function(e){
if(!isMouse()||options.openOnClick||$("body").is(".mode-editor"))
return;
$(this).removeClass("clicked");
var timeoutId=$(this).attr("data-mouseover-timeout-id");
if(timeoutId!==undefined){
clearTimeout(timeoutId);
}
$(this).children("ul").children(".duplicate-item").addClass("mega-menu__hidden-duplicate-item");
$(this).addClass("expanded");
$(this).parent().addClass("expanded");
flyoutIntersectHandler($(this).children("ul"));
}).on("mouseleave",function(){
if(!isMouse()||options.openOnClick||$("body").is(".mode-editor"))
return;
var $this=$(this);
var timeoutId=setTimeout(function(){
$this.removeClass("expanded");
$this.parent().removeClass("expanded");
},hoverTimeout);
$this.attr("data-mouseover-timeout-id",timeoutId);
});
$(".mega-menu__link-level-1-up.has-children").on("click",function(e){
if(!isTouch()&&!options.openOnClick&&!$("body").is(".mode-editor"))
return;
$(this).parent().siblings().removeClass("expanded").find(".expanded").removeClass("expanded");
if($(this).hasClass("expanded")){
$(this).removeClass("expanded");
$(this).parent().removeClass("expanded");
$(this).next().find(".expanded").removeClass("expanded");
}else{
$(this).addClass("expanded");
$(this).parent().addClass("expanded");
}
flyoutIntersectHandler($(this).next());
$(this).parent().addClass("clicked");
$(".mega-menu__hidden-duplicate-item").removeClass("mega-menu__hidden-duplicate-item");
var followLink=window.getComputedStyle($(this).get(0),null).getPropertyValue("pointer-events").toLowerCase()=="auto";
if(!followLink){
e.preventDefault();
}
$(this).parent().removeClass("clicked");
});
}
function registerOverlayOpenBehaviour(){
$(document).click(function(e){
if($("body").is(".mode-editor")&&$overlay.contains("[data-ionas4-inheritance]"))
return;
if(
!$(e.target).is($target)
&&$target.has(e.target).length===0
&&!$(e.target).is(".breadcrumbs")
&&$(".breadcrumbs").has(e.target).length===0
){
closeOverlay();
}
});
primaryMenuHandler();
submenuHandler();
$("[data-mega-menu-toggle]").on("click",function(e){
var relationId="1-2";
if($overlay.find(".relation-id-"+relationId).length>0){
$overlay.find('.item-is-visible').removeClass('item-is-visible');
$overlay.find(".relation-id-"+relationId).addClass("item-is-visible");
$(this).toggleClass("is-active");
toggleOverlay();
}
});
var targetTimeoutId=null;
$target.on("mouseenter",function(e){
if(targetTimeoutId!==null){
clearTimeout(targetTimeoutId);
}
});
$target.on("mouseleave",function(e){
clearTimeout(targetTimeoutId);
targetTimeoutId=setTimeout(function(){
var isI4Tag=false;
if($(e.relatedTarget).prop("tagName")!==undefined){
isI4Tag=$(e.relatedTarget).prop("tagName").toLowerCase().indexOf("i4")!==-1;
}
if($target.has(e.relatedTarget).length===0&&!isI4Tag&&!options.openOnClick&&!$("body").is(".mode-editor")){
closeOverlay();
}
},300);
});
}
function createDuplicateLink(){
$menuContainer.find(".mega-menu__item.has-children").each(function(i,obj){
var $link=$(this).children('a');
var relationId=$link.next().attr("data-relation-id");
var level=$link.attr("data-level");
if($(this).hasClass("mega-menu__item-level-1")&&options.hasHighlightedPrimaryLink){
var $topAreaLink=$("<a><span>"+$link.text()+"</span></a>")
.addClass("mega-menu__headline highlighted-primary-link relation-id-"+relationId)
.attr("href",$link.attr("href"))
.attr("data-relation-id",relationId)
.appendTo($menuTop);
}
var $ul=$(this).children('ul');
var $liCopy=$ul.children().first().clone();
$liCopy.children('ul').remove();
var $newLink=$liCopy.children('a');
$newLink.html("<span>"+$link.text()+"</span>");
$newLink.attr('href',$link.attr('href'));
$newLink.addClass('duplicate-link mega-menu__link-level-'+(level+1));
$liCopy.prependTo($ul);
$liCopy.addClass('duplicate-item');
$liCopy.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-trail'],classes);
});
$newLink.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-trail'],classes);
});
});
}
function isOverlayOpen(){
return $overlay.is(".is-open");
}
function checkHeight(){
if(!isOverlayOpen())
return;
var rect=$overlay.get(0).getBoundingClientRect();
var isOverflowing=window.innerHeight-rect.bottom<0;
if(isOverflowing){
$overlayInner.height(window.innerHeight-rect.top);
$overlayInner.children(".mega-menu-overlay-content").height($overlayInner.get(0).scrollHeight);
$overlayInner.addClass("is-overflowing");
}else{
if($overlayInner.attr("style")===undefined)
return;
$overlayInner.removeClass("is-overflowing");
$overlayInner.removeAttr("style");
$overlayInner.children(".mega-menu-overlay-content").removeAttr("style");
checkHeight();
}
}
function checkLayout(){
closeOverlay();
$.each(options.layout,function(breakpoint,cssClass){
if(Foundation.MediaQuery.atLeast(breakpoint)){
$target.removeClass(layoutClassesArr.join(" "));
$target.addClass(cssClass);
}
});
}
function onChangedMediaQuery(){
var display=window.getComputedStyle($target.get(0),null).getPropertyValue("display");
if(display!=="none"&&!initialized){
initialized=true;
init();
}
if(display!="none"){
$(".is-active-menu").removeClass("is-active-menu");
$target.addClass("is-active-menu");
}
}
function init(){
options=$.extend(options,$target.data("mega-menu"));
if($target.attr("data-mega-menu-layout")!==undefined){
options.layout=$target.data("mega-menu-layout");
layoutClassesArr=[];
$.each(options.layout,function(breakpoint,cssClass){
layoutClassesArr.push(cssClass);
});
$(window).on('changed.zf.mediaquery',function(event,newSize,oldSize){
checkLayout();
});
checkLayout();
}
$target.on("openTrailItem",function(e,data){
data.event.preventDefault();
openTrailItem(data.event,data.depth-1);
});
registerOverlayOpenBehaviour();
createDuplicateLink();
$(window).resize(function(){
checkHeight();
});
if(options.hasHighlightedPrimaryLink){
$overlay.addClass("has-highlighted-primary-link");
}
}
function toggleOverlay(){
$overlay.toggleClass('is-open');
}
function openOverlay(){
$overlay.addClass('is-open');
checkHeight();
}
function closeOverlay(){
$overlay.removeAttr("data-current-relation-id");
$overlay.removeClass('is-open');
$target.find(".expanded").removeClass("expanded");
$("[data-mega-menu-toggle]").removeClass("is-active");
}
function checkInit(){
$target=$("[data-mega-menu]");
if($target.length==0)
return;
$(window).on('changed.zf.mediaquery',function(event,newSize,oldSize){
onChangedMediaQuery();
});
onChangedMediaQuery();
}
$(function(){
$overlay=$('.mega-menu-overlay');
$overlayInner=$('.mega-menu-overlay-inner');
$menuContainer=$(".mega-menu-overlay__main-column-bottom");
$menuTop=$(".mega-menu-overlay__main-column-top");
checkInit();
});
function openTrailItem(e,depth){
var toggleDisplay=window.getComputedStyle($("[data-mega-menu-toggle]").get(0),null).getPropertyValue("display");
var primaryMenuDisplay=window.getComputedStyle($(".header-primary-menu").get(0),null).getPropertyValue("display");
var $primaryLink=$(".header-primary-menu__link.is-trail");
if(primaryMenuDisplay.toLowerCase()!="none"){
var relationId=$primaryLink.attr("data-relation-id");
if($overlay.find(".relation-id-"+relationId).length>0){
$overlay.find('.item-is-visible').removeClass('item-is-visible');
$overlay.find(".relation-id-"+relationId).addClass("item-is-visible");
$(this).parent().addClass("expanded");
$primaryLink.addClass("expanded");
openOverlay();
}
}
if(toggleDisplay.toLowerCase()!="none"){
var relationId="1-2";
if($overlay.find(".relation-id-"+relationId).length>0){
$overlay.find('.item-is-visible').removeClass('item-is-visible');
$overlay.find(".relation-id-"+relationId).addClass("item-is-visible");
$("[data-mega-menu-toggle]").addClass("is-active");
openOverlay();
}
}
$(".mega-menu__item.is-trail").each(function(i){
if(i<=depth){
$(this).addClass("expanded");
return true;
}
return false;
});
}
return{
openTrailItem:openTrailItem
}
})();
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/offcanvas-multicolumn.js";
(function(){
var $target;
var $parentPrimaryLinks;
var $parentLinksSecondColumn;
var $firstColumn;
var $secondColumn;
var $offCanvasToggles;
function init(){
$target=$("#offcanvas-multicolumn");
if($target.length===0)
return;
$firstColumn=$target.find(".offcanvas-multicolumn__column.first");
$secondColumn=$target.find(".offcanvas-multicolumn__column.second");
$parentPrimaryLinks=$firstColumn.find(".link.has-children");
$parentLinksSecondColumn=$secondColumn.find(".link-level-2-up.has-children");
$parentPrimaryLinks.each(function(){
var $toggleButton=$('<button class="submenu-toggle" title="Untermenü öffnen"></button>');
$(this).after($toggleButton);
});
$parentLinksSecondColumn.each(function(){
var $toggleButton=$('<button class="submenu-toggle" title="Untermenü öffnen"></button>');
$(this).after($toggleButton);
});
$parentLinksSecondColumn.next(".submenu-toggle").on("click",function(e){
console.log("clicked");
var $link=$(this).prev();
$link.parent().siblings().removeClass("expanded");
$link.parent().siblings().find(".expanded").removeClass("expanded");
$link.toggleClass("expanded");
$link.parent().toggleClass("expanded");
});
$parentPrimaryLinks.next(".submenu-toggle").on("click",function(e){
var $link=$(this).prev();
console.log($link);
if($link.hasClass("expanded")){
$link.removeClass("expanded");
$link.parent().removeClass("expanded");
toggleSecondColumn(false);
}else{
$link.addClass("expanded");
$link.parent().addClass("expanded");
$link.parent().siblings().removeClass("expanded");
$link.parent().siblings().children("a").removeClass("expanded");
$secondColumn.find("[data-relation-id]").removeClass("visible");
var relationId=$link.attr("data-relation-id");
$secondColumn.find("[data-relation-id='"+relationId+"']").addClass("visible");
toggleSecondColumn(true);
}
});
$offCanvasToggles=$("[data-toggle='offcanvas-multicolumn']");
if($secondColumn.find(".item-level-2-up.is-active-leaf").length>0){
$secondColumn.addClass("expanded");
}
updateOffCanvasSize();
$parentLinksSecondColumn.on("click",function(e){
});
}
function toggleSecondColumn(add){
$target.removeAttr("style");
if(add){
$secondColumn.addClass("expanded");
}else{
$secondColumn.removeClass("expanded");
}
var transitionDuration=window.getComputedStyle($secondColumn.get(0),null).getPropertyValue("transition-duration");
transitionDuration=parseInt(transitionDuration.replace("s","")*1000);
setTimeout(function(){
updateOffCanvasSize();
},transitionDuration);
}
function updateOffCanvasSize(){
var width=$firstColumn.outerWidth();
if($secondColumn.is(".expanded")){
width+=$secondColumn.outerWidth();
}
$target.width(width+5);
}
init();
})();
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/offcanvas-singlecolumn.js";
(function(){
var $target;
var $parentPrimaryLinks;
var $activePrimaryLink;
var $column;
var $offCanvasToggles;
var $body;
var $offCanvasWrapper;
var $offCanvasContent;
var $offCanvasMenu;
var $offcanvasSinglecolumn;
function init(){
$target=$("#offcanvas-singlecolumn");
if($target.length===0)
return;
preparePage();
$column=$target.find(".offcanvas-singlecolumn__column");
$parentPrimaryLinks=$column.find(".nav__link.has-children");
$activePrimaryLink=$column.find(".nav__link--is-active");
$parentPrimaryLinks.each(function(){
var $toggleButton=$('<button class="submenu-toggle" title="Untermenü öffnen"></button>');
$(this).after($toggleButton);
});
$parentPrimaryLinks.next(".submenu-toggle").on("click",function(e){
var $link=$(this).prev();
var $ul=$link.parent().find("> ul");
if($link.hasClass("expanded")){
$link.removeClass("expanded");
$link.parent().removeClass("expanded");
$ul.slideUp(200);
}else{
$link.addClass("expanded");
$link.parent().addClass("expanded");
$link.parent().siblings().removeClass("expanded");
$link.parent().parent().siblings().children("a").removeClass("expanded");
$ul.slideDown(200);
$link.parent().siblings().find("> ul").slideUp();
}
});
$offCanvasToggles=$("[data-toggle='offcanvas-singlecolumn']");
if($activePrimaryLink.length!=0){
$activePrimaryLink.addClass("expanded");
$activePrimaryLink.parent().addClass("expanded");
$("ul.is-trail").each(function(i,e){
var $e=$(e);
if($e.css("display")=="none"){
$e.addClass("expanded");
$e.css("display","block");
}
});
}
updateOffCanvasSize();
}
function updateOffCanvasSize(){
var width=$column.outerWidth();
$target.width(width+5);
}
function preparePage(){
$body=$("body");
$offcanvasSinglecolumn=$("#offcanvas-singlecolumn");
$offCanvasWrapper=$("<div />",{
"class":"off-canvas-wrapper"
});
$offCanvasContent=$("<div />",{
"class":"off-canvas-content",
"data-off-canvas-content":""
});
$offCanvasMenu=$("<div />",{
"class":"off-canvas-menu",
"data-off-canvas":""
});
$body.wrapInner($offCanvasContent);
$body.append($offCanvasWrapper);
$offCanvasWrapper.append($("#offcanvas-singlecolumn"));
$offCanvasWrapper.append($(".off-canvas-content"));
}
init();
})();
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/mobile-menu-alpha.js";
$(function(){
var $target;
var options={
hideForBreakpoint:"medium"
};
var visibleLevelClass="";
var $nav;
var $parentLinks;
var $trigger;
var initialized=false;
function showActive(){
var $activeItem=$target.find("li.is-active-leaf");
if($activeItem.length==0){
$target.find('.menu__level-1').addClass('visible-slide');
return;
}
if($activeItem.hasClass('has-children')){
show($activeItem.children('ul'));
}else{
show($activeItem.parent());
}
}
function createDuplicateLink(){
$target.find(".menu__item.has-children").each(function(i,obj){
var $link=$(this).children('a');
var $ul=$(this).children('ul');
var $liCopy=$ul.children().first().clone();
$liCopy.children('ul').remove();
var $newLink=$liCopy.children('a');
$newLink.html("<span>"+$link.text()+"</span>");
$newLink.attr('href',$link.attr('href'));
$newLink.addClass('duplicate-link');
$liCopy.prependTo($ul);
$liCopy.addClass('duplicate-item');
$liCopy.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active'],classes);
});
$newLink.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active'],classes);
});
var $liCopy2=$ul.children('li').eq(1).clone();
$liCopy2.children('ul').remove();
var $link=$liCopy2.children('a');
$link.html("<span>Zurück</span>");
$link.attr('href','#');
$link.addClass('menu__back-link');
$link.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-duplicate','duplicate-link'],classes);
});
$liCopy2.removeClass(function(index,classes){
return Metropolis.filterClasses(['has-children','is-active','is-duplicate','duplicate-link'],classes);
});
$liCopy2.addClass('menu_back-link-item');
$liCopy2.prependTo($ul);
});
}
function mobileNavScrollHandler(currentSlide){
var $currentSlide=currentSlide;
if($currentSlide.height()>$target.height()){
$target.css('overflow-y','auto');
}else{
$target.css('overflow-y','initial');
}
}
function updatePath($ul){
if($ul.hasClass('menu__level-1')){
return;
}
$target.find('.menu__level-2-up').removeClass("is-visible-menu");
$ul.addClass("is-visible-menu");
$ul.parentsUntil($('.menu__level-1'),'ul').addClass('is-visible-menu');
$ul.find("ul").addClass("is-visible-menu");
}
function setContainerHeight(){
$target.height($(window).height()-$('.header').height());
}
function registerBacklink(){
$target.find(".menu__back-link").on('click',function(){
var $parentMenu=$(this).closest('.menu__level-1-up').parent().closest('.menu__level-1-up');
if($parentMenu.length)
show($parentMenu);
});
}
function show($ul){
$('.visible-slide').removeClass('visible-slide');
setTimeout(function(){
$ul.addClass('visible-slide');
mobileNavScrollHandler($ul);
},300);
$nav.removeClass(visibleLevelClass);
var level=$ul.data("level");
visibleLevelClass="is-visible-level-"+level;
$nav.addClass(visibleLevelClass);
updatePath($ul);
}
function init(){
$nav=$target.find(".menu__level-1");
$parentLinks=$nav.find(".menu__link.has-children");
$trigger=$("[data-toggle='"+$target.attr("id")+"']");
$trigger.on("click",function(){
$(this).toggleClass("is-active");
if($target.hasClass("is-open")){
mobileNavScrollHandler($target.find('.visible-slide'));
}
});
$(document).click(function(e){
if(!$(e.target).is($trigger)&&$trigger.has(e.target).length===0&&!$(e.target).is($target)&&$target.has(e.target).length===0){
$target.removeClass("is-open");
$trigger.removeClass("is-active");
}
});
createDuplicateLink();
registerBacklink();
$(window).on("resize",function(){
setContainerHeight();
});
setContainerHeight();
$parentLinks.on('click',function(e){
e.preventDefault();
show($(this).next());
});
showActive();
}
function onChangedMediaQuery(){
if(!Foundation.MediaQuery.atLeast(options.hideForBreakpoint)&&!initialized){
initialized=true;
init();
}
if(!Foundation.MediaQuery.atLeast(options.hideForBreakpoint)){
$(".is-active-menu").removeClass("is-active-menu");
$target.addClass("is-active-menu");
}
}
function checkInit(){
$target=$("[data-mobile-menu-alpha]");
if($target.length==0)
return;
options=$.extend(options,$target.data("mobile-menu-alpha"));
$(window).on('changed.zf.mediaquery',function(event,newSize,oldSize){
onChangedMediaQuery();
});
onChangedMediaQuery();
}
checkInit();
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/metropolisFilter.js";
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/vendor/isotope/isotope.pkgd.min.js";
!function(t,e){"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("jquery")):t.jQueryBridget=e(t,t.jQuery)}(window,function(t,e){"use strict";function i(i,s,a){function u(t,e,n){var o,s="$()."+i+'("'+e+'")';return t.each(function(t,u){var h=a.data(u,i);if(!h)return void r(i+" not initialized. Cannot call methods, i.e. "+s);var d=h[e];if(!d||"_"==e.charAt(0))return void r(s+" is not a valid method");var l=d.apply(h,n);o=void 0===o?l:o}),void 0!==o?o:t}function h(t,e){t.each(function(t,n){var o=a.data(n,i);o?(o.option(e),o._init()):(o=new s(n,e),a.data(n,i,o))})}a=a||e||t.jQuery,a&&(s.prototype.option||(s.prototype.option=function(t){a.isPlainObject(t)&&(this.options=a.extend(!0,this.options,t))}),a.fn[i]=function(t){if("string"==typeof t){var e=o.call(arguments,1);return u(this,t,e)}return h(this,t),this},n(a))}function n(t){!t||t&&t.bridget||(t.bridget=i)}var o=Array.prototype.slice,s=t.console,r="undefined"==typeof s?function(){}:function(t){s.error(t)};return n(e||t.jQuery),i}),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},n=i[t]=i[t]||[];return n.indexOf(e)==-1&&n.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{},n=i[t]=i[t]||{};return n[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=i.indexOf(e);return n!=-1&&i.splice(n,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=0,o=i[n];e=e||[];for(var s=this._onceEvents&&this._onceEvents[t];o;){var r=s&&s[o];r&&(this.off(t,o),delete s[o]),o.apply(this,e),n+=r?0:1,o=i[n]}return this}},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("get-size/get-size",[],function(){return e()}):"object"==typeof module&&module.exports?module.exports=e():t.getSize=e()}(window,function(){"use strict";function t(t){var e=parseFloat(t),i=t.indexOf("%")==-1&&!isNaN(e);return i&&e}function e(){}function i(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;e<h;e++){var i=u[e];t[i]=0}return t}function n(t){var e=getComputedStyle(t);return e||a("Style returned "+e+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),e}function o(){if(!d){d=!0;var e=document.createElement("div");e.style.width="200px",e.style.padding="1px 2px 3px 4px",e.style.borderStyle="solid",e.style.borderWidth="1px 2px 3px 4px",e.style.boxSizing="border-box";var i=document.body||document.documentElement;i.appendChild(e);var o=n(e);s.isBoxSizeOuter=r=200==t(o.width),i.removeChild(e)}}function s(e){if(o(),"string"==typeof e&&(e=document.querySelector(e)),e&&"object"==typeof e&&e.nodeType){var s=n(e);if("none"==s.display)return i();var a={};a.width=e.offsetWidth,a.height=e.offsetHeight;for(var d=a.isBorderBox="border-box"==s.boxSizing,l=0;l<h;l++){var f=u[l],m=s[f],c=parseFloat(m);a[f]=isNaN(c)?0:c}var p=a.paddingLeft+a.paddingRight,y=a.paddingTop+a.paddingBottom,g=a.marginLeft+a.marginRight,v=a.marginTop+a.marginBottom,_=a.borderLeftWidth+a.borderRightWidth,I=a.borderTopWidth+a.borderBottomWidth,z=d&&r,S=t(s.width);S!==!1&&(a.width=S+(z?0:p+_));var x=t(s.height);return x!==!1&&(a.height=x+(z?0:y+I)),a.innerWidth=a.width-(p+_),a.innerHeight=a.height-(y+I),a.outerWidth=a.width+g,a.outerHeight=a.height+v,a}}var r,a="undefined"==typeof console?e:function(t){console.error(t)},u=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],h=u.length,d=!1;return s}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",e):"object"==typeof module&&module.exports?module.exports=e():t.matchesSelector=e()}(window,function(){"use strict";var t=function(){var t=window.Element.prototype;if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],i=0;i<e.length;i++){var n=e[i],o=n+"MatchesSelector";if(t[o])return o}}();return function(e,i){return e[t](i)}}),function(t,e){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("desandro-matches-selector")):t.fizzyUIUtils=e(t,t.matchesSelector)}(window,function(t,e){var i={};i.extend=function(t,e){for(var i in e)t[i]=e[i];return t},i.modulo=function(t,e){return(t%e+e)%e},i.makeArray=function(t){var e=[];if(Array.isArray(t))e=t;else if(t&&"object"==typeof t&&"number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e},i.removeFrom=function(t,e){var i=t.indexOf(e);i!=-1&&t.splice(i,1)},i.getParent=function(t,i){for(;t!=document.body;)if(t=t.parentNode,e(t,i))return t},i.getQueryElement=function(t){return"string"==typeof t?document.querySelector(t):t},i.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.filterFindElements=function(t,n){t=i.makeArray(t);var o=[];return t.forEach(function(t){if(t instanceof HTMLElement){if(!n)return void o.push(t);e(t,n)&&o.push(t);for(var i=t.querySelectorAll(n),s=0;s<i.length;s++)o.push(i[s])}}),o},i.debounceMethod=function(t,e,i){var n=t.prototype[e],o=e+"Timeout";t.prototype[e]=function(){var t=this[o];t&&clearTimeout(t);var e=arguments,s=this;this[o]=setTimeout(function(){n.apply(s,e),delete s[o]},i||100)}},i.docReady=function(t){var e=document.readyState;"complete"==e||"interactive"==e?setTimeout(t):document.addEventListener("DOMContentLoaded",t)},i.toDashed=function(t){return t.replace(/(.)([A-Z])/g,function(t,e,i){return e+"-"+i}).toLowerCase()};var n=t.console;return i.htmlInit=function(e,o){i.docReady(function(){var s=i.toDashed(o),r="data-"+s,a=document.querySelectorAll("["+r+"]"),u=document.querySelectorAll(".js-"+s),h=i.makeArray(a).concat(i.makeArray(u)),d=r+"-options",l=t.jQuery;h.forEach(function(t){var i,s=t.getAttribute(r)||t.getAttribute(d);try{i=s&&JSON.parse(s)}catch(a){return void(n&&n.error("Error parsing "+r+" on "+t.className+": "+a))}var u=new e(t,i);l&&l.data(t,o,u)})})},i}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/item",["ev-emitter/ev-emitter","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("ev-emitter"),require("get-size")):(t.Outlayer={},t.Outlayer.Item=e(t.EvEmitter,t.getSize))}(window,function(t,e){"use strict";function i(t){for(var e in t)return!1;return e=null,!0}function n(t,e){t&&(this.element=t,this.layout=e,this.position={x:0,y:0},this._create())}function o(t){return t.replace(/([A-Z])/g,function(t){return"-"+t.toLowerCase()})}var s=document.documentElement.style,r="string"==typeof s.transition?"transition":"WebkitTransition",a="string"==typeof s.transform?"transform":"WebkitTransform",u={WebkitTransition:"webkitTransitionEnd",transition:"transitionend"}[r],h={transform:a,transition:r,transitionDuration:r+"Duration",transitionProperty:r+"Property",transitionDelay:r+"Delay"},d=n.prototype=Object.create(t.prototype);d.constructor=n,d._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},d.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},d.getSize=function(){this.size=e(this.element)},d.css=function(t){var e=this.element.style;for(var i in t){var n=h[i]||i;e[n]=t[i]}},d.getPosition=function(){var t=getComputedStyle(this.element),e=this.layout._getOption("originLeft"),i=this.layout._getOption("originTop"),n=t[e?"left":"right"],o=t[i?"top":"bottom"],s=this.layout.size,r=n.indexOf("%")!=-1?parseFloat(n)/100*s.width:parseInt(n,10),a=o.indexOf("%")!=-1?parseFloat(o)/100*s.height:parseInt(o,10);r=isNaN(r)?0:r,a=isNaN(a)?0:a,r-=e?s.paddingLeft:s.paddingRight,a-=i?s.paddingTop:s.paddingBottom,this.position.x=r,this.position.y=a},d.layoutPosition=function(){var t=this.layout.size,e={},i=this.layout._getOption("originLeft"),n=this.layout._getOption("originTop"),o=i?"paddingLeft":"paddingRight",s=i?"left":"right",r=i?"right":"left",a=this.position.x+t[o];e[s]=this.getXValue(a),e[r]="";var u=n?"paddingTop":"paddingBottom",h=n?"top":"bottom",d=n?"bottom":"top",l=this.position.y+t[u];e[h]=this.getYValue(l),e[d]="",this.css(e),this.emitEvent("layout",[this])},d.getXValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&!e?t/this.layout.size.width*100+"%":t+"px"},d.getYValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&e?t/this.layout.size.height*100+"%":t+"px"},d._transitionTo=function(t,e){this.getPosition();var i=this.position.x,n=this.position.y,o=parseInt(t,10),s=parseInt(e,10),r=o===this.position.x&&s===this.position.y;if(this.setPosition(t,e),r&&!this.isTransitioning)return void this.layoutPosition();var a=t-i,u=e-n,h={};h.transform=this.getTranslate(a,u),this.transition({to:h,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})},d.getTranslate=function(t,e){var i=this.layout._getOption("originLeft"),n=this.layout._getOption("originTop");return t=i?t:-t,e=n?e:-e,"translate3d("+t+"px, "+e+"px, 0)"},d.goTo=function(t,e){this.setPosition(t,e),this.layoutPosition()},d.moveTo=d._transitionTo,d.setPosition=function(t,e){this.position.x=parseInt(t,10),this.position.y=parseInt(e,10)},d._nonTransition=function(t){this.css(t.to),t.isCleaning&&this._removeStyles(t.to);for(var e in t.onTransitionEnd)t.onTransitionEnd[e].call(this)},d.transition=function(t){if(!parseFloat(this.layout.options.transitionDuration))return void this._nonTransition(t);var e=this._transn;for(var i in t.onTransitionEnd)e.onEnd[i]=t.onTransitionEnd[i];for(i in t.to)e.ingProperties[i]=!0,t.isCleaning&&(e.clean[i]=!0);if(t.from){this.css(t.from);var n=this.element.offsetHeight;n=null}this.enableTransition(t.to),this.css(t.to),this.isTransitioning=!0};var l="opacity,"+o(a);d.enableTransition=function(){if(!this.isTransitioning){var t=this.layout.options.transitionDuration;t="number"==typeof t?t+"ms":t,this.css({transitionProperty:l,transitionDuration:t,transitionDelay:this.staggerDelay||0}),this.element.addEventListener(u,this,!1)}},d.onwebkitTransitionEnd=function(t){this.ontransitionend(t)},d.onotransitionend=function(t){this.ontransitionend(t)};var f={"-webkit-transform":"transform"};d.ontransitionend=function(t){if(t.target===this.element){var e=this._transn,n=f[t.propertyName]||t.propertyName;if(delete e.ingProperties[n],i(e.ingProperties)&&this.disableTransition(),n in e.clean&&(this.element.style[t.propertyName]="",delete e.clean[n]),n in e.onEnd){var o=e.onEnd[n];o.call(this),delete e.onEnd[n]}this.emitEvent("transitionEnd",[this])}},d.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(u,this,!1),this.isTransitioning=!1},d._removeStyles=function(t){var e={};for(var i in t)e[i]="";this.css(e)};var m={transitionProperty:"",transitionDuration:"",transitionDelay:""};return d.removeTransitionStyles=function(){this.css(m)},d.stagger=function(t){t=isNaN(t)?0:t,this.staggerDelay=t+"ms"},d.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},d.remove=function(){return r&&parseFloat(this.layout.options.transitionDuration)?(this.once("transitionEnd",function(){this.removeElem()}),void this.hide()):void this.removeElem()},d.reveal=function(){delete this.isHidden,this.css({display:""});var t=this.layout.options,e={},i=this.getHideRevealTransitionEndProperty("visibleStyle");e[i]=this.onRevealTransitionEnd,this.transition({from:t.hiddenStyle,to:t.visibleStyle,isCleaning:!0,onTransitionEnd:e})},d.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},d.getHideRevealTransitionEndProperty=function(t){var e=this.layout.options[t];if(e.opacity)return"opacity";for(var i in e)return i},d.hide=function(){this.isHidden=!0,this.css({display:""});var t=this.layout.options,e={},i=this.getHideRevealTransitionEndProperty("hiddenStyle");e[i]=this.onHideTransitionEnd,this.transition({from:t.visibleStyle,to:t.hiddenStyle,isCleaning:!0,onTransitionEnd:e})},d.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},d.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},n}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(i,n,o,s){return e(t,i,n,o,s)}):"object"==typeof module&&module.exports?module.exports=e(t,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):t.Outlayer=e(t,t.EvEmitter,t.getSize,t.fizzyUIUtils,t.Outlayer.Item)}(window,function(t,e,i,n,o){"use strict";function s(t,e){var i=n.getQueryElement(t);if(!i)return void(u&&u.error("Bad element for "+this.constructor.namespace+": "+(i||t)));this.element=i,h&&(this.$element=h(this.element)),this.options=n.extend({},this.constructor.defaults),this.option(e);var o=++l;this.element.outlayerGUID=o,f[o]=this,this._create();var s=this._getOption("initLayout");s&&this.layout()}function r(t){function e(){t.apply(this,arguments)}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e}function a(t){if("number"==typeof t)return t;var e=t.match(/(^\d*\.?\d*)(\w*)/),i=e&&e[1],n=e&&e[2];if(!i.length)return 0;i=parseFloat(i);var o=c[n]||1;return i*o}var u=t.console,h=t.jQuery,d=function(){},l=0,f={};s.namespace="outlayer",s.Item=o,s.defaults={containerStyle:{position:"relative"},initLayout:!0,originLeft:!0,originTop:!0,resize:!0,resizeContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}};var m=s.prototype;n.extend(m,e.prototype),m.option=function(t){n.extend(this.options,t)},m._getOption=function(t){var e=this.constructor.compatOptions[t];return e&&void 0!==this.options[e]?this.options[e]:this.options[t]},s.compatOptions={initLayout:"isInitLayout",horizontal:"isHorizontal",layoutInstant:"isLayoutInstant",originLeft:"isOriginLeft",originTop:"isOriginTop",resize:"isResizeBound",resizeContainer:"isResizingContainer"},m._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),n.extend(this.element.style,this.options.containerStyle);var t=this._getOption("resize");t&&this.bindResize()},m.reloadItems=function(){this.items=this._itemize(this.element.children)},m._itemize=function(t){for(var e=this._filterFindItemElements(t),i=this.constructor.Item,n=[],o=0;o<e.length;o++){var s=e[o],r=new i(s,this);n.push(r)}return n},m._filterFindItemElements=function(t){return n.filterFindElements(t,this.options.itemSelector)},m.getItemElements=function(){return this.items.map(function(t){return t.element})},m.layout=function(){this._resetLayout(),this._manageStamps();var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;this.layoutItems(this.items,e),this._isLayoutInited=!0},m._init=m.layout,m._resetLayout=function(){this.getSize()},m.getSize=function(){this.size=i(this.element)},m._getMeasurement=function(t,e){var n,o=this.options[t];o?("string"==typeof o?n=this.element.querySelector(o):o instanceof HTMLElement&&(n=o),this[t]=n?i(n)[e]:o):this[t]=0},m.layoutItems=function(t,e){t=this._getItemsForLayout(t),this._layoutItems(t,e),this._postLayout()},m._getItemsForLayout=function(t){return t.filter(function(t){return!t.isIgnored})},m._layoutItems=function(t,e){if(this._emitCompleteOnItems("layout",t),t&&t.length){var i=[];t.forEach(function(t){var n=this._getItemLayoutPosition(t);n.item=t,n.isInstant=e||t.isLayoutInstant,i.push(n)},this),this._processLayoutQueue(i)}},m._getItemLayoutPosition=function(){return{x:0,y:0}},m._processLayoutQueue=function(t){this.updateStagger(),t.forEach(function(t,e){this._positionItem(t.item,t.x,t.y,t.isInstant,e)},this)},m.updateStagger=function(){var t=this.options.stagger;return null===t||void 0===t?void(this.stagger=0):(this.stagger=a(t),this.stagger)},m._positionItem=function(t,e,i,n,o){n?t.goTo(e,i):(t.stagger(o*this.stagger),t.moveTo(e,i))},m._postLayout=function(){this.resizeContainer()},m.resizeContainer=function(){var t=this._getOption("resizeContainer");if(t){var e=this._getContainerSize();e&&(this._setContainerMeasure(e.width,!0),this._setContainerMeasure(e.height,!1))}},m._getContainerSize=d,m._setContainerMeasure=function(t,e){if(void 0!==t){var i=this.size;i.isBorderBox&&(t+=e?i.paddingLeft+i.paddingRight+i.borderLeftWidth+i.borderRightWidth:i.paddingBottom+i.paddingTop+i.borderTopWidth+i.borderBottomWidth),t=Math.max(t,0),this.element.style[e?"width":"height"]=t+"px"}},m._emitCompleteOnItems=function(t,e){function i(){o.dispatchEvent(t+"Complete",null,[e])}function n(){r++,r==s&&i()}var o=this,s=e.length;if(!e||!s)return void i();var r=0;e.forEach(function(e){e.once(t,n)})},m.dispatchEvent=function(t,e,i){var n=e?[e].concat(i):i;if(this.emitEvent(t,n),h)if(this.$element=this.$element||h(this.element),e){var o=h.Event(e);o.type=t,this.$element.trigger(o,i)}else this.$element.trigger(t,i)},m.ignore=function(t){var e=this.getItem(t);e&&(e.isIgnored=!0)},m.unignore=function(t){var e=this.getItem(t);e&&delete e.isIgnored},m.stamp=function(t){t=this._find(t),t&&(this.stamps=this.stamps.concat(t),t.forEach(this.ignore,this))},m.unstamp=function(t){t=this._find(t),t&&t.forEach(function(t){n.removeFrom(this.stamps,t),this.unignore(t)},this)},m._find=function(t){if(t)return"string"==typeof t&&(t=this.element.querySelectorAll(t)),t=n.makeArray(t)},m._manageStamps=function(){this.stamps&&this.stamps.length&&(this._getBoundingRect(),this.stamps.forEach(this._manageStamp,this))},m._getBoundingRect=function(){var t=this.element.getBoundingClientRect(),e=this.size;this._boundingRect={left:t.left+e.paddingLeft+e.borderLeftWidth,top:t.top+e.paddingTop+e.borderTopWidth,right:t.right-(e.paddingRight+e.borderRightWidth),bottom:t.bottom-(e.paddingBottom+e.borderBottomWidth)}},m._manageStamp=d,m._getElementOffset=function(t){var e=t.getBoundingClientRect(),n=this._boundingRect,o=i(t),s={left:e.left-n.left-o.marginLeft,top:e.top-n.top-o.marginTop,right:n.right-e.right-o.marginRight,bottom:n.bottom-e.bottom-o.marginBottom};return s},m.handleEvent=n.handleEvent,m.bindResize=function(){t.addEventListener("resize",this),this.isResizeBound=!0},m.unbindResize=function(){t.removeEventListener("resize",this),this.isResizeBound=!1},m.onresize=function(){this.resize()},n.debounceMethod(s,"onresize",100),m.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},m.needsResizeLayout=function(){var t=i(this.element),e=this.size&&t;return e&&t.innerWidth!==this.size.innerWidth},m.addItems=function(t){var e=this._itemize(t);return e.length&&(this.items=this.items.concat(e)),e},m.appended=function(t){var e=this.addItems(t);e.length&&(this.layoutItems(e,!0),this.reveal(e))},m.prepended=function(t){var e=this._itemize(t);if(e.length){var i=this.items.slice(0);this.items=e.concat(i),this._resetLayout(),this._manageStamps(),this.layoutItems(e,!0),this.reveal(e),this.layoutItems(i)}},m.reveal=function(t){if(this._emitCompleteOnItems("reveal",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.reveal()})}},m.hide=function(t){if(this._emitCompleteOnItems("hide",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.hide()})}},m.revealItemElements=function(t){var e=this.getItems(t);this.reveal(e)},m.hideItemElements=function(t){var e=this.getItems(t);this.hide(e)},m.getItem=function(t){for(var e=0;e<this.items.length;e++){var i=this.items[e];if(i.element==t)return i}},m.getItems=function(t){t=n.makeArray(t);var e=[];return t.forEach(function(t){var i=this.getItem(t);i&&e.push(i)},this),e},m.remove=function(t){var e=this.getItems(t);this._emitCompleteOnItems("remove",e),e&&e.length&&e.forEach(function(t){t.remove(),n.removeFrom(this.items,t)},this)},m.destroy=function(){var t=this.element.style;t.height="",t.position="",t.width="",this.items.forEach(function(t){t.destroy()}),this.unbindResize();var e=this.element.outlayerGUID;delete f[e],delete this.element.outlayerGUID,h&&h.removeData(this.element,this.constructor.namespace)},s.data=function(t){t=n.getQueryElement(t);var e=t&&t.outlayerGUID;return e&&f[e]},s.create=function(t,e){var i=r(s);return i.defaults=n.extend({},s.defaults),n.extend(i.defaults,e),i.compatOptions=n.extend({},s.compatOptions),i.namespace=t,i.data=s.data,i.Item=r(o),n.htmlInit(i,t),h&&h.bridget&&h.bridget(t,i),i};var c={ms:1,s:1e3};return s.Item=o,s}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/item",["outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.Item=e(t.Outlayer))}(window,function(t){"use strict";function e(){t.Item.apply(this,arguments)}var i=e.prototype=Object.create(t.Item.prototype),n=i._create;i._create=function(){this.id=this.layout.itemGUID++,n.call(this),this.sortData={}},i.updateSortData=function(){if(!this.isIgnored){this.sortData.id=this.id,this.sortData["original-order"]=this.id,this.sortData.random=Math.random();var t=this.layout.options.getSortData,e=this.layout._sorters;for(var i in t){var n=e[i];this.sortData[i]=n(this.element,this)}}};var o=i.destroy;return i.destroy=function(){o.apply(this,arguments),this.css({display:""})},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-mode",["get-size/get-size","outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("get-size"),require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.LayoutMode=e(t.getSize,t.Outlayer))}(window,function(t,e){"use strict";function i(t){this.isotope=t,t&&(this.options=t.options[this.namespace],this.element=t.element,this.items=t.filteredItems,this.size=t.size)}var n=i.prototype,o=["_resetLayout","_getItemLayoutPosition","_manageStamp","_getContainerSize","_getElementOffset","needsResizeLayout","_getOption"];return o.forEach(function(t){n[t]=function(){return e.prototype[t].apply(this.isotope,arguments)}}),n.needsVerticalResizeLayout=function(){var e=t(this.isotope.element),i=this.isotope.size&&e;return i&&e.innerHeight!=this.isotope.size.innerHeight},n._getMeasurement=function(){this.isotope._getMeasurement.apply(this,arguments)},n.getColumnWidth=function(){this.getSegmentSize("column","Width")},n.getRowHeight=function(){this.getSegmentSize("row","Height")},n.getSegmentSize=function(t,e){var i=t+e,n="outer"+e;if(this._getMeasurement(i,n),!this[i]){var o=this.getFirstItemSize();this[i]=o&&o[n]||this.isotope.size["inner"+e]}},n.getFirstItemSize=function(){var e=this.isotope.filteredItems[0];return e&&e.element&&t(e.element)},n.layout=function(){this.isotope.layout.apply(this.isotope,arguments)},n.getSize=function(){this.isotope.getSize(),this.size=this.isotope.size},i.modes={},i.create=function(t,e){function o(){i.apply(this,arguments)}return o.prototype=Object.create(n),o.prototype.constructor=o,e&&(o.options=e),o.prototype.namespace=t,i.modes[t]=o,o},i}),function(t,e){"function"==typeof define&&define.amd?define("masonry/masonry",["outlayer/outlayer","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer"),require("get-size")):t.Masonry=e(t.Outlayer,t.getSize)}(window,function(t,e){var i=t.create("masonry");return i.compatOptions.fitWidth="isFitWidth",i.prototype._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns(),this.colYs=[];for(var t=0;t<this.cols;t++)this.colYs.push(0);this.maxY=0},i.prototype.measureColumns=function(){if(this.getContainerWidth(),!this.columnWidth){var t=this.items[0],i=t&&t.element;this.columnWidth=i&&e(i).outerWidth||this.containerWidth}var n=this.columnWidth+=this.gutter,o=this.containerWidth+this.gutter,s=o/n,r=n-o%n,a=r&&r<1?"round":"floor";s=Math[a](s),this.cols=Math.max(s,1)},i.prototype.getContainerWidth=function(){var t=this._getOption("fitWidth"),i=t?this.element.parentNode:this.element,n=e(i);this.containerWidth=n&&n.innerWidth},i.prototype._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth%this.columnWidth,i=e&&e<1?"round":"ceil",n=Math[i](t.size.outerWidth/this.columnWidth);n=Math.min(n,this.cols);for(var o=this._getColGroup(n),s=Math.min.apply(Math,o),r=o.indexOf(s),a={x:this.columnWidth*r,y:s},u=s+t.size.outerHeight,h=this.cols+1-o.length,d=0;d<h;d++)this.colYs[r+d]=u;return a},i.prototype._getColGroup=function(t){if(t<2)return this.colYs;for(var e=[],i=this.cols+1-t,n=0;n<i;n++){var o=this.colYs.slice(n,n+t);e[n]=Math.max.apply(Math,o)}return e},i.prototype._manageStamp=function(t){var i=e(t),n=this._getElementOffset(t),o=this._getOption("originLeft"),s=o?n.left:n.right,r=s+i.outerWidth,a=Math.floor(s/this.columnWidth);a=Math.max(0,a);var u=Math.floor(r/this.columnWidth);u-=r%this.columnWidth?0:1,u=Math.min(this.cols-1,u);for(var h=this._getOption("originTop"),d=(h?n.top:n.bottom)+i.outerHeight,l=a;l<=u;l++)this.colYs[l]=Math.max(d,this.colYs[l])},i.prototype._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var t={height:this.maxY};return this._getOption("fitWidth")&&(t.width=this._getContainerFitWidth()),t},i.prototype._getContainerFitWidth=function(){for(var t=0,e=this.cols;--e&&0===this.colYs[e];)t++;return(this.cols-t)*this.columnWidth-this.gutter},i.prototype.needsResizeLayout=function(){var t=this.containerWidth;return this.getContainerWidth(),t!=this.containerWidth},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/masonry",["../layout-mode","masonry/masonry"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode"),require("masonry-layout")):e(t.Isotope.LayoutMode,t.Masonry)}(window,function(t,e){"use strict";var i=t.create("masonry"),n=i.prototype,o={_getElementOffset:!0,layout:!0,_getMeasurement:!0};for(var s in e.prototype)o[s]||(n[s]=e.prototype[s]);var r=n.measureColumns;n.measureColumns=function(){this.items=this.isotope.filteredItems,r.call(this)};var a=n._getOption;return n._getOption=function(t){return"fitWidth"==t?void 0!==this.options.isFitWidth?this.options.isFitWidth:this.options.fitWidth:a.apply(this.isotope,arguments)},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/fit-rows",["../layout-mode"],e):"object"==typeof exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("fitRows"),i=e.prototype;return i._resetLayout=function(){this.x=0,this.y=0,this.maxY=0,this._getMeasurement("gutter","outerWidth")},i._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth+this.gutter,i=this.isotope.size.innerWidth+this.gutter;0!==this.x&&e+this.x>i&&(this.x=0,this.y=this.maxY);var n={x:this.x,y:this.y};return this.maxY=Math.max(this.maxY,this.y+t.size.outerHeight),this.x+=e,n},i._getContainerSize=function(){return{height:this.maxY}},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/vertical",["../layout-mode"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("vertical",{horizontalAlignment:0}),i=e.prototype;return i._resetLayout=function(){this.y=0},i._getItemLayoutPosition=function(t){t.getSize();var e=(this.isotope.size.innerWidth-t.size.outerWidth)*this.options.horizontalAlignment,i=this.y;return this.y+=t.size.outerHeight,{x:e,y:i}},i._getContainerSize=function(){return{height:this.y}},e}),function(t,e){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","desandro-matches-selector/matches-selector","fizzy-ui-utils/utils","isotope/js/item","isotope/js/layout-mode","isotope/js/layout-modes/masonry","isotope/js/layout-modes/fit-rows","isotope/js/layout-modes/vertical"],function(i,n,o,s,r,a){return e(t,i,n,o,s,r,a)}):"object"==typeof module&&module.exports?module.exports=e(t,require("outlayer"),require("get-size"),require("desandro-matches-selector"),require("fizzy-ui-utils"),require("isotope/js/item"),require("isotope/js/layout-mode"),require("isotope/js/layout-modes/masonry"),require("isotope/js/layout-modes/fit-rows"),require("isotope/js/layout-modes/vertical")):t.Isotope=e(t,t.Outlayer,t.getSize,t.matchesSelector,t.fizzyUIUtils,t.Isotope.Item,t.Isotope.LayoutMode)}(window,function(t,e,i,n,o,s,r){function a(t,e){return function(i,n){for(var o=0;o<t.length;o++){var s=t[o],r=i.sortData[s],a=n.sortData[s];if(r>a||r<a){var u=void 0!==e[s]?e[s]:e,h=u?1:-1;return(r>a?1:-1)*h}}return 0}}var u=t.jQuery,h=String.prototype.trim?function(t){return t.trim()}:function(t){return t.replace(/^\s+|\s+$/g,"")},d=e.create("isotope",{layoutMode:"masonry",isJQueryFiltering:!0,sortAscending:!0});d.Item=s,d.LayoutMode=r;var l=d.prototype;l._create=function(){this.itemGUID=0,this._sorters={},this._getSorters(),e.prototype._create.call(this),this.modes={},this.filteredItems=this.items,this.sortHistory=["original-order"];for(var t in r.modes)this._initLayoutMode(t)},l.reloadItems=function(){this.itemGUID=0,e.prototype.reloadItems.call(this)},l._itemize=function(){for(var t=e.prototype._itemize.apply(this,arguments),i=0;i<t.length;i++){var n=t[i];n.id=this.itemGUID++}return this._updateItemsSortData(t),t},l._initLayoutMode=function(t){var e=r.modes[t],i=this.options[t]||{};this.options[t]=e.options?o.extend(e.options,i):i,this.modes[t]=new e(this)},l.layout=function(){return!this._isLayoutInited&&this._getOption("initLayout")?void this.arrange():void this._layout()},l._layout=function(){var t=this._getIsInstant();this._resetLayout(),this._manageStamps(),this.layoutItems(this.filteredItems,t),this._isLayoutInited=!0},l.arrange=function(t){this.option(t),this._getIsInstant();var e=this._filter(this.items);this.filteredItems=e.matches,this._bindArrangeComplete(),this._isInstant?this._noTransition(this._hideReveal,[e]):this._hideReveal(e),this._sort(),this._layout()},l._init=l.arrange,l._hideReveal=function(t){this.reveal(t.needReveal),this.hide(t.needHide)},l._getIsInstant=function(){var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;return this._isInstant=e,e},l._bindArrangeComplete=function(){function t(){e&&i&&n&&o.dispatchEvent("arrangeComplete",null,[o.filteredItems])}var e,i,n,o=this;this.once("layoutComplete",function(){e=!0,t()}),this.once("hideComplete",function(){i=!0,t()}),this.once("revealComplete",function(){n=!0,t()})},l._filter=function(t){var e=this.options.filter;e=e||"*";for(var i=[],n=[],o=[],s=this._getFilterTest(e),r=0;r<t.length;r++){var a=t[r];if(!a.isIgnored){var u=s(a);u&&i.push(a),u&&a.isHidden?n.push(a):u||a.isHidden||o.push(a)}}return{matches:i,needReveal:n,needHide:o}},l._getFilterTest=function(t){return u&&this.options.isJQueryFiltering?function(e){return u(e.element).is(t)}:"function"==typeof t?function(e){return t(e.element)}:function(e){return n(e.element,t)}},l.updateSortData=function(t){var e;t?(t=o.makeArray(t),e=this.getItems(t)):e=this.items,this._getSorters(),this._updateItemsSortData(e)},l._getSorters=function(){var t=this.options.getSortData;for(var e in t){var i=t[e];this._sorters[e]=f(i)}},l._updateItemsSortData=function(t){for(var e=t&&t.length,i=0;e&&i<e;i++){var n=t[i];n.updateSortData()}};var f=function(){function t(t){if("string"!=typeof t)return t;var i=h(t).split(" "),n=i[0],o=n.match(/^\[(.+)\]$/),s=o&&o[1],r=e(s,n),a=d.sortDataParsers[i[1]];
return t=a?function(t){return t&&a(r(t))}:function(t){return t&&r(t)}}function e(t,e){return t?function(e){return e.getAttribute(t)}:function(t){var i=t.querySelector(e);return i&&i.textContent}}return t}();d.sortDataParsers={parseInt:function(t){return parseInt(t,10)},parseFloat:function(t){return parseFloat(t)}},l._sort=function(){if(this.options.sortBy){var t=o.makeArray(this.options.sortBy);this._getIsSameSortBy(t)||(this.sortHistory=t.concat(this.sortHistory));var e=a(this.sortHistory,this.options.sortAscending);this.filteredItems.sort(e)}},l._getIsSameSortBy=function(t){for(var e=0;e<t.length;e++)if(t[e]!=this.sortHistory[e])return!1;return!0},l._mode=function(){var t=this.options.layoutMode,e=this.modes[t];if(!e)throw new Error("No layout mode: "+t);return e.options=this.options[t],e},l._resetLayout=function(){e.prototype._resetLayout.call(this),this._mode()._resetLayout()},l._getItemLayoutPosition=function(t){return this._mode()._getItemLayoutPosition(t)},l._manageStamp=function(t){this._mode()._manageStamp(t)},l._getContainerSize=function(){return this._mode()._getContainerSize()},l.needsResizeLayout=function(){return this._mode().needsResizeLayout()},l.appended=function(t){var e=this.addItems(t);if(e.length){var i=this._filterRevealAdded(e);this.filteredItems=this.filteredItems.concat(i)}},l.prepended=function(t){var e=this._itemize(t);if(e.length){this._resetLayout(),this._manageStamps();var i=this._filterRevealAdded(e);this.layoutItems(this.filteredItems),this.filteredItems=i.concat(this.filteredItems),this.items=e.concat(this.items)}},l._filterRevealAdded=function(t){var e=this._filter(t);return this.hide(e.needHide),this.reveal(e.matches),this.layoutItems(e.matches,!0),e.matches},l.insert=function(t){var e=this.addItems(t);if(e.length){var i,n,o=e.length;for(i=0;i<o;i++)n=e[i],this.element.appendChild(n.element);var s=this._filter(e).matches;for(i=0;i<o;i++)e[i].isLayoutInstant=!0;for(this.arrange(),i=0;i<o;i++)delete e[i].isLayoutInstant;this.reveal(s)}};var m=l.remove;return l.remove=function(t){t=o.makeArray(t);var e=this.getItems(t);m.call(this,t);for(var i=e&&e.length,n=0;i&&n<i;n++){var s=e[n];o.removeFrom(this.filteredItems,s)}},l.shuffle=function(){for(var t=0;t<this.items.length;t++){var e=this.items[t];e.sortData.random=Math.random()}this.options.sortBy="random",this._sort(),this._layout()},l._noTransition=function(t,e){var i=this.options.transitionDuration;this.options.transitionDuration=0;var n=t.apply(this,e);return this.options.transitionDuration=i,n},l.getFilteredItemElements=function(){return this.filteredItems.map(function(t){return t.element})},d});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/vendor/isotope/packery-mode.pkgd.min.js";
!function(a,b){"function"==typeof define&&define.amd?define("packery/js/rect",b):"object"==typeof module&&module.exports?module.exports=b():(a.Packery=a.Packery||{},a.Packery.Rect=b())}(window,function(){function a(b){for(var c in a.defaults)this[c]=a.defaults[c];for(c in b)this[c]=b[c]}a.defaults={x:0,y:0,width:0,height:0};var b=a.prototype;return b.contains=function(a){var b=a.width||0,c=a.height||0;return this.x<=a.x&&this.y<=a.y&&this.x+this.width>=a.x+b&&this.y+this.height>=a.y+c},b.overlaps=function(a){var b=this.x+this.width,c=this.y+this.height,d=a.x+a.width,e=a.y+a.height;return this.x<d&&b>a.x&&this.y<e&&c>a.y},b.getMaximalFreeRects=function(b){if(!this.overlaps(b))return!1;var c,d=[],e=this.x+this.width,f=this.y+this.height,g=b.x+b.width,h=b.y+b.height;return this.y<b.y&&(c=new a({x:this.x,y:this.y,width:this.width,height:b.y-this.y}),d.push(c)),e>g&&(c=new a({x:g,y:this.y,width:e-g,height:this.height}),d.push(c)),f>h&&(c=new a({x:this.x,y:h,width:this.width,height:f-h}),d.push(c)),this.x<b.x&&(c=new a({x:this.x,y:this.y,width:b.x-this.x,height:this.height}),d.push(c)),d},b.canFit=function(a){return this.width>=a.width&&this.height>=a.height},a}),function(a,b){if("function"==typeof define&&define.amd)define("packery/js/packer",["./rect"],b);else if("object"==typeof module&&module.exports)module.exports=b(require("./rect"));else{var c=a.Packery=a.Packery||{};c.Packer=b(c.Rect)}}(window,function(a){function b(a,b,c){this.width=a||0,this.height=b||0,this.sortDirection=c||"downwardLeftToRight",this.reset()}var c=b.prototype;c.reset=function(){this.spaces=[];var b=new a({x:0,y:0,width:this.width,height:this.height});this.spaces.push(b),this.sorter=d[this.sortDirection]||d.downwardLeftToRight},c.pack=function(a){for(var b=0;b<this.spaces.length;b++){var c=this.spaces[b];if(c.canFit(a)){this.placeInSpace(a,c);break}}},c.columnPack=function(a){for(var b=0;b<this.spaces.length;b++){var c=this.spaces[b],d=c.x<=a.x&&c.x+c.width>=a.x+a.width&&c.height>=a.height-.01;if(d){a.y=c.y,this.placed(a);break}}},c.rowPack=function(a){for(var b=0;b<this.spaces.length;b++){var c=this.spaces[b],d=c.y<=a.y&&c.y+c.height>=a.y+a.height&&c.width>=a.width-.01;if(d){a.x=c.x,this.placed(a);break}}},c.placeInSpace=function(a,b){a.x=b.x,a.y=b.y,this.placed(a)},c.placed=function(a){for(var b=[],c=0;c<this.spaces.length;c++){var d=this.spaces[c],e=d.getMaximalFreeRects(a);e?b.push.apply(b,e):b.push(d)}this.spaces=b,this.mergeSortSpaces()},c.mergeSortSpaces=function(){b.mergeRects(this.spaces),this.spaces.sort(this.sorter)},c.addSpace=function(a){this.spaces.push(a),this.mergeSortSpaces()},b.mergeRects=function(a){var b=0,c=a[b];a:for(;c;){for(var d=0,e=a[b+d];e;){if(e==c)d++;else{if(e.contains(c)){a.splice(b,1),c=a[b];continue a}c.contains(e)?a.splice(b+d,1):d++}e=a[b+d]}b++,c=a[b]}return a};var d={downwardLeftToRight:function(a,b){return a.y-b.y||a.x-b.x},rightwardTopToBottom:function(a,b){return a.x-b.x||a.y-b.y}};return b}),function(a,b){"function"==typeof define&&define.amd?define("packery/js/item",["outlayer/outlayer","./rect"],b):"object"==typeof module&&module.exports?module.exports=b(require("outlayer"),require("./rect")):a.Packery.Item=b(a.Outlayer,a.Packery.Rect)}(window,function(a,b){var c=document.documentElement.style,d="string"==typeof c.transform?"transform":"WebkitTransform",e=function(){a.Item.apply(this,arguments)},f=e.prototype=Object.create(a.Item.prototype),g=f._create;f._create=function(){g.call(this),this.rect=new b};var h=f.moveTo;return f.moveTo=function(a,b){var c=Math.abs(this.position.x-a),d=Math.abs(this.position.y-b),e=this.layout.dragItemCount&&!this.isPlacing&&!this.isTransitioning&&1>c&&1>d;return e?void this.goTo(a,b):void h.apply(this,arguments)},f.enablePlacing=function(){this.removeTransitionStyles(),this.isTransitioning&&d&&(this.element.style[d]="none"),this.isTransitioning=!1,this.getSize(),this.layout._setRectSize(this.element,this.rect),this.isPlacing=!0},f.disablePlacing=function(){this.isPlacing=!1},f.removeElem=function(){this.element.parentNode.removeChild(this.element),this.layout.packer.addSpace(this.rect),this.emitEvent("remove",[this])},f.showDropPlaceholder=function(){var a=this.dropPlaceholder;a||(a=this.dropPlaceholder=document.createElement("div"),a.className="packery-drop-placeholder",a.style.position="absolute"),a.style.width=this.size.width+"px",a.style.height=this.size.height+"px",this.positionDropPlaceholder(),this.layout.element.appendChild(a)},f.positionDropPlaceholder=function(){this.dropPlaceholder.style[d]="translate("+this.rect.x+"px, "+this.rect.y+"px)"},f.hideDropPlaceholder=function(){this.layout.element.removeChild(this.dropPlaceholder)},e}),function(a,b){"function"==typeof define&&define.amd?define("packery/js/packery",["get-size/get-size","outlayer/outlayer","./rect","./packer","./item"],b):"object"==typeof module&&module.exports?module.exports=b(require("get-size"),require("outlayer"),require("./rect"),require("./packer"),require("./item")):a.Packery=b(a.getSize,a.Outlayer,a.Packery.Rect,a.Packery.Packer,a.Packery.Item)}(window,function(a,b,c,d,e){function f(a,b){return a.position.y-b.position.y||a.position.x-b.position.x}function g(a,b){return a.position.x-b.position.x||a.position.y-b.position.y}function h(a,b){var c=b.x-a.x,d=b.y-a.y;return Math.sqrt(c*c+d*d)}c.prototype.canFit=function(a){return this.width>=a.width-1&&this.height>=a.height-1};var i=b.create("packery");i.Item=e;var j=i.prototype;j._create=function(){b.prototype._create.call(this),this.packer=new d,this.shiftPacker=new d,this.isEnabled=!0,this.dragItemCount=0;var a=this;this.handleDraggabilly={dragStart:function(){a.itemDragStart(this.element)},dragMove:function(){a.itemDragMove(this.element,this.position.x,this.position.y)},dragEnd:function(){a.itemDragEnd(this.element)}},this.handleUIDraggable={start:function(b,c){c&&a.itemDragStart(b.currentTarget)},drag:function(b,c){c&&a.itemDragMove(b.currentTarget,c.position.left,c.position.top)},stop:function(b,c){c&&a.itemDragEnd(b.currentTarget)}}},j._resetLayout=function(){this.getSize(),this._getMeasurements();var a,b,c;this._getOption("horizontal")?(a=1/0,b=this.size.innerHeight+this.gutter,c="rightwardTopToBottom"):(a=this.size.innerWidth+this.gutter,b=1/0,c="downwardLeftToRight"),this.packer.width=this.shiftPacker.width=a,this.packer.height=this.shiftPacker.height=b,this.packer.sortDirection=this.shiftPacker.sortDirection=c,this.packer.reset(),this.maxY=0,this.maxX=0},j._getMeasurements=function(){this._getMeasurement("columnWidth","width"),this._getMeasurement("rowHeight","height"),this._getMeasurement("gutter","width")},j._getItemLayoutPosition=function(a){if(this._setRectSize(a.element,a.rect),this.isShifting||this.dragItemCount>0){var b=this._getPackMethod();this.packer[b](a.rect)}else this.packer.pack(a.rect);return this._setMaxXY(a.rect),a.rect},j.shiftLayout=function(){this.isShifting=!0,this.layout(),delete this.isShifting},j._getPackMethod=function(){return this._getOption("horizontal")?"rowPack":"columnPack"},j._setMaxXY=function(a){this.maxX=Math.max(a.x+a.width,this.maxX),this.maxY=Math.max(a.y+a.height,this.maxY)},j._setRectSize=function(b,c){var d=a(b),e=d.outerWidth,f=d.outerHeight;(e||f)&&(e=this._applyGridGutter(e,this.columnWidth),f=this._applyGridGutter(f,this.rowHeight)),c.width=Math.min(e,this.packer.width),c.height=Math.min(f,this.packer.height)},j._applyGridGutter=function(a,b){if(!b)return a+this.gutter;b+=this.gutter;var c=a%b,d=c&&1>c?"round":"ceil";return a=Math[d](a/b)*b},j._getContainerSize=function(){return this._getOption("horizontal")?{width:this.maxX-this.gutter}:{height:this.maxY-this.gutter}},j._manageStamp=function(a){var b,d=this.getItem(a);if(d&&d.isPlacing)b=d.rect;else{var e=this._getElementOffset(a);b=new c({x:this._getOption("originLeft")?e.left:e.right,y:this._getOption("originTop")?e.top:e.bottom})}this._setRectSize(a,b),this.packer.placed(b),this._setMaxXY(b)},j.sortItemsByPosition=function(){var a=this._getOption("horizontal")?g:f;this.items.sort(a)},j.fit=function(a,b,c){var d=this.getItem(a);d&&(this.stamp(d.element),d.enablePlacing(),this.updateShiftTargets(d),b=void 0===b?d.rect.x:b,c=void 0===c?d.rect.y:c,this.shift(d,b,c),this._bindFitEvents(d),d.moveTo(d.rect.x,d.rect.y),this.shiftLayout(),this.unstamp(d.element),this.sortItemsByPosition(),d.disablePlacing())},j._bindFitEvents=function(a){function b(){d++,2==d&&c.dispatchEvent("fitComplete",null,[a])}var c=this,d=0;a.once("layout",b),this.once("layoutComplete",b)},j.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&(this.options.shiftPercentResize?this.resizeShiftPercentLayout():this.layout())},j.needsResizeLayout=function(){var b=a(this.element),c=this._getOption("horizontal")?"innerHeight":"innerWidth";return b[c]!=this.size[c]},j.resizeShiftPercentLayout=function(){var b=this._getItemsForLayout(this.items),c=this._getOption("horizontal"),d=c?"y":"x",e=c?"height":"width",f=c?"rowHeight":"columnWidth",g=c?"innerHeight":"innerWidth",h=this[f];if(h=h&&h+this.gutter){this._getMeasurements();var i=this[f]+this.gutter;b.forEach(function(a){var b=Math.round(a.rect[d]/h);a.rect[d]=b*i})}else{var j=a(this.element)[g]+this.gutter,k=this.packer[e];b.forEach(function(a){a.rect[d]=a.rect[d]/k*j})}this.shiftLayout()},j.itemDragStart=function(a){if(this.isEnabled){this.stamp(a);var b=this.getItem(a);b&&(b.enablePlacing(),b.showDropPlaceholder(),this.dragItemCount++,this.updateShiftTargets(b))}},j.updateShiftTargets=function(a){this.shiftPacker.reset(),this._getBoundingRect();var b=this._getOption("originLeft"),d=this._getOption("originTop");this.stamps.forEach(function(a){var e=this.getItem(a);if(!e||!e.isPlacing){var f=this._getElementOffset(a),g=new c({x:b?f.left:f.right,y:d?f.top:f.bottom});this._setRectSize(a,g),this.shiftPacker.placed(g)}},this);var e=this._getOption("horizontal"),f=e?"rowHeight":"columnWidth",g=e?"height":"width";this.shiftTargetKeys=[],this.shiftTargets=[];var h,i=this[f];if(i=i&&i+this.gutter){var j=Math.ceil(a.rect[g]/i),k=Math.floor((this.shiftPacker[g]+this.gutter)/i);h=(k-j)*i;for(var l=0;k>l;l++)this._addShiftTarget(l*i,0,h)}else h=this.shiftPacker[g]+this.gutter-a.rect[g],this._addShiftTarget(0,0,h);var m=this._getItemsForLayout(this.items),n=this._getPackMethod();m.forEach(function(a){var b=a.rect;this._setRectSize(a.element,b),this.shiftPacker[n](b),this._addShiftTarget(b.x,b.y,h);var c=e?b.x+b.width:b.x,d=e?b.y:b.y+b.height;if(this._addShiftTarget(c,d,h),i)for(var f=Math.round(b[g]/i),j=1;f>j;j++){var k=e?c:b.x+i*j,l=e?b.y+i*j:d;this._addShiftTarget(k,l,h)}},this)},j._addShiftTarget=function(a,b,c){var d=this._getOption("horizontal")?b:a;if(!(0!==d&&d>c)){var e=a+","+b,f=-1!=this.shiftTargetKeys.indexOf(e);f||(this.shiftTargetKeys.push(e),this.shiftTargets.push({x:a,y:b}))}},j.shift=function(a,b,c){var d,e=1/0,f={x:b,y:c};this.shiftTargets.forEach(function(a){var b=h(a,f);e>b&&(d=a,e=b)}),a.rect.x=d.x,a.rect.y=d.y};var k=120;j.itemDragMove=function(a,b,c){function d(){f.shift(e,b,c),e.positionDropPlaceholder(),f.layout()}var e=this.isEnabled&&this.getItem(a);if(e){b-=this.size.paddingLeft,c-=this.size.paddingTop;var f=this,g=new Date;this._itemDragTime&&g-this._itemDragTime<k?(clearTimeout(this.dragTimeout),this.dragTimeout=setTimeout(d,k)):(d(),this._itemDragTime=g)}},j.itemDragEnd=function(a){function b(){d++,2==d&&(c.element.classList.remove("is-positioning-post-drag"),c.hideDropPlaceholder(),e.dispatchEvent("dragItemPositioned",null,[c]))}var c=this.isEnabled&&this.getItem(a);if(c){clearTimeout(this.dragTimeout),c.element.classList.add("is-positioning-post-drag");var d=0,e=this;c.once("layout",b),this.once("layoutComplete",b),c.moveTo(c.rect.x,c.rect.y),this.layout(),this.dragItemCount=Math.max(0,this.dragItemCount-1),this.sortItemsByPosition(),c.disablePlacing(),this.unstamp(c.element)}},j.bindDraggabillyEvents=function(a){this._bindDraggabillyEvents(a,"on")},j.unbindDraggabillyEvents=function(a){this._bindDraggabillyEvents(a,"off")},j._bindDraggabillyEvents=function(a,b){var c=this.handleDraggabilly;a[b]("dragStart",c.dragStart),a[b]("dragMove",c.dragMove),a[b]("dragEnd",c.dragEnd)},j.bindUIDraggableEvents=function(a){this._bindUIDraggableEvents(a,"on")},j.unbindUIDraggableEvents=function(a){this._bindUIDraggableEvents(a,"off")},j._bindUIDraggableEvents=function(a,b){var c=this.handleUIDraggable;a[b]("dragstart",c.start)[b]("drag",c.drag)[b]("dragstop",c.stop)};var l=j.destroy;return j.destroy=function(){l.apply(this,arguments),this.isEnabled=!1},i.Rect=c,i.Packer=d,i}),function(a,b){"function"==typeof define&&define.amd?define(["isotope/js/layout-mode","packery/js/packery"],b):"object"==typeof module&&module.exports?module.exports=b(require("isotope-layout/js/layout-mode"),require("packery")):b(a.Isotope.LayoutMode,a.Packery)}(window,function(a,b){var c=a.create("packery"),d=c.prototype,e={_getElementOffset:!0,_getMeasurement:!0};for(var f in b.prototype)e[f]||(d[f]=b.prototype[f]);var g=d._resetLayout;d._resetLayout=function(){this.packer=this.packer||new b.Packer,this.shiftPacker=this.shiftPacker||new b.Packer,g.apply(this,arguments)};var h=d._getItemLayoutPosition;d._getItemLayoutPosition=function(a){return a.rect=a.rect||new b.Rect,h.call(this,a)};var i=d.needsResizeLayout;d.needsResizeLayout=function(){return this._getOption("horizontal")?this.needsVerticalResizeLayout():i.call(this)};var j=d._getOption;return d._getOption=function(a){return"horizontal"==a?void 0!==this.options.isHorizontal?this.options.isHorizontal:this.options.horizontal:j.apply(this.isotope,arguments)},c});
var metropolisFilter=function(_options){
var filters={};
var that=this;
var options={
filterIterationHook:function(section,filter){
return[]
},
inverseFilteredItemClass:'metropolis-filter__hidden-item',
sectionClass:'',
buttonClass:'metropolis-filter-button',
selectClass:'',
controlsClass:'',
controlsId:null,
containerSelector:null,
itemSelector:null,
isotopeLayoutMode:"",
isotopeGrid:null,
disableIsotopeOnMobile:true
};
this.setActiveButtons=function(filterSelectors){
if(filterSelectors.length==0)
return false;
var filterValue=filterSelectors.join(",");
var filterGroup=null;
for(var i=0;i<filterSelectors.length;i++){
if(i==0){
var $firstButton=options.$filterControls.find("button[data-filter='"+filterSelectors[0]+"']");
$firstButton.siblings().removeClass("active");
filterGroup=$firstButton.parents('.metropolis-filter-section').attr('data-filter-group');
}
options.$filterControls.find("button[data-filter='"+filterSelectors[i]+"']").addClass("active");
}
if(filterGroup==null)
return false;
filters[filterGroup]=filterValue;
doFilter();
}
function init(){
options=$.extend(options,_options);
options.$container=$(options.containerSelector);
options.$filterItems=options.$container.find(options.itemSelector);
options.$container.trigger('metropolis-filter.beforeRender',{options:options,metropolisfilter:that});
if(renderFilterControls()){
isotopeHandler();
registerHandlers();
options.$container.trigger('metropolis-filter.afterRender',{options:options,metropolisfilter:that});
$(window).resize(function(){
isotopeHandler();
});
}
}
function doFilter(){
var filter=concatValues(filters);
if(options.isotopeGrid!==null){
options.isotopeGrid.isotope({filter:filter});
return;
}
options.$filterItems.removeClass(options.inverseFilteredItemClass);
if(filter.trim()==""){
return;
}
var $inverseFilteredItems=options.$filterItems.not(filter).addClass(options.inverseFilteredItemClass);
}
function getFilterValue(filterType,target){
if(filterType=="button"){
return target.attr('data-filter');
}
if(filterType=="select"){
return target.get(0).value;
}
}
function registerHandlers(){
options.$filterControls.on('click','button',function(){
$(this).trigger('metropolis-do-filter',{filterType:'button'});
$(this).siblings('button').removeClass('active');
$(this).addClass('active');
});
options.$filterControls.on('change','select',function(){
$(this).trigger('metropolis-do-filter',{filterType:'select'});
});
options.$filterControls.on("metropolis-do-filter",function(e,data){
var $target=$(e.target);
var filterType=data.filterType;
var $filterSection=$target.parents('.metropolis-filter-section');
var filterGroup=$filterSection.attr('data-filter-group');
var filterValue=getFilterValue(filterType,$target);
filters[filterGroup]=filterValue;
doFilter();
});
options.$filterControls.find('button.active').trigger("click");
options.$filterControls.find('select').trigger("change");
}
function destroyIsotope(){
options.isotopeGrid.isotope('destroy');
options.isotopeGrid=null;
}
function isotopeHandler(){
if(options.disableIsotopeOnMobile&&options.isotopeGrid!=null&&$('html').hasClass('small-only-mq')){
destroyIsotope();
}
var initMediaQuery=options.disableIsotopeOnMobile?'medium-up-mq':'small-up-mq';
if(options.isotopeLayoutMode!==""&&options.isotopeGrid==null&&$('html').hasClass(initMediaQuery)){
initIsotope();
}
}
function initIsotope(){
options.isotopeGrid=options.$container.isotope({
itemSelector:options.itemSelector,
layoutMode:options.isotopeLayoutMode
});
}
function allPossibleCases(arr){
if(arr.length===0){
return[];
}
else if(arr.length===1){
return arr[0];
}
else{
var result=[];
var allCasesOfRest=allPossibleCases(arr.slice(1));
for(var c in allCasesOfRest){
for(var i=0;i<arr[0].length;i++){
result.push(arr[0][i]+allCasesOfRest[c]);
}
}
return result;
}
}
function concatValues(obj){
var arr=[];
for(var prop in obj){
if(obj[prop].indexOf("*")!==-1)
continue;
arr.push(obj[prop].split(','));
}
var result=allPossibleCases(arr).join();
return result;
}
function createFilterSection(i){
$section=$("<div/>");
$section.addClass('metropolis-filter-section '+options.sectionClass);
$section.attr('data-filter-group','group'+i);
return $section;
}
function renderFilterControls(){
var $filterControls=$("<div/>");
$filterControls.attr("id",options.controlsId);
$filterControls.addClass('metropolis-filter-controls '+options.controlsClass);
options.$filterControls=$filterControls;
for(var i=0;i<options.sections.length;i++){
var section=options.sections[i];
var $section=createFilterSection(i);
for(var j=0;j<section.filters.length;j++){
var filter=section.filters[j];
var label=filter.label;
var filterSelectors=filter.filterSelectors;
if(filterSelectors===undefined){
filterSelectors=options.filterIterationHook(section,filter).join();
}else{
if(filterSelectors.constructor===Array){
filterSelectors=filterSelectors.concat(options.filterIterationHook(section,filter)).join();
}else{
filterSelectors=filterSelectors.split(",").concat(options.filterIterationHook(section,filter)).join();
}
}
if(options.$filterItems.filter(filterSelectors).length==0)
continue;
if(section.type=='button'){
var $control=$("<button class='metropolis-filter-control-item'>"+label+"</button>");
$control.addClass(options.buttonClass);
$control.attr("data-filter",filterSelectors);
$control.appendTo($section);
if($section.children().length==1){
$control.addClass('active');
}
if(filter.isActive!==undefined&&filter.isActive==true){
$section.children().removeClass('active');
$control.addClass('active');
}
}
if(section.type=='select'){
if($select===undefined){
var $select=$('<select class="metropolis-filter-select metropolis-filter-control-item"></select>');
$select.addClass(options.selectClass);
$select.appendTo($section);
}
var $option=$("<option>"+label+"</option>");
$option.attr("value",filterSelectors);
$option.attr("data-filter",filterSelectors);
$option.attr("data-filter-duplicate",true);
$option.appendTo($select);
if($select.children().length==1){
$select.val(filterSelectors);
}
if(filter.isActive!==undefined&&filter.isActive==true){
$select.val(filterSelectors);
}
}
}
var hasSingleAllFilter=$section.find('[data-filter="*"]:only-child').length==1;
if($section.find('[data-filter]').length>0&&!hasSingleAllFilter){
$section.find('[data-filter-duplicate]').removeAttr('data-filter-duplicate').removeAttr('data-filter');
$section.appendTo($filterControls);
}
}
if($filterControls.length>0){
$filterControls.insertBefore(options.$container);
return true;
}
return false;
}
init();
};
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/metropolisLayoutOptions.js";
var MetropolisLayoutOptions=function(target){
var $target;
var liClass;
var linkClass;
var $targetItemClass;
var $layoutIdStorage;
var $targetItems;
var $isCompactViewOnMobileStorage;
var $optionsContainer;
var $layoutOptions;
var $compactViewOnMobileButton;
var $optionsButton;
var options;
var layoutCounter=0;
var hasCompactViewClasses=false;
var $defaultElement=null;
var optionsContainerTemplate=
'<div class="metropolis-layout-options">'+
'<div class="metropolis-layout-options__button"></div>'+
'<ul class="metropolis-layout-options__items level-1">'+
'<li class="metropolis-layout-options__item level-1">'+
'<a class="metropolis-layout-options__link level-1 checkable is-compact-view-on-mobile">Kompakt-Layout in Mobil-Ansicht</a>'+
'</li>'+
'<li class="metropolis-layout-options__item level-1 metropolis-layout-options__layout-item has-children">'+
'<a class="metropolis-layout-options__link level-1 has-children">Layouts</a>'+
'<ul class="metropolis-layout-options__layouts metropolis-layout-options__items level-2"></ul>'+
'</li>'+
'</ul>'+
'</div>';
function init(target){
$target=$(target);
options=$target.data("layout-options");
if($.isEmptyObject(options))
return;
$targetItemClass=options.targetItemClass;
$targetItems=$target.find("."+$targetItemClass);
$isCompactViewOnMobileStorage=$target.find(".metropolis-layout-options__is-compact-view-on-mobile-storage");
$layoutIdStorage=$target.find(".metropolis-layout-options__layout-id-storage");
if(!readStorage())
return;
if(!$('body').is(".mode-editor"))
return;
liClass="metropolis-layout-options__item";
linkClass="metropolis-layout-options__link";
$optionsContainer=$(optionsContainerTemplate);
$layoutOptions=$optionsContainer.find(".metropolis-layout-options__layouts");
$compactViewOnMobileButton=$optionsContainer.find('.is-compact-view-on-mobile');
$optionsButton=$optionsContainer.children(".metropolis-layout-options__button");
if($isCompactViewOnMobileStorage.text()==""){
$isCompactViewOnMobileStorage.text(options.isCompactViewOnMobileDefault);
}
$optionsButton.on("click",function(){
$(this).toggleClass("is-open");
});
renderLayoutOptions();
renderCompactViewOption();
mouseOverBehaviour();
if(hasCompactViewClasses||layoutCounter>1){
$optionsContainer.prependTo($target);
}
}
function mouseOverBehaviour(){
$optionsContainer.find(".metropolis-layout-options__item.has-children").on("mouseenter",function(e){
$(this).addClass("expanded");
}).on("mouseleave",function(e){
if($(e.relatedTarget).prop("tagName")!==undefined&&$(e.relatedTarget).prop("tagName").toLowerCase().indexOf("i4")!==-1){
return;
}
$(this).removeClass("expanded");
});
}
function getDefaultLayoutId(){
var defaultLayoutId;
$.each(options.layouts,function(id,value){
if(value.default!==undefined&&value.default){
defaultLayoutId=id;
return false;
}
});
return defaultLayoutId;
}
function readStorage(){
var id=$layoutIdStorage.text().trim();
var isCompactViewOnMobile=false;
if($isCompactViewOnMobileStorage.text()==""){
isCompactViewOnMobile=options.isCompactViewOnMobileDefault;
}
if($isCompactViewOnMobileStorage.text()=="true"){
isCompactViewOnMobile=true;
}
var layout;
try{
layout=options.layouts[id]===undefined?options.layouts[getDefaultLayoutId()]:options.layouts[id];
}catch(err){
console.error(err);
$target.addClass("initialized");
return false;
}
var compactViewClass=layout.compactViewClass;
var layoutClassArr=layout.class;
if(isCompactViewOnMobile&&compactViewClass!==undefined){
if(layoutClassArr.length===1&&layoutClassArr[0].indexOf("--small")!==-1){
layoutClassArr.push(layoutClassArr[0].replace("--small","--medium"));
}
for(var i=0;i<layoutClassArr.length;i++){
if(layoutClassArr[i].indexOf("--small")!==-1){
layoutClassArr[i]=compactViewClass;
}
}
}
$target.find("."+$targetItemClass).removeClass($target.data("default-layout-class"));
$target.find("."+$targetItemClass).addClass(layoutClassArr.join(" "));
$target.data("finalLayoutClass",layoutClassArr.join(" "));
$target.addClass("initialized");
return true;
}
function renderLayoutOptions(){
$.each(options.layouts,function(id,value){
var $li=$("<li/>").addClass(liClass).addClass("level-2");
var $a=$("<a/>").addClass(linkClass).addClass("level-2 checkable").text("Layout "+(++layoutCounter));
var layoutClass=value.class.join(" ");
$a.data("layoutClass",layoutClass);
$a.data("isDefaultLayout",false);
$a.data("compactViewClass",value.compactViewClass);
$a.appendTo($li);
$li.appendTo($layoutOptions);
if(id===$layoutIdStorage.text()){
$a.addClass("checked");
}
if(value.compactViewClass!==undefined){
hasCompactViewClasses=true;
}
if(value.default!==undefined&&value.default){
$a.data("isDefaultLayout",true);
$defaultElement=$a;
}
if(value.default!==undefined&&value.default&&$layoutIdStorage.text().trim()==""){
$layoutIdStorage.text(id);
defaultId=id;
$target.data("finalLayoutClass",layoutClass);
$target.find("."+$targetItemClass).addClass(layoutClass);
$a.addClass("checked");
}
$a.on("click",function(){
$layoutOptions.find("a").removeClass("checked");
$(this).addClass("checked");
$layoutIdStorage.text(id);
updateStorages();
});
});
if($layoutOptions.find('a.checked').length==0){
$defaultElement.trigger("click");
}
if(layoutCounter===1){
$optionsContainer.find(".metropolis-layout-options__layout-item").css("display","none");
}
}
function registerCompactViewOptionClick(){
$compactViewOnMobileButton.on("click",function(){
$(this).toggleClass("checked");
if($(this).is('.checked')){
$isCompactViewOnMobileStorage.text("true");
}else{
$isCompactViewOnMobileStorage.text("false");
}
updateStorages();
});
}
function renderCompactViewOption(){
if(!hasCompactViewClasses){
$compactViewOnMobileButton.css("display","none");
$isCompactViewOnMobileStorage.text("false");
return;
}
registerCompactViewOptionClick();
if($isCompactViewOnMobileStorage.text()==="true"){
$compactViewOnMobileButton.trigger("click");
}
}
function updateStorages(){
var layoutClass=$layoutOptions.find('a.checked').data().layoutClass;
var compactViewClass=$layoutOptions.find('a.checked').data().compactViewClass;
var layoutClassArr=layoutClass.split(" ");
if($compactViewOnMobileButton.is(".checked")&&compactViewClass!==undefined){
if(layoutClassArr.length===1&&layoutClassArr[0].indexOf("--small")!==-1){
layoutClassArr.push(layoutClassArr[0].replace("--small","--medium"));
}
for(var i=0;i<layoutClassArr.length;i++){
if(layoutClassArr[i].indexOf("--small")!==-1){
layoutClassArr[i]=compactViewClass;
}
}
}
$target.find("."+$targetItemClass).removeClass($target.data().finalLayoutClass);
$target.data().finalLayoutClass=layoutClassArr.join(" ");
$target.find("."+$targetItemClass).addClass(layoutClassArr.join(" "));
}
init(target);
}
MetropolisLayoutOptions.layouts={
'extra-tiny':{
sizes:{
min:170,
max:259
},
classes:['extra-tiny-layout-stacked--small','extra-tiny-layout-stacked-2--small','extra-tiny-layout-no-image--small','extra-tiny-layout-no-image-no-text--small']
},
'tiny':{
sizes:{
min:260,
max:309
},
classes:['tiny-layout-stacked--small','tiny-layout-stacked-2--small','tiny-layout-no-image--small','tiny-layout-no-image-no-text--small','tiny-layout-no-image-no-text-small--small']
},
'mobile-portrait':{
sizes:{
min:310,
max:449
},
classes:['mobile-portrait-layout-stacked--small','mobile-portrait-layout-stacked-2--small','mobile-portrait-layout-aside-small--small','mobile-portrait-layout-aside-medium--small','mobile-portrait-layout-no-image--small','mobile-portrait-layout-no-image-no-text--small','mobile-portrait-layout-no-image-no-text-small--small']
},
'mobile-landscape':{
sizes:{
min:450,
max:649
},
classes:['mobile-landscape-layout-stacked--small','mobile-landscape-layout-stacked-2--small','mobile-landscape-layout-aside-large--small','mobile-landscape-layout-aside-medium--small','mobile-landscape-layout-aside-small--small','mobile-landscape-layout-no-image--small','mobile-landscape-layout-no-image-no-text--small']
},
'tablet-portrait':{
sizes:{
min:650,
max:840
},
classes:['tablet-portrait-layout-aside-large--small','tablet-portrait-layout-aside-large-2--small','tablet-portrait-layout-stacked--small','tablet-portrait-layout-stacked-2--small','tablet-portrait-layout-aside-medium--small','tablet-portrait-layout-aside-small--small','tablet-portrait-layout-aside-small-2--small','tablet-portrait-layout-no-image--small']
},
'tablet-landscape':{
sizes:{
min:841,
max:1023
},
classes:['tablet-landscape-layout-aside-large-2--small','tablet-landscape-layout-aside-large--small','tablet-landscape-layout-aside-medium--small','tablet-landscape-layout-aside-small--small']
},
'desktop':{
sizes:{
min:1024,
},
classes:['desktop-layout-aside-large-2--small','desktop-layout-aside-large--small','desktop-layout-aside-medium--small','desktop-layout-aside-small--small']
}
};
$(function(){
var target=$('body')[0];
var observer=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
for(var i=0;i<mutation.addedNodes.length;i++){
var $addedNode=$(mutation.addedNodes[i]);
var $target=null;
if($addedNode.find("[data-layout-options]").length>0)
$target=$addedNode.find("[data-layout-options]");
if($addedNode.is("[data-layout-options]")){
$target=$addedNode;
}
if($target!==null&&$target.length>0){
MetropolisLayoutOptions($target);
}
}
});
});
var config={attributes:false,childList:true,characterData:false,subtree:true};
observer.observe(target,config);
$("[data-layout-options]").each(function(i,obj){
MetropolisLayoutOptions($(this));
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/greedy-nav.js";
var greedyNavOptions=greedyNavOptions||{
mobileViewBreakpoint:'small-only-mq',
desktopViewBreakpoint:'medium-up-mq'
};
MetropolisNavigation.GreedyNav=(function(_options){
var public={};
var defaultOptions={};
var options=$.extend(defaultOptions,_options);
var $html=$('html');
var $headerWrapper=$('.header-wrapper');
var $standardNav=$('.nav .nav__level-1');
var $greedyNavContainer=$('.greedy-nav');
var $greedyNav=$('.greedy-nav .nav__level-1');
var $greedyNavItemCount=$greedyNavContainer.find('.greedy-nav__item-count');
var count=null;
function outsideClickHandlerGreedyNav(e){
if(!$(e.target).is($greedyNavContainer)
&&$greedyNavContainer.has(e.target).length===0
&&!$(e.target).is(".breadcrumbs")
&&$(".breadcrumbs").has(e.target).length===0
){
$greedyNavContainer.removeClass('greedy-nav--is-expanded');
}
}
function isWrapping(){
if($standardNav.children().length<1)
return false;
var $last_li=$standardNav.children().last();
var borderTopWidth=parseInt($standardNav.css("border-top-width"));
var paddingTop=parseInt($standardNav.css("padding-top"));
var marginTop=parseInt($last_li.css("margin-top"));
var isWrapping=($standardNav.offset().top)!=($last_li.offset().top-borderTopWidth-paddingTop-marginTop);
return isWrapping;
}
var lastResizeWidth=0;
var isLargerResize=false;
function isInMobileViewBreakpoint(){
return $html.hasClass(options.mobileViewBreakpoint)&&!$html.hasClass(options.desktopViewBreakpoint);
}
function isInDesktopViewBreakpoint(){
return $('html').hasClass(options.desktopViewBreakpoint);
}
function greedyNavHandler(){
if(isInMobileViewBreakpoint()&&$standardNav.children().length>0){
var $children=$standardNav.children();
if($children.length){
$children.prependTo($greedyNav);
$greedyNavContainer.addClass('greedy-nav--is-visible');
}
return;
}
if(isInDesktopViewBreakpoint()&&$greedyNav.children().length>0){
$greedyNavContainer.removeClass('greedy-nav--is-visible');
$greedyNav.children().appendTo($standardNav);
}
while(isWrapping()){
$standardNav.children().last().prependTo($greedyNav);
$greedyNavContainer.addClass('greedy-nav--is-visible');
}
if(count!==$greedyNav.children().length){
count=$greedyNav.children().length;
$greedyNavItemCount.text(count);
}
}
function mobileNavScrollHandler(currentSlide){
var $currentSlide=currentSlide;
var $menuContainer=$('.greedy-nav__menu-container');
if($currentSlide.height()>$menuContainer.height()&&isInMobileViewBreakpoint()){
$menuContainer.css('overflow-y','auto');
}else{
$menuContainer.css('overflow-y','initial');
}
}
function showActive(){
var $activeItem=$('.nav__item[data-is-active=true]').last();
if($activeItem.length<1){
$('.nav__level-1').addClass('visible-slide');
return;
}
if($activeItem.hasClass('has-children')){
public.show($activeItem.children('ul'));
}else{
public.show($activeItem.closest('.nav__level-1-up'));
}
}
function registerBacklink(){
$('.nav__back-link').on('click',function(){
var $parentMenu=$(this).closest('.nav__level-1-up').parent().closest('.nav__level-1-up');
if($parentMenu.length)
public.show($parentMenu);
});
}
function onResize(){
if(isInMobileViewBreakpoint()){
if(!$headerWrapper.hasClass('mobile-nav')){
$headerWrapper.removeClass('desktop-nav');
$headerWrapper.addClass('mobile-nav');
}
if(!$greedyNavContainer.hasClass('greedy-nav-mobile')){
$greedyNavContainer.removeClass('greedy-nav-large');
$greedyNavContainer.addClass('greedy-nav-mobile');
}
$('.greedy-nav__menu-container').height($(window).height()-$('.header').height());
}
if(isInDesktopViewBreakpoint()){
$('.greedy-nav__menu-container').height('auto');
if(!$headerWrapper.hasClass('desktop-nav')){
$headerWrapper.removeClass('mobile-nav');
$headerWrapper.addClass('desktop-nav');
}
if(!$greedyNavContainer.hasClass('greedy-nav-large')){
$greedyNavContainer.removeClass('greedy-nav-mobile');
$greedyNavContainer.addClass('greedy-nav-large');
}
updateShowLeft();
}
greedyNavHandler();
}
function toggleGreedyNav(){
if(isGreedyNavOpened()){
closeGreedyNav();
}else{
openGreedyNav();
}
}
function isGreedyNavOpened(){
return $greedyNavContainer.hasClass('greedy-nav--is-expanded');
}
function openGreedyNav(){
$greedyNavContainer.addClass('greedy-nav--is-expanded');
$greedyNavContainer.trigger('open.greedynav.metropolisnavigation');
}
function closeGreedyNav(){
$greedyNavContainer.removeClass('greedy-nav--is-expanded');
}
function updatePath($ul){
if($ul.hasClass('nav__level-1')){
return;
}
$('.nav__level-2-up').removeClass("is-visible-menu");
$ul.addClass("is-visible-menu");
$ul.parentsUntil($('.nav__level-1'),'ul').addClass('is-visible-menu');
$ul.find("ul").addClass("is-visible-menu");
}
function updateShowLeft(){
var $win=$(window);
var windowSize=$win.scrollLeft()+$win.width();
$('.nav .level-2').each(function(key,level2){
var removeMenuLeftClass=true;
var removeChildrenLeftClass=true;
var $level2=$(level2);
if($level2.closest('.level-1-item').offset().left+$level2.outerWidth()>windowSize){
removeMenuLeftClass=false;
if(!$level2.hasClass('menu-left')){
$level2.addClass('menu-left');
}
}
$level2.find('.level-3').each(function(_key,level3Menu){
var $level3Menu=$(level3Menu);
if($level2.offset().left+$level2.outerWidth()+$level3Menu.outerWidth()>windowSize){
removeChildrenLeftClass=false;
if(!$level2.hasClass('children-left')){
$level2.addClass('children-left');
}
return false;
}
});
if(removeChildrenLeftClass&&$level2.hasClass('children-left')){
$level2.removeClass('children-left');
}
if(removeMenuLeftClass&&$level2.hasClass('menu-left')){
$level2.removeClass('menu-left');
}
});
}
var visibleLevelClass="";
public.show=function($ul){
$('.visible-slide').removeClass('visible-slide');
setTimeout(function(){
$ul.addClass('visible-slide');
mobileNavScrollHandler($ul);
},300);
$greedyNav.removeClass(visibleLevelClass);
var level=$ul.data("level");
visibleLevelClass="is-visible-level-"+level;
$greedyNav.addClass(visibleLevelClass);
updatePath($ul);
}
function observeHeader(){
if(!$('#header').length)
return;
var target=document.querySelector('#header');
target.addEventListener('transitionend',greedyNavHandler);
target.addEventListener('animationend',greedyNavHandler);
var headerObserver=new MutationObserver(function(mutations){
var relevantMutationsCount=mutations.filter(function(mutation){
return!$(mutation.target).closest('.nav-wrapper').length
}).length;
if(relevantMutationsCount>0){
greedyNavHandler();
}
});
var config={attributes:true,childList:true,characterData:true,subtree:true};
headerObserver.observe(target,config);
}
function openTrailItem(event,depth){
$(".nav__link.is-trail").each(function(i){
if(i<=depth){
$(this).parent().addClass(MetropolisNavigation.expandedClass);
if($(this).closest($greedyNav).length>0){
openGreedyNav();
}
return true;
}
return false;
});
}
var onDomReady=function(){
MetropolisNavigation.$parentLinks.on('click',function(e){
if(isInMobileViewBreakpoint()){
public.show($(this).next());
}
});
$(".is-active-menu").removeClass("is-active-menu");
$standardNav.addClass("is-active-menu");
$standardNav.on("openTrailItem",function(e,data){
var isValidTrail=true;
if(data.breadcrumbItems.length!==$(".nav__link.is-trail").length){
return false;
}else{
$(".nav__link.is-trail").each(function(i,obj){
if($(this).text()!==$(data.breadcrumbItems[i]).text()){
isValidTrail=false;
}
});
}
if(!isValidTrail)
return false;
data.event.preventDefault();
openTrailItem(data.event,data.depth-1);
});
$('.greedy-nav__button').on('click',function(e){
toggleGreedyNav();
});
$greedyNavContainer.on('focusin',function(e){
openGreedyNav();
});
$(window).resize(function(){
if($(window).width()>lastResizeWidth){
isLargerResize=true;
}
if($(window).width()<lastResizeWidth){
isLargerResize=false;
}
lastResizeWidth=$(window).width();
onResize();
});
$('body').on('click',outsideClickHandlerGreedyNav);
$(document).click(function(e){
if(
!$(e.target).is($standardNav)
&&$standardNav.has(e.target).length===0
&&!$(e.target).is(".breadcrumbs")
&&$(".breadcrumbs").has(e.target).length===0
){
$standardNav.find(MetropolisNavigation.expandedSelector).removeClass(MetropolisNavigation.expandedClass);
}
});
$greedyNavContainer.on('open.greedynav.metropolisnavigation',function(){
mobileNavScrollHandler($greedyNavContainer.find('.visible-slide'));
});
registerBacklink();
showActive();
onResize();
observeHeader();
}
public.init=function(){
if($('nav.greedy-nav').length==0)
return;
MetropolisNavigation.init();
$(document).ready(function(){
onDomReady();
});
if("complete"===document.readyState){
setTimeout(greedyNavHandler,500);
}else{
$(window).load(greedyNavHandler);
}
};
public.init();
return public;
})(greedyNavOptions);
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/subnav.js";
$(function(){
var $target;
var stickySubnav=null;
var bodyFontSize=parseInt($("body").css("font-size"));
function initSticky(){
stickySubnav=new Foundation.Sticky($target,{
anchor:'main-outer',
marginTop:parseInt($("#header").outerHeight())/bodyFontSize,
});
}
function recalcSticky(){
stickySubnav.options.marginTop=parseInt($("#header").outerHeight())/bodyFontSize;
$target.foundation('_setSticky');
$target.foundation('_calc',false);
}
function init(){
$target=$("[data-subnav]");
if($target.length==0)
return;
initSticky();
$(window).on("scroll",function(e){
recalcSticky();
});
$("#header").on("transitionend",function(e){
recalcSticky();
});
var isMultilanguage=$target.is(".is-multilanguage");
var startObjectLevel=1;
var $leaf=$(".subnav__top-bar-menu .subnav__item.is-active[data-has-children='false']");
if($leaf.length>0&&!$leaf.is(".object-level-"+startObjectLevel)){
var $newTopBar=$($("#subnav-topbar-hook").html());
var $newBottomBar=$($("#subnav-bottombar-hook").html());
$(".subnav__top-bar-menu").remove();
$(".subnav__bottom-bar-inner-2").prepend($newBottomBar);
$newTopBar.insertBefore($(".subnav__top-bar-inner-2 .subnav__hidden-items"));
$target.addClass("initialized");
$target.addClass("special-case-is-leaf");
return;
}
if($(".subnav__top-bar-menu .subnav__item.is-active.object-level-"+startObjectLevel).length==0){
$target.addClass("initialized");
$(".subnav__top-bar-menu").trigger("initialized.top-bar.subnav");
$(".subnav__bottom-bar-menu").trigger("initialized.bottom-bar.subnav");
return;
}
if($(".subnav__top-bar-menu .subnav__item.is-active.object-level-"+startObjectLevel+".has-children").length>0){
$(".subnav__top-bar-menu").html("");
$(".subnav__bottom-bar-menu li").appendTo($(".subnav__top-bar-menu"));
$target.addClass("special-case");
$target.addClass("initialized");
$(".subnav__top-bar-menu").trigger("initialized.top-bar.subnav");
return;
}
}
init();
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/smooth-scrolling.js";
$(function(){
$('a[href*="#anker"]:not([href="#"])').click(function(){
if(location.pathname.replace(/^\//,'')==this.pathname.replace(/^\//,'')&&location.hostname==this.hostname){
var target=$(this.hash);
target=target.length?target:$('[name='+this.hash.slice(1)+']');
if(target.length){
$('html, body').animate({
scrollTop:target.offset().top
},1000);
return false;
}
}
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/stage-news-slider.js";
$(function(){
$('body').on('teaserSlider.init',function(event,data){
if($(data.element).parent().hasClass('stage-news-slider')){
$('.stage-news-slider').addClass("animated fadeIn");
}
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/logoslider.js";
$(function(){
if($('.logoslider').length<1)
return;
if($('body.mode-editor').length){
$('.logoslider').each(function(i,logoSlider){
if($(logoSlider).closest('.columns').length<1)
return true;
var columnWidth=$(logoSlider).closest('.columns').width();
var baseItemWidth=150;
var itemsPerRow=1;
for(var i=6;i>0;i--){
var width=Math.abs((columnWidth/i));
if(width>baseItemWidth){
var itemsPerRow=i+1;
if(itemsPerRow>6)
itemsPerRow=6;
break;
}
}
$(logoSlider).addClass("logoslider-"+itemsPerRow+"-items-per-row");
});
return;
}
var columnWidths={
small:0,
medium:0,
large:0
};
var settings={
small:[
{
slidesToShow:2
}
],
medium:[
{
columnRange:[1,4],
slidesToShow:1
},
{
columnRange:[5,5],
slidesToShow:2
},
{
columnRange:[6,8],
slidesToShow:3
},
{
columnRange:[9,10],
slidesToShow:4
},
{
columnRange:[11,12],
slidesToShow:4
}
],
large:[
{
columnRange:[1,2],
slidesToShow:1
},
{
columnRange:[3,3],
slidesToShow:2
},
{
columnRange:[4,4],
slidesToShow:3
},
{
columnRange:[5,7],
slidesToShow:4
},
{
columnRange:[8,10],
slidesToShow:5
},
{
columnRange:[11,12],
slidesToShow:5
}
]
};
function initSlick(slidesToShow){
var settingsLarge={
slidesToShow:slidesToShow.large,
slidesToScroll:slidesToShow.large,
infinite:true
};
var settingsMedium={
slidesToShow:slidesToShow.medium,
slidesToScroll:slidesToShow.medium
};
var settingsSmall={
slidesToShow:slidesToShow.small,
slidesToScroll:slidesToShow.small
};
return{
infinite:true,
speed:300,
autoplay:true,
autoplaySpeed:4000,
mobileFirst:true,
responsive:[
{
breakpoint:992,
settings:settingsLarge
},
{
breakpoint:767,
settings:settingsMedium
},
{
breakpoint:0,
settings:settingsSmall
}
],
accessibility:false,
prevButton:"<button type=\"button\" class=\"slick-prev\" tabindex=\"-1\">Previous</button>",
nextArrow:"<button type=\"button\" class=\"slick-next\" tabindex=\"-1\">Next</button>"
};
}
$('.logoslider').each(function(i,logoSlider){
var columns=$(this).closest(".columns").attr("class");
if($(this).closest(".columns").length<1)
return;
var regex=/(small)-([1-9]+[0-2]?)/g;
var small_query_width_arr=regex.exec(columns);
if(small_query_width_arr!=null){
columnWidths.small=small_query_width_arr[2];
columnWidths.medium=small_query_width_arr[2];
columnWidths.large=small_query_width_arr[2];
}
var regex=/(medium)-([1-9]+[0-2]?)/g;
var medium_query_width_arr=regex.exec(columns);
if(medium_query_width_arr!=null){
columnWidths.medium=medium_query_width_arr[2];
columnWidths.large=medium_query_width_arr[2];
}
var regex=/(large)-([1-9]+[0-2]?)/g;
var large_query_width_arr=regex.exec(columns);
if(large_query_width_arr!=null){
columnWidths.large=large_query_width_arr[2];
}
var slidesToShow={
small:0,
medium:0,
large:0
};
for(var mediaQuery in settings){
if(settings.hasOwnProperty(mediaQuery)){
for(var i=0;i<settings[mediaQuery].length;i++){
if(settings[mediaQuery][i].columnRange===undefined){
slidesToShow[mediaQuery]=settings[mediaQuery][i].slidesToShow;
continue;
}
if(columnWidths[mediaQuery]>=settings[mediaQuery][i].columnRange[0]&&columnWidths[mediaQuery]<=settings[mediaQuery][i].columnRange[1])
slidesToShow[mediaQuery]=settings[mediaQuery][i].slidesToShow;
}
}
}
var itemCount=$(logoSlider).find('.logoslider-item').length;
if(itemCount==1)
return;
if(slidesToShow.small>itemCount-1){
slidesToShow.small=itemCount-1;
}
if(slidesToShow.medium>itemCount-1){
slidesToShow.medium=itemCount-1;
}
if(slidesToShow.large>itemCount-1){
slidesToShow.large=itemCount-1;
}
$(logoSlider).slick(initSlick(slidesToShow));
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/news-index-gallery.js";
var newsIndex=(function(){
var initSlick=function(slidesToShow){
var settingsLarge={
slidesToShow:slidesToShow.large,
slidesToScroll:slidesToShow.large
};
var settingsMedium={
slidesToShow:slidesToShow.medium,
slidesToScroll:slidesToShow.medium
};
var settingsSmall={
slidesToShow:slidesToShow.small,
slidesToScroll:slidesToShow.small
};
settingsLarge=slidesToShow.large==0?"unslick":settingsLarge;
settingsMedium=slidesToShow.medium==0?"unslick":settingsMedium;
settingsSmall=slidesToShow.small==0?"unslick":settingsSmall;
return{
infinite:true,
speed:300,
mobileFirst:true,
responsive:[
{
breakpoint:992,
settings:settingsLarge
},
{
breakpoint:768,
settings:settingsMedium
},
{
breakpoint:0,
settings:settingsSmall
}
]
};
}
var handler=function(){
$('.news-index--articles-gallery').each(function(i,articles){
var slidesToShow={
small:1,
medium:0,
large:0
};
if($(articles).closest(".columns").length<1){
$(articles).addClass('news-index--articles-gallery-small-12 news-index--articles-gallery-medium-12 news-index--articles-gallery-large-12 news-index--articles-gallery-xlarge-12');
return;
}
var gridConfig=window.getGridConfig($(articles).closest(".columns"));
$(articles).addClass('news-index--articles-gallery-small-'+gridConfig.small+' news-index--articles-gallery-medium-'+gridConfig.medium+' news-index--articles-gallery-large-'+gridConfig.large+' news-index--articles-gallery-xlarge-'+gridConfig.xlarge);
function onResize(){
if($('html').hasClass('small-only-mq')){
if(slidesToShow.small>0&&!$(articles).hasClass("slick-initialized")){
$(articles).slick(initSlick(slidesToShow));
}
}
}
$(window).resize(function(){
onResize();
});
onResize();
});
}
var init=function(){
handler();
};
return{
init:init
};
})();
$(document).ready(function(){
$('body').on("newsIndex.ready contentChanged",function(e,data){
newsIndex.init();
});
newsIndex.init();
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/articles.js";
var newsIndexArticles=function(){
var $el;
var articleListSizes=[
{
name:'mobile-portrait',
min:310,
max:449
},
{
name:'mobile-landscape',
min:450,
max:649
},
{
name:'tablet-portrait',
min:650,
max:840,
},
{
name:'tablet-landscape',
min:841,
max:1023
},
{
name:'desktop',
min:1024
}
];
var articleSizes=[
{
name:'extra-tiny',
max:259
},
{
name:'tiny',
min:260,
max:309
},
{
name:'mobile-portrait',
min:310,
max:449
},
{
name:'mobile-landscape',
min:450,
max:649
},
{
name:'tablet-portrait',
min:650,
max:840
},
{
name:'tablet-landscape',
min:841,
max:1023
},
{
name:'desktop',
min:1024
}
];
function onResize(){
Metropolis.generateSpaces({el:$el,cssClassTemplate:'article-teaser-list-%SPACE%',sizes:articleListSizes});
Metropolis.generateSpaces({
el:$el.find(".article-teaser"),
cssClassTemplate:'article-teaser-%SPACE%',
sizes:articleSizes,
considerPadding:false,
considerMargin:false,
generateUpClasses:false
});
}
var init=function(el){
$el=el;
$(window).resize(function(){
onResize();
});
onResize();
};
return{
init:init
};
};
$(function(){
$('body').on("contentChanged",function(e){
$el=$(e.target).find('.article-teaser-list-flexible');
if(!$el.length)
return;
newsIndexArticles().init($el);
});
$('body').on("newsIndex.ready",function(e,data){
var $el=$('#'+data.id);
if(!$el.length)
return;
if($el.find('.article-teaser-list.flexible').length===0)
return;
newsIndexArticles().init($el);
});
function observeArticleTeaserWithLayoutOptions(){
var target=$('body')[0];
var observer=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
for(var i=0;i<mutation.addedNodes.length;i++){
var $addedNode=$(mutation.addedNodes[i]);
var $target=null;
if($addedNode.is(".article-teaser-list")){
$target=$addedNode.closest("[data-layout-options]");
}
if($target!==null&&$target.length>0)
MetropolisLayoutOptions($target);
}
});
});
var config={attributes:false,childList:true,characterData:false,subtree:true};
observer.observe(target,config);
$("[data-layout-options]").each(function(i,obj){
MetropolisLayoutOptions($(this));
});
}
function observeFlexibleArticles(){
var target=$('body')[0];
var observer=new MutationObserver(function(mutations){
mutations.forEach(function(mutation){
for(var i=0;i<mutation.addedNodes.length;i++){
var $addedNode=$(mutation.addedNodes[i]);
if($addedNode.is(".article-teaser-list.flexible")){
newsIndexArticles().init($addedNode);
}
}
});
});
var config={attributes:false,childList:true,characterData:false,subtree:true};
observer.observe(target,config);
}
observeArticleTeaserWithLayoutOptions();
observeFlexibleArticles();
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/image-gallery.js";
$(function(){
var settings={
small:[
{
slidesToShow:3
}
],
medium:[
{
columnRange:[3,4],
slidesToShow:2
},
{
columnRange:[1,2],
slidesToShow:1
}
],
large:[
{
columnRange:[1,2],
slidesToShow:1
},
{
columnRange:[3,3],
slidesToShow:3
}
]
};
function initSlick(slidesToShow){
var settingsLarge={
slidesToShow:slidesToShow.large,
slidesToScroll:slidesToShow.large,
};
var settingsMedium={
slidesToShow:slidesToShow.medium,
slidesToScroll:slidesToShow.medium
};
var settingsSmall={
slidesToShow:slidesToShow.small,
slidesToScroll:slidesToShow.small
};
settingsLarge=slidesToShow.large==0?"unslick":settingsLarge;
settingsMedium=slidesToShow.medium==0?"unslick":settingsMedium;
settingsSmall=slidesToShow.small==0?"unslick":settingsSmall;
return{
infinite:true,
speed:300,
autoplay:true,
autoplaySpeed:4000,
mobileFirst:true,
useTransform:false,
responsive:[
{
breakpoint:992,
settings:settingsLarge
},
{
breakpoint:768,
settings:settingsMedium
},
{
breakpoint:0,
settings:settingsSmall
}
]
};
}
if($('.image-gallery').length<1)
return;
$('.image-gallery').each(function(i,imageGallery){
$(this).closest(".column__content-wrapper").css("min-height","1px");
if($('.image-gallery__item').length<25){
if($(this).closest(".columns").length<1)
return;
var gridConfig=window.getGridConfig($(this).closest(".columns"));
var slidesToShow={
small:0,
medium:0,
large:0
};
for(var mediaQuery in settings){
if(settings.hasOwnProperty(mediaQuery)){
for(var i=0;i<settings[mediaQuery].length;i++){
if(settings[mediaQuery][i].columnRange===undefined){
slidesToShow[mediaQuery]=settings[mediaQuery][i].slidesToShow;
continue;
}
if(gridConfig[mediaQuery]>=settings[mediaQuery][i].columnRange[0]&&gridConfig[mediaQuery]<=settings[mediaQuery][i].columnRange[1])
slidesToShow[mediaQuery]=settings[mediaQuery][i].slidesToShow;
}
}
}
function onResize(){
if($('html').hasClass('large-up-mq')){
if(slidesToShow.large>0&&!$(imageGallery).hasClass("slick-initialized")){
$(imageGallery).slick(initSlick(slidesToShow));
}
}
if($('html').hasClass('medium-only-mq')){
if(slidesToShow.medium>0&&!$(imageGallery).hasClass("slick-initialized")){
$(imageGallery).slick(initSlick(slidesToShow));
}
}
if($('html').hasClass('small-only-mq')){
if(slidesToShow.small>0&&!$(imageGallery).hasClass("slick-initialized")){
$(imageGallery).slick(initSlick(slidesToShow));
}
}
}
$(window).resize(function(){
onResize();
});
onResize();
}
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/pictures-switcher.js";
var PictureSwitcher=function(){
var classPrefix='integration-card__';
var toggle=function(card){
if($(card).find('.'+classPrefix+'qrcode-wrapper').is(':visible')){
$(card).find('.'+classPrefix+'qrcode-wrapper').hide();
$(card).find('.'+classPrefix+'photo-wrapper').show();
$(card).find('.'+classPrefix+'show-qrcode').show();
$(card).find('.'+classPrefix+'show-photo').hide();
}else{
$(card).find('.'+classPrefix+'qrcode-wrapper').show();
$(card).find('.'+classPrefix+'photo-wrapper').hide();
$(card).find('.'+classPrefix+'show-qrcode').hide();
$(card).find('.'+classPrefix+'show-photo').show();
}
};
var init=function(){
$('.integration-card:visible .'+classPrefix+'pictures.'+classPrefix+'pictures-switcher').each(function(){
if($(this).find('.'+classPrefix+'qrcode-wrapper + .'+classPrefix+'photo-wrapper').is(':visible')&&!$(this).find('.'+classPrefix+'show-qrcode').length&&!$(this).find('.'+classPrefix+'show-qrcode').length){
$(this).append(
'<div class="'+classPrefix+'show-qrcode">'+
'<a onclick="PictureSwitcher().toggle($(this).closest(\'.'+classPrefix+'pictures-switcher\'), \''+classPrefix+'\')">'+
'QR-Code'+
'</a>'+
'</div>');
$(this).append(
'<div class="'+classPrefix+'show-photo">'+
'<a onclick="PictureSwitcher().toggle($(this).closest(\'.'+classPrefix+'pictures-switcher\'), \''+classPrefix+'\')">'+
'Foto'+
'</a>'+
'</div>');
$(this).css("display","block");
toggle(this,classPrefix);
}
});
};
return{
init:init,
toggle:toggle
};
};
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/breadcrumb.js";
$(function(){
var $target;
var stickyBreadcrumb=null;
var bodyFontSize=parseInt($("body").css("font-size"));
function initSticky(){
stickyBreadcrumb=new Foundation.Sticky($target,{
anchor:'main-outer',
marginTop:parseInt($("#header").outerHeight())/bodyFontSize,
});
}
function recalcSticky(){
stickyBreadcrumb.options.marginTop=parseInt($("#header").outerHeight())/bodyFontSize;
$target.foundation('_setSticky');
$target.foundation('_calc',false);
}
function init(){
$target=$("[data-sticky-breadcrumb]");
$(".breadcrumbs__item a").on("click",function(e){
var $li=$(this).parent();
$('.is-active-menu').trigger('openTrailItem',{event:e,depth:$li.index(),breadcrumbItems:$(".breadcrumbs__item a")});
});
if($target.length==0)
return;
$(window).on("scroll",function(e){
recalcSticky();
});
$("#header").on("transitionend",function(e){
recalcSticky();
});
initSticky();
}
init();
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/bim.js";
var BimCards=function(options){
var defaultOptions={
longListClassSelector:'.bim-department--responsibilities, .bim-department--employees, .bim-employee--entries, .bim-employee--departments, .bim-employee--responsibilities',
longListVisibleItems:5
};
var options=$.extend({},defaultOptions,options);
function longListHandler(){
$(options.longListClassSelector).each(function(i,longList){
var $longList=$(longList);
var $children=$longList.children();
if($children.hasClass('results-toggle')){
return;
}
if($children.length>options.longListVisibleItems){
$children.filter(':nth-child(n+'+(options.longListVisibleItems)+')').addClass("hide");
var newLength=$children.length-options.longListVisibleItems+1;
$longList.append("<li class='results-toggle show-more-results unordered-list-item list-item' data-items='"+newLength+"'><a href='#'>"+newLength+" weitere </a></li>");
}
});
}
var init=function(){
$('body').off("click",".results-toggle");
$('body').on("click",".results-toggle",function(e){
e.preventDefault();
if($(this).hasClass('show-more-results')){
$(this).siblings().removeClass("hide");
$(this).removeClass("show-more-results").addClass("show-less-results");
$(this).children('a').text("Weniger anzeigen");
return;
}
if($(this).hasClass('show-less-results')){
$(this).removeClass("show-less-results").addClass("show-more-results");
$(this).siblings(':nth-child(n+'+(options.longListVisibleItems)+')').addClass("hide");
$(this).children('a').text($(this).data("items")+" weitere");
}
});
$('body').off('bimIndexPage.load bimSearchPage.load bimResultPage.load');
$('body').on('bimIndexPage.load bimSearchPage.load bimResultPage.load',function(){
longListHandler();
PictureSwitcher().init();
});
longListHandler();
PictureSwitcher().init();
};
return{
init:init
};
};
$(function(){
$('body').on("Bim-card.ready Bim-detail.ready",function(e,data){
BimCards().init();
PictureSwitcher().init();
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/integration-base.js";
$(function(){
$('body').on("Sd-card.ready Sd-detail.ready sdIndexPage.load sdSearchPage.load sdResultPage.load",function(e,data){
PictureSwitcher().init();
});
});
window.currentSourceFile="/sv_oberursel/:res/js/metropolis/base/components/pegasus/cookies-disclaimer.js";
function checkDisclaimer(){
document.cookie='hide_cn=true; path='+ionasInfo.context+'; expires=Fri, 31 Dec 9999 23:59:59 GMT';
$(".cookies-disclaimer-wrapper").hide(500);
}
window.currentSourceFile="/sv_oberursel/:res/js/language-navigation.js";
$(function(){
var $languageNavigationContainer=$('.language-navigation-container');
var $languageNavigation=$('.language-navigation');
var $activeItem=$('.language-navigation__item.active');
var $items=$('.language-navigation__item');
if(!$languageNavigation.length)
return;
if($items.length>1){
$languageNavigation.addClass("language-navigation--has-multiple-languages");
$languageNavigation.each(function(i,obj){
var $languageNavigationClone=$(this).clone();
$languageNavigationClone.addClass("language-navigation-ghost");
$languageNavigationClone.children('.language-navigation__item:not(.active)').remove();
$(this).before($languageNavigationClone);
});
}
if($languageNavigation.hasClass("language-navigation--has-multiple-languages")){
$languageNavigation.filter(".language-navigation-desktop").click(function(){
$(this).toggleClass('is-language-navigation-expanded');
});
$activeItem.click(function(e){
e.preventDefault();
});
}
});
window.currentSourceFile="/sv_oberursel/:res/js/jquery.simpleWeather.js";
(function($){
'use strict';
function getAltTemp(unit,temp){
if(unit==='f'){
return Math.round((5.0/9.0)*(temp-32.0));
}else{
return Math.round((9.0/5.0)*temp+32.0);
}
}
$.extend({
simpleWeather:function(options){
options=$.extend({
location:'',
woeid:'',
unit:'f',
success:function(weather){},
error:function(message){}
},options);
var now=new Date();
//var weatherUrl='https://query.yahooapis.com/v1/public/yql?format=json&rnd='+now.getFullYear()+now.getMonth()+now.getDay()+now.getHours()+'&diagnostics=true&callback=?&q=';
var weatherUrl='';
if(options.location!==''){
var location='';
if(/^(\-?\d+(\.\d+)?),\s*(\-?\d+(\.\d+)?)$/.test(options.location)){
location='('+options.location+')';
}else{
location=options.location;
}
weatherUrl+='select * from weather.forecast where woeid in (select woeid from geo.places(1) where text="'+location+'") and u="'+options.unit+'"';
}else if(options.woeid!==''){
//weatherUrl+='select * from weather.forecast where woeid='+options.woeid+' and u="'+options.unit+'"';
}else{
options.error('Could not retrieve weather due to an invalid location.');
return false;
}
$.getJSON(
encodeURI(weatherUrl),
function(data){
if(data!==null&&data.query!==null&&data.query.results!==null&&data.query.results.channel.description!=='Yahoo! Weather Error'){
var result=data.query.results.channel,
weather={},
forecast,
compass=['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW','N'],
image404='https://s.yimg.com/os/mit/media/m/weather/images/icons/l/44d-100567.png';
weather.title=result.item.title;
weather.temp=result.item.condition.temp;
weather.code=result.item.condition.code;
weather.todayCode=result.item.forecast[0].code;
weather.currently=result.item.condition.text;
weather.high=result.item.forecast[0].high;
weather.low=result.item.forecast[0].low;
weather.text=result.item.forecast[0].text;
weather.humidity=result.atmosphere.humidity;
weather.pressure=result.atmosphere.pressure;
weather.rising=result.atmosphere.rising;
weather.visibility=result.atmosphere.visibility;
weather.sunrise=result.astronomy.sunrise;
weather.sunset=result.astronomy.sunset;
weather.description=result.item.description;
weather.city=result.location.city;
weather.country=result.location.country;
weather.region=result.location.region;
weather.updated=result.item.pubDate;
weather.link=result.item.link;
weather.units={temp:result.units.temperature,distance:result.units.distance,pressure:result.units.pressure,speed:result.units.speed};
weather.wind={chill:result.wind.chill,direction:compass[Math.round(result.wind.direction/22.5)],speed:result.wind.speed};
if(result.item.condition.temp<80&&result.atmosphere.humidity<40){
weather.heatindex=-42.379+2.04901523*result.item.condition.temp+10.14333127*result.atmosphere.humidity-0.22475541*result.item.condition.temp*result.atmosphere.humidity-6.83783*(Math.pow(10,-3))*(Math.pow(result.item.condition.temp,2))-5.481717*(Math.pow(10,-2))*(Math.pow(result.atmosphere.humidity,2))+1.22874*(Math.pow(10,-3))*(Math.pow(result.item.condition.temp,2))*result.atmosphere.humidity+8.5282*(Math.pow(10,-4))*result.item.condition.temp*(Math.pow(result.atmosphere.humidity,2))-1.99*(Math.pow(10,-6))*(Math.pow(result.item.condition.temp,2))*(Math.pow(result.atmosphere.humidity,2));
}else{
weather.heatindex=result.item.condition.temp;
}
if(result.item.condition.code=='3200'){
weather.thumbnail=image404;
weather.image=image404;
}else{
weather.thumbnail='https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/'+result.item.condition.code+'ds.png';
weather.image='https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/'+result.item.condition.code+'d.png';
}
weather.alt={temp:getAltTemp(options.unit,result.item.condition.temp),high:getAltTemp(options.unit,result.item.forecast[0].high),low:getAltTemp(options.unit,result.item.forecast[0].low)};
if(options.unit==='f'){
weather.alt.unit='c';
}else{
weather.alt.unit='f';
}
weather.forecast=[];
for(var i=0;i<result.item.forecast.length;i++){
forecast=result.item.forecast[i];
forecast.alt={high:getAltTemp(options.unit,result.item.forecast[i].high),low:getAltTemp(options.unit,result.item.forecast[i].low)};
if(result.item.forecast[i].code=="3200"){
forecast.thumbnail=image404;
forecast.image=image404;
}else{
forecast.thumbnail='https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/'+result.item.forecast[i].code+'ds.png';
forecast.image='https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/'+result.item.forecast[i].code+'d.png';
}
weather.forecast.push(forecast);
}
options.success(weather);
}else{
options.error('There was a problem retrieving the latest weather information.');
}
}
);
return this;
}
});
})(jQuery);
Metropolis.headerScrollResize(50);
$(document).ready(function(){
function setBodyOffsetFromHeader(){
var headerHeight=$('.header').height();
var w=window,
d=document,
e=d.documentElement,
g=d.getElementsByTagName('body')[0],
x=w.innerWidth||e.clientWidth||g.clientWidth;
if(x>=992){
headerHeight=headerHeight<122?122:headerHeight;
}else if(x>=768&&x<992){
headerHeight=headerHeight<107?107:headerHeight;
}
$('body').css('margin-top',headerHeight);
}
$(window).on("resize cookies-disclaimer.removed",function(){
setBodyOffsetFromHeader();
});
setBodyOffsetFromHeader();
});
$(document).ready(function(){
var codes=new Array();
codes[0]="Wirbelsturm";
codes[1]="Tropensturm";
codes[2]="Orkan";
codes[3]="schwere Gewitter";
codes[4]="Gewitter";
codes[5]="Regen und Schnee";
codes[6]="Regen und Graupelschauer";
codes[7]="Schnee und Graupelschauer";
codes[8]="Nieselregen gefrierend";
codes[9]="Nieselregen";
codes[10]="Eisregen";
codes[11]="Regenschauer";
codes[12]="Regen";
codes[13]="Schneegestöber";
codes[14]="leichte Schneeschauer";
codes[15]="Schneetreiben";
codes[16]="Schnee";
codes[17]="Hagel";
codes[18]="Schneeregen";
codes[19]="Staub";
codes[20]="neblig";
codes[21]="Dunst";
codes[22]="rauchig";
codes[23]="stürmisch";
codes[24]="windig";
codes[25]="kalt";
codes[26]="bewölkt";
codes[27]="Nachts überwiegend bewölkt";
codes[28]="Tags überwiegend bewölkt";
codes[29]="Nachts wechselnd bewölkt";
codes[30]="Tags wechselnd bewölkt";
codes[31]="Nachts klar";
codes[32]="sonnig";
codes[33]="Nachts schön";
codes[34]="Tags schön";
codes[35]="Regen und Hagel";
codes[36]="heiss";
codes[37]="vereinzelt Gewitter";
codes[38]="vereinzelte Gewitter";
codes[39]="vereinzelte Gewitter";
codes[40]="vereinzelte Schauer";
codes[41]="schwerer Schneefall";
codes[42]="vereinzelte Schneeschauer";
codes[43]="schwerer Schneefall";
codes[44]="wechselnd bewölkt";
codes[45]="Gewitterschauer";
codes[46]="Schneeschauer";
codes[47]="vereinzelt Gewitterschauer";
codes[3200]="nicht verfügbar";
$.simpleWeather({
woeid:'682470',
location:'',
unit:'c',
success:function(weather){
html='<span class="weather-wrapper">'+
'<span class="weather-location">Stadt Oberursel (Taunus)</span>'+
'<span class="weather-currently">'+codes[weather.code]+'</span>'+
'</span>';
html+='<div class="weather-img-wrapper"><span class="weather-icon-'+weather.code+'"></div>';
html+='<div class="temp-wrapper"><span class="weather-headline temp">'+weather.temp+'&deg;'+weather.units.temp+'</span>';
html+='<span class="weather-headline low">'+weather.low+'&deg;'+weather.units.temp+'</span></div>';
$("#weather").html(html);
},
error:function(error){
$("#weather").html('<p>'+error+'</p>');
}
});
});
